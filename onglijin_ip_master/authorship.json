[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "## Picture Use"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "Mocha.jpg \u003ca href\u003d\u0027https://www.freepik.com/vectors/wood\u0027\u003eWood vector created by freepik - www.freepik.com\u003c/a\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": "User.jpg \u003ca href\u003d\u0027https://www.freepik.com/vectors/wood\u0027\u003eWood vector created by freepik - www.freepik.com\u003c/a\u003e"
      }
    ],
    "authorContributionMap": {
      "onglijin": 3,
      "-": 26
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "onglijin"
        },
        "content": "compileJava.options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "onglijin"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "onglijin"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "onglijin"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 32,
      "-": 45
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": "D | 1 | return book | 06 Jun 2019"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "T | 0 | read book"
      }
    ],
    "authorContributionMap": {
      "onglijin": 6
    }
  },
  {
    "path": "src/main/java/duke/CommandNotRecognizedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * CommandNotRecognizedException is thrown when the input is not recognized."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class CommandNotRecognizedException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Formats the string of CommandNotRecognizedException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param message Takes in the error message to be printed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public CommandNotRecognizedException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 16
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * Deadline is a subclass of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    // Deadlines: Tasks that need to be done before a specific time date/time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    // Example: Submit report by 11/10/2019 5pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Constructor of Deadline object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param description Takes in the description of the deadline task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param by Takes in the date in which the task needs to be completed by in YYYYY-MM-DD format.."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Returns the task type of Deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return the task type of Deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return \"Deadline\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Formats the string of a Deadline object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a formatted string for a Deadline object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Formats the string of a Deadline object to be stored into hard drive."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a formatted string suitable for storage in hard drive for a Deadline object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String toStringInFile() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return \"D\" + super.toStringInFile() + \" | \" + this.by;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 51
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public static DialogBox getMochaDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "///**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "// * Duke is the main logic of the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "// */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//     * Constructor for Duke Object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//     * @param filePath a new file will be created in the stated filePath."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//        tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//     * Consists of the logic of the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//        ui.sayIntroduction();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//        Parser parser \u003d ui.createParser();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//        Scanner userInput \u003d ui.createUserInputScanner();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//        while (userInput.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                String nextLine \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                int commandNumber \u003d parser.parseCommand(nextLine);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                if (commandNumber \u003e\u003d 1 \u0026\u0026 commandNumber \u003c\u003d 3) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    Task newTask \u003d parser.createTask(commandNumber);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    tasks.addTask(newTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    // TODO: write an exception for"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    ui.addTask(newTask, tasks.getSize());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                } else if (commandNumber \u003d\u003d 4) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    int taskNumber \u003d parser.getDoneTaskNumber();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    // TODO: have a exception for TaskDoesNotExist (either -1 or more than number of task)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    // TODO: figure out exception throw catch"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    Task doneTask \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    doneTask.markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    ui.markTaskDone(doneTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                } else if (commandNumber \u003d\u003d 5) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    ui.listAllTasks(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                } else if (commandNumber \u003d\u003d 6) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    ui.sayGoodbye();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    storage.writeToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                } else if (commandNumber \u003d\u003d 7) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    int taskNumber \u003d parser.getDeleteTaskNumber();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    Task deleteTask \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    ui.deleteTask(deleteTask, tasks.getSize());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                } else if (commandNumber \u003d\u003d 8) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    ArrayList\u003cTask\u003e matchingTasks \u003d parser.getMatchingTasks(tasks);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    ui.findTask(matchingTasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    final String horizontalLine \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                    throw new CommandNotRecognizedException(horizontalLine"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                            + \"\\r\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                            + \"Oops! I couldn\u0027t understand what you mean :(\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                            + \"\\r\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                            + horizontalLine);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//            } catch (MissingTaskDescriptionException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//            } catch (MissingTaskNumberException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//            } catch (CommandNotRecognizedException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//     * Driver of the program."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//     * @param args"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 97
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * Event is a subclass of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    // Events: Tasks that start at a specific time and ends at a specific time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    // Example: Team project meeting on 2/10/2019 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Constructor of Event object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param description Takes in the description of the Event object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param at Takes in the date in which the task is on in YYYYY-MM-DD format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Returns the task type of Event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return the task type of Event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return \"Event\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Formats the string of a Event object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a formatted string for a Event object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Formats the string of a Event object to be stored into hard drive."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a formatted string suitable for storage in hard drive for a Event object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String toStringInFile() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return \"E\" + super.toStringInFile() + \" | \" + this.at;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 52
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Mocha mocha \u003d new Mocha();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setMocha(mocha);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Mocha mocha;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Image mochaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Mocha.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public void setMocha(Mocha m) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        mocha \u003d m;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                DialogBox.getMochaDialog(ui.sayIntroduction(), mochaImage));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String response \u003d mocha.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                DialogBox.getMochaDialog(response, mochaImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 55
    }
  },
  {
    "path": "src/main/java/duke/MissingTaskDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * MissingTaskDescriptionException is thrown when the task description is not inputted with the"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * todo, deadline or event command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class MissingTaskDescriptionException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Formats the string of MissingTaskDescriptionException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param message Takes in the error message to be printed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public MissingTaskDescriptionException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 17
    }
  },
  {
    "path": "src/main/java/duke/MissingTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * MissingTaskNumberException is thrown when the task number is not inputted with the done or delete command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class MissingTaskNumberException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Formats the string of MissingTaskNumberException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param message Takes in the error message to be printed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public MissingTaskNumberException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 16
    }
  },
  {
    "path": "src/main/java/duke/Mocha.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class Mocha extends Application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Image mocha \u003d new Image(this.getClass().getResourceAsStream(\"/images/Mocha.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        // ... "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public Mocha() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        parser \u003d ui.createParser();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        tasks \u003d new TaskList(storage.loadData());        "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        stage.setTitle(\"Mocha\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this. "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        });"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        });"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "onglijin"
        },
        "content": "//        Label mochaIntroduction \u003d new Label(ui.sayIntroduction());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                DialogBox.getMochaDialog(ui.sayIntroduction(), mocha));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Mocha\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        Label mochaText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                DialogBox.getUserDialog(userInput.getText(), user),"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                DialogBox.getMochaDialog(getResponse(userInput.getText()), mocha)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        );"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String responseReturn \u003d \"\"; "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            int commandNumber \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            if (commandNumber \u003e\u003d 1 \u0026\u0026 commandNumber \u003c\u003d 3) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                Task newTask \u003d parser.createTask(commandNumber);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                tasks.addTask(newTask);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                responseReturn \u003d ui.addTask(newTask, tasks.getSize());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            } else if (commandNumber \u003d\u003d 4) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                int taskNumber \u003d parser.getDoneTaskNumber();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                Task doneTask \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                doneTask.markAsDone();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                responseReturn \u003d ui.markTaskDone(doneTask);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            } else if (commandNumber \u003d\u003d 5) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                responseReturn \u003d ui.listAllTasks(tasks);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            } else if (commandNumber \u003d\u003d 6) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                responseReturn \u003d ui.sayGoodbye();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                storage.writeToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            } else if (commandNumber \u003d\u003d 7) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                int taskNumber \u003d parser.getDeleteTaskNumber();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                Task deleteTask \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                responseReturn \u003d ui.deleteTask(deleteTask, tasks.getSize());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            } else if (commandNumber \u003d\u003d 8) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                ArrayList\u003cTask\u003e matchingTasks \u003d parser.getMatchingTasks(tasks);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                responseReturn \u003d ui.findTask(matchingTasks);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                final String horizontalLine \u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                throw new CommandNotRecognizedException(horizontalLine"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                        + \"\\r\\n\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                        + \"Oops! I couldn\u0027t understand what you mean :(\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                        + \"\\r\\n\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                        + horizontalLine);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (MissingTaskDescriptionException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            responseReturn \u003d e.getMessage();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (MissingTaskNumberException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            responseReturn \u003d e.getMessage();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (CommandNotRecognizedException e) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            responseReturn \u003d e.getMessage();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return responseReturn;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 211
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * Parser deals with making sense of the user command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"______________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private String[] commandParts;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Returns the commandNumber."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param command The user\u0027s input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return commandNumber"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public int parseCommand(String command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        this.commandParts \u003d command.split(\"\\\\s\", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        if (commandParts[0].contains(\"todo\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } else if (commandParts[0].contains(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } else if (commandParts[0].contains(\"event\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } else if (commandParts[0].contains(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } else if (commandParts[0].contains(\"list\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } else if (commandParts[0].contains(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return 6;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } else if (commandParts[0].contains(\"delete\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return 7;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } else if (commandParts[0].contains(\"find\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return 8;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Creates a new Task object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param commandNumber Takes in the commandNumber that parseCommand returns."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a Task object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @throws MissingTaskDescriptionException Exception is thrown when task description is missing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public Task createTask(int commandNumber) throws MissingTaskDescriptionException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        if (commandNumber \u003d\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            task \u003d createNewToDo();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } else if (commandNumber \u003d\u003d 2) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            task \u003d createNewDeadline();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } else if (commandNumber \u003d\u003d 3) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            task \u003d createNewEvent();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Creates a new ToDo object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a ToDo object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @throws MissingTaskDescriptionException Exception is thrown when task description is missing."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public Task createNewToDo() throws MissingTaskDescriptionException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            Task newToDoTask \u003d new ToDo(commandParts[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return newToDoTask;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            throw new MissingTaskDescriptionException(HORIZONTAL_LINE"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"Oops! The description cannot be empty :(\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Creates a new Deadline object."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a Deadline object."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @throws MissingTaskDescriptionException Exception is thrown when task description is missing."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public Task createNewDeadline() throws MissingTaskDescriptionException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            String[] deadlineParts \u003d commandParts[1].split(\"/by\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            LocalDate deadline \u003d LocalDate.parse(deadlineParts[1].trim());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            String afterDateTimeFormat \u003d deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            Task newDeadlineTask \u003d new Deadline(deadlineParts[0].trim(), afterDateTimeFormat);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return newDeadlineTask;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            throw new MissingTaskDescriptionException(HORIZONTAL_LINE"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"Oops! The description cannot be empty :(\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Creates a new Event object."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a Event object."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @throws MissingTaskDescriptionException Exception is thrown when task description is missing."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public Task createNewEvent() throws MissingTaskDescriptionException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            String[] eventParts \u003d commandParts[1].split(\"/at\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            LocalDate event \u003d LocalDate.parse(eventParts[1].trim());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            String afterDateTimeFormat \u003d event.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            Task newEventTask \u003d new Event(eventParts[0].trim(), afterDateTimeFormat);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return newEventTask;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            throw new MissingTaskDescriptionException(HORIZONTAL_LINE"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"Oops! The description cannot be empty :(\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Returns the task number of the task for its status to be updated."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return the task number of the task."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @throws MissingTaskNumberException  Exception is thrown when task number is missing."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public int getDoneTaskNumber() throws MissingTaskNumberException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        int taskNumber \u003d -1;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        taskNumber \u003d markDoneTask();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return taskNumber;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Helper class for doneTask()."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return the task number of the task for status to be updated."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @throws MissingTaskNumberException Exception is thrown when task number is missing."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public int markDoneTask() throws MissingTaskNumberException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(commandParts[1].trim()) - 1;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return taskNumber;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            throw new MissingTaskNumberException(HORIZONTAL_LINE"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"Oops! The task number cannot be missing :(\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Returns the task number of the task that is to be deleted."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return the task number of the task."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public int getDeleteTaskNumber() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        int taskNumber \u003d -1;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            taskNumber \u003d deleteTaskFromList();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (MissingTaskNumberException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return taskNumber;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Helper class for deleteTask()."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return the task number of the task that is to be deleted."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @throws MissingTaskNumberException Exception is thrown when task number is missing."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public int deleteTaskFromList() throws MissingTaskNumberException {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(commandParts[1].trim()) - 1;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return taskNumber;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            throw new MissingTaskNumberException(HORIZONTAL_LINE"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"Oops! The task number cannot be missing :(\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public ArrayList\u003cTask\u003e getMatchingTasks(TaskList tasks) throws MissingTaskDescriptionException {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            boolean doesTaskMatch \u003d false;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            String descriptionToFind \u003d commandParts[1];;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                ArrayList\u003cTask\u003e listOfTasks \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                Task task \u003d listOfTasks.get(i);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                String descriptionOfTask \u003d task.getDescription();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                String[] taskDescriptionParts \u003d descriptionOfTask.split(\"\\\\s\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                for (int j \u003d 0; j \u003c taskDescriptionParts.length; j++) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    if (!doesTaskMatch) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                        if (taskDescriptionParts[j].contains(descriptionToFind)) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                            doesTaskMatch \u003d true;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                if (doesTaskMatch) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    matchingTasks.add(task);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                doesTaskMatch \u003d false;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            return matchingTasks;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            throw new MissingTaskDescriptionException(HORIZONTAL_LINE"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"Oops! The description cannot be empty :(\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 247
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Constructor of Storage object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        this.path \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Creates a file and necessary directories if non-existent."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public void createFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            File file \u003d new File(path);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Loads the data from the hard drive."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a list of previously recorded Tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String savedTask;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            File existingData \u003d new File(path);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            Scanner readExistingData \u003d new Scanner(existingData);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            while (readExistingData.hasNextLine()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                savedTask \u003d readExistingData.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                String[] taskParts \u003d savedTask.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                if (taskParts[0].contains(\"T\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    Task newToDoTask \u003d new ToDo(taskParts[2].trim());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    if (taskParts[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                        newToDoTask.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    tasks.add(newToDoTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                } else if (taskParts[0].contains(\"D\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    Task newDeadlineTask \u003d new Deadline(taskParts[2], taskParts[3]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    if (taskParts[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                        newDeadlineTask.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    tasks.add(newDeadlineTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                } else if (taskParts[0].contains(\"E\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    Task newEventTask \u003d new Event(taskParts[2], taskParts[3]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    if (taskParts[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                        newEventTask.markAsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    tasks.add(newEventTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Writes to File at the end of the program"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param tasks Takes in the most updated list of Tasks."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                String task \u003d tasks.get(i).toStringInFile() + \"\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                fileWriter.write(task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 108
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * Task is the object that stores the information of user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Constructor of Task object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param description Takes in the description of the task object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Returns the symbol to indicate if the task is done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a checkmark for a task that is done and a cross for a task that is not."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                ? \"\\u2713\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                : \"\\u2718\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Gets the description of the task object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Updates the status of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Returns the task type of Task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return the task type of Task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return \"Task\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Formats the string of a Task object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a formatted string for a Task object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Formats the string of a Task object to be stored into hard drive."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a formatted string suitable for storage in hard drive for a Task object."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String toStringInFile() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        int taskDone \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return \" | \" + taskDone + \" | \" + getDescription();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 75
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": " *  TaskList Contains the task list e.g. it has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Constructor of a new TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Constructor of an existing Tasklist."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param tasks Takes in an existing TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Adds tasks in list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param task Takes in a task object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Gets the size of the list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return the size of the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Gets the task object according to the taskNumber."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param taskNumber The task number is according to the user input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a Task object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return tasks.get(taskNumber);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Returns the list of tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return the list of tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Deletes the task from the list of tasks."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param taskNumber The task number is according to the user input."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 73
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * ToDo is a subclass of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    // ToDos: Tasks without any date/time attached to it"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    // Example: Visit new theme park"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Constructor of ToDo object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param description Takes in the description of the ToDo object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Returns the task type of ToDo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return the task type of ToDo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return \"ToDo\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Formats the string of a ToDo object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a formatted string for a ToDo object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Formats the string of a ToDo object to be stored into hard drive."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a formatted string suitable for storage in hard drive for a ToDo object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String toStringInFile() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return \"T\" + super.toStringInFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 48
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": " * Ui deals with interactions with users."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"______________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    * Introduction of Mocha."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String sayIntroduction() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String nameIntro \u003d \"Hello, I\u0027m Mocha!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String greeting \u003d \"What\u0027s up today!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String mochaIntro \u003d (HORIZONTAL_LINE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + nameIntro"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + greeting"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return mochaIntro;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Creates a new Parser object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return a Parser object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public Parser createParser() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return new Parser();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Creates a new Scanner object that uses the same list of Tasks as the existing file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return s Scanner object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public Scanner createUserInputScanner() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return new Scanner(System.in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Displays the message when a task is added."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param task  Takes in a task object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param sizeOfTasks The size of the list of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String addTask(Task task, int sizeOfTasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String newTask \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        if (task.getTaskType() \u003d\u003d \"ToDo\") {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            newTask \u003d (HORIZONTAL_LINE"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"One new ToDo Task added: \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + task.toString()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"Total number of tasks in list: \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + sizeOfTasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } else if (task.getTaskType() \u003d\u003d \"Deadline\") {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            newTask \u003d (HORIZONTAL_LINE"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"One new Deadline added: \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + task.toString()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"Total number of tasks in list: \""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + sizeOfTasks"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        } else if (task.getTaskType() \u003d\u003d \"Event\") {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            newTask \u003d (HORIZONTAL_LINE"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"One new Deadline Task added: \""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + task.toString()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"Total number of tasks in list: \""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + sizeOfTasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\r\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Displays the message when a task is marked done."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param task Takes in a task object."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String markTaskDone(Task task) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String newTaskDone \u003d \"\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        newTaskDone \u003d (HORIZONTAL_LINE"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"Nice! One thing done: \\r\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return newTaskDone;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Displays all tasks."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param tasks Takes in a list of tasks."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String listAllTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String dividerStart \u003d \"\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String allTasks \u003d \"\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String dividerEnd \u003d \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String listAllTasks \u003d \"\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        dividerStart \u003d (HORIZONTAL_LINE"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"Here are all of your tasks:\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            String taskToString \u003d \"\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            taskToString \u003d ((i + 1) + \".\" + tasks.getTask(i).toString() +\"\\n\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            allTasks +\u003d taskToString;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        dividerEnd +\u003d (\"\\r\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"You have a total of \""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + tasks.getSize()"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \" tasks.\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        listAllTasks \u003d dividerStart + allTasks + dividerEnd;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return listAllTasks;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Mocha\u0027s salutations."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String sayGoodbye() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String mochaGoodbye \u003d \"\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "onglijin"
        },
        "content": "       mochaGoodbye \u003d (HORIZONTAL_LINE"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"Bye! See ya soon!\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return mochaGoodbye;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Displays the message when a task is deleted."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param task Takes in a task object."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param sizeOfTasks Takes in the size of the list of tasks."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String deleteTask(Task task, int sizeOfTasks) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String deleteTask \u003d \"\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        deleteTask \u003d (HORIZONTAL_LINE"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"Noted. Removing the following task:\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"Total number of tasks left in the list: \""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + sizeOfTasks"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return deleteTask;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * Displays all task that contains the word to find."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     * @param matchingTasks A list of matching tasks."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "onglijin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public String findTask(ArrayList\u003cTask\u003e matchingTasks) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String dividerStart \u003d \"\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String relevantTasks \u003d \"\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String dividerEnd \u003d \"\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        String findTask \u003d \"\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        dividerStart \u003d (HORIZONTAL_LINE"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"Here are the matching tasks in your list:\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                + \"\\r\\n\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            String matchingTask \u003d \"\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            matchingTask \u003d ((i + 1) "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \".\""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + matchingTasks.get(i).toString()"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                    + \"\\n\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            relevantTasks +\u003d matchingTask;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        dividerEnd \u003d HORIZONTAL_LINE;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        findTask \u003d dividerStart + relevantTasks + dividerEnd;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        return findTask;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 211
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "onglijin": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "onglijin": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private String toDoCommand \u003d \"todo read book\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private String deadlineCommand \u003d \"deadline return book /by 2019-06-06\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private String eventCommand \u003d \"event project meeting /at 2019-08-06\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    void parseCommand_toDoCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        assertEquals(1, parser.parseCommand(toDoCommand));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    void parseCommand_deadlineCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        assertEquals(2, parser.parseCommand(deadlineCommand));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    void parseCommand_eventCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        assertEquals(3, parser.parseCommand(eventCommand));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 27
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "import duke.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    private Task newToDoTask \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    void getTaskTypeTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        assertEquals(\"ToDo\", newToDoTask.getTaskType());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        assertEquals(\"[T][✘] read book\", newToDoTask.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "onglijin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    public void toStringInFile() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "onglijin"
        },
        "content": "        assertEquals(\"T | 0 | read book\", newToDoTask.toStringInFile());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "onglijin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "onglijin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "onglijin": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "onglijin"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "onglijin"
        },
        "content": "deadline return book /by June 6h"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "onglijin"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "onglijin"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "onglijin"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "onglijin"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "onglijin"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "onglijin"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "onglijin"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "onglijin"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "onglijin"
        },
        "content": "done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "onglijin"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "onglijin"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "onglijin": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "onglijin"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "onglijin": 1,
      "-": 20
    }
  }
]
