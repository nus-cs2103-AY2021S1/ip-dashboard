[{"path":".github/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":"# Checks that all text files end with a newline."},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"ret\u003d0"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"# Preserve filename with spaces by only splitting on newlines."},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"IFS\u003d\u0027"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"\u0027"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\""},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"        ret\u003d1"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"    fi"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"done"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"exit $ret"}],"authorContributionMap":{"BobbyZhouZijian":18}},{"path":".github/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":"# Checks for prohibited line endings."},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"# Prohibited line endings: \\r\\n"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"awk \u0027"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"    BEGIN {"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"        FS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"        OFS \u003d \":\""},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"        ret \u003d 0"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"    {"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"        ret \u003d 1"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"    END {"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"        exit ret"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"\u0027"}],"authorContributionMap":{"BobbyZhouZijian":19}},{"path":".github/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":"# Checks for trailing whitespace"},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"awk \u0027"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"    BEGIN {"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"        FS \u003d \":\""},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"        OFS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"        ret \u003d 0"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"    {"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"        # which do not properly handle trailing whitespace."},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"        # (e.g. GitHub web editor)"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"        if ($1 ~ /\\.md$/) {"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"            severity \u003d \"WARN\""},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"            severity \u003d \"ERROR\""},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"            ret \u003d 1"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"        print severity, $1, $2, \" trailing whitespace.\""},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"    END {"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"        exit ret"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"\u0027"}],"authorContributionMap":{"BobbyZhouZijian":26}},{"path":".github/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"ret\u003d0 \u0026\u0026"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"for checkscript in \"$dir\"/check-*; do"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"    if ! \"$checkscript\"; then"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"        ret\u003d1"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"    fi"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"done"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"exit $ret"}],"authorContributionMap":{"BobbyZhouZijian":11}},{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Homepage"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---|:---:|:---:|:---:"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"![](https://avatars0.githubusercontent.com/u/50571615?s\u003d100) | Zhou Zijian | [Github](https://github.com/BobbyZhouZijian/) | [Homepage](https://www.zijianzhou.com)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/)."}],"authorContributionMap":{"BobbyZhouZijian":1,"-":9}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"# DoLah User Guide [![Status](https://travis-ci.org/BobbyZhouZijian/ip.svg?branch\u003dmaster)](https://travis-ci.org/BobbyZhouZijian/ip)"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"    \u003cimg src\u003d\"./docs/Ui.png\" alt\u003d\"App Image\" width\u003d\"400\" height\u003d\"600\"\u003e"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c/p\u003e"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"## Features"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"DoLah is a task managing application that helps you too keep track of what you list of tasks."},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"## Usage"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"### Build and Run"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"To use the the Do Lah, simply compile and run the Duke.java file at `src/main/java/duke/Duke.java`."},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"You can also build the application and run it using gradle."},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"A packaged jar file has been attached in the latest stable release. Feel free to download it "},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"and enjoy DoLah by type the command `java -jar dolah.jar`"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"### 1. `list` - List out all current tasks"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"DoLah will return you a list of the tasks currently inside the application."},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `list`"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"Example: "},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"list"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"Here are the tasks in your list:"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"1. [T][✓] do work~"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"2. [D][✗] submit ip (by: Sep 16 2020)"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"### 2. `todo` - Add a todo task"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"Add a todo task with the specified content to DoLah."},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `todo CONTENT`"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"Example: "},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"todo submit individual project"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"    [T][✗] submit individual project"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":"Now you have 3 tasks in the list."},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":"### 3. `deadline` - Add a Deadline Task"},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":"Add a deadline task with the specified content and deadline to DoLah."},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `deadline CONTENT /by YYYY-MM-DD`"},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":"Example: "},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"deadline revise for midterm /by 2020-09-25"},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":71,"author":{"gitId":"BobbyZhouZijian"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":72,"author":{"gitId":"BobbyZhouZijian"},"content":"    [D][✗] revise for midterm (by: Sep 25 2020)"},{"lineNumber":73,"author":{"gitId":"BobbyZhouZijian"},"content":"Now you have 4 tasks in the list."},{"lineNumber":74,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":75,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":76,"author":{"gitId":"BobbyZhouZijian"},"content":"### 4. `event` - Add an event"},{"lineNumber":77,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":78,"author":{"gitId":"BobbyZhouZijian"},"content":"Add an event with the specified content and event date to DoLah."},{"lineNumber":79,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":80,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `event CONTENT /at YYYY-MM-DD`"},{"lineNumber":81,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":82,"author":{"gitId":"BobbyZhouZijian"},"content":"Example: "},{"lineNumber":83,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":84,"author":{"gitId":"BobbyZhouZijian"},"content":"event go for CS2103 lecture /at 2020-09-15"},{"lineNumber":85,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":86,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":87,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":88,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":89,"author":{"gitId":"BobbyZhouZijian"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":90,"author":{"gitId":"BobbyZhouZijian"},"content":"    [E][✗] go for CS2103 lecture (on: Sep 15 2020)"},{"lineNumber":91,"author":{"gitId":"BobbyZhouZijian"},"content":"Now you have 5 tasks in the list."},{"lineNumber":92,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":93,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":94,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":95,"author":{"gitId":"BobbyZhouZijian"},"content":"### 5. `done` - Mark task as done"},{"lineNumber":96,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":97,"author":{"gitId":"BobbyZhouZijian"},"content":"Mark a given task (todo, deadline, event) as completed."},{"lineNumber":98,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":99,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `done INDEX` where index is the index of the task displayed by DoLah."},{"lineNumber":100,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":101,"author":{"gitId":"BobbyZhouZijian"},"content":"Example:"},{"lineNumber":102,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":103,"author":{"gitId":"BobbyZhouZijian"},"content":"done 2"},{"lineNumber":104,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":105,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":106,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":107,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":108,"author":{"gitId":"BobbyZhouZijian"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":109,"author":{"gitId":"BobbyZhouZijian"},"content":"    [D][✓] submit ip (by: Sep 16 2020)"},{"lineNumber":110,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":111,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":112,"author":{"gitId":"BobbyZhouZijian"},"content":"### 6. `delete` - Delete a task"},{"lineNumber":113,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":114,"author":{"gitId":"BobbyZhouZijian"},"content":"Delete a given task by its index."},{"lineNumber":115,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":116,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `delete INDEX` where index is the index of the task displayed by DoLah."},{"lineNumber":117,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":118,"author":{"gitId":"BobbyZhouZijian"},"content":"Example:"},{"lineNumber":119,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":120,"author":{"gitId":"BobbyZhouZijian"},"content":"delete 2"},{"lineNumber":121,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":122,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":123,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":124,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":125,"author":{"gitId":"BobbyZhouZijian"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":126,"author":{"gitId":"BobbyZhouZijian"},"content":"    [D][✓] submit ip (by: Sep 16 2020)"},{"lineNumber":127,"author":{"gitId":"BobbyZhouZijian"},"content":"Now you have 4 tasks in the list."},{"lineNumber":128,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":129,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":130,"author":{"gitId":"BobbyZhouZijian"},"content":"### 7. `find` - Find a task"},{"lineNumber":131,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":132,"author":{"gitId":"BobbyZhouZijian"},"content":"Find a task according to a search keyword. The find function supports fuzzy search."},{"lineNumber":133,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":134,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `find SEARCH_KEYWORD`"},{"lineNumber":135,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":136,"author":{"gitId":"BobbyZhouZijian"},"content":"Example:"},{"lineNumber":137,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":138,"author":{"gitId":"BobbyZhouZijian"},"content":"find lexture"},{"lineNumber":139,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":140,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":141,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":142,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":143,"author":{"gitId":"BobbyZhouZijian"},"content":"Here are the matching tasks in your list:"},{"lineNumber":144,"author":{"gitId":"BobbyZhouZijian"},"content":"1. [E][✗] go for CS2103 lecture (on: Sep 15 2020)"},{"lineNumber":145,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":146,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":147,"author":{"gitId":"BobbyZhouZijian"},"content":"### 8. `bye` - Exit the application"},{"lineNumber":148,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":149,"author":{"gitId":"BobbyZhouZijian"},"content":"Exit the application. A popup will be shown to ask if you want to "},{"lineNumber":150,"author":{"gitId":"BobbyZhouZijian"},"content":"quit with the progress saved."},{"lineNumber":151,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":152,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `bye`"},{"lineNumber":153,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":154,"author":{"gitId":"BobbyZhouZijian"},"content":"Example:"},{"lineNumber":155,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":156,"author":{"gitId":"BobbyZhouZijian"},"content":"bye"},{"lineNumber":157,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":158,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":159,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome: Application exits."},{"lineNumber":160,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":161,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":162,"author":{"gitId":"BobbyZhouZijian"},"content":"## Author"},{"lineNumber":163,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":164,"author":{"gitId":"BobbyZhouZijian"},"content":"Zhou Zijian"},{"lineNumber":165,"author":{"gitId":"BobbyZhouZijian"},"content":""}],"authorContributionMap":{"BobbyZhouZijian":165}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"    // Testing"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"    testCompile group: \u0027org.testfx\u0027, name: \u0027testfx-core\u0027, version: \u00274.0.15-alpha\u0027"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"    testCompile group: \u0027org.testfx\u0027, name: \u0027testfx-junit5\u0027, version: \u00274.0.15-alpha\u0027"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"    testCompile group: \u0027org.testfx\u0027, name: \u0027openjfx-monocle\u0027, version: \u00278u76-b04\u0027"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    // JavaFX"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":"    checkstyleTest.enabled \u003d false"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":25,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"# DoLah User Guide [![Status](https://travis-ci.org/BobbyZhouZijian/ip.svg?branch\u003dmaster)](https://travis-ci.org/BobbyZhouZijian/ip)"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"    \u003cimg src\u003d\"./Ui.png\" alt\u003d\"App Image\" width\u003d\"400\" height\u003d\"600\"\u003e"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c/p\u003e"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"DoLah is a task managing application that helps you too keep track of what you list of tasks."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"### Build and Run"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"To use the the Do Lah, simply compile and run the Duke.java file at `src/main/java/duke/Duke.java`."},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"You can also build the application and run it using gradle."},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"A packaged jar file has been attached in the latest stable release. Feel free to download it "},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"and enjoy DoLah by type the command `java -jar dolah.jar`"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"### 1. `list` - List out all current tasks"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"DoLah will return you a list of the tasks currently inside the application."},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `list`"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"Example: "},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"list"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"Here are the tasks in your list:"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"1. [T][✓] do work~"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"2. [D][✗] submit ip (by: Sep 16 2020)"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"### 2. `todo` - Add a todo task"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"Add a todo task with the specified content to DoLah."},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `todo CONTENT`"},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"Example: "},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"todo submit individual project"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":"    [T][✗] submit individual project"},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"Now you have 3 tasks in the list."},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":"### 3. `deadline` - Add a Deadline Task"},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":"Add a deadline task with the specified content and deadline to DoLah."},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `deadline CONTENT /by YYYY-MM-DD`"},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":"Example: "},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"deadline revise for midterm /by 2020-09-25"},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":71,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":72,"author":{"gitId":"BobbyZhouZijian"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":73,"author":{"gitId":"BobbyZhouZijian"},"content":"    [D][✗] revise for midterm (by: Sep 25 2020)"},{"lineNumber":74,"author":{"gitId":"BobbyZhouZijian"},"content":"Now you have 4 tasks in the list."},{"lineNumber":75,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":76,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":77,"author":{"gitId":"BobbyZhouZijian"},"content":"### 4. `event` - Add an event"},{"lineNumber":78,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":79,"author":{"gitId":"BobbyZhouZijian"},"content":"Add an event with the specified content and event date to DoLah."},{"lineNumber":80,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":81,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `event CONTENT /at YYYY-MM-DD`"},{"lineNumber":82,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":83,"author":{"gitId":"BobbyZhouZijian"},"content":"Example: "},{"lineNumber":84,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":85,"author":{"gitId":"BobbyZhouZijian"},"content":"event go for CS2103 lecture /at 2020-09-15"},{"lineNumber":86,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":87,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":88,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":89,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":90,"author":{"gitId":"BobbyZhouZijian"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":91,"author":{"gitId":"BobbyZhouZijian"},"content":"    [E][✗] go for CS2103 lecture (on: Sep 15 2020)"},{"lineNumber":92,"author":{"gitId":"BobbyZhouZijian"},"content":"Now you have 5 tasks in the list."},{"lineNumber":93,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":94,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":95,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":96,"author":{"gitId":"BobbyZhouZijian"},"content":"### 5. `done` - Mark task as done"},{"lineNumber":97,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":98,"author":{"gitId":"BobbyZhouZijian"},"content":"Mark a given task (todo, deadline, event) as completed."},{"lineNumber":99,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":100,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `done INDEX` where index is the index of the task displayed by DoLah."},{"lineNumber":101,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":102,"author":{"gitId":"BobbyZhouZijian"},"content":"Example:"},{"lineNumber":103,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":104,"author":{"gitId":"BobbyZhouZijian"},"content":"done 2"},{"lineNumber":105,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":106,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":107,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":108,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":109,"author":{"gitId":"BobbyZhouZijian"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":110,"author":{"gitId":"BobbyZhouZijian"},"content":"    [D][✓] submit ip (by: Sep 16 2020)"},{"lineNumber":111,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":112,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":113,"author":{"gitId":"BobbyZhouZijian"},"content":"### 6. `delete` - Delete a task"},{"lineNumber":114,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":115,"author":{"gitId":"BobbyZhouZijian"},"content":"Delete a given task by its index."},{"lineNumber":116,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":117,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `delete INDEX` where index is the index of the task displayed by DoLah."},{"lineNumber":118,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":119,"author":{"gitId":"BobbyZhouZijian"},"content":"Example:"},{"lineNumber":120,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":121,"author":{"gitId":"BobbyZhouZijian"},"content":"delete 2"},{"lineNumber":122,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":123,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":124,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":125,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":126,"author":{"gitId":"BobbyZhouZijian"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":127,"author":{"gitId":"BobbyZhouZijian"},"content":"    [D][✓] submit ip (by: Sep 16 2020)"},{"lineNumber":128,"author":{"gitId":"BobbyZhouZijian"},"content":"Now you have 4 tasks in the list."},{"lineNumber":129,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":130,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":131,"author":{"gitId":"BobbyZhouZijian"},"content":"### 7. `find` - Find a task"},{"lineNumber":132,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":133,"author":{"gitId":"BobbyZhouZijian"},"content":"Find a task according to a search keyword. The find function supports fuzzy search."},{"lineNumber":134,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":135,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `find SEARCH_KEYWORD`"},{"lineNumber":136,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":137,"author":{"gitId":"BobbyZhouZijian"},"content":"Example:"},{"lineNumber":138,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":139,"author":{"gitId":"BobbyZhouZijian"},"content":"find lexture"},{"lineNumber":140,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":141,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":142,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome:"},{"lineNumber":143,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":144,"author":{"gitId":"BobbyZhouZijian"},"content":"Here are the matching tasks in your list:"},{"lineNumber":145,"author":{"gitId":"BobbyZhouZijian"},"content":"1. [E][✗] go for CS2103 lecture (on: Sep 15 2020)"},{"lineNumber":146,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":147,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":148,"author":{"gitId":"BobbyZhouZijian"},"content":"### 8. `bye` - Exit the application"},{"lineNumber":149,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":150,"author":{"gitId":"BobbyZhouZijian"},"content":"Exit the application. A popup will be shown to ask if you want to "},{"lineNumber":151,"author":{"gitId":"BobbyZhouZijian"},"content":"quit with the progress saved."},{"lineNumber":152,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":153,"author":{"gitId":"BobbyZhouZijian"},"content":"Format: `bye`"},{"lineNumber":154,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":155,"author":{"gitId":"BobbyZhouZijian"},"content":"Example:"},{"lineNumber":156,"author":{"gitId":"BobbyZhouZijian"},"content":"```$xslt"},{"lineNumber":157,"author":{"gitId":"BobbyZhouZijian"},"content":"bye"},{"lineNumber":158,"author":{"gitId":"BobbyZhouZijian"},"content":"```"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"BobbyZhouZijian"},"content":"Expected Outcome: Application exits."},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"BobbyZhouZijian"},"content":"## Author"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"BobbyZhouZijian"},"content":"Zhou Zijian"},{"lineNumber":166,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"BobbyZhouZijian":150,"-":16}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":9,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":12,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":13,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":14,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem Find java.exe"},{"lineNumber":20,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":23,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":24,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":27,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":28,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":29,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":30,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":":findJavaFromJavaHome"},{"lineNumber":35,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":41,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":42,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":43,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":44,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":":init"},{"lineNumber":49,"author":{"gitId":"-"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":":win9xME_args"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@rem Slurp the command line arguments."},{"lineNumber":55,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":56,"author":{"gitId":"-"},"content":"set _SKIP\u003d2"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":":win9xME_args_slurp"},{"lineNumber":59,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":":execute"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@rem Setup the command line"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Execute Gradle"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":":end"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":73,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":":fail"},{"lineNumber":76,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":77,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":79,"author":{"gitId":"-"},"content":"exit /b 1"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":":mainEnd"},{"lineNumber":82,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":":omega"}],"authorContributionMap":{"BobbyZhouZijian":1,"-":83}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.controller.Main;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulate the main class of the object."},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Executes the program."},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param args command line arguments to be fed to the program."},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":15,"-":3}},{"path":"src/main/java/duke/controller/App.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.ui.DataSaver;"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.utils.Evaluator;"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.utils.Storage;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.geometry.Pos;"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.control.Button;"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulates the App class, representing the main window for the program."},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"public class App extends AnchorPane {"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"    private VBox dialogContainer;"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"    private TextField userInput;"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"    private Button sendButton;"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    private Evaluator evaluator;"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"    private Storage storage;"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpeg\"));"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Initialize the App class properties."},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"    public void initialize() {"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"        // set up ui"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"        // set up logic"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"        storage \u003d new Storage(list);"},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"        evaluator \u003d new Evaluator(storage);"},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"        loadFile();"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"    private void handleUserInput() {"},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":"        String response \u003d evaluator.getResponse(input);"},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":"        );"},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":"        userInput.clear();"},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Saves the data to a load file."},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":"    private void handleSaveFile() {"},{"lineNumber":71,"author":{"gitId":"BobbyZhouZijian"},"content":"        DataSaver.save(storage);"},{"lineNumber":72,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (DataSaver.isQuitting()) {"},{"lineNumber":73,"author":{"gitId":"BobbyZhouZijian"},"content":"            Platform.exit();"},{"lineNumber":74,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":77,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Loads data from a load file."},{"lineNumber":79,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"BobbyZhouZijian"},"content":"    private void loadFile() {"},{"lineNumber":81,"author":{"gitId":"BobbyZhouZijian"},"content":"        String readFileMessage \u003d storage.readSavedFile();"},{"lineNumber":82,"author":{"gitId":"BobbyZhouZijian"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(readFileMessage, dukeImage));"},{"lineNumber":83,"author":{"gitId":"BobbyZhouZijian"},"content":"        dialogContainer.setAlignment(Pos.CENTER);"},{"lineNumber":84,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":85}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.ui.Messenger;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.fxml.FXML;"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulates a DialogBox class consisting of an ImageView"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":" * to represent the speaker\u0027s face and a label"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":" * containing text from the speaker."},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"public class DialogBox extends HBox {"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"    private Label dialog;"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"    private HBox dialogContainer;"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    private ImageView displayPicture;"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Constructs a DialogBox Instance."},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param text the text to display in the dialog box."},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param img the image to display in the dialog box."},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(App.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"            fxmlLoader.load();"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"            e.printStackTrace();"},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"        dialog.setText(text);"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"        displayPicture.setImage(img);"},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"        Circle clip \u003d new Circle(50, 50, 45);"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"        displayPicture.setClip(clip); //convert image to circle"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":"    private void flip() {"},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":"        Collections.reverse(tmp);"},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Sets the alignment of the Dialog container."},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param isUserTurn a boolean representing if the dialog box if of the user."},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"BobbyZhouZijian"},"content":"    private void setDialogContainerDirection(boolean isUserTurn) {"},{"lineNumber":72,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (isUserTurn) {"},{"lineNumber":73,"author":{"gitId":"BobbyZhouZijian"},"content":"            dialogContainer.setAlignment(Pos.CENTER_RIGHT);"},{"lineNumber":74,"author":{"gitId":"BobbyZhouZijian"},"content":"        } else {"},{"lineNumber":75,"author":{"gitId":"BobbyZhouZijian"},"content":"            dialogContainer.setAlignment(Pos.CENTER_LEFT);"},{"lineNumber":76,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":79,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Constructs a DialogBox from the user."},{"lineNumber":81,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param text the message from the user."},{"lineNumber":83,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param img the image of the user."},{"lineNumber":84,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a DialogBox instance from the user."},{"lineNumber":85,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":87,"author":{"gitId":"BobbyZhouZijian"},"content":"        DialogBox userBox \u003d new DialogBox(text, img);"},{"lineNumber":88,"author":{"gitId":"BobbyZhouZijian"},"content":"        userBox.setDialogContainerDirection(true);"},{"lineNumber":89,"author":{"gitId":"BobbyZhouZijian"},"content":"        return userBox;"},{"lineNumber":90,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":92,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Constructs a DialogBox from Duke."},{"lineNumber":94,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param text the message from Duke."},{"lineNumber":96,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param img the image of Duke."},{"lineNumber":97,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a DialogBox instance from Duke."},{"lineNumber":98,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":100,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (text.length() \u003d\u003d 0) {"},{"lineNumber":101,"author":{"gitId":"BobbyZhouZijian"},"content":"            text \u003d Messenger.EMPTY_TEXT_FILLER;"},{"lineNumber":102,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"BobbyZhouZijian"},"content":"        DialogBox dukeBox \u003d new DialogBox(text, img);"},{"lineNumber":104,"author":{"gitId":"BobbyZhouZijian"},"content":"        dukeBox.flip();"},{"lineNumber":105,"author":{"gitId":"BobbyZhouZijian"},"content":"        dukeBox.setDialogContainerDirection(false);"},{"lineNumber":106,"author":{"gitId":"BobbyZhouZijian"},"content":"        return dukeBox;"},{"lineNumber":107,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":108}},{"path":"src/main/java/duke/controller/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulates the GUI for the program."},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Starts the GUI welcome window."},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param window the window of the current view."},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"    public void start(Stage window) {"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"        // execute GUI loop"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/Menu.fxml\"));"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"            Scene scene \u003d new Scene(anchorPane);"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"            window.setScene(scene);"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"            window.show();"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":34}},{"path":"src/main/java/duke/controller/Menu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.ui.Messenger;"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.Parent;"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.control.Button;"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.stage.Stage;"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulates a Menu class that represents the menu for the program."},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"public class Menu {"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"    private VBox dukeLogo;"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"    private Label logoName;"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"    private Button startButton;"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Initializes the Menu instance."},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"        logoName.setText(Messenger.LOGO);"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Switches the current scene to App."},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @throws IOException an IOException in trying to retrieve the fxml file."},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"    public void switchToMain() throws IOException {"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"        Stage stage;"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"        Parent root;"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"        stage \u003d (Stage) startButton.getScene().getWindow();"},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"        root \u003d FXMLLoader.load(getClass().getResource(\"/view/App.fxml\"));"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"        Scene scene \u003d new Scene(root);"},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"        stage.setScene(scene);"},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"        stage.show();"},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":49}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulates a DukeException class to handle errors and exceptions."},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Constructs a DukeException object with the message given."},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param errorMessage a string representing the error message to be passed to the object."},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"        super(errorMessage);"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":15}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.types.TaskType;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":" * A class that encapsulates a task that the user adds in."},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"public class Task {"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"    private final String content;"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"    private boolean completed \u003d false;"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"    private TaskType type;"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"    private LocalDate date;"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Constructs a task object that has no date attached."},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param content the content of the task"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param type the type of the task"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"    public Task(String content, String type) {"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"        this.content \u003d content;"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"        this.type \u003d TaskType.valueOfType(type);"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Constructs a task object that has a date attached."},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param content the content of the task."},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param type the type of the task."},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param date the date of the task."},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"    public Task(String content, String type, String date) {"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"        this.content \u003d content;"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"        this.type \u003d TaskType.valueOfType(type);"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"        this.date \u003d LocalDate.parse(date);"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Constructs a task object that has a date attached."},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param content the content of the task."},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param type the type of the task."},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param date a LocalDate object representing the date of the task."},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"    public Task(String content, String type, LocalDate date) {"},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"        this.content \u003d content;"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"        this.type \u003d TaskType.valueOfType(type);"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"        this.date \u003d date;"},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Gets the content of the task."},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representing the content of the task."},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String getContent() {"},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":"        return content;"},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Gets whether the task has been completed."},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return true if the task is completed and false otherwise."},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":"    public boolean isCompleted() {"},{"lineNumber":71,"author":{"gitId":"BobbyZhouZijian"},"content":"        return completed;"},{"lineNumber":72,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":74,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Gets the type of the task."},{"lineNumber":76,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representing the type of the task."},{"lineNumber":78,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String getType() {"},{"lineNumber":80,"author":{"gitId":"BobbyZhouZijian"},"content":"        return type.getType();"},{"lineNumber":81,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":83,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Marks the task as completed."},{"lineNumber":85,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"BobbyZhouZijian"},"content":"    public void markAsDone() {"},{"lineNumber":87,"author":{"gitId":"BobbyZhouZijian"},"content":"        completed \u003d true;"},{"lineNumber":88,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":90,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Gets the date of the task in the format of Month date Year."},{"lineNumber":92,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representing the date of the task in \"MMM d yyyy\"."},{"lineNumber":94,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String getDate() {"},{"lineNumber":96,"author":{"gitId":"BobbyZhouZijian"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":97,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":99,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Overrides the toString method to represent the task in the form [T][✓] content (on/at: date)."},{"lineNumber":101,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representation of the task."},{"lineNumber":103,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Override"},{"lineNumber":105,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String toString() {"},{"lineNumber":106,"author":{"gitId":"BobbyZhouZijian"},"content":"        String statusLabel \u003d \"[\" + type.toString().substring(0, 1) + \"]\";"},{"lineNumber":107,"author":{"gitId":"BobbyZhouZijian"},"content":"        String mainBody \u003d statusLabel + getDoneStatusString() + \" \" + content;"},{"lineNumber":108,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (type \u003d\u003d TaskType.EVENT) {"},{"lineNumber":109,"author":{"gitId":"BobbyZhouZijian"},"content":"            mainBody +\u003d \" (on: \" + getDate() + \")\";"},{"lineNumber":110,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (type \u003d\u003d TaskType.DEADLINE) {"},{"lineNumber":112,"author":{"gitId":"BobbyZhouZijian"},"content":"            mainBody +\u003d \" (by: \" + getDate() + \")\";"},{"lineNumber":113,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"BobbyZhouZijian"},"content":"        return mainBody;"},{"lineNumber":115,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":117,"author":{"gitId":"BobbyZhouZijian"},"content":"    private String getDoneStatusString() {"},{"lineNumber":118,"author":{"gitId":"BobbyZhouZijian"},"content":"        // a tick if completed, and a cross if not completed, in unicode."},{"lineNumber":119,"author":{"gitId":"BobbyZhouZijian"},"content":"        return \"[\" + (completed ? \u0027\\u2713\u0027 : \u0027\\u2717\u0027) + \"]\";"},{"lineNumber":120,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":121}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.ui.Messenger;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulate a class that represents a list of tasks that the user entered."},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"    // a list of tasks"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Constructs an empty task list."},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"    public TaskList() {"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Gets all the tasks of a list."},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return an ArrayList including all the tasks in the list."},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"        return tasks;"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Prints out all the tasks in the list in their string representation."},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representing the printed content of the task list."},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String printList() {"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"        int size \u003d tasks.size();"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"        for (int i \u003d 0; i \u003c size; ++i) {"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"            output.append(i + 1).append(\".\").append(tasks.get(i).toString()).append(\"\\n\");"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"        return output.toString();"},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Marks the task of index as completed."},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param index the index of the task to be marked as completed."},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representing the message after the task is marked done."},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String markTaskAsDone(int index) {"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"        Task task \u003d tasks.get(index - 1);"},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"        task.markAsDone();"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":"        assert task.isCompleted() : \"Task not marked as done successfully\";"},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n    \" + task;"},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Adds a new task that has an attached date to the list."},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param content the content of the task."},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param type the type of the task."},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param date the date of the task."},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representing the message for adding a task."},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String addTask(String content, String type, String date) {"},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":"        Task newTask \u003d new Task(content, type, date);"},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":"        tasks.add(newTask);"},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":"        int size \u003d tasks.size();"},{"lineNumber":71,"author":{"gitId":"BobbyZhouZijian"},"content":"        assert size \u003e\u003d 1 : \"Item not added successfully\";"},{"lineNumber":72,"author":{"gitId":"BobbyZhouZijian"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n    \" + newTask.toString() + \"\\n\";"},{"lineNumber":73,"author":{"gitId":"BobbyZhouZijian"},"content":"        output +\u003d String.format(\"Now you have %s %s in the list.\\n\", size, (size \u003e 1 ? \"tasks\" : \"task\"));"},{"lineNumber":74,"author":{"gitId":"BobbyZhouZijian"},"content":"        return output;"},{"lineNumber":75,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":77,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Adds a new task that has an attached date to the list."},{"lineNumber":79,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param content the content of the task."},{"lineNumber":81,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param type the type of the task."},{"lineNumber":82,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representing the message for adding a task."},{"lineNumber":83,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String addTask(String content, String type) {"},{"lineNumber":85,"author":{"gitId":"BobbyZhouZijian"},"content":"        Task newTask \u003d new Task(content, type);"},{"lineNumber":86,"author":{"gitId":"BobbyZhouZijian"},"content":"        tasks.add(newTask);"},{"lineNumber":87,"author":{"gitId":"BobbyZhouZijian"},"content":"        int size \u003d tasks.size();"},{"lineNumber":88,"author":{"gitId":"BobbyZhouZijian"},"content":"        assert size \u003e\u003d 1 : \"Item not added successfully\";"},{"lineNumber":89,"author":{"gitId":"BobbyZhouZijian"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n    \" + newTask.toString() + \"\\n\";"},{"lineNumber":90,"author":{"gitId":"BobbyZhouZijian"},"content":"        output +\u003d String.format(\"Now you have %s %s in the list.\\n\", size, (size \u003e 1 ? \"tasks\" : \"task\"));"},{"lineNumber":91,"author":{"gitId":"BobbyZhouZijian"},"content":"        return output;"},{"lineNumber":92,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":94,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Deletes the task of index from the list."},{"lineNumber":96,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param index the index of the task to be deleted."},{"lineNumber":98,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representing the message for deleting a task."},{"lineNumber":99,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @throws DukeException throws an index out of bound exception."},{"lineNumber":100,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String deleteTask(int index) throws DukeException {"},{"lineNumber":102,"author":{"gitId":"BobbyZhouZijian"},"content":"        int size \u003d tasks.size();"},{"lineNumber":103,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (index \u003e size || index \u003c 0) {"},{"lineNumber":104,"author":{"gitId":"BobbyZhouZijian"},"content":"            throw new DukeException(Messenger.INDEX_OUT_OF_BOUND_ERROR);"},{"lineNumber":105,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"BobbyZhouZijian"},"content":"        Task task \u003d tasks.get(index - 1);"},{"lineNumber":107,"author":{"gitId":"BobbyZhouZijian"},"content":"        String output \u003d \"Noted. I\u0027ve removed this task:\\n\";"},{"lineNumber":108,"author":{"gitId":"BobbyZhouZijian"},"content":"        output +\u003d \"    \" + task + \"\\n\";"},{"lineNumber":109,"author":{"gitId":"BobbyZhouZijian"},"content":"        tasks.remove(index - 1);"},{"lineNumber":110,"author":{"gitId":"BobbyZhouZijian"},"content":"        assert tasks.size() \u003c size : \"Item not deleted successfully\";"},{"lineNumber":111,"author":{"gitId":"BobbyZhouZijian"},"content":"        size--;"},{"lineNumber":112,"author":{"gitId":"BobbyZhouZijian"},"content":"        output +\u003d String.format(\"Now you have %s %s in the list.\\n\", size, (size \u003e 1 ? \"tasks\" : \"task\"));"},{"lineNumber":113,"author":{"gitId":"BobbyZhouZijian"},"content":"        return output;"},{"lineNumber":114,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":116,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Finds the tasks that have the keyword."},{"lineNumber":118,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param keyword the keyword to be searched for."},{"lineNumber":120,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representing the message for the found task."},{"lineNumber":121,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String findTask(String keyword) {"},{"lineNumber":123,"author":{"gitId":"BobbyZhouZijian"},"content":"        int index \u003d 1;"},{"lineNumber":124,"author":{"gitId":"BobbyZhouZijian"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":125,"author":{"gitId":"BobbyZhouZijian"},"content":"        for (Task task : tasks) {"},{"lineNumber":126,"author":{"gitId":"BobbyZhouZijian"},"content":"            String content \u003d task.getContent();"},{"lineNumber":127,"author":{"gitId":"BobbyZhouZijian"},"content":"            if (isFuzzyMatched(keyword, content)) {"},{"lineNumber":128,"author":{"gitId":"BobbyZhouZijian"},"content":"                output.append(index).append(\".\").append(task.toString()).append(\"\\n\");"},{"lineNumber":129,"author":{"gitId":"BobbyZhouZijian"},"content":"                index++;"},{"lineNumber":130,"author":{"gitId":"BobbyZhouZijian"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"BobbyZhouZijian"},"content":"        return output.toString();"},{"lineNumber":133,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":135,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Match the string with a task if the difference is less than two chars."},{"lineNumber":137,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":138,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param keyword the keyword to be matched."},{"lineNumber":139,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param taskName the name of the task in a string."},{"lineNumber":140,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return true if a match is found and false otherwise."},{"lineNumber":141,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"BobbyZhouZijian"},"content":"    private boolean isFuzzyMatched(String keyword, String taskName) {"},{"lineNumber":143,"author":{"gitId":"BobbyZhouZijian"},"content":"        int lKeyword \u003d keyword.length();"},{"lineNumber":144,"author":{"gitId":"BobbyZhouZijian"},"content":"        int lTask \u003d taskName.length();"},{"lineNumber":145,"author":{"gitId":"BobbyZhouZijian"},"content":"        final int fuzzyLimit \u003d Math.max(1, lKeyword / 5);"},{"lineNumber":146,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":147,"author":{"gitId":"BobbyZhouZijian"},"content":"        // if keyword is longer or is empty, no match can be found"},{"lineNumber":148,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (lKeyword \u003e lTask || lKeyword \u003d\u003d 0) {"},{"lineNumber":149,"author":{"gitId":"BobbyZhouZijian"},"content":"            return false;"},{"lineNumber":150,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":152,"author":{"gitId":"BobbyZhouZijian"},"content":"        for (int i \u003d 0; i \u003c\u003d lTask - lKeyword; ++i) {"},{"lineNumber":153,"author":{"gitId":"BobbyZhouZijian"},"content":"            boolean matchFound \u003d true;"},{"lineNumber":154,"author":{"gitId":"BobbyZhouZijian"},"content":"            int fuzzyCount \u003d 0;"},{"lineNumber":155,"author":{"gitId":"BobbyZhouZijian"},"content":"            for (int j \u003d 0; j \u003c lKeyword; ++j) {"},{"lineNumber":156,"author":{"gitId":"BobbyZhouZijian"},"content":"                boolean isCharMatched \u003d taskName.charAt(i + j) \u003d\u003d keyword.charAt(j);"},{"lineNumber":157,"author":{"gitId":"BobbyZhouZijian"},"content":"                if (!isCharMatched \u0026\u0026 fuzzyCount \u003c fuzzyLimit) {"},{"lineNumber":158,"author":{"gitId":"BobbyZhouZijian"},"content":"                    fuzzyCount++;"},{"lineNumber":159,"author":{"gitId":"BobbyZhouZijian"},"content":"                    continue;"},{"lineNumber":160,"author":{"gitId":"BobbyZhouZijian"},"content":"                }"},{"lineNumber":161,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":162,"author":{"gitId":"BobbyZhouZijian"},"content":"                if (!isCharMatched) {"},{"lineNumber":163,"author":{"gitId":"BobbyZhouZijian"},"content":"                    matchFound \u003d false;"},{"lineNumber":164,"author":{"gitId":"BobbyZhouZijian"},"content":"                    break;"},{"lineNumber":165,"author":{"gitId":"BobbyZhouZijian"},"content":"                }"},{"lineNumber":166,"author":{"gitId":"BobbyZhouZijian"},"content":"            }"},{"lineNumber":167,"author":{"gitId":"BobbyZhouZijian"},"content":"            if (matchFound) {"},{"lineNumber":168,"author":{"gitId":"BobbyZhouZijian"},"content":"                return true;"},{"lineNumber":169,"author":{"gitId":"BobbyZhouZijian"},"content":"            }"},{"lineNumber":170,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"BobbyZhouZijian"},"content":"        return false;"},{"lineNumber":172,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":174,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Clears the tasks in the list."},{"lineNumber":176,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":177,"author":{"gitId":"BobbyZhouZijian"},"content":"    public void clearTasks() {"},{"lineNumber":178,"author":{"gitId":"BobbyZhouZijian"},"content":"        tasks.clear();"},{"lineNumber":179,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":180}},{"path":"src/main/java/duke/types/ActionType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.types;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulate a ActionType enum class that represents the type of actions of a command."},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":" * The class includes three action types: delete, done and find"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"public enum ActionType {"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"    DELETE(\"delete\"),"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"    DONE(\"done\"),"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"    FIND(\"find\");"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"    private final String type;"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Constructs a ActionType object with the type of action given."},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param actionType a string representing the type of action."},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"    ActionType(String actionType) {"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"        type \u003d actionType;"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Gets the ActionType object from a string representation of the type."},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Returns null if no such object exists."},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param type a string representing the type."},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return an ActionType object of the specified type and null if no such object exists."},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static ActionType valueOfType(String type) {"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"        for (ActionType e : values()) {"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"            if (e.type.equals(type)) {"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"                return e;"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"        return null;"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":38}},{"path":"src/main/java/duke/types/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.types;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulate a enum class that represents the type of a task."},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":" * The class include three task types: todo, deadline and event"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"public enum TaskType {"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"    TODO(\"todo\"),"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"    DEADLINE(\"deadline\"),"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"    EVENT(\"event\");"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"    private final String type;"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Constructs a TaskType object with the type of the task given."},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param taskType a string representing the type of the task."},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"    TaskType(String taskType) {"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"        type \u003d taskType;"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Gets the type of the task in the form of a string."},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representing the type."},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String getType() {"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"        return type;"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Determines if the type of task has a time/date attached."},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param taskType the type of the task."},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return true if the type has a time attached and false otherwise."},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static boolean hasTime(String taskType) {"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"        return taskType.equals(\"event\") || taskType.equals(\"deadline\");"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Gets the TaskType object from a string representation of the type of the task."},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Returns null if no such object exists."},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param taskType a string representing the type of the task."},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a TaskType object of the specified type and null if no such object exists."},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static TaskType valueOfType(String taskType) {"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"        for (TaskType e : values()) {"},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"            if (e.type.equals(taskType)) {"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"                return e;"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":"        return null;"},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":57}},{"path":"src/main/java/duke/ui/AlertBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.geometry.Pos;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.control.Label;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.stage.Modality;"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulates an AlertBox class that deals with displaying an alert UI."},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"public class AlertBox implements PopUpBox {"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Displays an alert box with the given title and the alert message."},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param title the title of the alert."},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param message the main message of the alert."},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static void display(String title, String message) {"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"        Stage window \u003d new Stage();"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"        // disable actions in other windows"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"        window.initModality(Modality.APPLICATION_MODAL);"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"        window.setTitle(title);"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"        window.setMinWidth(250);"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"        Label alertContent \u003d new Label();"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"        alertContent.setText(message);"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"        Button closeButton \u003d new Button(\"Close\");"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"        closeButton.setOnAction(e -\u003e window.close());"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"        closeButton.setDefaultButton(true);"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"        VBox layout \u003d new VBox(20);"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"        layout.getChildren().addAll(alertContent, closeButton);"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"        layout.setAlignment(Pos.CENTER);"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"        Scene scene \u003d new Scene(layout, DEFAULT_SCENE_WIDTH, DEFAULT_SCENE_HEIGHT);"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"        window.setScene(scene);"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"        window.showAndWait();"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":43}},{"path":"src/main/java/duke/ui/DataSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.utils.Storage;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.geometry.Pos;"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.stage.Modality;"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulates a DataSaver class that saves data to a load file."},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"public class DataSaver implements PopUpBox {"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"    private static boolean isQuitting \u003d false;"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Saves the data to a load file."},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param storage the Storage object used to extract the data."},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static void save(Storage storage) {"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"        Stage window \u003d new Stage();"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"        // disable actions in other windows"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"        window.initModality(Modality.APPLICATION_MODAL);"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"        window.setTitle(\"Are you sure?\");"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"        window.setMinWidth(250);"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"        // create confirmation buttons"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"        Button saveAndQuit \u003d new Button(\"Save and quit\");"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"        Button notSaveAndQuit \u003d new Button(\"Do not save and quit\");"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"        Button cancel \u003d new Button(\"Cancel\");"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"        saveAndQuit.defaultButtonProperty().bind(saveAndQuit.focusedProperty());"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"        notSaveAndQuit.defaultButtonProperty().bind(notSaveAndQuit.focusedProperty());"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"        cancel.defaultButtonProperty().bind(cancel.focusedProperty());"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"        Label saveDataMessage \u003d new Label();"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"        saveAndQuit.setOnAction(e -\u003e {"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"            isQuitting \u003d true;"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"            saveDataMessage.setText(storage.saveDataToFile());"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"            saveDataMessage.setText(\"Content has been Saved for you!\");"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"            window.close();"},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"        });"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"        notSaveAndQuit.setOnAction(e -\u003e {"},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"            isQuitting \u003d true;"},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"            window.close();"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"        });"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"        cancel.setOnAction(e -\u003e {"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"            isQuitting \u003d false;"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"            window.close();"},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"        });"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"        VBox layout \u003d new VBox(20);"},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":"        layout.getChildren().addAll(saveDataMessage, saveAndQuit, notSaveAndQuit, cancel);"},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":"        layout.setAlignment(Pos.CENTER);"},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":"        Scene scene \u003d new Scene(layout, DEFAULT_SCENE_WIDTH, DEFAULT_SCENE_HEIGHT);"},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":"        window.setScene(scene);"},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":"        window.showAndWait();"},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Notifies if the program is going to quit."},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a boolean representing if the program is quitting."},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static boolean isQuitting() {"},{"lineNumber":71,"author":{"gitId":"BobbyZhouZijian"},"content":"        return isQuitting;"},{"lineNumber":72,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":73}},{"path":"src/main/java/duke/ui/Messenger.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulates a Messenger class to manage important notifications in the program."},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"public class Messenger {"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Project logo."},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String LOGO \u003d \" ____   ___      _            __         _\\n\""},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"                                    + \"|  _   \\\\/ _     \\\\ | |         /    \\\\      | |____\\n\""},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"                                    + \"| | |  | | |  | | |        /   _  \\\\     |  __   |\\n\""},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"                                    + \"| |_| | |_|  | | |___ /  /__\\\\ \\\\   |  |  |  |\\n\""},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"                                    + \"|____/\\\\____/ |_____|_/    \\\\__\\\\ |_|  |_|\\n\";"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Messages for loading and saving files."},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String FILE_LOADING \u003d \"Hold a while, trying to retrieve where you were last time...\";"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String FILE_LOADED \u003d \"Great! We have successfully loaded the data. Enjoy~\";"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String CLOSE_MESSAGE \u003d \"Content Saved! Hope to see you again soon!\";"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Error handling messages."},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"      */"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final char FROWN \u003d \u0027\\u2639\u0027;"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String EMPTY_TEXT_FILLER \u003d \"What did you just say?\";"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String INDEX_FORMAT_ERROR \u003d FROWN + \" OOPS!!! Seems you have provided an invalid index :-(\";"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String COMMAND_UNRECOGNIZABLE_ERROR \u003d FROWN + \" OOPS!!! I\u0027m sorry, \""},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"            + \"but I don\u0027t know what that means :-(\";"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String EMPTY_COMMAND_ERROR \u003d FROWN + \" OOPS!!! The command cannot be empty!\";"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String SPELL_ERROR \u003d FROWN + \" OOPS!!! Check if you have spelled correctly!\";"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String EMPTY_CONTENT_ERROR \u003d FROWN + \" OOPS!!! Seems you forgot to supply the main content!\";"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String EMPTY_TIME_ERROR \u003d FROWN + \" OOPS!!! Seems you forgot to supply the time!\\n\""},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"            + \"Simply add \u0027/by \u003ctime\u003e\u0027 for deadline OR \u0027/at \u003ctime\u003e\u0027 for event behind your command\";"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String INDEX_OUT_OF_BOUND_ERROR \u003d FROWN + \" OOPS!!! Seems the \""},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"            + \"index you provided is not in the list.\";"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String FILE_NOT_FOUND \u003d \"Couldn\u0027t find a save file. You may start adding things from start!\";"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String DIRECTORY_NOT_FOUND \u003d \"Couldn\u0027t find the data directory. Creating one for you...\";"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static final String DATE_FORMAT_ERROR \u003d FROWN + \" OOPS!!! The format for your date is incorrect. \""},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"            + \"Use yyyy-MM-dd format instead\";"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"    public static String emptyDescriptionError(String command) {"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"        return String.format(FROWN + \" OOPS!!! The description of a %s cannot be empty.\", command);"},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":45}},{"path":"src/main/java/duke/ui/PopUpBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulates an interface that represents a customised dialog box."},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"public interface PopUpBox {"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"     * The default width of a dialog box scene."},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"    int DEFAULT_SCENE_WIDTH \u003d 300;"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"     * The default height of a dialog box scene."},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"    int DEFAULT_SCENE_HEIGHT \u003d 200;"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":16}},{"path":"src/main/java/duke/utils/Evaluator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.ui.AlertBox;"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.ui.DataSaver;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.ui.Messenger;"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"import javafx.application.Platform;"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulates an Evaluator class that evaluates the command passed from user."},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"public class Evaluator {"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"    private Storage storage;"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Constructs an Evaluator object that interacts with the command input."},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param storage the storage the evaluator uses to manipulate tasks."},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    public Evaluator(Storage storage) {"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"        this.storage \u003d storage;"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Evaluates the command passed through the input text area."},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param command a string representing the command passed in."},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representing the response from the evaluator."},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String getResponse(String command) {"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"        // initialize utilities"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"        TaskList list \u003d storage.getTaskList();"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (command.equals(\"bye\")) {"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"            DataSaver.save(storage);"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"            if (DataSaver.isQuitting()) {"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"                Platform.exit();"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"            return \"\";"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (command.equals(\"list\")) {"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"            return list.printList();"},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"            String[] actionExtracted \u003d parser.extractAction(command);"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"            String status \u003d actionExtracted[0];"},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"            String body \u003d actionExtracted[1];"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"            switch (status) {"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"            case \"done\":"},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"                return list.markTaskAsDone(Integer.parseInt(body));"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":"            case \"todo\":"},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"                return list.addTask(body, status);"},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":"            case \"delete\":"},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":"                return list.deleteTask(Integer.parseInt(body));"},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":"            case \"find\":"},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":"                return list.findTask(body);"},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":"            default:"},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":"                String[] timeExtracted \u003d parser.extractDate(body);"},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":"                String content \u003d timeExtracted[0];"},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":"                String time \u003d timeExtracted[1];"},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":"                assert time.length() \u003e 0 : \"time must not be empty\";"},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"                return list.addTask(content, status, time);"},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":"            AlertBox.display(\"Index not valid!\", Messenger.INDEX_FORMAT_ERROR);"},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":71,"author":{"gitId":"BobbyZhouZijian"},"content":"            AlertBox.display(\"Duke does not understand!\", Messenger.COMMAND_UNRECOGNIZABLE_ERROR);"},{"lineNumber":72,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (DukeException e) {"},{"lineNumber":73,"author":{"gitId":"BobbyZhouZijian"},"content":"            AlertBox.display(\"Duke runs into a problem!\", e.getMessage());"},{"lineNumber":74,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (Exception e) {"},{"lineNumber":75,"author":{"gitId":"BobbyZhouZijian"},"content":"            AlertBox.display(\"Something went wrong!\", e.toString());"},{"lineNumber":76,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"BobbyZhouZijian"},"content":"        // error in evaluating"},{"lineNumber":78,"author":{"gitId":"BobbyZhouZijian"},"content":"        return Messenger.COMMAND_UNRECOGNIZABLE_ERROR;"},{"lineNumber":79,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":80}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.types.ActionType;"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.types.TaskType;"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.ui.Messenger;"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulate a class that represent a parser to parse the command being passed to"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":" * the program."},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"public class Parser {"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Extracts a line of command into the action and the main body."},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param command the line of command."},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return an array of string [action, main body]."},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @throws DukeException throws a duke exception on empty command or spell error."},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String[] extractAction(String command) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"        // command is empty"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (command.matches(\" *\")) {"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"            throw new DukeException(Messenger.EMPTY_COMMAND_ERROR);"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"        String[] split \u003d command.split(\" \", 2);"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"        String type \u003d split[0];"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"        // command type does not match known command types"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (TaskType.valueOfType(type) \u003d\u003d null \u0026\u0026 ActionType.valueOfType(type) \u003d\u003d null) {"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"            throw new DukeException(Messenger.SPELL_ERROR);"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"        // no description supplied"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"        int len \u003d split.length;"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (len \u003d\u003d 1) {"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"            throw new DukeException(Messenger.emptyDescriptionError(command));"},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"        return split;"},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Extracts the date from the main body."},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param command the main body of the line of command."},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return an array of String [content, date]."},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @throws DukeException throws a duke exception on empty content or time supplied."},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String[] extractDate(String command) throws DukeException {"},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"        String[] split \u003d command.split(\" /by | /at \", 2);"},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":"        // validate if there are two parts"},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (split.length \u003c 2) {"},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":"            String errorMessage \u003d (split[0].charAt(0) \u003d\u003d \u0027/\u0027)"},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":"                    ? Messenger.EMPTY_CONTENT_ERROR"},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":"                    : Messenger.EMPTY_TIME_ERROR;"},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":"            throw new DukeException(errorMessage);"},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"        // validate if time is of the correct format"},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"        String time \u003d split[1];"},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":"        validateFormat(time);"},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":"        return split;"},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":72,"author":{"gitId":"BobbyZhouZijian"},"content":"    private void validateFormat(String value) throws DukeException {"},{"lineNumber":73,"author":{"gitId":"BobbyZhouZijian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":74,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"BobbyZhouZijian"},"content":"            LocalDate ld \u003d LocalDate.parse(value, formatter);"},{"lineNumber":76,"author":{"gitId":"BobbyZhouZijian"},"content":"            String result \u003d ld.format(formatter);"},{"lineNumber":77,"author":{"gitId":"BobbyZhouZijian"},"content":"            if (!result.equals(value)) {"},{"lineNumber":78,"author":{"gitId":"BobbyZhouZijian"},"content":"                throw new DukeException(Messenger.DATE_FORMAT_ERROR);"},{"lineNumber":79,"author":{"gitId":"BobbyZhouZijian"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (DateTimeParseException exp) {"},{"lineNumber":81,"author":{"gitId":"BobbyZhouZijian"},"content":"            throw new DukeException(Messenger.DATE_FORMAT_ERROR);"},{"lineNumber":82,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"BobbyZhouZijian"},"content":"        assert value.split(\"-\").length \u003d\u003d 3 : \"date has the wrong format\";"},{"lineNumber":84,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":85}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.tasks.Task;"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.types.TaskType;"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.ui.AlertBox;"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.ui.Messenger;"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":" * Encapsulates a storage class that takes charge of loading saved files and saving data to file."},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":" */"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    private static final String DIRECTORY_PATH \u003d \"data\";"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"    private static final String FILE_PATH \u003d DIRECTORY_PATH + \"/duke.txt\";"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"    private TaskList taskList;"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Constructs a storage object with a task list."},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @param list a task list for the storage object to populate with data."},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"    public Storage(TaskList list) {"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"        taskList \u003d list;"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Gets the task list of the storage object."},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a TaskList object representing the task list in the storage."},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"    public TaskList getTaskList() {"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"        return taskList;"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Reads the saved file and populate the data into the task list."},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String readSavedFile() {"},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"        String output \u003d \"\";"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"            output +\u003d Messenger.FILE_LOADING + \"\\n\";"},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"            File directory \u003d new File(DIRECTORY_PATH);"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"            if (!directory.exists()) {"},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"                output +\u003d Messenger.DIRECTORY_NOT_FOUND + \"\\n\";"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":"                directory.mkdir();"},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":"            assert directory.exists() : \"directory does not exist\";"},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":"            File f \u003d new File(FILE_PATH);"},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":"            if (f.createNewFile()) {"},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":"                output +\u003d Messenger.FILE_NOT_FOUND + \"\\n\";"},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":"                return output;"},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":"            Scanner sc \u003d new Scanner(f);"},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"                String line \u003d sc.nextLine();"},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":"                String[] parsed \u003d line.split(\"\\\\|\");"},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":"                String command \u003d parsed[0];"},{"lineNumber":71,"author":{"gitId":"BobbyZhouZijian"},"content":"                if (TaskType.hasTime(command)) {"},{"lineNumber":72,"author":{"gitId":"BobbyZhouZijian"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"},{"lineNumber":73,"author":{"gitId":"BobbyZhouZijian"},"content":"                    LocalDate ld \u003d LocalDate.parse(parsed[2], formatter);"},{"lineNumber":74,"author":{"gitId":"BobbyZhouZijian"},"content":"                    taskList.getTasks().add(new Task(parsed[1], command, ld));"},{"lineNumber":75,"author":{"gitId":"BobbyZhouZijian"},"content":"                    continue;"},{"lineNumber":76,"author":{"gitId":"BobbyZhouZijian"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"BobbyZhouZijian"},"content":"                taskList.getTasks().add(new Task(parsed[1], command));"},{"lineNumber":78,"author":{"gitId":"BobbyZhouZijian"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"BobbyZhouZijian"},"content":"            output +\u003d Messenger.FILE_LOADED + \"\\n\";"},{"lineNumber":80,"author":{"gitId":"BobbyZhouZijian"},"content":"            assert f.exists() : \"file does not exist\";"},{"lineNumber":81,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (IOException e) {"},{"lineNumber":82,"author":{"gitId":"BobbyZhouZijian"},"content":"            AlertBox.display(\"IO Error\", e.getMessage());"},{"lineNumber":83,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":85,"author":{"gitId":"BobbyZhouZijian"},"content":"        return output;"},{"lineNumber":86,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":88,"author":{"gitId":"BobbyZhouZijian"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"BobbyZhouZijian"},"content":"     * Saves the data in the task list into a saved file."},{"lineNumber":90,"author":{"gitId":"BobbyZhouZijian"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"BobbyZhouZijian"},"content":"     * @return a string representing the message for saving data to file."},{"lineNumber":92,"author":{"gitId":"BobbyZhouZijian"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"BobbyZhouZijian"},"content":"    public String saveDataToFile() {"},{"lineNumber":94,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"BobbyZhouZijian"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH);"},{"lineNumber":96,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":97,"author":{"gitId":"BobbyZhouZijian"},"content":"            for (Task task : taskList.getTasks()) {"},{"lineNumber":98,"author":{"gitId":"BobbyZhouZijian"},"content":"                writer.write(task.getType() + \"|\" + task.getContent()"},{"lineNumber":99,"author":{"gitId":"BobbyZhouZijian"},"content":"                        + (TaskType.hasTime(task.getType()) ? \"|\" + task.getDate() : \"\") + System.lineSeparator());"},{"lineNumber":100,"author":{"gitId":"BobbyZhouZijian"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"BobbyZhouZijian"},"content":"            writer.close();"},{"lineNumber":102,"author":{"gitId":"BobbyZhouZijian"},"content":"            taskList.clearTasks();"},{"lineNumber":103,"author":{"gitId":"BobbyZhouZijian"},"content":"            assert taskList.getTasks().size() \u003d\u003d 0 : \"task list is not cleared\";"},{"lineNumber":104,"author":{"gitId":"BobbyZhouZijian"},"content":"            return Messenger.CLOSE_MESSAGE;"},{"lineNumber":105,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (IOException e) {"},{"lineNumber":106,"author":{"gitId":"BobbyZhouZijian"},"content":"            String errorTitle \u003d \"IO Error!\";"},{"lineNumber":107,"author":{"gitId":"BobbyZhouZijian"},"content":"            AlertBox.display(errorTitle, e.getMessage());"},{"lineNumber":108,"author":{"gitId":"BobbyZhouZijian"},"content":"            return errorTitle;"},{"lineNumber":109,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":111}},{"path":"src/main/resources/view/App.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.control.ToolBar?\u003e"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.App\"\u003e"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"    \u003cchildren\u003e"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"      \u003cToolBar prefHeight\u003d\"40.0\" prefWidth\u003d\"400.0\"\u003e"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"        \u003citems\u003e"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"            \u003cHBox fx:id\u003d\"titleBox\" prefHeight\u003d\"28.0\" prefWidth\u003d\"326.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"               \u003cchildren\u003e"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"                  \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"30.0\" prefWidth\u003d\"325.0\" text\u003d\"Do Lah\" textAlignment\u003d\"CENTER\"\u003e"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"                     \u003cfont\u003e"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"                        \u003cFont name\u003d\"Brush Script MT Italic\" size\u003d\"22.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"                     \u003c/font\u003e"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"                  \u003c/Label\u003e"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"               \u003c/children\u003e"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"            \u003c/HBox\u003e"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"            \u003cButton fx:id\u003d\"exitButton\" layoutX\u003d\"10.0\" layoutY\u003d\"11.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleSaveFile\" prefHeight\u003d\"27.0\" prefWidth\u003d\"50.0\" text\u003d\"Exit\" /\u003e"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"        \u003c/items\u003e"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"      \u003c/ToolBar\u003e"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"565.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"34.0\" prefWidth\u003d\"337.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"338.0\" layoutY\u003d\"565.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"34.0\" prefWidth\u003d\"61.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"38.0\" opacity\u003d\"0.8\" prefHeight\u003d\"527.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"            \u003ccontent\u003e"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"533.0\" prefWidth\u003d\"397.0\" style\u003d\"-fx-background-image: url(\u0027images/background.jpg\u0027)url(\u0027images/background.jpg\u0027) url(\u0027images/background.jpg\u0027)url(\u0027images/background.jpg\u0027);\" /\u003e"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"            \u003c/content\u003e"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"    \u003c/children\u003e"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"BobbyZhouZijian":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003cfx:root fx:id\u003d\"hBox\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"380.0\" opacity\u003d\"0.95\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"      \u003cHBox fx:id\u003d\"dialogContainer\" alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"95.0\" prefWidth\u003d\"273.0\"\u003e"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"         \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"              \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"1.0\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #7bc6cc; -fx-border-radius: 10 10 10 10; -fx-background-radius: 10 10 10 10;\" text\u003d\"Label\" textFill\u003d\"#5490b9\" wrapText\u003d\"true\"\u003e"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"                  \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"                      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"                  \u003c/padding\u003e"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"                  \u003cHBox.margin\u003e"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"                      \u003cInsets /\u003e"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"                  \u003c/HBox.margin\u003e"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"               \u003cfont\u003e"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"                  \u003cFont name\u003d\"Monaco\" size\u003d\"14.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"               \u003c/font\u003e"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"            \u003c/Label\u003e"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"         \u003c/children\u003e"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"      \u003c/HBox\u003e"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"95.0\" fitWidth\u003d\"95.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"                \u003cInsets /\u003e"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"            \u003c/HBox.margin\u003e\u003c/ImageView\u003e"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    \u003c/children\u003e"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"    \u003cpadding\u003e"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"    \u003c/padding\u003e"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"BobbyZhouZijian":34}},{"path":"src/main/resources/view/Menu.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003cAnchorPane fx:id\u003d\"anchorPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.Menu\"\u003e"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"   \u003cVBox fx:id\u003d\"dukeLogo\" alignment\u003d\"CENTER\" layoutX\u003d\"17.0\" layoutY\u003d\"11.0\" prefHeight\u003d\"273.0\" prefWidth\u003d\"569.0\"\u003e"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"      \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"         \u003cLabel fx:id\u003d\"logoName\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Label\" textFill\u003d\"#68656f\"\u003e"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"            \u003cfont\u003e"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"               \u003cFont name\u003d\"Trebuchet MS\" size\u003d\"24.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"            \u003c/font\u003e"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"         \u003c/Label\u003e"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"      \u003c/children\u003e\u003c/VBox\u003e"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"   \u003cButton fx:id\u003d\"startButton\" layoutX\u003d\"208.0\" layoutY\u003d\"297.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#switchToMain\" prefHeight\u003d\"27.0\" prefWidth\u003d\"186.0\" text\u003d\"Start DoLah\" textFill\u003d\"#611717\" textOverrun\u003d\"CENTER_ELLIPSIS\" /\u003e"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"BobbyZhouZijian":19}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"class TaskListTest {"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"    private static final char FROWN \u003d \u0027\\u2639\u0027;"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"    private static final char CROSS \u003d \u0027\\u2717\u0027;"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"    void getTasks() {"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"        list.addTask(\"test content\", \"todo\");"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(\"[T][\" + CROSS + \"] test content\", list.getTasks().get(0).toString());"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"    void printList() {"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"        list.addTask(\"test content1\", \"todo\");"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"        list.addTask(\"test content2\", \"deadline\", \"2020-08-23\");"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"        String actual \u003d list.printList();"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"        String expectedOut \u003d"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"                \"Here are the tasks in your list:\\n\" +"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"                \"1.[T][\" + CROSS + \"] test content1\\n\" +"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"                \"2.[D][\" + CROSS + \"] test content2 (by: Aug 23 2020)\\n\";"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(expectedOut, actual);"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"    void markTaskAsDone() {"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"        list.addTask(\"test content1\", \"todo\");"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"        list.markTaskAsDone(1);"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertTrue(list.getTasks().get(0).isCompleted());"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"    void addTask() {"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"        String actual \u003d \"\";"},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"        actual +\u003d list.addTask(\"test content1\", \"todo\");"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"        actual +\u003d list.addTask(\"test content2\", \"deadline\", \"2020-08-23\");"},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"        String expectedOut \u003d \"Got it. I\u0027ve added this task:\\n\" +"},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"                \"    [T][\" + CROSS + \"] test content1\\n\" +"},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"                \"Now you have 1 task in the list.\\n\" +"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"                \"Got it. I\u0027ve added this task:\\n\" +"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"                \"    [D][\" + CROSS + \"] test content2 (by: Aug 23 2020)\\n\" +"},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"                \"Now you have 2 tasks in the list.\\n\";"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(expectedOut, actual);"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(2, list.getTasks().size());"},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":"    void deleteTask() {"},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":"        list.addTask(\"test content1\", \"todo\");"},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":"        list.addTask(\"test content2\", \"deadline\", \"2020-08-23\");"},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":"            String actual \u003d list.deleteTask(1);"},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":"            String expected \u003d \"Noted. I\u0027ve removed this task:\\n\" +"},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":"                    \"    [T][\" + CROSS + \"] test content1\\n\" +"},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":"                    \"Now you have 1 task in the list.\\n\";"},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"            assertEquals(expected, actual);"},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (DukeException e) {"},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":"            fail();"},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":72,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"BobbyZhouZijian"},"content":"    void deleteTask_invalidIndex_exceptionThrown() {"},{"lineNumber":74,"author":{"gitId":"BobbyZhouZijian"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":75,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"BobbyZhouZijian"},"content":"            list.deleteTask(1);"},{"lineNumber":77,"author":{"gitId":"BobbyZhouZijian"},"content":"            fail();"},{"lineNumber":78,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (DukeException e) {"},{"lineNumber":79,"author":{"gitId":"BobbyZhouZijian"},"content":"            assertEquals(FROWN + \" OOPS!!! Seems the index you provided is not in the list.\", e.getMessage());"},{"lineNumber":80,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":83,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":84,"author":{"gitId":"BobbyZhouZijian"},"content":"    void findTask() {"},{"lineNumber":85,"author":{"gitId":"BobbyZhouZijian"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":86,"author":{"gitId":"BobbyZhouZijian"},"content":"        list.addTask(\"test content1\", \"todo\");"},{"lineNumber":87,"author":{"gitId":"BobbyZhouZijian"},"content":"        list.addTask(\"test content2\", \"deadline\", \"2020-08-23\");"},{"lineNumber":88,"author":{"gitId":"BobbyZhouZijian"},"content":"        list.addTask(\"test content2\", \"deadline\", \"2020-08-25\");"},{"lineNumber":89,"author":{"gitId":"BobbyZhouZijian"},"content":"        list.addTask(\"test content3\", \"deadline\", \"2020-08-28\");"},{"lineNumber":90,"author":{"gitId":"BobbyZhouZijian"},"content":"        list.addTask(\"test\", \"deadline\", \"2020-08-30\");"},{"lineNumber":91,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":92,"author":{"gitId":"BobbyZhouZijian"},"content":"        String actual \u003d list.findTask(\"content2\");"},{"lineNumber":93,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":94,"author":{"gitId":"BobbyZhouZijian"},"content":"        String expected \u003d \"Here are the matching tasks in your list:\\n\""},{"lineNumber":95,"author":{"gitId":"BobbyZhouZijian"},"content":"                + \"1.[T][\" + CROSS + \"] test content1\\n\""},{"lineNumber":96,"author":{"gitId":"BobbyZhouZijian"},"content":"                + \"2.[D][\" + CROSS + \"] test content2 (by: Aug 23 2020)\\n\""},{"lineNumber":97,"author":{"gitId":"BobbyZhouZijian"},"content":"                + \"3.[D][\" + CROSS + \"] test content2 (by: Aug 25 2020)\\n\""},{"lineNumber":98,"author":{"gitId":"BobbyZhouZijian"},"content":"                + \"4.[D][\" + CROSS + \"] test content3 (by: Aug 28 2020)\\n\";"},{"lineNumber":99,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(expected, actual);"},{"lineNumber":100,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":101}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"class TaskTest {"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"    private static final char CROSS \u003d \u0027\\u2717\u0027;"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"    private static final char TICK \u003d \u0027\\u2713\u0027;"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"    void getContent() {"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"        Task task \u003d new Task(\"test content\", \"todo\");"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(task.getContent(), \"test content\");"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"    void isCompleted() {"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"        Task task \u003d new Task(\"test content\", \"todo\");"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"        task.markAsDone();"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertTrue(task.isCompleted());"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"    void getStatus() {"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"        Task task \u003d new Task(\"test content\", \"todo\");"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(task.getType(), \"todo\");"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"    void markAsDone() {"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"        Task task \u003d new Task(\"test content\", \"todo\");"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"        task.markAsDone();"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertTrue(task.isCompleted());"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"    void getTime() {"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"        Task task \u003d new Task(\"test content\", \"deadline\", \"2020-08-23\");"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(task.getDate(), \"Aug 23 2020\");"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"    void testToString() {"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"        Task task \u003d new Task(\"test content\", \"deadline\", \"2020-08-23\");"},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(task.toString(), \"[D][\" + CROSS + \"] test content (by: Aug 23 2020)\");"},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"        task.markAsDone();"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(task.toString(), \"[D][\" + TICK + \"] test content (by: Aug 23 2020)\");"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":51}},{"path":"src/test/java/duke/types/ActionTypeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.types;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"class ActionTypeTest {"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"    void valueOfDeleteType() {"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"        ActionType todoType \u003d ActionType.valueOfType(\"delete\");"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(ActionType.DELETE, todoType);"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"    void valueOfDoneType() {"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"       ActionType doneType \u003d ActionType.valueOfType(\"done\");"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(ActionType.DONE, doneType);"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"   }"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"    void valueOfFindType() {"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"        ActionType findType \u003d ActionType.valueOfType(\"find\");"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(ActionType.FIND, findType);"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":26}},{"path":"src/test/java/duke/types/TaskTypeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.types;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import org.junit.jupiter.api.BeforeAll;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"class TaskTypeTest {"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"    private static TaskType deadlineType;"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"    private static TaskType eventType;"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"    private static TaskType todoType;"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"    @BeforeAll"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"    static void setUp() {"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"        deadlineType \u003d TaskType.DEADLINE;"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"        eventType \u003d TaskType.EVENT;"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"        todoType \u003d TaskType.TODO;"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"    void getType() {"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"        String[] expectedArr \u003d {deadlineType.getType(),"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"                eventType.getType(),"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"                todoType.getType()};"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"        String[] actualArr \u003d {\"deadline\", \"event\", \"todo\"};"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertArrayEquals(expectedArr, actualArr);"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    void hasTime() {"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertTrue(TaskType.hasTime(\"deadline\"));"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertTrue(TaskType.hasTime(\"event\"));"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertFalse(TaskType.hasTime(\"todo\"));"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"    void valueOfDeadlineType() {"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"        TaskType deadlineType \u003d TaskType.valueOfType(\"deadline\");"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(TaskType.DEADLINE, deadlineType);"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"    void valueOfEventType() {"},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"        TaskType deadlineType \u003d TaskType.valueOfType(\"event\");"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(TaskType.EVENT, deadlineType);"},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"    void valueOfTodoType() {"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"        TaskType deadlineType \u003d TaskType.valueOfType(\"todo\");"},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(TaskType.TODO, deadlineType);"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":53}},{"path":"src/test/java/duke/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"class ParserTest {"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"    private static final char FROWN \u003d \u0027\\u2639\u0027;"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"    Parser parser \u003d new Parser();"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"    void extractAction() {"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":"            String commandLine1 \u003d \"todo borrow book\";"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"            String[] split \u003d parser.extractAction(commandLine1);"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"            assertEquals(\"todo\", split[0]);"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":"            assertEquals(\"borrow book\", split[1]);"},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (DukeException e) {"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"            fail();"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"    void extractAction_emptyCommand_exceptionThrown() {"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"            String commandLine \u003d \"\";"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"            parser.extractAction(commandLine);"},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"            fail();"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (DukeException e) {"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"            assertEquals(FROWN + \" OOPS!!! The command cannot be empty!\", e.getMessage());"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"    void extractAction_wrongSpelling_exceptionThrown() {"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"            String command \u003d \"top up\";"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"            parser.extractAction(command);"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"            fail();"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (DukeException e) {"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"            assertEquals(FROWN + \" OOPS!!! Check if you have spelled correctly!\", e.getMessage());"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"    void extractTime() {"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"            String command \u003d \"return book /by 2020-08-23\";"},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"            String[] split \u003d parser.extractDate(command);"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"            assertEquals(\"return book\", split[0]);"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"            assertEquals(\"2020-08-23\", split[1]);"},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (DukeException e) {"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":"            fail();"},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":"    void extractTime_timeNotGiven_exceptionThrown() {"},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":"            String command \u003d \"return book\";"},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":"            parser.extractDate(command);"},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":"            fail();"},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (DukeException e) {"},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"            assertEquals(e.getMessage(), FROWN + \" OOPS!!! Seems you forgot to supply the time!\\n\" +"},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"                    \"Simply add \u0027/by \u003ctime\u003e\u0027 for deadline OR \u0027/at \u003ctime\u003e\u0027 for event behind your command\");"},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":71,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":72,"author":{"gitId":"BobbyZhouZijian"},"content":"    void extractTime_contentNotGiven_exceptionThrown() {"},{"lineNumber":73,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"BobbyZhouZijian"},"content":"            String command \u003d \"/by 2020-08-23\";"},{"lineNumber":75,"author":{"gitId":"BobbyZhouZijian"},"content":"            parser.extractDate(command);"},{"lineNumber":76,"author":{"gitId":"BobbyZhouZijian"},"content":"            fail();"},{"lineNumber":77,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (DukeException e) {"},{"lineNumber":78,"author":{"gitId":"BobbyZhouZijian"},"content":"            assertEquals(FROWN + \" OOPS!!! Seems you forgot to supply the main content!\", e.getMessage());"},{"lineNumber":79,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":82,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":83,"author":{"gitId":"BobbyZhouZijian"},"content":"    void extractTime_wrongDateFormat_exceptionThrown() {"},{"lineNumber":84,"author":{"gitId":"BobbyZhouZijian"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"BobbyZhouZijian"},"content":"            String command \u003d \"return book /by tomorrow\";"},{"lineNumber":86,"author":{"gitId":"BobbyZhouZijian"},"content":"            parser.extractDate(command);"},{"lineNumber":87,"author":{"gitId":"BobbyZhouZijian"},"content":"            fail();"},{"lineNumber":88,"author":{"gitId":"BobbyZhouZijian"},"content":"        } catch (DukeException e) {"},{"lineNumber":89,"author":{"gitId":"BobbyZhouZijian"},"content":"            assertEquals(FROWN + \" OOPS!!! The format for your date is incorrect.\""},{"lineNumber":90,"author":{"gitId":"BobbyZhouZijian"},"content":"                    + \" Use yyyy-MM-dd format instead\", e.getMessage());"},{"lineNumber":91,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":93}},{"path":"src/test/java/duke/utils/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"import duke.ui.Messenger;"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"import java.nio.file.Files;"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"class StorageTest {"},{"lineNumber":15,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"    TaskList list \u003d new TaskList();"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"    Storage storage \u003d new Storage(list);"},{"lineNumber":18,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":19,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"BobbyZhouZijian"},"content":"    void readSavedFile() throws IOException {"},{"lineNumber":21,"author":{"gitId":"BobbyZhouZijian"},"content":"        makeBackup();"},{"lineNumber":22,"author":{"gitId":"BobbyZhouZijian"},"content":"        String actual \u003d storage.readSavedFile();"},{"lineNumber":23,"author":{"gitId":"BobbyZhouZijian"},"content":"        String expected \u003d \"Hold a while, trying to retrieve where you were last time...\\n\""},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"                + \"Great! We have successfully loaded the data. Enjoy~\\n\";"},{"lineNumber":25,"author":{"gitId":"BobbyZhouZijian"},"content":"        recover();"},{"lineNumber":26,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(expected, actual);"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":29,"author":{"gitId":"BobbyZhouZijian"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"    void saveDataToFile() throws IOException {"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"        makeBackup();"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"        String actual \u003d storage.saveDataToFile();"},{"lineNumber":33,"author":{"gitId":"BobbyZhouZijian"},"content":"        String expected \u003d \"Content Saved! Hope to see you again soon!\";"},{"lineNumber":34,"author":{"gitId":"BobbyZhouZijian"},"content":"        assertEquals(expected, actual);"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"        recover();"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":38,"author":{"gitId":"BobbyZhouZijian"},"content":"    private void makeBackup() throws IOException {"},{"lineNumber":39,"author":{"gitId":"BobbyZhouZijian"},"content":"        File directory \u003d new File(\"data\");"},{"lineNumber":40,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (!directory.exists()) {"},{"lineNumber":41,"author":{"gitId":"BobbyZhouZijian"},"content":"            directory.mkdir();"},{"lineNumber":42,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"BobbyZhouZijian"},"content":"        File f \u003d new File(\"data/duke.txt\");"},{"lineNumber":44,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (!f.createNewFile()) {"},{"lineNumber":45,"author":{"gitId":"BobbyZhouZijian"},"content":"            return;"},{"lineNumber":46,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"BobbyZhouZijian"},"content":"        File dest \u003d new File(\"data/duke.bak\");"},{"lineNumber":48,"author":{"gitId":"BobbyZhouZijian"},"content":"        File test \u003d new File(\"src/test/java/duke/utils/duke-test.txt\");"},{"lineNumber":49,"author":{"gitId":"BobbyZhouZijian"},"content":"        dest.exists();"},{"lineNumber":50,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (f.exists()) {"},{"lineNumber":51,"author":{"gitId":"BobbyZhouZijian"},"content":"            Files.copy(f.toPath(), dest.toPath());"},{"lineNumber":52,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (f.delete()) {"},{"lineNumber":54,"author":{"gitId":"BobbyZhouZijian"},"content":"            Files.copy(test.toPath(), f.toPath());"},{"lineNumber":55,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"BobbyZhouZijian"},"content":""},{"lineNumber":58,"author":{"gitId":"BobbyZhouZijian"},"content":"    private void recover() throws IOException {"},{"lineNumber":59,"author":{"gitId":"BobbyZhouZijian"},"content":"        File dest \u003d new File(\"data/duke.bak\");"},{"lineNumber":60,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (!dest.exists()) {"},{"lineNumber":61,"author":{"gitId":"BobbyZhouZijian"},"content":"            // if cannot find back up, then give up recover"},{"lineNumber":62,"author":{"gitId":"BobbyZhouZijian"},"content":"            return;"},{"lineNumber":63,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"BobbyZhouZijian"},"content":"        File f \u003d new File(\"data/duke.txt\");"},{"lineNumber":65,"author":{"gitId":"BobbyZhouZijian"},"content":"        if (f.delete()) {"},{"lineNumber":66,"author":{"gitId":"BobbyZhouZijian"},"content":"            Files.copy(dest.toPath(), f.toPath());"},{"lineNumber":67,"author":{"gitId":"BobbyZhouZijian"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"BobbyZhouZijian"},"content":"        dest.delete();"},{"lineNumber":69,"author":{"gitId":"BobbyZhouZijian"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"BobbyZhouZijian"},"content":"}"}],"authorContributionMap":{"BobbyZhouZijian":70}},{"path":"src/test/java/duke/utils/duke-test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"todo|borrow book"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":"deadline|return book|Aug 23 2020"}],"authorContributionMap":{"BobbyZhouZijian":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BobbyZhouZijian"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"BobbyZhouZijian"},"content":"deadline return book /by 2020-08-23"},{"lineNumber":3,"author":{"gitId":"BobbyZhouZijian"},"content":"event project meeting /at 2020-08-25"},{"lineNumber":4,"author":{"gitId":"BobbyZhouZijian"},"content":"list"},{"lineNumber":5,"author":{"gitId":"BobbyZhouZijian"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"BobbyZhouZijian"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"BobbyZhouZijian"},"content":"list"},{"lineNumber":8,"author":{"gitId":"BobbyZhouZijian"},"content":"delete 1"},{"lineNumber":9,"author":{"gitId":"BobbyZhouZijian"},"content":"list"},{"lineNumber":10,"author":{"gitId":"BobbyZhouZijian"},"content":"delete"},{"lineNumber":11,"author":{"gitId":"BobbyZhouZijian"},"content":"even"},{"lineNumber":12,"author":{"gitId":"BobbyZhouZijian"},"content":"delete a"},{"lineNumber":13,"author":{"gitId":"BobbyZhouZijian"},"content":"deadline return book"},{"lineNumber":14,"author":{"gitId":"BobbyZhouZijian"},"content":"bye"}],"authorContributionMap":{"BobbyZhouZijian":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"BobbyZhouZijian"},"content":"find ../src/main/java/duke -name \"*.java\" \u003e sources.txt"},{"lineNumber":17,"author":{"gitId":"BobbyZhouZijian"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin @sources.txt"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"BobbyZhouZijian"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":27,"author":{"gitId":"BobbyZhouZijian"},"content":"# cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"BobbyZhouZijian"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"BobbyZhouZijian"},"content":"# remove unecessary files"},{"lineNumber":31,"author":{"gitId":"BobbyZhouZijian"},"content":"rm sources.txt"},{"lineNumber":32,"author":{"gitId":"BobbyZhouZijian"},"content":"rm -r data"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":35,"author":{"gitId":"BobbyZhouZijian"},"content":"# diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":36,"author":{"gitId":"BobbyZhouZijian"},"content":"diff ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"BobbyZhouZijian":10,"-":34}}]
