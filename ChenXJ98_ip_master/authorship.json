[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": " * Duke class that contains the main logic for the chat bot DUKE."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public static String lineDivider \u003d \"------------------------------------------\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * Echos the message that the user put."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * @param message  A String message that user wants the chat bot to echo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public static void echo(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        System.out.println(lineDivider);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        System.out.println(lineDivider + \"\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        echo(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * Arrange list of task into a more readable format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * @param list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * @return A more readable String that represents the contents in the task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public static String showList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        StringBuffer lst \u003d new StringBuffer();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        lst.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        int listSize \u003d list.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        for (int i \u003d 0; i \u003c listSize; i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            if (i + 1 !\u003d listSize) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                lst.append((i + 1) + \". \" + list.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                lst.append((i + 1) + \". \" + list.get(i).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return lst.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * Check if an integer is represented in the String"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * @param s  String input"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * @return   True or False"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public static boolean isInt(String s) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            int num \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            // is an integer!"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            // not an integer!"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * Main logic for the chat bot"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * @param args User input"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        // Arraylist used to store all tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            String msg \u003d sc.nextLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (msg.equals(\"bye\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    echo(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (msg.equals(\"list\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    echo(showList(list));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String[] msgArray \u003d msg.split(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String taskS \u003d \" task \";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (msgArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    if ((msgArray.length !\u003d 2) || (!isInt(msgArray[1]))) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        throw new InvalidDoneInputException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    int index \u003d Integer.parseInt(msgArray[1]) - 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    if (index \u003c 0 || index \u003e\u003d list.size()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        throw new InvalidDoneInputException();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        list.get(index).markAsDone();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        echo(\"Nice! I\u0027ve marked this task as done:\\n\" + list.get(index).toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (msgArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    if ((msgArray.length !\u003d 2) || (!isInt(msgArray[1]))) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        throw new InvalidDeleteInputException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    int index \u003d Integer.parseInt(msgArray[1]) - 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    if (index \u003c 0 || index \u003e\u003d list.size()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        throw new InvalidDeleteInputException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        String taskInfo \u003d list.get(index).toString();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        list.remove(index);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        if (list.size() \u003c 2) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                            taskS \u003d \" task \";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        echo(\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + taskInfo"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + \"\\nNow you have \""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + list.size()"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + taskS"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + \"in the list.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (msgArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    if (msgArray.length \u003c 2) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        throw new InvalidTodoInputException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        String todoTask \u003d msg.substring(5);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        ToDo todo \u003d new ToDo(todoTask);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        list.add(todo);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        if (list.size() \u003e 1) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                            taskS \u003d \" tasks \";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        echo(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + todo.toString()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + \"\\nNow you have \""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + list.size()"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + taskS"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + \"in the list.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (msgArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    if (msgArray.length \u003c 2) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        throw new NullDeadlineInputException();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    String deadlineTask \u003d msg.substring(9);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    String[] deadlineTaskArray \u003d deadlineTask.split(\" /by \");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    if (deadlineTaskArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        throw new InvalidDeadlineInputException();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        Deadline deadline \u003d new Deadline(deadlineTaskArray[0], deadlineTaskArray[1]);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        list.add(deadline);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        if (list.size() \u003e 1) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                            taskS \u003d \" tasks \";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        echo(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + deadline.toString()"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + \"\\nNow you have \""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + list.size()"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + taskS"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + \"in the list.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (msgArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    if (msgArray.length \u003c 2) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        throw new NullEventInputException();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    String eventTask \u003d msg.substring(6);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    String[] eventTaskArray \u003d eventTask.split(\" /at \");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    if (eventTaskArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        throw new InvalidEventInputException();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        Event event \u003d new Event(eventTaskArray[0], eventTaskArray[1]);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        list.add(event);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        if (list.size() \u003e 1) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                            taskS \u003d \" tasks \";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                        echo(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + event.toString()"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + \"\\nNow you have \""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + list.size()"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + taskS"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                                + \"in the list.\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                throw new InvalidInputException();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                echo(e.getMessage());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 197,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public DukeException(String err) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 14
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidDeadlineInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidDeadlineInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! Invalid input after deadline command. (Example input: deadline return book /by Sunday)\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/InvalidDeleteInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidDeleteInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidDeleteInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! Invalid input after delete command. Keep index within list range. (Example format: delete 1)\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/InvalidDoneInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidDoneInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidDoneInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! Invalid input after done command. Keep index within list range. (Example format: done 1)\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/InvalidEventInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidEventInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidEventInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! Invalid input after event command. (Example input: event project meeting /at Mon 2-4pm)\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/InvalidTodoInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidTodoInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidTodoInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/NullDeadlineInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class NullDeadlineInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public NullDeadlineInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/NullEventInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class NullEventInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public NullEventInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return (isDone ? \"Y\" : \"X\"); //return tick or cross symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return \u0027[\u0027 + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 23
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "todo task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "todo task2"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "deadline task3 /by Sunday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "event task4 /at Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "asdg"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 1,
      "-": 37
    }
  }
]
