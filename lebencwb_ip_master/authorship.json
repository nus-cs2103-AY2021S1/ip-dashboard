[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lebencwb": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        String horizontalLine \u003d \"\\t-------------------------------------------------------\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        String errorPrefix \u003d \"\\t\\u2639\" + \" OOPS!!! \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\\n\" + \"\\t\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "            System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "            String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "            if (userInput.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                scanner.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "            if (userInput.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                int index \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                for (Task task : list) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    System.out.println(\"\\t\" + index++ + \". \" + task.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    System.out.println(\"\\tYou have no tasks in your list :)\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                Scanner scanner2 \u003d new Scanner(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                String cmd \u003d scanner2.next();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                if (cmd.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    int index \u003d scanner2.nextInt();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        Task task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\tNice! I\u0027ve marked this as done:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\t  \" + task.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(errorPrefix + \"Sorry, that is not a valid task.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                else if (cmd.equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    int index \u003d scanner2.nextInt();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\t\" + list.remove(index - 1).toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\tNow you have \" + list.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(errorPrefix + \"Sorry, that is not a valid task.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                else if (cmd.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    if (!scanner2.hasNext()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(errorPrefix"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                                + \"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        ToDo todo \u003d new ToDo(scanner2.nextLine());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        list.add(todo);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\t  \" + todo.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\tNow you have \" + list.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                else if (cmd.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    if (!scanner2.hasNext()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(errorPrefix"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                                + \"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        scanner2.useDelimiter(\"( /by )\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        String description \u003d scanner2.next();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        scanner2.reset();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        scanner2.next();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        String by \u003d scanner2.nextLine().trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        list.add(deadline);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\t  \" + deadline.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\tNow you have \" + list.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                else if (cmd.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    if (!scanner2.hasNext()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(errorPrefix"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                                + \"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        scanner2.useDelimiter(\"( /at )\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        String description \u003d scanner2.next();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        scanner2.reset();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        scanner2.next();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        String at \u003d scanner2.nextLine().trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        list.add(event);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\t  \" + event.toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                        System.out.println(\"\\tNow you have \" + list.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                    System.out.println(errorPrefix"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                            + \"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "            System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "lebencwb": 107
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lebencwb": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lebencwb": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lebencwb"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lebencwb": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lebencwb": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lebencwb"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "lebencwb": 1
    }
  }
]
