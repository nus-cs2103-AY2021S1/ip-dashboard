[
  {
    "path": "src/main/java/Chatbot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "public class Chatbot {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public static void chat() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        String start \u003d \"Hello! I\u0027m Duke \\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        System.out.println(start);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            Scanner scan \u003d new Scanner(line);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            String in \u003d scan.next();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            if (in.equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            } else if (in.equals(\"list\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                for (int j \u003d 1; j \u003c\u003d arr.size(); j++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                    String output \u003d j + \". \" + arr.get(j - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                    System.out.println(output);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            } else if (in.equals(\"done\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                int ind \u003d scan.nextInt() - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                arr.get(ind).markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(arr.get(ind));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            } else if (in.equals(\"delete\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                int ind \u003d scan.nextInt() - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(arr.get(ind));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                arr.remove(ind);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            } else if (in.equals(\"todo\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                if (!scan.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                String desc \u003d scan.nextLine().substring(1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                Todo curr \u003d new Todo(desc);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(curr);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                arr.add(curr);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            } else if (in.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                if (!scan.hasNext()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                String desc \u003d scan.next();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                String dead;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                String word \u003d scan.next();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                while (word.indexOf(\u0027/\u0027) \u003c 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                    desc +\u003d \" \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                    desc +\u003d word;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                    word \u003d scan.next();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                dead \u003d (scan.nextLine()).substring(1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                Deadline curr \u003d new Deadline(desc, dead);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(curr);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                arr.add(curr);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            } else if (in.equals(\"event\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                if (!scan.hasNext()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                String desc \u003d scan.next();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                String time;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                String word \u003d scan.next();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                while (word.indexOf(\u0027/\u0027) \u003c 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                    desc +\u003d \" \";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                    desc +\u003d word;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                    word \u003d scan.next();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                time \u003d (scan.nextLine()).substring(1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                Event curr \u003d new Event(desc, time);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(curr);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                arr.add(curr);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jordanyoong": 88
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jordanyoong": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        Chatbot bot \u003d new Chatbot();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            bot.chat();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "            System.out.println(ex);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jordanyoong": 6,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jordanyoong": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jordanyoong": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jordanyoong": 21
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jordanyoong": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "jordanyoong": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\jorda\\CS2103\\ip"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "java -classpath \"%MY_PATH%\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jordanyoong"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT\""
      }
    ],
    "authorContributionMap": {
      "jordanyoong": 6,
      "-": 17
    }
  }
]
