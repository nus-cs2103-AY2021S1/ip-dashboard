[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import exceptions.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static ResourceBundle strings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static void initializeDuke() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        // read the appropriate string resources"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        strings \u003d ResourceBundle.getBundle(\"resources.StringsBundle\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static void printWithDecoration(Object object) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        String lineDecoration \u003d \"\\t\" + \"_\".repeat(60);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        System.out.println(lineDecoration);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        System.out.println(\"\\t\" + object);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        System.out.println(lineDecoration);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static HashMap\u003cString, String\u003e parseParameters(String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        HashMap\u003cString, String\u003e parameters \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        if (input.equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return parameters;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        List\u003cString\u003e split \u003d Arrays.asList(input.split(\"/\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        parameters.put(\"argument\", split.get(0).strip());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        for (String pair : split.subList(1, split.size())) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            String key \u003d pair.split(\" \")[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            parameters.put(key, pair.replace(key, \"\").strip());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return parameters;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        initializeDuke();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        printWithDecoration(strings.getString(\"output.greeting\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        String input, inputMainCommand \u003d \"\", output;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        HashMap\u003cString, String\u003e parameters;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        while (!inputMainCommand.equals(strings.getString(\"command.bye\"))) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            inputMainCommand \u003d input.split(\" \")[0].strip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            parameters \u003d parseParameters(input.replace(inputMainCommand, \"\").strip());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                output \u003d Command.createCommand(inputMainCommand)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                        .execute(parameters, tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                printWithDecoration(output);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                printWithDecoration(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 67,
      "-": 4
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import exceptions.DukeInvalidParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import exceptions.DukeUnrecognisedCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    LIST {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters, ArrayList\u003cTask\u003e tasks) throws DukeInvalidParameterException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (!parameters.isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.list\"), parameters);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return IntStream.range(0, tasks.size())"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .mapToObj(index -\u003e (index + 1) + \". \" + tasks.get(index) + \"\\t\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .reduce(\"\", (x, y) -\u003e x + y)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .strip();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    DONE {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters, ArrayList\u003cTask\u003e tasks) throws DukeInvalidParameterException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (!parameters.containsKey(\"argument\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.done\"), parameters);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                int toMark \u003d Integer.parseInt(parameters.get(\"argument\")) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                tasks.get(toMark).markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                return String.format(strings.getString(\"output.done\"), tasks.get(toMark)).strip();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.doneNum\"), parameters);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.doneOut\"), parameters);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters, ArrayList\u003cTask\u003e tasks) throws DukeInvalidParameterException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (parameters.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.todo\"), parameters);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (parameters.size() \u003e 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.todoExtra\"), parameters);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            Task toAdd \u003d new Todo(parameters.get(\"argument\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            tasks.add(toAdd);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return String.format(strings.getString(\"output.added\"), toAdd, tasks.size());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters, ArrayList\u003cTask\u003e tasks) throws DukeInvalidParameterException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (parameters.isEmpty() || !parameters.containsKey(strings.getString(\"parameter.by\"))) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.deadline\"), parameters);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            Task toAdd \u003d new Deadline(parameters.get(\"argument\"), parameters.get(strings.getString(\"parameter.by\")));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            tasks.add(toAdd);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return String.format(strings.getString(\"output.added\"), toAdd, tasks.size());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters, ArrayList\u003cTask\u003e tasks) throws DukeInvalidParameterException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (parameters.isEmpty() || !parameters.containsKey(strings.getString(\"parameter.at\"))) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.event\"), parameters);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            Task toAdd \u003d new Event(parameters.get(\"argument\"), parameters.get(strings.getString(\"parameter.at\")));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            tasks.add(toAdd);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return String.format(strings.getString(\"output.added\"), toAdd, tasks.size());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    DELETE {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters, ArrayList\u003cTask\u003e tasks) throws DukeInvalidParameterException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (!parameters.containsKey(\"argument\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.delete\"), parameters);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                int toDelete \u003d Integer.parseInt(parameters.get(\"argument\")) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                return String.format(strings.getString(\"output.delete\"), tasks.remove(toDelete), tasks.size()).strip();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.deleteNum\"), parameters);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.deleteOut\"), parameters);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    BYE {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return strings.getString(\"output.bye\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static final ResourceBundle strings \u003d ResourceBundle.getBundle(\"resources.StringsBundle\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public static Command createCommand(String command) throws DukeUnrecognisedCommandException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Command ret;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        if (command.equals(strings.getString(\"command.list\"))) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d LIST;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.done\"))) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d DONE;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.todo\"))) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d TODO;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.deadline\"))) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d DEADLINE;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.event\"))) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d EVENT;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.delete\"))) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d DELETE;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.bye\"))) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d BYE;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            throw new DukeUnrecognisedCommandException(\"Cannot Recognise Command \", command);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public abstract String execute(HashMap\u003cString, String\u003e parameters, ArrayList\u003cTask\u003e tasks) throws DukeInvalidParameterException;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 138
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 9
    }
  },
  {
    "path": "src/main/java/exceptions/DukeInvalidParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class DukeInvalidParameterException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private final HashMap\u003cString, String\u003e parameters;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public DukeInvalidParameterException(String message, HashMap\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.parameters \u003d parameters;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return super.getMessage() + \" Parameters supplied: \" + parameters;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 18
    }
  },
  {
    "path": "src/main/java/exceptions/DukeUnrecognisedCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class DukeUnrecognisedCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public DukeUnrecognisedCommandException(String message, String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return super.getMessage() + command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 16
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\" + \"\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 16
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\" + \"\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 15
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 25
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return \"[T]\" + super.toString() + \"\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "todo test 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "deadline test 2 /by 8th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "event test 3 /at 9th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "REM move resources into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "rmdir ..\\bin\\resources\\ /s /q"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "xcopy /s ..\\src\\main\\java\\resources ..\\bin\\resources\\"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\tasks\\*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\commands\\*.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\exceptions\\*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 10,
      "-": 20
    }
  }
]
