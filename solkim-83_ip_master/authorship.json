[
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public ByeCommand(Category category, String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(category);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if(description !\u003d null){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    \"☹ OOPS!!! Invalid input. Try again!\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    +\"-------------------------------------------\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 11
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    private Category category;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Command(Category category) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Command(Category category, String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Category getCategory() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return this.category;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "   protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    String[] stringSegments \u003d description.split(\"/by\", 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + stringSegments[0] + \" (by: \" + stringSegments[1] + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 15
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public DeadlineCommand(Category category, String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(category, description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if(description \u003d\u003d null) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                                \"☹ OOPS!!! The description of a deadline cannot be empty. Try again!\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                                +\"-------------------------------------------\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 11
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public DeleteCommand(Category category, String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(category, description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if(description \u003d\u003d null) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    \"☹ OOPS!!! Not sure which task is to be deleted. Try again!\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    +\"-------------------------------------------\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 11
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    //constructor function - constructs an object"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public DoneCommand(Category category, String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(category, description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            if(description \u003d\u003d null) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                throw new IllegalArgumentException(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                        \"☹ OOPS!!! Not sure which task is to be indicated as done. Try again!\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                        +\"-------------------------------------------\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "solkim-83": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.CharArrayReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "enum Category {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    TODO, DEADLINE, EVENT, LIST, BYE, DONE, DELETE"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    //2/ valid or invalid"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    //todo read book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    //deadline read book /by 6pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static Command decideCategory(String input) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String[] wordsArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String categoryWord \u003d wordsArray[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String description \u003d wordsArray.length \u003d\u003d 2 ? wordsArray[1] : null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            switch (categoryWord) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    return new TodoCommand(Category.TODO, description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    return new DeadlineCommand(Category.DEADLINE, description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    return new EventCommand(Category.EVENT, description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    return new DoneCommand(Category.DONE, description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    return new DeleteCommand(Category.DELETE, description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    return new ListCommand(Category.LIST, description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    return new ByeCommand(Category.BYE, description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    throw new IllegalArgumentException(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                            \"☹ OOPS!!! Invalid input. Try again!\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                            + \"-------------------------------------------\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static void processCommand(Command command, TaskList taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        switch (command.getCategory()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                               \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                Todo newTask \u003d new Todo(command.getDescription());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                taskList.addTask(newTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(newTask +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                        String.format(\"\\nNow you have %d tasks in the list.\\n\", taskList.getTaskLength())"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                               + \"-------------------------------------------\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                                \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(command.getDescription());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                taskList.addTask(newDeadline);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(newDeadline +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                        String.format(\"\\nNow you have %d tasks in the list.\\n\", taskList.getTaskLength())"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                                + \"-------------------------------------------\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                                \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                Event newEvent \u003d new Event(command.getDescription());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                taskList.addTask(newEvent);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(newEvent +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                        String.format(\"\\nNow you have %d tasks in the list.\\n\", taskList.getTaskLength())"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                                + \"-------------------------------------------\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                        \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                taskList.showList();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(String.format(\"Now you have %d tasks in the list.\\n\", taskList.getTaskLength()) +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                   \"-------------------------------------------\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                      \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                taskNumber \u003d Integer.parseInt(command.getDescription());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                Task doneTask \u003d taskList.getTask(taskNumber);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                doneTask.markAsDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(doneTask + \"\\n-------------------------------------------\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                       \" Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                taskNumber \u003d Integer.parseInt(command.getDescription());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                Task deletedTask \u003d taskList.getTask(taskNumber);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                taskList.removeTask(deletedTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(deletedTask + \"\\n-------------------------------------------\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            case BYE: //bye"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                   \"Bye bye! Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                   \"-------------------------------------------\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static void printHello() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        System.out.println(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                \"-------------------------------------------\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        printHello();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                input \u003d sc.nextLine(); //1. read input"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                Command command \u003d decideCategory(input);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                processCommand(command, taskList);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            } catch (IllegalArgumentException exception) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "solkim-83": 138,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class DukeException extends NoSuchElementException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    DukeException(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "   protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    String[] stringSegments \u003d description.split(\"/at\", 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + stringSegments[0] + \" (at:\" + stringSegments[1] + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 14
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public EventCommand(Category category, String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(category, description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if(description \u003d\u003d null) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    \"☹ OOPS!!! The description of an event cannot be empty. Try again!\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    +\"-------------------------------------------\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 11
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public ListCommand(Category category, String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(category);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if(description !\u003d null){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    \"☹ OOPS!!! Invalid input. Try again!\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                    +\"-------------------------------------------\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 11
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + getDescription();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 25
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void showList(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        for(Task task: taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            System.out.println(counter + \". \" + task);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public int getTaskLength() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Task getTask(int index){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return taskList.get(index-1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void removeTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 10
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public TodoCommand(Category category, String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(category, description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if(description \u003d\u003d null) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"-------------------------------------------\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                                    \"☹ OOPS!!! The description of a todo cannot be empty. Try again!\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                                                            +\"-------------------------------------------\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 11
    }
  },
  {
    "path": "src/main/java/TodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class TodoException extends ArrayIndexOutOfBoundsException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    TodoException(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "deadline read book /by 6pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "event read book /at 4-6pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "remove 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "hello"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "#set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "if !  ("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "  )"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT 2\u003e\u00261"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 9,
      "-": 31
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/TaskList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/EventCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/ByeCommand.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/DeleteCommand.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/ListCommand.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/Command.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/TodoCommand.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/DeadlineCommand.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/TodoException.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/DoneCommand.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 16
    }
  }
]
