[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    private TaskList inputs;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            inputs \u003d new TaskList(storage.readFile());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            inputs \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    public void run() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            String nextLine \u003d ui.readInput();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Parser parser \u003d new Parser(nextLine, inputs);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            if (nextLine.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            parser.parse();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    public static void main (String[]args) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            new Duke(\"listStore.ser\").run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        public static class Input implements Serializable {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            boolean done;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            String content;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            String id;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            LocalDate time;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            String printTime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Input(String content) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.content \u003d content;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                boolean done \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Input(boolean done, String content) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.done \u003d done;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.content \u003d content;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            public void taskDone() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.done \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        public static class Todo extends Input {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Todo(String content) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                super(content);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.id \u003d \"[T]\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.time \u003d null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.printTime \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Todo(boolean done, String content) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                super(done, content);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.id \u003d \"[T]\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.time \u003d null;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.printTime \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        public static class Deadline extends Input {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Deadline(String content, String deadlineTime) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                super(content);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.time \u003d LocalDate.parse(deadlineTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.id \u003d \"[D]\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.printTime \u003d \"(\" + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Deadline(boolean done, String content, String deadlineTime) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                super(done, content);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.time \u003d LocalDate.parse(deadlineTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.id \u003d \"[D]\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.printTime \u003d \"(\" + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        public static class Event extends Input {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Event(String content, String eventTime) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                super(content);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.time \u003d LocalDate.parse(eventTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.id \u003d \"[E]\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.printTime \u003d \"(\" + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Event(boolean done, String content, String eventTime) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                super(done, content);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.time \u003d LocalDate.parse(eventTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.id \u003d \"[E]\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.printTime \u003d \"(\" + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        public static class DukeException extends Exception {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            String msg;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            DukeException(String msg) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.msg \u003d msg;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        public static class Storage {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            String filepath;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Storage(String filepath) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            void writeToFile(List\u003cInput\u003e list) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    FileOutputStream writeData \u003d new FileOutputStream(filepath);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    writeStream.writeObject(list);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    writeStream.flush();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    writeStream.close();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            List\u003cInput\u003e readFile() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    FileInputStream readData \u003d new FileInputStream(filepath);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    ObjectInputStream readStream \u003d new ObjectInputStream(readData);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    Object obj \u003d readStream.readObject();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    if (obj !\u003d null) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        List\u003cInput\u003e inputList \u003d (List\u003cInput\u003e) obj;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        readStream.close();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        return inputList;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        return null;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            public static class TaskList {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                List\u003cInput\u003e inputs;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                TaskList() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    this.inputs \u003d new ArrayList\u003cInput\u003e();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                TaskList(List\u003cInput\u003e inputs) throws DukeException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        this.inputs \u003d inputs;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        throw new DukeException(\"Error making task!\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                void taskDone(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    if (nextLine.equals(\"done\") || nextLine.equals(\"done \")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of done cannot be empty.\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    int numTaskDone \u003d Integer.valueOf(nextLine.substring(5));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    if (numTaskDone \u003e inputs.size()) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        throw new DukeException(\"OOPS!!! Task does not exist.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    Input inputType \u003d inputs.get(numTaskDone - 1);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    inputType.taskDone();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    System.out.println(\"[/] \" + inputType.content + \" \" + inputType.printTime);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                void taskRemove(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    if (nextLine.equals(\"remove\") || nextLine.equals(\"remove \")) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of remove cannot be empty\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    int numTaskDone \u003d Integer.valueOf(nextLine.substring(7));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    if (numTaskDone \u003e inputs.size()) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        throw new DukeException(\"OOPS!!! Task does not exist.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    Input inputType \u003d inputs.get(numTaskDone - 1);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    if (inputType.done) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        System.out.println(\"  \" + inputType.id + \"[/] \" + inputType.content + inputType.printTime);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        System.out.println(\"  \" + inputType.id + \"[x] \" + inputType.content + inputType.printTime);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    inputs.remove(numTaskDone - 1);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    System.out.println(\"Now you have \" + inputs.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    storage.writeToFile(inputs);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                void taskTodo(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    if (nextLine.equals(\"todo\") || nextLine.equals(\"todo \")) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    Todo todo \u003d new Todo(nextLine.substring(5));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    inputs.add(todo);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    int count \u003d inputs.size();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \"  [T][x] \" + todo.content +"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            \"\\n Now you have \" + count + \" tasks in the list\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    storage.writeToFile(inputs);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                void taskDeadline(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    if (nextLine.equals(\"deadline\") || nextLine.equals(\"deadline \")) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    int charLoc \u003d nextLine.indexOf(\"/by\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    Deadline deadline \u003d new Deadline(nextLine.substring(9, charLoc), nextLine.substring(charLoc + 4));"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    inputs.add(deadline);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    int count \u003d inputs.size();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \"  [D][x] \" + deadline.content +"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            deadline.printTime + \"\\n Now you have \" + count + \" tasks in the list\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    storage.writeToFile(inputs);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                void taskEvent(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    if (nextLine.equals(\"event\") || nextLine.equals(\"event \")) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    int charLoc \u003d nextLine.indexOf(\"/at\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    Event event \u003d new Event(nextLine.substring(6, charLoc), nextLine.substring(charLoc + 4));"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    inputs.add(event);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    int count \u003d inputs.size();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \"  [E][x] \" + event.content +"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            event.printTime + \"\\n Now you have \" + count + \" tasks in the list\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    storage.writeToFile(inputs);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            public static class UI {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                UI() {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    System.out.println(\"Hello! I\u0027m Duke \\n\""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            + \"What can I do for you?\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                String readInput() {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    return this.sc.nextLine();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                void showLoadingError() {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    System.out.println(\"Loading Error!\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            public static class Parser {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                String nextLine;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                TaskList inputs;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                Parser(String nextLine, TaskList inputs) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    this.nextLine \u003d nextLine;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    this.inputs \u003d inputs;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                void parse() throws DukeException {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        if (nextLine.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            inputs.taskDone(nextLine);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        } else if (nextLine.startsWith(\"remove\")) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            inputs.taskRemove(nextLine);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        } else if (nextLine.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            inputs.taskTodo(nextLine);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        } else if (nextLine.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            inputs.taskDeadline(nextLine);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        } else if (nextLine.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            inputs.taskEvent(nextLine);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        } else if (nextLine.equals(\"list\")) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            if (inputs.inputs.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                System.out.println(\"No tasks in list\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                int len \u003d inputs.inputs.size();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                for (int i \u003d 1; i \u003c\u003d len; i++) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                    Input inputType \u003d inputs.inputs.get(i - 1);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                    if (inputType.done) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                        System.out.println(i + \". \" + inputType.id + \"[/] \" + inputType.content +"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                                inputType.printTime);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                        System.out.println(i + \". \" + inputType.id + \"[x] \" + inputType.content +"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                                inputType.printTime);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                        System.out.println(e.msg);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    "
      }
    ],
    "authorContributionMap": {
      "yanlynnnnn": 331,
      "-": 3
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    public void todoExceptionTest() throws Duke.DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Duke.TaskList Tasks \u003d new Duke.TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Tasks.taskTodo(\"todo\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        } catch (Duke.DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", e.msg);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    public void deadlineExceptionTest() throws Duke.DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Duke.TaskList Tasks \u003d new Duke.TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Tasks.taskDeadline(\"deadline\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        } catch (Duke.DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            assertEquals(\"OOPS!!! The description of a deadline cannot be empty.\", e.msg);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    public void parserExceptionTest() throws Duke.DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        try { "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            Duke.Parser testParser \u003d new Duke.Parser(\"blah\", new Duke.TaskList());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            testParser.parse();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        } catch (Duke.DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.msg);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yanlynnnnn": 45
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yanlynnnnn": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanlynnnnn"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT | cat -t"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "yanlynnnnn": 2,
      "-": 36
    }
  }
]
