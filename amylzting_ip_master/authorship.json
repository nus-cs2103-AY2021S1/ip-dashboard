[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amylzting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void printList(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        if(tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            // Dino lists out all items in list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            System.out.println(\"Dino lists your tasks:\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                int index \u003d i + 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.out.println(index + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            System.out.println(\"To mark off a task after completion\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \", input \u0027done \u003ctask number\u003e\u0027.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Rawr! Dino could not find any items in your task list.\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"\\nGet started by entering a task. \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"Formats for a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void markDone(List\u003cTask\u003e tasks, String input) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        if (taskNumber \u003e tasks.size() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            // task number is not valid"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Task \" + taskNumber + \" is not in your list of tasks!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            // Dino marks task as done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            int taskIndex \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            Task doneTask \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            doneTask.markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            System.out.println(\"Great! Dino has marked \" + \"Task \" + taskNumber"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \" as done:\\n\" + doneTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void addTask(List\u003cTask\u003e tasks, String input, String[] inputWords) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            switch (inputWords[0]) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                String task \u003d input.substring(5);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                Todo todo \u003d new Todo(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.out.println(\"Dino has added to your list of tasks:\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + todo"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"\\nNumber of tasks in list: \" + tasks.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                String[] taskBy \u003d input.substring(9)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        .split(\"/by\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                if(taskBy.length \u003e\u003d 2 \u0026\u0026 !taskBy[0].equals(\"\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    // condition checks that input has task description and date/time"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    StringBuilder taskDeadline \u003d new StringBuilder(taskBy[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    // if there are more than one \u0027/by\u0027 in input,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    // task deadline taken as string after first \u0027/by\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    for(int i \u003d 2; i \u003c taskBy.length; i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        taskDeadline.append(\"/by\").append(taskBy[i]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    Deadline deadline \u003d new Deadline(taskBy[0], taskDeadline.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    System.out.println(\"Dino has added to your list of tasks:\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            + deadline"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            + \"\\nNumber of tasks in list: \" + tasks.size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    throw new DukeException(\"Rawr! Dino could not add your task. \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            + \"Make sure your format is correct.\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            + \"\\nFormats to input a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                String[] eventAt \u003d input.substring(6)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        .split(\"/at\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                if(eventAt.length \u003e\u003d 2 \u0026\u0026 !eventAt[0].equals(\"\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    // condition checks that input has task description and date/time"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    StringBuilder eventTime \u003d new StringBuilder(eventAt[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    // if there are more than one \u0027/at\u0027 in input,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    // task deadline taken as string after first \u0027/at\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    for(int i \u003d 2; i \u003c eventAt.length; i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        eventTime.append(\"/at\").append(eventAt[i]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    Event event \u003d new Event(eventAt[0], eventTime.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    System.out.println(\"Dino has added to your list of tasks:\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            + event"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            + \"\\nNumber of tasks in list: \" + tasks.size());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    throw new DukeException(\"Rawr! Dino could not add your task. \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            + \"Make sure your format is correct.\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            + \"\\nFormats to input a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                // when input is not a deadline, event or todo"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                throw new DukeException(\"Rawr! Dino could not add your task. \""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"Make sure your format is correct.\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"\\nFormats to input a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            // invalid task format entered"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Rawr! Dino could not add your task. \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"Make sure your format is correct.\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"\\nFormats to input a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void deleteTask(List\u003cTask\u003e tasks, String input) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        if (taskNumber \u003e tasks.size() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            // task number is not valid"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Task \" + taskNumber + \" is not in your list of tasks!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            // Dino deletes task from list"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            int taskIndex \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            Task toDelete \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            System.out.println(\"Rawr! Dino has deleted \" + \"Task \" + taskNumber"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \" from your list:\\n\" + toDelete"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"\\nNumber of tasks in list:\" + tasks.size());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void processInputs(List\u003cTask\u003e tasks, String input, String[] inputWords) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            if (input.equals(\"format\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.out.println(\"Formats for the three task types Todo, Deadline and Event,\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \" are shown below.\\n\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"Todo: \u0027todo \u003ctask description\u003e\u0027\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \" (e.g., visit new theme park)\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"Deadline: \u0027deadline \u003ctask description\u003e\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \" /by \u003cdate/time\u003e\u0027 (e.g., submit report by 11/10/2019 5pm)\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"Event: \u0027event \u003ctask description\u003e\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \" /at \u003cdate/start and end time\u003e\u0027 \""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"(e.g., team project meeting on 2/10/2019 2-4pm)\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"\\nAdditional Information:\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"\\nTo mark a task as done, input \u0027done \u003ctask number\u003e\u0027.\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"\\nTo delete a task from your list, input \u0027delete \u003ctask number\u003e\u0027.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                printList(tasks);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            } else if (inputWords[0].equals(\"done\") \u0026\u0026 inputWords.length \u003d\u003d 2"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    \u0026\u0026 inputWords[1].matches(\"[0-9]+\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                // condition checks that user input is in the format \"done X\" where X is a numeric"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                markDone(tasks, input);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            } else if (inputWords[0].equals(\"delete\") \u0026\u0026 inputWords.length \u003d\u003d 2"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    \u0026\u0026 inputWords[1].matches(\"[0-9]+\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                // condition checks that user input is in the format \"delete X\" where X is a numeric"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                deleteTask(tasks, input);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                // Dino adds task to list"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                addTask(tasks, input, inputWords);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } catch(DukeException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        String logo \u003d \" ____\\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"|  _ \\\\ _ _____  ___\\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"| | | | |  _  |/   \\\\\\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"| |_| | | | | | |_| |\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"|____/|_|_| |_|\\\\___/\\n\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        System.out.println(\"Rawr! I\u0027m Dino \u003e\u003c\\n\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                +logo"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\nGet started on your task list by entering a task!\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\nTo see how to format your task, input \u0027format\u0027\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\nTo see your list of tasks, input \u0027list\u0027.\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\nTo mark a task as done, input \u0027done \u003ctask number\u003e\u0027.\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\nTo delete a task from your list, input \u0027delete \u003ctask number\u003e\u0027.\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\nTo stop Dino, input \u0027bye\u0027.\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        while (!isBye \u0026\u0026 scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            String[] inputWords \u003d input.split(\" \");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                // Dino says bye"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.out.println(\"Rawr. Hope to see you again soon! \u003e\u003c\""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                isBye \u003d true;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                processInputs(tasks, input, inputWords);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 189,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "public enum DukeAction {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    MARK_DONE,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    ADD,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    DELETE"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amylzting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + taskName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amylzting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 21
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amylzting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "format"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "todo swimming in sea"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": "deadline 321 /by 0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": "event 456 /at 7"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amylzting"
        },
        "content": "todo racing car"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amylzting"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amylzting"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amylzting"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amylzting"
        },
        "content": "done 88"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amylzting"
        },
        "content": "chasing elephants"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amylzting"
        },
        "content": "deadline eat by 2pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amylzting"
        },
        "content": "event party at 4pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amylzting"
        },
        "content": "deadline eat /by 10am /by june"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amylzting"
        },
        "content": "event travel to japan /at 10 June /at 2pm /at airport"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amylzting"
        },
        "content": "event travel to japan /at"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amylzting"
        },
        "content": "event /at 2pm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amylzting"
        },
        "content": "deadline /by 2pm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amylzting"
        },
        "content": "deadline homework /by"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amylzting"
        },
        "content": "todo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amylzting"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amylzting"
        },
        "content": "event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amylzting"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amylzting"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amylzting"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amylzting"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "amylzting": 28
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "amylzting": 1,
      "-": 20
    }
  }
]
