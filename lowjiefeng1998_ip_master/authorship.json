[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public static final String STORE_DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String DELIMITER \u003d \" /by \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public Deadline(String description, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public Deadline(String description, String deadline, boolean isCompleted) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(description, isCompleted);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        this.deadline \u003d LocalDateTime.parse(deadline);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public static Deadline create(String args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        String[] argsList \u003d args.split(DELIMITER);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        if (argsList.length \u003c 2) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new TaskException(\"Not enough arguments\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            LocalDateTime date \u003d LocalDateTime.parse(argsList[1], Task.READER_FORMAT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            return new Deadline(argsList[0], date);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return STORE_DEADLINE + \" | \" + description + \" | \" + deadline + \" | \" + getCompletionFlagStorage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return printCompletionFlag() + \" | D | \" + description + \" | By: \" + deadline.format(Task.DATE_FORMAT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 38
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.net.URI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.util.IllegalFormatException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String DIVIDER \u003d \"-------------------------------------\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String HELLO_MESSAGE \u003d \"Greetings! I am Duke.\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String EXIT_MESSAGE \u003d \"Bye! See you around!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Hmm I didn\u0027t quite catch that.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void printWithDivider(String text) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        System.out.println(DIVIDER + \"\\n\" + text + \"\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String EXIT_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String ADD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String ADD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String ADD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String DELETE_TASK \u003d \"delete\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static DukeCommand getDukeCommand(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        // convert string command to command action"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        case LIST_COMMAND:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            return DukeCommand.LIST;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        case DELETE_TASK:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            return DukeCommand.DELETE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        case DONE_COMMAND:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            return DukeCommand.DONE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        case ADD_TODO:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            return DukeCommand.ADD_TODO;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        case ADD_EVENT:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            return DukeCommand.ADD_EVENT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        case ADD_DEADLINE:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            return DukeCommand.ADD_DEADLINE;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        case EXIT_COMMAND:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            return DukeCommand.EXIT;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            return DukeCommand.UNKNOWN;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void processInput(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        StringBuilder commandInput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        StringBuilder argsInput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        boolean commandFound \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        for (int i \u003d 0; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            if (commandFound) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                argsInput.append(input.charAt(i));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            } else if (input.charAt(i) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                commandFound \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                commandInput.append(input.charAt(i));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        String args \u003d argsInput.toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        DukeCommand command \u003d getDukeCommand(commandInput.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                listTasks();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                completeTask(args);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                writeFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case ADD_TODO:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                addTodo(args);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                writeFile();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case ADD_EVENT:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                addEvent(args);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                writeFile();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case ADD_DEADLINE:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                addDeadline(args);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                writeFile();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                deleteTask(args);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                writeFile();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case EXIT:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                exitDuke();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                throw new DukeUnknownCommandException(ERROR_MESSAGE + \"\\nWas the command valid?\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (DukeUnknownCommandException | DukeIncompleteCommandException | DukeInvalidArgumentException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            printWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void listTasks() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        StringBuilder rv \u003d new StringBuilder(\"You have \" + taskList.size() + \" items.\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            rv.append(\"\\n\").append(i + 1).append(\": \").append(taskList.get(i).toString());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        printWithDivider(rv.toString());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void completeTask(String doneIndex)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            int index \u003d Integer.parseInt(doneIndex) - 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            Task task \u003d taskList.get(index).completeTask();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            printWithDivider(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new DukeInvalidArgumentException(ERROR_MESSAGE + \"\\nDid you provide a valid index?\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void addTodo(String description) throws DukeIncompleteCommandException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            taskList.add(todo);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            printWithDivider(\"Successfully added todo:\\n\" + todo.toString());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new DukeIncompleteCommandException(ERROR_MESSAGE"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    + \"\\nDid you provide any description for this todo task?\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void addEvent(String args) throws DukeIncompleteCommandException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            Event event \u003d Event.create(args);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            taskList.add(event);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            printWithDivider(\"Successfully added event:\\n\" + event.toString());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new DukeIncompleteCommandException(ERROR_MESSAGE"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    + \"\\nDid you provide a date and description for this event?\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new DukeInvalidArgumentException(ERROR_MESSAGE + \"\\nPlease provide a valid event date in DD/MM/YYYY HH:mm format.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void addDeadline(String args) throws DukeIncompleteCommandException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            Deadline deadline \u003d Deadline.create(args);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            taskList.add(deadline);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            printWithDivider(\"Successfully added deadline:\\n\" + deadline.toString());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new DukeIncompleteCommandException(ERROR_MESSAGE"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    + \"\\nDid you provide a deadline and description for this deadline?\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new DukeInvalidArgumentException(ERROR_MESSAGE + \"\\nPlease provide a valid deadline in DD/MM/YYYY HH:mm format.\\\"\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void deleteTask(String deleteIndex)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            int index \u003d Integer.parseInt(deleteIndex) - 1;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            Task task \u003d taskList.remove(index);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            printWithDivider(\"Noted. I\u0027ve deleted this task:\\n\" + task.toString());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new DukeInvalidArgumentException(ERROR_MESSAGE + \"\\nDid you provide a valid index?\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static boolean hasExited \u003d false;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void exitDuke() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        writeFile();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        printWithDivider(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        hasExited \u003d true;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static String DIR_PATH \u003d \"./data/\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static String FILE_PATH \u003d DIR_PATH + \"taskList.txt\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void readFile() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        Path path \u003d Path.of(FILE_PATH);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        URI uri \u003d path.toUri();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        File file \u003d new File(uri);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                Scanner reader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    String line \u003d reader.nextLine();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    String[] lineList \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    if (lineList.length \u003d\u003d 3 \u0026\u0026 lineList[0].equals(Todo.STORE_TODO)) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                        boolean isComplete \u003d lineList[2].equals(Task.STORE_COMPLETED);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                        Todo todo \u003d new Todo(lineList[1], isComplete);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                        taskList.add(todo);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    } else if (lineList.length \u003d\u003d 4"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                            \u0026\u0026 (lineList[0].equals(Deadline.STORE_DEADLINE)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                            || lineList[0].equals(Event.STORE_EVENT))) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                        boolean isComplete \u003d lineList[3].equals(Task.STORE_COMPLETED);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                        switch (lineList[0]) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                        case Event.STORE_EVENT:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                            Event event \u003d new Event(lineList[1], lineList[2], isComplete);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                            taskList.add(event);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                        case Deadline.STORE_DEADLINE:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                            Deadline deadline \u003d new Deadline(lineList[1], lineList[2], isComplete);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                            taskList.add(deadline);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                        throw new IllegalStateException();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            } catch (FileNotFoundException ignored) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            } catch (IllegalStateException e) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                printWithDivider(ERROR_MESSAGE + \"\\nThe file has been corrupted.\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void writeFile() {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        URI uri \u003d Path.of(FILE_PATH).toUri();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        File file \u003d new File(uri);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                URI dirUri \u003d Path.of(DIR_PATH).toUri();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                File dirFile \u003d new File(dirUri);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                if (!dirFile.exists()) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    dirFile.mkdir();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                writer.write(taskList.get(i).toStorageString());"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                if (i !\u003d taskList.size() - 1) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    writer.write(\"\\n\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (IOException ignored) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        printWithDivider(HELLO_MESSAGE);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        readFile();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        while (!hasExited) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            processInput(input);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 261,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public enum DukeCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    EXIT, LIST,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    DONE, DELETE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    ADD_TODO, ADD_EVENT, ADD_DEADLINE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    UNKNOWN;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 6
    }
  },
  {
    "path": "src/main/java/DukeIncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class DukeIncompleteCommandException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public DukeIncompleteCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 5
    }
  },
  {
    "path": "src/main/java/DukeInvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class DukeInvalidArgumentException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public DukeInvalidArgumentException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 5
    }
  },
  {
    "path": "src/main/java/DukeUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class DukeUnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public DukeUnknownCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public static final String STORE_EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String DELIMITER \u003d \" /at \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private LocalDateTime dateInfo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public Event(String description, LocalDateTime dateInfo) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        this.dateInfo \u003d dateInfo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public Event(String description, String dateInfo, boolean isComplete) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(description, isComplete);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        this.dateInfo \u003d LocalDateTime.parse(dateInfo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public static Event create(String args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        String[] argsList \u003d args.split(DELIMITER);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        if (argsList.length \u003c 2) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new TaskException(\"Not enough arguments\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            LocalDateTime date \u003d LocalDateTime.parse(argsList[1], Task.READER_FORMAT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            return new Event(argsList[0], date);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return STORE_EVENT + \" | \" + description + \" | \" + dateInfo + \" | \" + getCompletionFlagStorage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return printCompletionFlag() + \" | E | \" + description + \" | At: \" + dateInfo.format(Task.DATE_FORMAT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 38
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String COMPLETE \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String NOT_COMPLETE \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public static final String STORE_COMPLETED \u003d \"COMP\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public static final String STORE_INCOMPLETE \u003d \"ICOMP\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    protected static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM YY HH:mm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    protected static final DateTimeFormatter READER_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    protected boolean isComplete \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    protected Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new TaskException(\"Did you provide any description for this todo task?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    protected Task(String description, boolean isComplete) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new TaskException(\"Did you provide any description for this todo task?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        this.isComplete \u003d isComplete;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public Task completeTask() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        isComplete \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public Task resetTask() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        isComplete \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    protected String printCompletionFlag() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        String completionFlag \u003d isComplete ? COMPLETE : NOT_COMPLETE;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return \"[\" + completionFlag + \"]\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    protected String getCompletionFlagStorage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return isComplete ? STORE_COMPLETED : STORE_INCOMPLETE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public abstract String toStorageString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return printCompletionFlag() + \" | \" + description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 56
    }
  },
  {
    "path": "src/main/java/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class TaskException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public TaskException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 5
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public static final String STORE_TODO \u003d \"T\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public Todo(String description, boolean isComplete) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(description, isComplete);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return STORE_TODO + \" | \" + description + \" | \" + getCompletionFlagStorage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return printCompletionFlag() + \" | T | \" + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 21
    }
  },
  {
    "path": "text-ui-test/data/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "T | read book | ICOMP"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "E | meeting | 2020-07-30T15:00 | COMP"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "D | quiz2 submission | 2020-08-29T22:00 | ICOMP"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "this should be rejected"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "todo test"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "event meeting /at 30/07/2020 15:00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "event lunch with friends /at 17/07/2020 15:00"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "event dinner with friends /at unknown time"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "deadline quiz1 /by 30/08/2020 23:59"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "deadline quiz2 submission /by 29/08/2020 22:00"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "deadline quiz3 submission /by unknown time"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 30
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "SET JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "del /s \"data\\taskList.txt\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 4,
      "-": 20
    }
  }
]
