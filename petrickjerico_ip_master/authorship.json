[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"petrickjerico"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"petrickjerico"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"petrickjerico":18,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"Welcome to the Duke user guide. "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"Duke is a desktop app that helps you keep "},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"track of your tasks and schedule."},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"## Quick Start"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"1. Ensure that you have Java 11 or above installed."},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"2. Download the latest `duke.jar` from [here]()."},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke."},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"4. Start the jar file from a terminal using `java -jar duke.jar`. The GUI should appear in a few seconds."},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"5. Type in a command in the command box to execute it. Type help to see all the commands available."},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"6. Refer to features below for details of each command."},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"Alternatively, you can double-click on the `jar` file at step 4 to start Duke. "},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"\u003eNote:"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"\u003e "},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"\u003eWords in `UPPER_CASE` are the parameters to be supplied by the user. "},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"\u003ee.g. in `todo NAME`, `NAME` is a parameter which can be used as `event abc /at 2020-02-02`."},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"\u003e"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"\u003e`DATE` should be in the format `YYYY-MM-DD`."},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"\u003e"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"\u003e`INDEX` should be a positive integer."},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"### Add a Todo Task: `todo`"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":"Creates a new non-dated todo item."},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":"Usage: `todo NAME`"},{"lineNumber":35,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":36,"author":{"gitId":"petrickjerico"},"content":"Example of usage: `todo fold clothes`"},{"lineNumber":37,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":38,"author":{"gitId":"petrickjerico"},"content":"Expected outcome: Creates a `todo` task with name `fold clothes`"},{"lineNumber":39,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":40,"author":{"gitId":"petrickjerico"},"content":"### Add an Event Task: `event`"},{"lineNumber":41,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":42,"author":{"gitId":"petrickjerico"},"content":"Creates a new dated event item."},{"lineNumber":43,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":44,"author":{"gitId":"petrickjerico"},"content":"Usage: `event NAME /at DATE`"},{"lineNumber":45,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":46,"author":{"gitId":"petrickjerico"},"content":"Example of usage: `event meetup /at 2020-10-10`"},{"lineNumber":47,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":48,"author":{"gitId":"petrickjerico"},"content":"Expected outcome: Creates an `event` task with name `meetup` at date `Oct 10 2020`"},{"lineNumber":49,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":50,"author":{"gitId":"petrickjerico"},"content":"### Add a Deadline Task: `todo`"},{"lineNumber":51,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":52,"author":{"gitId":"petrickjerico"},"content":"Creates a new dated deadline item."},{"lineNumber":53,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":54,"author":{"gitId":"petrickjerico"},"content":"Usage: `deadline NAME /by DATE`"},{"lineNumber":55,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":56,"author":{"gitId":"petrickjerico"},"content":"Example of usage: `deadline homework /by 2020-09-09`"},{"lineNumber":57,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":58,"author":{"gitId":"petrickjerico"},"content":"Expected outcome: Creates a `deadline` task with name `homework` at date `Sep 09 2020`"},{"lineNumber":59,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":60,"author":{"gitId":"petrickjerico"},"content":"### View Tasks List: `list`"},{"lineNumber":61,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":62,"author":{"gitId":"petrickjerico"},"content":"Shows all tasks in a numbered list, sorted by date created. Also gives the count of pending tasks."},{"lineNumber":63,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":64,"author":{"gitId":"petrickjerico"},"content":"### Mark a Task as done: `done`"},{"lineNumber":65,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":66,"author":{"gitId":"petrickjerico"},"content":"Marks the task at a given index as done. "},{"lineNumber":67,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":68,"author":{"gitId":"petrickjerico"},"content":"Usage: `done INDEX`"},{"lineNumber":69,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":70,"author":{"gitId":"petrickjerico"},"content":"Example of usage: `done 2`"},{"lineNumber":71,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":72,"author":{"gitId":"petrickjerico"},"content":"Expected outcome: Marks task number `2` as `done`"},{"lineNumber":73,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":74,"author":{"gitId":"petrickjerico"},"content":"### Delete a Task: `delete`"},{"lineNumber":75,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":76,"author":{"gitId":"petrickjerico"},"content":"Deletes the task at a given index. Also updates the count of pending tasks as necessary."},{"lineNumber":77,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":78,"author":{"gitId":"petrickjerico"},"content":"Usage: `delete INDEX`"},{"lineNumber":79,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":80,"author":{"gitId":"petrickjerico"},"content":"Example of usage: `delete 3`"},{"lineNumber":81,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":82,"author":{"gitId":"petrickjerico"},"content":"Expected outcome: Deletes task number `3` as `done`. If task `3` was not done yet, pending count decreases."},{"lineNumber":83,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":84,"author":{"gitId":"petrickjerico"},"content":"### Find a Task: `find`"},{"lineNumber":85,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":86,"author":{"gitId":"petrickjerico"},"content":"Finds all tasks that contain a given name."},{"lineNumber":87,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":88,"author":{"gitId":"petrickjerico"},"content":"Usage: `find NAME`"},{"lineNumber":89,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":90,"author":{"gitId":"petrickjerico"},"content":"Example of usage: `find meet`"},{"lineNumber":91,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":92,"author":{"gitId":"petrickjerico"},"content":"Expected outcome: Shows the tasks `meet with friends` and `team meeting`"},{"lineNumber":93,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":94,"author":{"gitId":"petrickjerico"},"content":"### Update a Task: `update`"},{"lineNumber":95,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":96,"author":{"gitId":"petrickjerico"},"content":"Changes a detail of the task at a given index. Possible detail changes include: `name`, `date` and `undo`."},{"lineNumber":97,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":98,"author":{"gitId":"petrickjerico"},"content":"#### a. Change name: `name`"},{"lineNumber":99,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":100,"author":{"gitId":"petrickjerico"},"content":"Usage: `update INDEX name NEW`"},{"lineNumber":101,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":102,"author":{"gitId":"petrickjerico"},"content":"Example of usage: `update 1 name wash dishes`"},{"lineNumber":103,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":104,"author":{"gitId":"petrickjerico"},"content":"Expected outcome: Changes the name of task number `1` to `wash dishes`"},{"lineNumber":105,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":106,"author":{"gitId":"petrickjerico"},"content":"#### b. Change date: `date`"},{"lineNumber":107,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":108,"author":{"gitId":"petrickjerico"},"content":"Usage: `update INDEX date NEW`"},{"lineNumber":109,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":110,"author":{"gitId":"petrickjerico"},"content":"Example of usage: `update 2 date 2020-08-08`"},{"lineNumber":111,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":112,"author":{"gitId":"petrickjerico"},"content":"Expected outcome: Changes the date of task number `2` to `Aug 8 2020`"},{"lineNumber":113,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":114,"author":{"gitId":"petrickjerico"},"content":"#### c. Change status: `undo`"},{"lineNumber":115,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":116,"author":{"gitId":"petrickjerico"},"content":"Usage: `update INDEX undo`"},{"lineNumber":117,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":118,"author":{"gitId":"petrickjerico"},"content":"Example of usage: `update 3 undo`"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"petrickjerico"},"content":"Expected outcome: Changes the status of task `3` to pending."},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"petrickjerico"},"content":"### Help for Commands: `help`"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"petrickjerico"},"content":"Lists down all possible commands with explanation."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"petrickjerico"},"content":"### Exit Duke: `bye`"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"petrickjerico"},"content":"Saves your task lists and exits the app after a short message"}],"authorContributionMap":{"petrickjerico":117,"-":11}},{"path":"duke_save_data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"todo:1:call sis"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":"todo:1:call dad"},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"todo:0:call mom"}],"authorContributionMap":{"petrickjerico":3}},{"path":"src/main/java/DukeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.control.Label;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":" * An example of a custom control using FXML."},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":" * containing text from the speaker."},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"public class DukeDialogBox extends HBox {"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"    private Label dialog;"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    DukeDialogBox(String text) {"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DukeDialogBox.fxml\"));"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"        VBox.setMargin(this, new Insets(10, 5, 20, 5));"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"        dialog.setText(text);"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":31}},{"path":"src/main/java/ErrorDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import javafx.geometry.Insets;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":" * An example of a custom control using FXML."},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":" * containing text from the speaker."},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"public class ErrorDialogBox extends HBox {"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"    private Label dialog;"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    ErrorDialogBox(String text) {"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/ErrorDialogBox.fxml\"));"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"        VBox.setMargin(this, new Insets(10, 5, 20, 5));"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"        dialog.setText(text);"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":31}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":" * Starts up Duke with GUI."},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"import duke.Duke;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":"import javafx.application.Application;"},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import javafx.stage.Stage;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"public class Main extends Application {"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"    private static final String SAVE_FILE_PATH \u003d \"duke_save_data.txt\";"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"    private Duke duke \u003d new Duke(SAVE_FILE_PATH);"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"    public void start(Stage stage) {"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"            stage.setResizable(false);"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"import duke.Duke;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":"import duke.Ui;"},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"import java.util.concurrent.Executors;"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import java.util.concurrent.ScheduledExecutorService;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import java.util.concurrent.TimeUnit;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"import javafx.beans.binding.Bindings;"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"import javafx.fxml.FXML;"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.control.Button;"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.layout.*;"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"import javax.swing.*;"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"    private VBox dialogContainer;"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"    private TextField userInput;"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"    private Button sendButton;"},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":"    private Duke duke;"},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":35,"author":{"gitId":"petrickjerico"},"content":"    @FXML"},{"lineNumber":36,"author":{"gitId":"petrickjerico"},"content":"    public void initialize() {"},{"lineNumber":37,"author":{"gitId":"petrickjerico"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":38,"author":{"gitId":"petrickjerico"},"content":"        dialogContainer.setBackground(new Background(new BackgroundFill(Color.DIMGRAY, CornerRadii.EMPTY, Insets.EMPTY)));"},{"lineNumber":39,"author":{"gitId":"petrickjerico"},"content":"        WelcomeDialogBox welcomeBox \u003d new WelcomeDialogBox(Ui.displayWelcome());"},{"lineNumber":40,"author":{"gitId":"petrickjerico"},"content":"        dialogContainer.getChildren().add(welcomeBox);"},{"lineNumber":41,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":43,"author":{"gitId":"petrickjerico"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":44,"author":{"gitId":"petrickjerico"},"content":"        duke \u003d d;"},{"lineNumber":45,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":47,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"petrickjerico"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":49,"author":{"gitId":"petrickjerico"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":50,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"petrickjerico"},"content":"    @FXML"},{"lineNumber":52,"author":{"gitId":"petrickjerico"},"content":"    private void handleUserInput() throws InterruptedException {"},{"lineNumber":53,"author":{"gitId":"petrickjerico"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":54,"author":{"gitId":"petrickjerico"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":55,"author":{"gitId":"petrickjerico"},"content":"        UserDialogBox userBox \u003d new UserDialogBox(input);"},{"lineNumber":56,"author":{"gitId":"petrickjerico"},"content":"        boolean isOk \u003d duke.getWillReturnAsValid();"},{"lineNumber":57,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":58,"author":{"gitId":"petrickjerico"},"content":"        if (!isOk) {"},{"lineNumber":59,"author":{"gitId":"petrickjerico"},"content":"            ErrorDialogBox errorBox \u003d new ErrorDialogBox(response);"},{"lineNumber":60,"author":{"gitId":"petrickjerico"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":61,"author":{"gitId":"petrickjerico"},"content":"                    userBox,"},{"lineNumber":62,"author":{"gitId":"petrickjerico"},"content":"                    errorBox"},{"lineNumber":63,"author":{"gitId":"petrickjerico"},"content":"            );"},{"lineNumber":64,"author":{"gitId":"petrickjerico"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"petrickjerico"},"content":"            DukeDialogBox dukeBox \u003d new DukeDialogBox(response);"},{"lineNumber":66,"author":{"gitId":"petrickjerico"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":67,"author":{"gitId":"petrickjerico"},"content":"                    userBox,"},{"lineNumber":68,"author":{"gitId":"petrickjerico"},"content":"                    dukeBox"},{"lineNumber":69,"author":{"gitId":"petrickjerico"},"content":"            );"},{"lineNumber":70,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":72,"author":{"gitId":"petrickjerico"},"content":"        userInput.clear();"},{"lineNumber":73,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":74,"author":{"gitId":"petrickjerico"},"content":"        // briefly delays System.exit to show goodbye message."},{"lineNumber":75,"author":{"gitId":"petrickjerico"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":76,"author":{"gitId":"petrickjerico"},"content":"            ScheduledExecutorService executor \u003d Executors.newSingleThreadScheduledExecutor();"},{"lineNumber":77,"author":{"gitId":"petrickjerico"},"content":"            Runnable task \u003d () -\u003e SwingUtilities.invokeLater(() -\u003e System.exit(0));"},{"lineNumber":78,"author":{"gitId":"petrickjerico"},"content":"            executor.schedule(task, 300, TimeUnit.MILLISECONDS);"},{"lineNumber":79,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":81}},{"path":"src/main/java/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"import javafx.geometry.Insets;"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"import javafx.geometry.Pos;"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.Node;"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":" * An example of a custom control using FXML."},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":" * containing text from the speaker."},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"public class UserDialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"    private Label dialog;"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"    UserDialogBox(String text) {"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"petrickjerico"},"content":"        VBox.setMargin(this, new Insets(10, 5, 0, 5));"},{"lineNumber":37,"author":{"gitId":"petrickjerico"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":39}},{"path":"src/main/java/WelcomeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import javafx.geometry.Insets;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":" * An example of a custom control using FXML."},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":" * containing text from the speaker."},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"public class WelcomeDialogBox extends HBox {"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"    private Label dialog;"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    WelcomeDialogBox(String text) {"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/WelcomeDialogBox.fxml\"));"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"            fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"        VBox.setMargin(this, new Insets(10, 5, 20, 5));"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"        dialog.setText(text);"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":31}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":" * Represents the main class for the Duke application."},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    private Storage storage;"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"    private TaskList taskList;"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"    private boolean willReturnAsValid;"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"     * Initialises Duke with a given file save path."},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"     * Runs Duke with empty TaskList if save file is not found."},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"     * @param filePath String representation of the file path."},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    public Duke(String filePath) {"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"        new Ui();"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"            taskList \u003d new TaskList(storage.load());"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"        } catch (Exception e) {"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"            Ui.displayLoadingError();"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"    private String checkMessage(String message, boolean isValid) {"},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":"        willReturnAsValid \u003d isValid;"},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":"        return message;"},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":36,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"petrickjerico"},"content":"     * Runs the initialised Duke."},{"lineNumber":38,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"petrickjerico"},"content":"    public String run(String input) {"},{"lineNumber":40,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"petrickjerico"},"content":"            Parser parser \u003d new Parser();"},{"lineNumber":42,"author":{"gitId":"petrickjerico"},"content":"            parser.setCommandLine(input);"},{"lineNumber":43,"author":{"gitId":"petrickjerico"},"content":"            String command \u003d parser.getCommandWord();"},{"lineNumber":44,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":45,"author":{"gitId":"petrickjerico"},"content":"            switch (command) {"},{"lineNumber":46,"author":{"gitId":"petrickjerico"},"content":"            case \"bye\":"},{"lineNumber":47,"author":{"gitId":"petrickjerico"},"content":"                storage.save(taskList);"},{"lineNumber":48,"author":{"gitId":"petrickjerico"},"content":"                return checkMessage(Ui.displayGoodbye(), true);"},{"lineNumber":49,"author":{"gitId":"petrickjerico"},"content":"            case \"list\":"},{"lineNumber":50,"author":{"gitId":"petrickjerico"},"content":"                return checkMessage(Ui.displayList(taskList), true);"},{"lineNumber":51,"author":{"gitId":"petrickjerico"},"content":"            case \"help\":"},{"lineNumber":52,"author":{"gitId":"petrickjerico"},"content":"                return checkMessage(Ui.displayHelp(), true);"},{"lineNumber":53,"author":{"gitId":"petrickjerico"},"content":"            case \"done\":"},{"lineNumber":54,"author":{"gitId":"petrickjerico"},"content":"                return checkMessage(taskList.done(parser), taskList.isToReturnAsValid());"},{"lineNumber":55,"author":{"gitId":"petrickjerico"},"content":"            case \"delete\":"},{"lineNumber":56,"author":{"gitId":"petrickjerico"},"content":"                return checkMessage(taskList.delete(parser), taskList.isToReturnAsValid());"},{"lineNumber":57,"author":{"gitId":"petrickjerico"},"content":"            case \"find\":"},{"lineNumber":58,"author":{"gitId":"petrickjerico"},"content":"                return checkMessage(taskList.find(parser), taskList.isToReturnAsValid());"},{"lineNumber":59,"author":{"gitId":"petrickjerico"},"content":"            case \"update\":"},{"lineNumber":60,"author":{"gitId":"petrickjerico"},"content":"                return checkMessage(taskList.update(parser), taskList.isToReturnAsValid());"},{"lineNumber":61,"author":{"gitId":"petrickjerico"},"content":"            case \"deadline\":"},{"lineNumber":62,"author":{"gitId":"petrickjerico"},"content":"            case \"event\":"},{"lineNumber":63,"author":{"gitId":"petrickjerico"},"content":"            case \"todo\":"},{"lineNumber":64,"author":{"gitId":"petrickjerico"},"content":"                return checkMessage(taskList.add(parser), taskList.isToReturnAsValid());"},{"lineNumber":65,"author":{"gitId":"petrickjerico"},"content":"            default:"},{"lineNumber":66,"author":{"gitId":"petrickjerico"},"content":"                assert false : command;"},{"lineNumber":67,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"petrickjerico"},"content":"        } catch (DukeException e) {"},{"lineNumber":69,"author":{"gitId":"petrickjerico"},"content":"            return checkMessage(Ui.displayMessage(e.toString()), false);"},{"lineNumber":70,"author":{"gitId":"petrickjerico"},"content":"        } catch (Exception e) {"},{"lineNumber":71,"author":{"gitId":"petrickjerico"},"content":"            e.printStackTrace();"},{"lineNumber":72,"author":{"gitId":"petrickjerico"},"content":"            return checkMessage(Ui.displayMessage(e.getMessage()), false);"},{"lineNumber":73,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"petrickjerico"},"content":"        return input;"},{"lineNumber":75,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":77,"author":{"gitId":"petrickjerico"},"content":"    public String getResponse(String input) {"},{"lineNumber":78,"author":{"gitId":"petrickjerico"},"content":"        return run(input);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":81,"author":{"gitId":"petrickjerico"},"content":"    public boolean getWillReturnAsValid() {"},{"lineNumber":82,"author":{"gitId":"petrickjerico"},"content":"        return willReturnAsValid;"},{"lineNumber":83,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}"},{"lineNumber":85,"author":{"gitId":"petrickjerico"},"content":""}],"authorContributionMap":{"petrickjerico":82,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import duke.exception.*;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":" * Parses and contains the important info required"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":" * for each call to Duke methods given through CLI."},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"    public String comparator;"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"    private String commandLine;"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"    private String commandWord;"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"    private String taskName;"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"    private String taskDate;"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"    private Integer taskNumber;"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"    private String changeWord;"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    private String changeTarget;"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"    Parser() {"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"        comparator \u003d \"\";"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"        commandLine \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"        commandWord \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"        taskName \u003d \"\";"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"        taskDate \u003d \"\";"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"        taskNumber \u003d 0;"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"        changeWord \u003d \"\";"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"        changeTarget \u003d \"\";"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":"     * Sets the command line of \u003ccode\u003eParser\u003c/code\u003e to"},{"lineNumber":35,"author":{"gitId":"petrickjerico"},"content":"     * a given string inputted via CLI."},{"lineNumber":36,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"petrickjerico"},"content":"     * @param commandLine The line typed into CLI."},{"lineNumber":38,"author":{"gitId":"petrickjerico"},"content":"     * @throws Exception at anytime the {@code Parser} experiences exceptions."},{"lineNumber":39,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"petrickjerico"},"content":"    public void setCommandLine(String commandLine) throws Exception {"},{"lineNumber":41,"author":{"gitId":"petrickjerico"},"content":"        this.commandLine \u003d commandLine;"},{"lineNumber":42,"author":{"gitId":"petrickjerico"},"content":"        parseForCommand(commandLine);"},{"lineNumber":43,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":45,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"petrickjerico"},"content":"     * Parses the command line selectively based on the first word."},{"lineNumber":47,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"petrickjerico"},"content":"     * @param commandLine The line typed into CLI."},{"lineNumber":49,"author":{"gitId":"petrickjerico"},"content":"     * @throws Exception When the parsing is unsuccessful."},{"lineNumber":50,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"petrickjerico"},"content":"    private void parseForCommand(String commandLine) throws Exception {"},{"lineNumber":52,"author":{"gitId":"petrickjerico"},"content":"        String[] words \u003d commandLine.split(\" \", 2);"},{"lineNumber":53,"author":{"gitId":"petrickjerico"},"content":"        assert words.length \u003d\u003d 2 : \"String was not split() successfully to two parts.\";"},{"lineNumber":54,"author":{"gitId":"petrickjerico"},"content":"        commandWord \u003d words[0];"},{"lineNumber":55,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":56,"author":{"gitId":"petrickjerico"},"content":"        switch (commandWord) {"},{"lineNumber":57,"author":{"gitId":"petrickjerico"},"content":"        case \"bye\":"},{"lineNumber":58,"author":{"gitId":"petrickjerico"},"content":"        case \"list\":"},{"lineNumber":59,"author":{"gitId":"petrickjerico"},"content":"        case \"help\":"},{"lineNumber":60,"author":{"gitId":"petrickjerico"},"content":"            break;"},{"lineNumber":61,"author":{"gitId":"petrickjerico"},"content":"        case \"done\":"},{"lineNumber":62,"author":{"gitId":"petrickjerico"},"content":"        case \"delete\":"},{"lineNumber":63,"author":{"gitId":"petrickjerico"},"content":"            try {"},{"lineNumber":64,"author":{"gitId":"petrickjerico"},"content":"                parseForNumber(words[1].trim());"},{"lineNumber":65,"author":{"gitId":"petrickjerico"},"content":"            } catch (Exception e) {"},{"lineNumber":66,"author":{"gitId":"petrickjerico"},"content":"                throw new NullIndexException(commandWord);"},{"lineNumber":67,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"petrickjerico"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"petrickjerico"},"content":"        case \"update\":"},{"lineNumber":70,"author":{"gitId":"petrickjerico"},"content":"            try {"},{"lineNumber":71,"author":{"gitId":"petrickjerico"},"content":"                parseForUpdates(words[1].trim());"},{"lineNumber":72,"author":{"gitId":"petrickjerico"},"content":"            } catch (DukeException e) {"},{"lineNumber":73,"author":{"gitId":"petrickjerico"},"content":"                throw e;"},{"lineNumber":74,"author":{"gitId":"petrickjerico"},"content":"            } catch (Exception e) {"},{"lineNumber":75,"author":{"gitId":"petrickjerico"},"content":"                throw new NullIndexException(commandWord);"},{"lineNumber":76,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"petrickjerico"},"content":"            break;"},{"lineNumber":78,"author":{"gitId":"petrickjerico"},"content":"        case \"todo\":"},{"lineNumber":79,"author":{"gitId":"petrickjerico"},"content":"        case \"deadline\":"},{"lineNumber":80,"author":{"gitId":"petrickjerico"},"content":"        case \"event\":"},{"lineNumber":81,"author":{"gitId":"petrickjerico"},"content":"            try {"},{"lineNumber":82,"author":{"gitId":"petrickjerico"},"content":"                parseForDetails(words[1].trim());"},{"lineNumber":83,"author":{"gitId":"petrickjerico"},"content":"            } catch (Exception e) {"},{"lineNumber":84,"author":{"gitId":"petrickjerico"},"content":"                throw new NullTaskNameException(commandWord);"},{"lineNumber":85,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"petrickjerico"},"content":"            break;"},{"lineNumber":87,"author":{"gitId":"petrickjerico"},"content":"        case \"find\":"},{"lineNumber":88,"author":{"gitId":"petrickjerico"},"content":"            try {"},{"lineNumber":89,"author":{"gitId":"petrickjerico"},"content":"                parseForComparator(words[1].trim());"},{"lineNumber":90,"author":{"gitId":"petrickjerico"},"content":"            } catch (Exception e) {"},{"lineNumber":91,"author":{"gitId":"petrickjerico"},"content":"                throw new EmptyComparatorException(commandWord);"},{"lineNumber":92,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"petrickjerico"},"content":"            break;"},{"lineNumber":94,"author":{"gitId":"petrickjerico"},"content":"        default:"},{"lineNumber":95,"author":{"gitId":"petrickjerico"},"content":"            throw new DukeException(commandWord);"},{"lineNumber":96,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":99,"author":{"gitId":"petrickjerico"},"content":"    private void parseForNumber(String remain) throws DukeException {"},{"lineNumber":100,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"petrickjerico"},"content":"            taskNumber \u003d Integer.parseInt(remain);"},{"lineNumber":102,"author":{"gitId":"petrickjerico"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":103,"author":{"gitId":"petrickjerico"},"content":"            throw new NullIndexException(commandWord);"},{"lineNumber":104,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":107,"author":{"gitId":"petrickjerico"},"content":"    private void parseForDetails(String remain) {"},{"lineNumber":108,"author":{"gitId":"petrickjerico"},"content":"        assert remain.contains(\"/\") : \"Remaining string must contain \u0027/\u0027.\";"},{"lineNumber":109,"author":{"gitId":"petrickjerico"},"content":"        String[] words \u003d remain.split(\"/\", 2);"},{"lineNumber":110,"author":{"gitId":"petrickjerico"},"content":"        taskName \u003d words[0].trim();"},{"lineNumber":111,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":112,"author":{"gitId":"petrickjerico"},"content":"        if (words.length \u003c 2) {"},{"lineNumber":113,"author":{"gitId":"petrickjerico"},"content":"            taskDate \u003d \"\";"},{"lineNumber":114,"author":{"gitId":"petrickjerico"},"content":"        } else {"},{"lineNumber":115,"author":{"gitId":"petrickjerico"},"content":"            String[] unformatted \u003d words[1].split(\" \", 2);"},{"lineNumber":116,"author":{"gitId":"petrickjerico"},"content":"            taskDate \u003d unformatted[1];"},{"lineNumber":117,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":120,"author":{"gitId":"petrickjerico"},"content":"    private void parseForComparator(String remain) throws DukeException {"},{"lineNumber":121,"author":{"gitId":"petrickjerico"},"content":"        String trimmedRemain \u003d remain.trim();"},{"lineNumber":122,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":123,"author":{"gitId":"petrickjerico"},"content":"        if (trimmedRemain.isBlank()) {"},{"lineNumber":124,"author":{"gitId":"petrickjerico"},"content":"            comparator \u003d \"\";"},{"lineNumber":125,"author":{"gitId":"petrickjerico"},"content":"            throw new EmptyComparatorException(commandWord);"},{"lineNumber":126,"author":{"gitId":"petrickjerico"},"content":"        } else {"},{"lineNumber":127,"author":{"gitId":"petrickjerico"},"content":"            comparator \u003d trimmedRemain;"},{"lineNumber":128,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":131,"author":{"gitId":"petrickjerico"},"content":"    private void parseForUpdates(String trim) throws DukeException {"},{"lineNumber":132,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":133,"author":{"gitId":"petrickjerico"},"content":"            String[] updates \u003d trim.split(\" \", 3);"},{"lineNumber":134,"author":{"gitId":"petrickjerico"},"content":"            parseForNumber(updates[0]);"},{"lineNumber":135,"author":{"gitId":"petrickjerico"},"content":"            changeWord \u003d updates[1];"},{"lineNumber":136,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":137,"author":{"gitId":"petrickjerico"},"content":"            switch (changeWord) {"},{"lineNumber":138,"author":{"gitId":"petrickjerico"},"content":"            case \"undo\":"},{"lineNumber":139,"author":{"gitId":"petrickjerico"},"content":"                break;"},{"lineNumber":140,"author":{"gitId":"petrickjerico"},"content":"            case \"name\":"},{"lineNumber":141,"author":{"gitId":"petrickjerico"},"content":"                changeTarget \u003d updates[2];"},{"lineNumber":142,"author":{"gitId":"petrickjerico"},"content":"                break;"},{"lineNumber":143,"author":{"gitId":"petrickjerico"},"content":"            case \"date\":"},{"lineNumber":144,"author":{"gitId":"petrickjerico"},"content":"                changeTarget \u003d updates[2];"},{"lineNumber":145,"author":{"gitId":"petrickjerico"},"content":"                LocalDate.parse(changeTarget);"},{"lineNumber":146,"author":{"gitId":"petrickjerico"},"content":"                break;"},{"lineNumber":147,"author":{"gitId":"petrickjerico"},"content":"            default:"},{"lineNumber":148,"author":{"gitId":"petrickjerico"},"content":"                assert false : changeWord;"},{"lineNumber":149,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"petrickjerico"},"content":"        } catch (Exception e) {"},{"lineNumber":151,"author":{"gitId":"petrickjerico"},"content":"            throw new InvalidUpdateException(commandWord);"},{"lineNumber":152,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":155,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"petrickjerico"},"content":"     * Class getter routines."},{"lineNumber":157,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"petrickjerico"},"content":"    public String getCommandWord() {"},{"lineNumber":159,"author":{"gitId":"petrickjerico"},"content":"        return commandWord;"},{"lineNumber":160,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":162,"author":{"gitId":"petrickjerico"},"content":"    public String getTaskName() {"},{"lineNumber":163,"author":{"gitId":"petrickjerico"},"content":"        return taskName;"},{"lineNumber":164,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":166,"author":{"gitId":"petrickjerico"},"content":"    public String getTaskDate() {"},{"lineNumber":167,"author":{"gitId":"petrickjerico"},"content":"        return taskDate;"},{"lineNumber":168,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":170,"author":{"gitId":"petrickjerico"},"content":"    public Integer getTaskNumber() {"},{"lineNumber":171,"author":{"gitId":"petrickjerico"},"content":"        return taskNumber;"},{"lineNumber":172,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":174,"author":{"gitId":"petrickjerico"},"content":"    public String getChangeWord() {"},{"lineNumber":175,"author":{"gitId":"petrickjerico"},"content":"        return changeWord;"},{"lineNumber":176,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":178,"author":{"gitId":"petrickjerico"},"content":"    public String getChangeTarget() {"},{"lineNumber":179,"author":{"gitId":"petrickjerico"},"content":"        return changeTarget;"},{"lineNumber":180,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":181}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"import duke.task.TaskType;"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"    public static final String LOAD_FAILED \u003d \"Oops, load was unsuccessful!\";"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"    public static final String SAVE_FAILED \u003d \"Oops, save was unsuccessful!\";"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"    private String filePath;"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"    public Storage(String filePath) {"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"     * Loads existing Duke save file before running."},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"     * @return an ArrayList of Tasks for TaskList."},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"    public ArrayList\u003cTask\u003e load() {"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"            Scanner input \u003d new Scanner(file);"},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":"            while (input.hasNextLine()) {"},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":"                String nextLine \u003d input.nextLine();"},{"lineNumber":35,"author":{"gitId":"petrickjerico"},"content":"                String[] taskDetails \u003d nextLine.split(\":\");"},{"lineNumber":36,"author":{"gitId":"petrickjerico"},"content":"                String taskType \u003d taskDetails[0];"},{"lineNumber":37,"author":{"gitId":"petrickjerico"},"content":"                boolean taskIsDone \u003d taskDetails[1].startsWith(\"1\");"},{"lineNumber":38,"author":{"gitId":"petrickjerico"},"content":"                String taskName \u003d taskDetails[2];"},{"lineNumber":39,"author":{"gitId":"petrickjerico"},"content":"                String taskDate \u003d taskDetails.length \u003c 4 ? \"\" : taskDetails[3];"},{"lineNumber":40,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":41,"author":{"gitId":"petrickjerico"},"content":"                if (!TaskType.isMember(taskType)) {"},{"lineNumber":42,"author":{"gitId":"petrickjerico"},"content":"                    throw new DukeException(taskType);"},{"lineNumber":43,"author":{"gitId":"petrickjerico"},"content":"                } else {"},{"lineNumber":44,"author":{"gitId":"petrickjerico"},"content":"                    TaskType task \u003d TaskType.getTaskType(taskType);"},{"lineNumber":45,"author":{"gitId":"petrickjerico"},"content":"                    task.addToTasks(result, taskName, taskIsDone, taskDate);"},{"lineNumber":46,"author":{"gitId":"petrickjerico"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"petrickjerico"},"content":"            input.close();"},{"lineNumber":49,"author":{"gitId":"petrickjerico"},"content":"        } catch (Exception e) {"},{"lineNumber":50,"author":{"gitId":"petrickjerico"},"content":"            System.out.println(LOAD_FAILED);"},{"lineNumber":51,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":53,"author":{"gitId":"petrickjerico"},"content":"        assert result.size() \u003e 0 : \"The load failed, or the original save file was invalid.\";"},{"lineNumber":54,"author":{"gitId":"petrickjerico"},"content":"        return result;"},{"lineNumber":55,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":57,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"petrickjerico"},"content":"     * Saves and/or overwrites the current Tasks into a Duke save file."},{"lineNumber":59,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"petrickjerico"},"content":"     * @param taskList The final state of TaskList as Duke closes."},{"lineNumber":61,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"petrickjerico"},"content":"    public void save(TaskList taskList) {"},{"lineNumber":63,"author":{"gitId":"petrickjerico"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":64,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"petrickjerico"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":66,"author":{"gitId":"petrickjerico"},"content":"            // System.getProperty(\"ip\"), \"duke_save_data.txt\""},{"lineNumber":67,"author":{"gitId":"petrickjerico"},"content":"            FileWriter output \u003d new FileWriter(file);"},{"lineNumber":68,"author":{"gitId":"petrickjerico"},"content":"            for (Task task : tasks) {"},{"lineNumber":69,"author":{"gitId":"petrickjerico"},"content":"                String taskType \u003d task.getClass().getSimpleName().toLowerCase();"},{"lineNumber":70,"author":{"gitId":"petrickjerico"},"content":"                TaskType type \u003d TaskType.getTaskType(taskType);"},{"lineNumber":71,"author":{"gitId":"petrickjerico"},"content":"                String saveLine \u003d type.generateSaveLine(task.isDone, task.taskName, task.getDate());"},{"lineNumber":72,"author":{"gitId":"petrickjerico"},"content":"                output.write(saveLine);"},{"lineNumber":73,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"petrickjerico"},"content":"            output.close();"},{"lineNumber":75,"author":{"gitId":"petrickjerico"},"content":"        } catch (Exception e) {"},{"lineNumber":76,"author":{"gitId":"petrickjerico"},"content":"            System.out.println(SAVE_FAILED);"},{"lineNumber":77,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":79}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":" * Represents a work that needs to be done."},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":" * Contains a name of that work, represented by a String."},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":" * Contains the done status of the work. represented by a boolean."},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"public abstract class Task implements Cloneable {"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"    protected String taskName;"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"    protected boolean isDone;"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"    public Task(String taskName) {"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"        this.taskName \u003d taskName.trim();"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"     * Class getter and setter routines."},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"    public String getTaskName() {"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"        return taskName;"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"    public void setTaskName(String taskName) {"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"    public void markAsDone() {"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"        this.isDone \u003d true;"},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":"    public void markAsUndone() { this.isDone \u003d false; }"},{"lineNumber":35,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":36,"author":{"gitId":"petrickjerico"},"content":"    public abstract String getDate();"},{"lineNumber":37,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":38,"author":{"gitId":"petrickjerico"},"content":"    public abstract void setDate(LocalDate taskDate);"},{"lineNumber":39,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":40,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"petrickjerico"},"content":"     * Visualises the done status of a task with an icon."},{"lineNumber":42,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"petrickjerico"},"content":"     * @return String version of check and cross, whichever needed."},{"lineNumber":44,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"petrickjerico"},"content":"    public String getStatusIcon() {"},{"lineNumber":46,"author":{"gitId":"petrickjerico"},"content":"        return isDone ?  \"\\u2713\" : \"\\u2718\";"},{"lineNumber":47,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":49,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"petrickjerico"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), taskName);"},{"lineNumber":52,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":54,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"petrickjerico"},"content":"    protected Object clone() throws CloneNotSupportedException {"},{"lineNumber":56,"author":{"gitId":"petrickjerico"},"content":"        return super.clone();"},{"lineNumber":57,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":58}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import duke.exception.*;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"import duke.task.TaskType;"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"import java.util.Objects;"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"import java.util.stream.Collectors;"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":" * Represents the list of tasks together with a counter"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":" * to keep track of pending tasks."},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"public class TaskList {"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"    private static final String DONE_MESSAGE \u003d \"Good job! This task is now marked done:\";"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"    private static final String DELETED_MESSAGE \u003d \"Alright! This task is now deleted:\";"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    private static final String LIST_HINT \u003d \"(type \u0027list\u0027 to see changes.)\";"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"    private static final String NO_MATCH_MESSAGE \u003d \"No matches found!\";"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"    private static final String UPDATED_MESSAGE \u003d \"Got it! Your task has been updated.\";"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"    private int numOfPendingTasks;"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"    private boolean toReturnAsValid \u003d true;"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"    TaskList() {"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"        this.numOfPendingTasks \u003d 0;"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":"        this.numOfPendingTasks \u003d 0;"},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":"        for (Task task : tasks) {"},{"lineNumber":35,"author":{"gitId":"petrickjerico"},"content":"            if (!task.isDone) {"},{"lineNumber":36,"author":{"gitId":"petrickjerico"},"content":"                incrementPendingTasks();"},{"lineNumber":37,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":41,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"petrickjerico"},"content":"     * Checks if a call to task index in the CLI is valid."},{"lineNumber":43,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"petrickjerico"},"content":"     * @param target Integer number."},{"lineNumber":45,"author":{"gitId":"petrickjerico"},"content":"     * @return true if target is usable as an array access."},{"lineNumber":46,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"petrickjerico"},"content":"    public boolean isWithinValidRange(int target) {"},{"lineNumber":48,"author":{"gitId":"petrickjerico"},"content":"        return target \u003e\u003d 0 \u0026\u0026 target \u003c tasks.size();"},{"lineNumber":49,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":51,"author":{"gitId":"petrickjerico"},"content":"    public void incrementPendingTasks() {"},{"lineNumber":52,"author":{"gitId":"petrickjerico"},"content":"        this.numOfPendingTasks++;"},{"lineNumber":53,"author":{"gitId":"petrickjerico"},"content":"        assert numOfPendingTasks \u003e 0 : \"Amount of pending tasks was negative; something went wrong.\";"},{"lineNumber":54,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":56,"author":{"gitId":"petrickjerico"},"content":"    public void decrementPendingTasks() {"},{"lineNumber":57,"author":{"gitId":"petrickjerico"},"content":"        this.numOfPendingTasks--;"},{"lineNumber":58,"author":{"gitId":"petrickjerico"},"content":"        assert numOfPendingTasks \u003e\u003d 0 : \"Called decrement to an empty list; should be impossible.\";"},{"lineNumber":59,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":61,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"petrickjerico"},"content":"     * Gets the intended access index of a Task in TaskList."},{"lineNumber":63,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"petrickjerico"},"content":"     * @param parser Parser which contains the processed command line."},{"lineNumber":65,"author":{"gitId":"petrickjerico"},"content":"     * @return The corresponding array access."},{"lineNumber":66,"author":{"gitId":"petrickjerico"},"content":"     * @throws DukeException If the task is empty,"},{"lineNumber":67,"author":{"gitId":"petrickjerico"},"content":"     *         no integer index provided,"},{"lineNumber":68,"author":{"gitId":"petrickjerico"},"content":"     *         or index given is out of range."},{"lineNumber":69,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"petrickjerico"},"content":"    public int getTaskID(Parser parser) throws DukeException {"},{"lineNumber":71,"author":{"gitId":"petrickjerico"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":72,"author":{"gitId":"petrickjerico"},"content":"            validate(false);"},{"lineNumber":73,"author":{"gitId":"petrickjerico"},"content":"            throw new EmptyTasksException(\"Task is empty\");"},{"lineNumber":74,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"petrickjerico"},"content":"        if (Objects.isNull(parser.getTaskNumber())) {"},{"lineNumber":76,"author":{"gitId":"petrickjerico"},"content":"            validate(false);"},{"lineNumber":77,"author":{"gitId":"petrickjerico"},"content":"            throw new NullIndexException(\"Target is null\");"},{"lineNumber":78,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":80,"author":{"gitId":"petrickjerico"},"content":"        int target \u003d parser.getTaskNumber() - 1;"},{"lineNumber":81,"author":{"gitId":"petrickjerico"},"content":"        if (!isWithinValidRange(target)) {"},{"lineNumber":82,"author":{"gitId":"petrickjerico"},"content":"            validate(false);"},{"lineNumber":83,"author":{"gitId":"petrickjerico"},"content":"            throw new RangeIndexException(\"Range is invalid\");"},{"lineNumber":84,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":86,"author":{"gitId":"petrickjerico"},"content":"        validate(true);"},{"lineNumber":87,"author":{"gitId":"petrickjerico"},"content":"        return target;"},{"lineNumber":88,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":90,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"petrickjerico"},"content":"     * Attempts to check a Task as done, then display a success message."},{"lineNumber":92,"author":{"gitId":"petrickjerico"},"content":"     * If the checking as done fails, a fail message is displayed instead."},{"lineNumber":93,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"petrickjerico"},"content":"     * @param parser current {@code Parser}"},{"lineNumber":95,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"petrickjerico"},"content":"    public String done(Parser parser) {"},{"lineNumber":97,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":98,"author":{"gitId":"petrickjerico"},"content":"            Task targetTask \u003d tasks.get(getTaskID(parser));"},{"lineNumber":99,"author":{"gitId":"petrickjerico"},"content":"            if (targetTask.isDone) {"},{"lineNumber":100,"author":{"gitId":"petrickjerico"},"content":"                throw new AlreadyDoneIndexException(\"Task already done\");"},{"lineNumber":101,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"petrickjerico"},"content":"            targetTask.markAsDone();"},{"lineNumber":103,"author":{"gitId":"petrickjerico"},"content":"            decrementPendingTasks();"},{"lineNumber":104,"author":{"gitId":"petrickjerico"},"content":"            String toReturn \u003d DONE_MESSAGE + \"\\n\" + targetTask;"},{"lineNumber":105,"author":{"gitId":"petrickjerico"},"content":"            validate(true);"},{"lineNumber":106,"author":{"gitId":"petrickjerico"},"content":"            return Ui.displayMessage(toReturn);"},{"lineNumber":107,"author":{"gitId":"petrickjerico"},"content":"        } catch (DukeException e) {"},{"lineNumber":108,"author":{"gitId":"petrickjerico"},"content":"            validate(false);"},{"lineNumber":109,"author":{"gitId":"petrickjerico"},"content":"            return Ui.displayMessage(e.toString());"},{"lineNumber":110,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":113,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"petrickjerico"},"content":"     * Attempts to delete a Task, then display a success message"},{"lineNumber":115,"author":{"gitId":"petrickjerico"},"content":"     * If the deletion fails, a fail message is displayed instead"},{"lineNumber":116,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"petrickjerico"},"content":"     * @param parser current {@code Parser}"},{"lineNumber":118,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"petrickjerico"},"content":"    public String delete(Parser parser) {"},{"lineNumber":120,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":121,"author":{"gitId":"petrickjerico"},"content":"            Task targetTask \u003d tasks.get(getTaskID(parser));"},{"lineNumber":122,"author":{"gitId":"petrickjerico"},"content":"            tasks.remove(targetTask);"},{"lineNumber":123,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":124,"author":{"gitId":"petrickjerico"},"content":"            if (!targetTask.isDone) {"},{"lineNumber":125,"author":{"gitId":"petrickjerico"},"content":"                decrementPendingTasks();"},{"lineNumber":126,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":128,"author":{"gitId":"petrickjerico"},"content":"            String toReturn \u003d DELETED_MESSAGE + \"\\n\" + targetTask;"},{"lineNumber":129,"author":{"gitId":"petrickjerico"},"content":"            validate(true);"},{"lineNumber":130,"author":{"gitId":"petrickjerico"},"content":"            return Ui.displayMessage(toReturn);"},{"lineNumber":131,"author":{"gitId":"petrickjerico"},"content":"        } catch (DukeException e) {"},{"lineNumber":132,"author":{"gitId":"petrickjerico"},"content":"            validate(false);"},{"lineNumber":133,"author":{"gitId":"petrickjerico"},"content":"            return Ui.displayMessage(e.toString());"},{"lineNumber":134,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":137,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"petrickjerico"},"content":"     * Attempts to add a Task to the list, then display a success message."},{"lineNumber":139,"author":{"gitId":"petrickjerico"},"content":"     * If the addition fails, a fail message is displayed instead."},{"lineNumber":140,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"petrickjerico"},"content":"     * @param parser current {@code Parser}"},{"lineNumber":142,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"petrickjerico"},"content":"    public String add(Parser parser) {"},{"lineNumber":144,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":145,"author":{"gitId":"petrickjerico"},"content":"            String commandWord \u003d parser.getCommandWord();"},{"lineNumber":146,"author":{"gitId":"petrickjerico"},"content":"            String taskName \u003d parser.getTaskName();"},{"lineNumber":147,"author":{"gitId":"petrickjerico"},"content":"            String taskDate \u003d parser.getTaskDate();"},{"lineNumber":148,"author":{"gitId":"petrickjerico"},"content":"            TaskType task \u003d TaskType.getTaskType(commandWord);"},{"lineNumber":149,"author":{"gitId":"petrickjerico"},"content":"            task.addToTasks(tasks, taskName, false, taskDate);"},{"lineNumber":150,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":151,"author":{"gitId":"petrickjerico"},"content":"            int size \u003d tasks.size();"},{"lineNumber":152,"author":{"gitId":"petrickjerico"},"content":"            incrementPendingTasks();"},{"lineNumber":153,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":154,"author":{"gitId":"petrickjerico"},"content":"            String toReturn \u003d \"\u0027\" + taskName + \"\u0027 added to list!\\n\""},{"lineNumber":155,"author":{"gitId":"petrickjerico"},"content":"                    + tasks.get(size - 1) + \"\\n\""},{"lineNumber":156,"author":{"gitId":"petrickjerico"},"content":"                    + \"You now have \" + size + \" task(s) in your list.\\n\\n\""},{"lineNumber":157,"author":{"gitId":"petrickjerico"},"content":"                    + LIST_HINT;"},{"lineNumber":158,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":159,"author":{"gitId":"petrickjerico"},"content":"            validate(true);"},{"lineNumber":160,"author":{"gitId":"petrickjerico"},"content":"            return Ui.displayMessage(toReturn);"},{"lineNumber":161,"author":{"gitId":"petrickjerico"},"content":"        } catch (DukeException e) {"},{"lineNumber":162,"author":{"gitId":"petrickjerico"},"content":"            validate(false);"},{"lineNumber":163,"author":{"gitId":"petrickjerico"},"content":"            return Ui.displayMessage(e.toString());"},{"lineNumber":164,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":167,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"petrickjerico"},"content":"     * Displays a list of Tasks that contains a given String."},{"lineNumber":169,"author":{"gitId":"petrickjerico"},"content":"     * If not found, displays an alternative null message."},{"lineNumber":170,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":171,"author":{"gitId":"petrickjerico"},"content":"     * @param parser current {@code Parser}"},{"lineNumber":172,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"petrickjerico"},"content":"    public String find(Parser parser) {"},{"lineNumber":174,"author":{"gitId":"petrickjerico"},"content":"        List\u003cTask\u003e matches \u003d getMatchingTask(parser.comparator);"},{"lineNumber":175,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":176,"author":{"gitId":"petrickjerico"},"content":"        if (matches.isEmpty()) {"},{"lineNumber":177,"author":{"gitId":"petrickjerico"},"content":"            validate(false);"},{"lineNumber":178,"author":{"gitId":"petrickjerico"},"content":"            return Ui.displayMessage(NO_MATCH_MESSAGE);"},{"lineNumber":179,"author":{"gitId":"petrickjerico"},"content":"        } else {"},{"lineNumber":180,"author":{"gitId":"petrickjerico"},"content":"            int count \u003d 1;"},{"lineNumber":181,"author":{"gitId":"petrickjerico"},"content":"            StringBuilder toReturn \u003d new StringBuilder(String.format(\"Found %d match(es) for \u0027%s\u0027:\", matches.size(), parser.comparator));"},{"lineNumber":182,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":183,"author":{"gitId":"petrickjerico"},"content":"            for (Task task : matches) {"},{"lineNumber":184,"author":{"gitId":"petrickjerico"},"content":"                toReturn.append(String.format(\"\\n   %d. %s\", count, task.toString()));"},{"lineNumber":185,"author":{"gitId":"petrickjerico"},"content":"                count++;"},{"lineNumber":186,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":187,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":188,"author":{"gitId":"petrickjerico"},"content":"            validate(true);"},{"lineNumber":189,"author":{"gitId":"petrickjerico"},"content":"            return Ui.displayMessage(toReturn.toString());"},{"lineNumber":190,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":193,"author":{"gitId":"petrickjerico"},"content":"    private List\u003cTask\u003e getMatchingTask(String comparator) {"},{"lineNumber":194,"author":{"gitId":"petrickjerico"},"content":"        boolean noComparator \u003d comparator.isBlank();"},{"lineNumber":195,"author":{"gitId":"petrickjerico"},"content":"        if (noComparator) {"},{"lineNumber":196,"author":{"gitId":"petrickjerico"},"content":"            return new ArrayList\u003c\u003e();"},{"lineNumber":197,"author":{"gitId":"petrickjerico"},"content":"        } else {"},{"lineNumber":198,"author":{"gitId":"petrickjerico"},"content":"            return tasks.stream()"},{"lineNumber":199,"author":{"gitId":"petrickjerico"},"content":"                    .filter(task -\u003e task.getTaskName().contains(comparator))"},{"lineNumber":200,"author":{"gitId":"petrickjerico"},"content":"                    .collect(Collectors.toList());"},{"lineNumber":201,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":204,"author":{"gitId":"petrickjerico"},"content":"    public String update(Parser parser) {"},{"lineNumber":205,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":206,"author":{"gitId":"petrickjerico"},"content":"            Task targetTask \u003d tasks.get(getTaskID(parser));"},{"lineNumber":207,"author":{"gitId":"petrickjerico"},"content":"            Task clonedTask \u003d (Task) targetTask.clone();"},{"lineNumber":208,"author":{"gitId":"petrickjerico"},"content":"            String changeWord \u003d parser.getChangeWord();"},{"lineNumber":209,"author":{"gitId":"petrickjerico"},"content":"            String target \u003d parser.getChangeTarget();"},{"lineNumber":210,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":211,"author":{"gitId":"petrickjerico"},"content":"            switch (changeWord) {"},{"lineNumber":212,"author":{"gitId":"petrickjerico"},"content":"            case \"name\":"},{"lineNumber":213,"author":{"gitId":"petrickjerico"},"content":"                targetTask.setTaskName(target);"},{"lineNumber":214,"author":{"gitId":"petrickjerico"},"content":"                break;"},{"lineNumber":215,"author":{"gitId":"petrickjerico"},"content":"            case \"date\":"},{"lineNumber":216,"author":{"gitId":"petrickjerico"},"content":"                targetTask.setDate(LocalDate.parse(target));"},{"lineNumber":217,"author":{"gitId":"petrickjerico"},"content":"                break;"},{"lineNumber":218,"author":{"gitId":"petrickjerico"},"content":"            case \"undo\":"},{"lineNumber":219,"author":{"gitId":"petrickjerico"},"content":"                if (targetTask.isDone) {"},{"lineNumber":220,"author":{"gitId":"petrickjerico"},"content":"                    targetTask.markAsUndone();"},{"lineNumber":221,"author":{"gitId":"petrickjerico"},"content":"                    incrementPendingTasks();"},{"lineNumber":222,"author":{"gitId":"petrickjerico"},"content":"                } else {"},{"lineNumber":223,"author":{"gitId":"petrickjerico"},"content":"                    targetTask.markAsDone();"},{"lineNumber":224,"author":{"gitId":"petrickjerico"},"content":"                    decrementPendingTasks();"},{"lineNumber":225,"author":{"gitId":"petrickjerico"},"content":"                }"},{"lineNumber":226,"author":{"gitId":"petrickjerico"},"content":"                break;"},{"lineNumber":227,"author":{"gitId":"petrickjerico"},"content":"            default:"},{"lineNumber":228,"author":{"gitId":"petrickjerico"},"content":"                assert false : changeWord;"},{"lineNumber":229,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":230,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":231,"author":{"gitId":"petrickjerico"},"content":"            String toReturn \u003d UPDATED_MESSAGE + \"\\n\""},{"lineNumber":232,"author":{"gitId":"petrickjerico"},"content":"                    + \"  from:  \" + clonedTask + \"\\n\""},{"lineNumber":233,"author":{"gitId":"petrickjerico"},"content":"                    + \"  to:    \" + targetTask + \"\\n\\n\""},{"lineNumber":234,"author":{"gitId":"petrickjerico"},"content":"                    + LIST_HINT;"},{"lineNumber":235,"author":{"gitId":"petrickjerico"},"content":"            validate(true);"},{"lineNumber":236,"author":{"gitId":"petrickjerico"},"content":"            return Ui.displayMessage(toReturn);"},{"lineNumber":237,"author":{"gitId":"petrickjerico"},"content":"        } catch (DukeException | CloneNotSupportedException e) {"},{"lineNumber":238,"author":{"gitId":"petrickjerico"},"content":"            validate(false);"},{"lineNumber":239,"author":{"gitId":"petrickjerico"},"content":"            return Ui.displayMessage(e.toString());"},{"lineNumber":240,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":242,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":243,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":244,"author":{"gitId":"petrickjerico"},"content":"     * Creates a clone of the current TaskList (for testing purposes)."},{"lineNumber":245,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":246,"author":{"gitId":"petrickjerico"},"content":"     * @return a shallow copy of this with no element references."},{"lineNumber":247,"author":{"gitId":"petrickjerico"},"content":"     * @throws CloneNotSupportedException when cloning process is invalid."},{"lineNumber":248,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":249,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":250,"author":{"gitId":"petrickjerico"},"content":"    protected Object clone() throws CloneNotSupportedException {"},{"lineNumber":251,"author":{"gitId":"petrickjerico"},"content":"        return super.clone();"},{"lineNumber":252,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":254,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":255,"author":{"gitId":"petrickjerico"},"content":"     * Class getter and setter routines."},{"lineNumber":256,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":257,"author":{"gitId":"petrickjerico"},"content":"    public List\u003cTask\u003e getTasks() {"},{"lineNumber":258,"author":{"gitId":"petrickjerico"},"content":"        return tasks;"},{"lineNumber":259,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":261,"author":{"gitId":"petrickjerico"},"content":"    public int getNumOfPendingTasks() {"},{"lineNumber":262,"author":{"gitId":"petrickjerico"},"content":"        return numOfPendingTasks;"},{"lineNumber":263,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":265,"author":{"gitId":"petrickjerico"},"content":"    public boolean isToReturnAsValid() {"},{"lineNumber":266,"author":{"gitId":"petrickjerico"},"content":"        return toReturnAsValid;"},{"lineNumber":267,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":269,"author":{"gitId":"petrickjerico"},"content":"    private void validate(boolean toReturnAsValid) {"},{"lineNumber":270,"author":{"gitId":"petrickjerico"},"content":"        this.toReturnAsValid \u003d toReturnAsValid;"},{"lineNumber":271,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"petrickjerico"},"content":"}"},{"lineNumber":273,"author":{"gitId":"petrickjerico"},"content":""}],"authorContributionMap":{"petrickjerico":273}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"    public static final String WELCOME \u003d \"Duke at your service!\\n\""},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"            + \" ____        _        \\n\""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\""},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"            + \"How can I help you?\\n\""},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"            + \"Type in your orders below.\\n\\n\""},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"            + \"(type \u0027help\u0027 to show command list)\";"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"    public static final String HELP \u003d \"List of commands:\\n\\n\" +"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"            \"bye:\\n\" +"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"            \"saves and exits Duke\\n\\n\" +"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"            \"list:\\n\" +"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"            \"shows tasks as numbered list\\n\\n\" +"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"            \"help:\\n\" +"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"            \"shows the command list\\n\\n\" +"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"            \"done \u003cindex\u003e:\\n\" +"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"            \"checks task at \u003cindex\u003e as done\\n\\n\" +"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"            \"delete \u003cindex\u003e:\\n\" +"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"            \"deletes task at \u003cindex\u003e\\n\\n\" +"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"            \"find \u003ckeyword\u003e:\\n\" +"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"            \"finds tasks containing \u003ckeyword\u003e\\n\\n\" +"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"            \"update:\\n\" +"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"            \"changes details of a task\\n\\n\" +"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"            \"deadline/todo/event:\\n\" +"},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":"            \"creates a task\";"},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":"    public static final String GOODBYE \u003d \"Alright, see you soon!\";"},{"lineNumber":35,"author":{"gitId":"petrickjerico"},"content":"    public static final String LOADING_FAILED \u003d \"Loading failed: Duke continues with empty duke.TaskList.\";"},{"lineNumber":36,"author":{"gitId":"petrickjerico"},"content":"    public static final String STAR_LINE \u003d \"––––––––––––––––––––– *** –––––––––––––––––––––\";"},{"lineNumber":37,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":38,"author":{"gitId":"petrickjerico"},"content":"    public static void displayStarLine() {"},{"lineNumber":39,"author":{"gitId":"petrickjerico"},"content":"        System.out.println(STAR_LINE);"},{"lineNumber":40,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":42,"author":{"gitId":"petrickjerico"},"content":"    public static void displayLoadingError() {"},{"lineNumber":43,"author":{"gitId":"petrickjerico"},"content":"        displayMessage(LOADING_FAILED);"},{"lineNumber":44,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":46,"author":{"gitId":"petrickjerico"},"content":"    public static String displayWelcome() {"},{"lineNumber":47,"author":{"gitId":"petrickjerico"},"content":"        return displayMessage(WELCOME);"},{"lineNumber":48,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":50,"author":{"gitId":"petrickjerico"},"content":"    public static String displayGoodbye() {"},{"lineNumber":51,"author":{"gitId":"petrickjerico"},"content":"        return displayMessage(GOODBYE);"},{"lineNumber":52,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":54,"author":{"gitId":"petrickjerico"},"content":"    public static String displayHelp() { return displayMessage(HELP);}"},{"lineNumber":55,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":56,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"petrickjerico"},"content":"     * Displays a message between two separator lines."},{"lineNumber":58,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"petrickjerico"},"content":"     * @param message current {@code TaskList}"},{"lineNumber":60,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"petrickjerico"},"content":"    public static String displayMessage(String message) {"},{"lineNumber":62,"author":{"gitId":"petrickjerico"},"content":"        displayStarLine();"},{"lineNumber":63,"author":{"gitId":"petrickjerico"},"content":"        System.out.println(message);"},{"lineNumber":64,"author":{"gitId":"petrickjerico"},"content":"        displayStarLine();"},{"lineNumber":65,"author":{"gitId":"petrickjerico"},"content":"        System.out.println();"},{"lineNumber":66,"author":{"gitId":"petrickjerico"},"content":"        return message;"},{"lineNumber":67,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":69,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"petrickjerico"},"content":"     * Displays the tasks in {@code TaskList} as a numbered list."},{"lineNumber":71,"author":{"gitId":"petrickjerico"},"content":"     * "},{"lineNumber":72,"author":{"gitId":"petrickjerico"},"content":"     * @param taskList current {@code TaskList}"},{"lineNumber":73,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"petrickjerico"},"content":"    public static String displayList(TaskList taskList) {"},{"lineNumber":75,"author":{"gitId":"petrickjerico"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":76,"author":{"gitId":"petrickjerico"},"content":"        int pending \u003d taskList.getNumOfPendingTasks();"},{"lineNumber":77,"author":{"gitId":"petrickjerico"},"content":"        int currId \u003d 1;"},{"lineNumber":78,"author":{"gitId":"petrickjerico"},"content":"        StringBuilder toReturn \u003d new StringBuilder(\"TO-DO LIST:\\n\""},{"lineNumber":79,"author":{"gitId":"petrickjerico"},"content":"                + String.format(\"%d pending\", pending));"},{"lineNumber":80,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":81,"author":{"gitId":"petrickjerico"},"content":"        for (Task t : tasks) {"},{"lineNumber":82,"author":{"gitId":"petrickjerico"},"content":"            toReturn.append(String.format(\"\\n   %d. %s\", currId, t));"},{"lineNumber":83,"author":{"gitId":"petrickjerico"},"content":"            currId++;"},{"lineNumber":84,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":86,"author":{"gitId":"petrickjerico"},"content":"        return displayMessage(toReturn.toString());"},{"lineNumber":87,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":88}},{"path":"src/main/java/duke/exception/AlreadyDoneIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"public class AlreadyDoneIndexException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"    public AlreadyDoneIndexException(String command) {"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"        super(command);"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"        return \"This task is already done!\";"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":13}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"    protected String command;"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"    public DukeException(String command) {"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"        super(\"Error caused by input: \" + command);"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"        this.command \u003d command;"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"        return \"Sorry, I can\u0027t understand your command.\";"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":15}},{"path":"src/main/java/duke/exception/EmptyComparatorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"public class EmptyComparatorException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"    public EmptyComparatorException(String command) {"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"        super(command);"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"        return \"Comparator cannot be blank!\";"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":12}},{"path":"src/main/java/duke/exception/EmptyTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"public class EmptyTasksException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"    public EmptyTasksException(String command) {"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"        super(command);"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"        return \"Cannot operate on empty tasks list!\";"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":13}},{"path":"src/main/java/duke/exception/InvalidTaskDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"public class InvalidTaskDateException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"    public InvalidTaskDateException(String command) {"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"        super(command);"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"        return \"Cannot parse the given date\" + (command.isBlank() ? \"\" : \" for \" + command + \" \") + \"!\";"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":13}},{"path":"src/main/java/duke/exception/InvalidUpdateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"public class InvalidUpdateException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"    public InvalidUpdateException(String command) {"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"        super(command);"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"        return \"Can\u0027t update anything! Ensure the command is in this format:\" + \"\\n\""},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"                + \"    \u0027update [index] [what to change] [change to what]\u0027\" + \"\\n\\n\""},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"                + \"NOTE:\" + \"\\n\""},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"                + \"– check if the given index is valid\" + \"\\n\""},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"                + \"– when changing dates, check if the given date is of the form YYYY-MM-DD\";"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":16}},{"path":"src/main/java/duke/exception/NullIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"public class NullIndexException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"    public NullIndexException(String command) {"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"        super(command);"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"        return \"Please provide an integer index for \" + command + \"!\";"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":14}},{"path":"src/main/java/duke/exception/NullTaskDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"public class NullTaskDateException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"    public NullTaskDateException(String command) {"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"        super(command);"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"        String timeCommand;"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"        switch (command) {"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"        case \"deadline\":"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"            timeCommand \u003d \" using \u0027/by YYYY-MM-DD\u0027\";"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"            break;"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"        case \"event\":"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"            timeCommand \u003d \" using \u0027/at YYYY-MM-DD\u0027\";"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"            break;"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"        default:"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"            timeCommand \u003d \"\";"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"        return \"Please provide time to the \" + command + \" item\" + timeCommand + \"!\";"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":26}},{"path":"src/main/java/duke/exception/NullTaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"public class NullTaskNameException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"    public NullTaskNameException(String command) {"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"        super(command);"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"        return \"Please name the \" + command + \" item!\";"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":13}},{"path":"src/main/java/duke/exception/RangeIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"public class RangeIndexException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"    public RangeIndexException(String command) {"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"        super(command);"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"        return \"Index out of range!\";"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":13}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import duke.Task;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":" * Represents a type of {@code Task} that has a date"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":" * by which it should be finished."},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"public class Deadline extends Task {"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"    protected LocalDate taskDate;"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"    public Deadline(String taskName, LocalDate taskDate) {"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"        super(taskName);"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"        this.taskDate \u003d taskDate;"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"    public String getDate() {"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"        return taskDate.format(DateTimeFormatter.ISO_LOCAL_DATE);"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"    public void setDate(LocalDate taskDate) {"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"        this.taskDate \u003d taskDate;"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", getStatusIcon(), taskName, taskDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import duke.Task;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":" * Represents a type of {@code Task} that hs a date"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":" * at which it will occur."},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"public class Event extends Task {"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"    protected LocalDate taskDate;"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"    public Event(String taskName, LocalDate taskDate) {"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"        super(taskName);"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"        this.taskDate \u003d taskDate;"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"    public String getDate() {"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"        return taskDate.format(DateTimeFormatter.ISO_LOCAL_DATE);"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"    public void setDate(LocalDate taskDate) {"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"        this.taskDate \u003d taskDate;"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"        return String.format(\"[E][%s] %s (at: %s)\", getStatusIcon(), taskName, taskDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":33}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import duke.Task;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import duke.exception.InvalidTaskDateException;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import duke.exception.NullTaskDateException;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"import duke.exception.NullTaskNameException;"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"import java.time.LocalDate;"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"import java.util.EnumSet;"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"import java.util.HashMap;"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"import java.util.Map;"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":" * Enumerates the 3 types of {@code Task} and defines the behavior"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":" * when {@code Duke} calls to add and/or save a new task of any type."},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"public enum TaskType {"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"    DEADLINE(\"deadline\") {"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"        @Override"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"        public void addToTasks(List\u003cTask\u003e tasks, String taskName, boolean taskIsDone, String taskDate) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"            if (taskName.isBlank()) {"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"                throw new NullTaskNameException(\"deadline\");"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"            if (taskDate.isBlank()) {"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"                throw new NullTaskDateException(\"deadline\");"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"            try {"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"                Task task \u003d new Deadline(taskName, LocalDate.parse(taskDate));"},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":"                if (taskIsDone) {"},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":"                    task.markAsDone();"},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"petrickjerico"},"content":"                tasks.add(task);"},{"lineNumber":36,"author":{"gitId":"petrickjerico"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":37,"author":{"gitId":"petrickjerico"},"content":"                throw new InvalidTaskDateException(\"deadline\");"},{"lineNumber":38,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":40,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":42,"author":{"gitId":"petrickjerico"},"content":"        @Override"},{"lineNumber":43,"author":{"gitId":"petrickjerico"},"content":"        public String generateSaveLine(boolean taskIsDone, String taskName, String taskDate) {"},{"lineNumber":44,"author":{"gitId":"petrickjerico"},"content":"            return String.format(\"deadline:%s:%s:%s\\n\", taskIsDone ? \"1\" : \"0\", taskName, taskDate);"},{"lineNumber":45,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"petrickjerico"},"content":"    },"},{"lineNumber":47,"author":{"gitId":"petrickjerico"},"content":"    EVENT(\"event\") {"},{"lineNumber":48,"author":{"gitId":"petrickjerico"},"content":"        @Override"},{"lineNumber":49,"author":{"gitId":"petrickjerico"},"content":"        public void addToTasks(List\u003cTask\u003e tasks, String taskName, boolean taskIsDone, String taskDate) throws DukeException {"},{"lineNumber":50,"author":{"gitId":"petrickjerico"},"content":"            if (taskName.isBlank()) {"},{"lineNumber":51,"author":{"gitId":"petrickjerico"},"content":"                throw new NullTaskNameException(\"event\");"},{"lineNumber":52,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"petrickjerico"},"content":"            if (taskDate.isBlank()) {"},{"lineNumber":54,"author":{"gitId":"petrickjerico"},"content":"                throw new NullTaskDateException(\"event\");"},{"lineNumber":55,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":57,"author":{"gitId":"petrickjerico"},"content":"            try {"},{"lineNumber":58,"author":{"gitId":"petrickjerico"},"content":"                Task task \u003d new Event(taskName, LocalDate.parse(taskDate));"},{"lineNumber":59,"author":{"gitId":"petrickjerico"},"content":"                if (taskIsDone) {"},{"lineNumber":60,"author":{"gitId":"petrickjerico"},"content":"                    task.markAsDone();"},{"lineNumber":61,"author":{"gitId":"petrickjerico"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"petrickjerico"},"content":"                tasks.add(task);"},{"lineNumber":63,"author":{"gitId":"petrickjerico"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":64,"author":{"gitId":"petrickjerico"},"content":"                throw new InvalidTaskDateException(\"event\");"},{"lineNumber":65,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":68,"author":{"gitId":"petrickjerico"},"content":"        @Override"},{"lineNumber":69,"author":{"gitId":"petrickjerico"},"content":"        public String generateSaveLine(boolean taskIsDone, String taskName, String taskDate) {"},{"lineNumber":70,"author":{"gitId":"petrickjerico"},"content":"            return String.format(\"event:%s:%s:%s\\n\", taskIsDone ? \"1\" : \"0\", taskName, taskDate);"},{"lineNumber":71,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"petrickjerico"},"content":"    },"},{"lineNumber":73,"author":{"gitId":"petrickjerico"},"content":"    TODO(\"todo\") {"},{"lineNumber":74,"author":{"gitId":"petrickjerico"},"content":"        @Override"},{"lineNumber":75,"author":{"gitId":"petrickjerico"},"content":"        public void addToTasks(List\u003cTask\u003e tasks, String taskName, boolean taskIsDone, String taskDate) throws DukeException {"},{"lineNumber":76,"author":{"gitId":"petrickjerico"},"content":"            if (taskName.isBlank()) {"},{"lineNumber":77,"author":{"gitId":"petrickjerico"},"content":"                throw new NullTaskNameException(\"todo\");"},{"lineNumber":78,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"petrickjerico"},"content":"            Task task \u003d new ToDo(taskName);"},{"lineNumber":80,"author":{"gitId":"petrickjerico"},"content":"            if (taskIsDone) {"},{"lineNumber":81,"author":{"gitId":"petrickjerico"},"content":"                task.markAsDone();"},{"lineNumber":82,"author":{"gitId":"petrickjerico"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"petrickjerico"},"content":"            tasks.add(task);"},{"lineNumber":84,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":86,"author":{"gitId":"petrickjerico"},"content":"        @Override"},{"lineNumber":87,"author":{"gitId":"petrickjerico"},"content":"        public String generateSaveLine(boolean taskIsDone, String taskName, String taskDate) {"},{"lineNumber":88,"author":{"gitId":"petrickjerico"},"content":"            return String.format(\"todo:%s:%s\\n\", taskIsDone ? \"1\" : \"0\", taskName);"},{"lineNumber":89,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"petrickjerico"},"content":"    };"},{"lineNumber":91,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":92,"author":{"gitId":"petrickjerico"},"content":"    private static final Map\u003cString, TaskType\u003e nameToValueMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":93,"author":{"gitId":"petrickjerico"},"content":"    private final String lowerCase;"},{"lineNumber":94,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":95,"author":{"gitId":"petrickjerico"},"content":"    TaskType(String lowerCase) {"},{"lineNumber":96,"author":{"gitId":"petrickjerico"},"content":"        this.lowerCase \u003d lowerCase;"},{"lineNumber":97,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":99,"author":{"gitId":"petrickjerico"},"content":"    static {"},{"lineNumber":100,"author":{"gitId":"petrickjerico"},"content":"        for (TaskType type : EnumSet.allOf(TaskType.class)) {"},{"lineNumber":101,"author":{"gitId":"petrickjerico"},"content":"            nameToValueMap.put(type.lowerCase, type);"},{"lineNumber":102,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":105,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"petrickjerico"},"content":"     * Checks to see if a string is a representation of some {@code TaskType}"},{"lineNumber":107,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"petrickjerico"},"content":"     * @param name an input to check against"},{"lineNumber":109,"author":{"gitId":"petrickjerico"},"content":"     * @return true if the name exists as a {@code TaskType}"},{"lineNumber":110,"author":{"gitId":"petrickjerico"},"content":"     * @throws DukeException if the name is unrecognised"},{"lineNumber":111,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"petrickjerico"},"content":"    public static boolean isMember(String name) throws DukeException {"},{"lineNumber":113,"author":{"gitId":"petrickjerico"},"content":"        return nameToValueMap.containsKey(name);"},{"lineNumber":114,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":116,"author":{"gitId":"petrickjerico"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"petrickjerico"},"content":"     * Returns the TaskType represented by a given String input"},{"lineNumber":118,"author":{"gitId":"petrickjerico"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"petrickjerico"},"content":"     * @param lowerCase the lowe"},{"lineNumber":120,"author":{"gitId":"petrickjerico"},"content":"     * @return {@code TaskType} represented by input"},{"lineNumber":121,"author":{"gitId":"petrickjerico"},"content":"     * @throws DukeException if the name is unrecognised"},{"lineNumber":122,"author":{"gitId":"petrickjerico"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"petrickjerico"},"content":"    public static TaskType getTaskType(String lowerCase) throws DukeException {"},{"lineNumber":124,"author":{"gitId":"petrickjerico"},"content":"        if (!isMember(lowerCase)) {"},{"lineNumber":125,"author":{"gitId":"petrickjerico"},"content":"            throw new DukeException(lowerCase);"},{"lineNumber":126,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"petrickjerico"},"content":"        return nameToValueMap.get(lowerCase);"},{"lineNumber":128,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":130,"author":{"gitId":"petrickjerico"},"content":"    public abstract void addToTasks(List\u003cTask\u003e tasks, String taskName, boolean taskIsDone, String taskDate) throws DukeException;"},{"lineNumber":131,"author":{"gitId":"petrickjerico"},"content":"    public abstract String generateSaveLine(boolean taskIsDone, String taskName, String taskDate);"},{"lineNumber":132,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":132}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import duke.Task;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":" * Represents the simplest form of {@code Task}"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":" * that only contains a name."},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":" */"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"public class ToDo extends Task {"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"    public ToDo(String taskName) {"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"        super(taskName);"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    public String getDate() {"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"        return \"\";"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"    public void setDate(LocalDate taskDate) {"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"        // No dates to set here – method body is empty."},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"        return String.format(\"[T][%s] %s\", getStatusIcon(), taskName);"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":31}},{"path":"src/main/resources/view/DukeDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"\u003cfx:root alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" style\u003d\"-fx-background-radius: 30.0; -fx-background-color: peachpuff; -fx-padding: 10.0;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"            \u003copaqueInsets\u003e"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"                \u003cInsets /\u003e"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"            \u003c/opaqueInsets\u003e"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"            \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"                \u003cFont name\u003d\"Courier New\" size\u003d\"14.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"            \u003c/font\u003e"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"                \u003cInsets /\u003e"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"            \u003c/HBox.margin\u003e"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"        \u003c/Label\u003e"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"    \u003c/children\u003e"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"    \u003cpadding\u003e"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"    \u003c/padding\u003e"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"    \u003copaqueInsets\u003e"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"        \u003cInsets bottom\u003d\"10.0\" /\u003e"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"    \u003c/opaqueInsets\u003e"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"petrickjerico":28}},{"path":"src/main/resources/view/ErrorDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"\u003cfx:root alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" style\u003d\"-fx-background-radius: 30.0; -fx-background-color: lightcoral; -fx-padding: 10.0;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"            \u003copaqueInsets\u003e"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"                \u003cInsets /\u003e"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"            \u003c/opaqueInsets\u003e"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"            \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"                \u003cFont name\u003d\"Courier New\" size\u003d\"14.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"            \u003c/font\u003e"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"                \u003cInsets /\u003e"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"            \u003c/HBox.margin\u003e"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"        \u003c/Label\u003e"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"    \u003c/children\u003e"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"    \u003cpadding\u003e"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"    \u003c/padding\u003e"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"    \u003copaqueInsets\u003e"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"        \u003cInsets bottom\u003d\"10.0\" /\u003e"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"    \u003c/opaqueInsets\u003e"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"petrickjerico":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.Cursor?\u003e"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"        \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" layoutX\u003d\"318.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"32.0\" prefWidth\u003d\"76.0\" text\u003d\"Enter\"\u003e"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"         \u003ccursor\u003e"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"            \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"         \u003c/cursor\u003e\u003c/Button\u003e"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"        \u003cTextField fx:id\u003d\"userInput\" accessibleRole\u003d\"TOOLTIP\" layoutX\u003d\"6.0\" layoutY\u003d\"557.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"32.0\" prefWidth\u003d\"306.0\" promptText\u003d\"Your commands here...\" AnchorPane.bottomAnchor\u003d\"11.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"546.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"         \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" focusTraversable\u003d\"true\" prefHeight\u003d\"546.0\" prefWidth\u003d\"382.0\" style\u003d\"-fx-background-color: dimgray\"/\u003e"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"         \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"petrickjerico":23}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" style\u003d\"-fx-background-radius: 30.0; -fx-background-color: lightblue; -fx-padding: 10.0;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER_RIGHT\" contentDisplay\u003d\"RIGHT\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"         \u003copaqueInsets\u003e"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"            \u003cInsets /\u003e"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"         \u003c/opaqueInsets\u003e"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"         \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"            \u003cFont name\u003d\"Courier New Bold\" size\u003d\"14.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"         \u003c/font\u003e"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"            \u003cInsets /\u003e"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"         \u003c/HBox.margin\u003e"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"      \u003c/Label\u003e"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"    \u003c/children\u003e"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"    \u003cpadding\u003e"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"    \u003c/padding\u003e"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"   \u003copaqueInsets\u003e"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"      \u003cInsets bottom\u003d\"10.0\" /\u003e"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"   \u003c/opaqueInsets\u003e"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"petrickjerico":28}},{"path":"src/main/resources/view/WelcomeDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"\u003cfx:root alignment\u003d\"CENTER\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" style\u003d\"-fx-background-radius: 30.0; -fx-background-color: peachpuff; -fx-padding: 10.0;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" textAlignment\u003d\"CENTER\"\u003e"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"            \u003copaqueInsets\u003e"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"                \u003cInsets /\u003e"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"            \u003c/opaqueInsets\u003e"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"            \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"                \u003cFont name\u003d\"Courier New\" size\u003d\"14.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"            \u003c/font\u003e"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"                \u003cInsets /\u003e"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"            \u003c/HBox.margin\u003e"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":"        \u003c/Label\u003e"},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":"    \u003c/children\u003e"},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"    \u003cpadding\u003e"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"    \u003c/padding\u003e"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"    \u003copaqueInsets\u003e"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"        \u003cInsets bottom\u003d\"10.0\" /\u003e"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"    \u003c/opaqueInsets\u003e"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"petrickjerico":28}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":9}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"public class ParserTest {"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"    private final String TEST_TODO \u003d \"todo call mom\";"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"    private final String TEST_DEADLINE \u003d \"deadline homework /by 2020-08-29\";"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"    private final String TEST_DEADLINE_NO_NAME \u003d \"deadline\";"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"    private final String TEST_EVENT \u003d \"event seminar /at 2020-10-10\";"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"    private final String TEST_EVENT_NO_DATE \u003d \"event seminar\";"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"    private final String TEST_DONE \u003d \"done 1\";"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"    private final String TEST_DELETE_NO_INDEX \u003d \"delete\";"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"    private final String TEST_DELETE_INVALID_INDEX \u003d \"delete x\";"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    private Parser parser \u003d new Parser();"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"    public void getCommandWord_toDoItem_toDoReturned() throws Exception {"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"        parser.setCommandLine(TEST_TODO);"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(\"todo\", parser.getCommandWord());"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":"    public void getTaskName_toDoItem_taskNameReturned() throws Exception {"},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"        parser.setCommandLine(TEST_TODO);"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(\"call mom\", parser.getTaskName());"},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"petrickjerico"},"content":"    public void getTaskDate_toDoItem_blankReturned() throws Exception {"},{"lineNumber":36,"author":{"gitId":"petrickjerico"},"content":"        parser.setCommandLine(TEST_TODO);"},{"lineNumber":37,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(\"\", parser.getTaskDate());"},{"lineNumber":38,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":40,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"petrickjerico"},"content":"    public void getTaskDate_deadlineItem_taskDateReturned() throws Exception {"},{"lineNumber":42,"author":{"gitId":"petrickjerico"},"content":"        parser.setCommandLine(TEST_DEADLINE);"},{"lineNumber":43,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(\"2020-08-29\", parser.getTaskDate());"},{"lineNumber":44,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":46,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"petrickjerico"},"content":"    public void getTaskName_deadlineItemNoName_exceptionThrown() {"},{"lineNumber":48,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"petrickjerico"},"content":"            parser.setCommandLine(TEST_DEADLINE_NO_NAME);"},{"lineNumber":50,"author":{"gitId":"petrickjerico"},"content":"        } catch (Exception e) {"},{"lineNumber":51,"author":{"gitId":"petrickjerico"},"content":"            assertEquals(\"Error caused by input: deadline\", e.getMessage());"},{"lineNumber":52,"author":{"gitId":"petrickjerico"},"content":"            assertEquals(\"Please name the deadline item!\", e.toString());"},{"lineNumber":53,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":55,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":57,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":58,"author":{"gitId":"petrickjerico"},"content":"    public void getTaskDate_eventItem_taskDateReturned() throws Exception {"},{"lineNumber":59,"author":{"gitId":"petrickjerico"},"content":"        parser.setCommandLine(TEST_EVENT);"},{"lineNumber":60,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(\"2020-10-10\", parser.getTaskDate());"},{"lineNumber":61,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":63,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"petrickjerico"},"content":"    public void getTaskDate_eventItemNoDate_blankReturned() throws Exception {"},{"lineNumber":65,"author":{"gitId":"petrickjerico"},"content":"        parser.setCommandLine(TEST_EVENT_NO_DATE);"},{"lineNumber":66,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(\"\", parser.getTaskDate());"},{"lineNumber":67,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":69,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":70,"author":{"gitId":"petrickjerico"},"content":"    public void getTaskNumber_doneItem_taskDateReturned() throws Exception {"},{"lineNumber":71,"author":{"gitId":"petrickjerico"},"content":"        parser.setCommandLine(TEST_DONE);"},{"lineNumber":72,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(1, parser.getTaskNumber());"},{"lineNumber":73,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":75,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"petrickjerico"},"content":"    public void getTaskNumber_deleteItemNoIndex_zeroReturned() {"},{"lineNumber":77,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"petrickjerico"},"content":"            parser.setCommandLine(TEST_DELETE_NO_INDEX);"},{"lineNumber":79,"author":{"gitId":"petrickjerico"},"content":"        } catch (Exception e) {"},{"lineNumber":80,"author":{"gitId":"petrickjerico"},"content":"            assertEquals(\"Error caused by input: delete\", e.getMessage());"},{"lineNumber":81,"author":{"gitId":"petrickjerico"},"content":"            assertEquals(\"Please provide an integer index for delete!\", e.toString());"},{"lineNumber":82,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":85,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":86,"author":{"gitId":"petrickjerico"},"content":"    public void getTaskNumber_deleteItemInvalidIndex_exceptionThrown() {"},{"lineNumber":87,"author":{"gitId":"petrickjerico"},"content":"        try {"},{"lineNumber":88,"author":{"gitId":"petrickjerico"},"content":"            parser.setCommandLine(TEST_DELETE_INVALID_INDEX);"},{"lineNumber":89,"author":{"gitId":"petrickjerico"},"content":"            fail();"},{"lineNumber":90,"author":{"gitId":"petrickjerico"},"content":"        } catch (Exception e) {"},{"lineNumber":91,"author":{"gitId":"petrickjerico"},"content":"            assertEquals(\"Error caused by input: delete\", e.getMessage());"},{"lineNumber":92,"author":{"gitId":"petrickjerico"},"content":"            assertEquals(\"Please provide an integer index for delete!\", e.toString());"},{"lineNumber":93,"author":{"gitId":"petrickjerico"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":95,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":96}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"import duke.task.ToDo;"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"public class TaskListTest {"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"    private static Parser testParser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"    private static Task testToDo \u003d new ToDo(\"call mom\");"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"    private static Task testDeadline \u003d new Deadline(\"homework\", LocalDate.parse(\"2020-08-29\"));"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"    private static Task testEvent \u003d new Event(\"seminar\", LocalDate.parse(\"2020-10-10\"));"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":21,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":22,"author":{"gitId":"petrickjerico"},"content":"    static {"},{"lineNumber":23,"author":{"gitId":"petrickjerico"},"content":"        testToDo.markAsDone();"},{"lineNumber":24,"author":{"gitId":"petrickjerico"},"content":"        testDeadline.markAsDone();"},{"lineNumber":25,"author":{"gitId":"petrickjerico"},"content":"        tasks.add(testToDo);"},{"lineNumber":26,"author":{"gitId":"petrickjerico"},"content":"        tasks.add(testDeadline);"},{"lineNumber":27,"author":{"gitId":"petrickjerico"},"content":"        tasks.add(testEvent);"},{"lineNumber":28,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":30,"author":{"gitId":"petrickjerico"},"content":"    private static TaskList testTaskList \u003d new TaskList(tasks);"},{"lineNumber":31,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":32,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"petrickjerico"},"content":"    public void getTasks_fromTestTaskList_eachTaskToStringIsCorrect() {"},{"lineNumber":34,"author":{"gitId":"petrickjerico"},"content":"        List\u003cTask\u003e tasks \u003d testTaskList.getTasks();"},{"lineNumber":35,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(\"[T][✓] call mom\", tasks.get(0).toString());"},{"lineNumber":36,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(\"[D][✓] homework (by: Aug 29 2020)\", tasks.get(1).toString());"},{"lineNumber":37,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(\"[E][✘] seminar (at: Oct 10 2020)\", tasks.get(2).toString());"},{"lineNumber":38,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":40,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"petrickjerico"},"content":"    public void isWithinValidRange_variousIndex_onlyValidIndexReturnsTrue() {"},{"lineNumber":42,"author":{"gitId":"petrickjerico"},"content":"        assertTrue(testTaskList.isWithinValidRange(0));"},{"lineNumber":43,"author":{"gitId":"petrickjerico"},"content":"        assertTrue(testTaskList.isWithinValidRange(1));"},{"lineNumber":44,"author":{"gitId":"petrickjerico"},"content":"        assertTrue(testTaskList.isWithinValidRange(2));"},{"lineNumber":45,"author":{"gitId":"petrickjerico"},"content":"        assertFalse(testTaskList.isWithinValidRange(3));"},{"lineNumber":46,"author":{"gitId":"petrickjerico"},"content":"        assertFalse(testTaskList.isWithinValidRange(4));"},{"lineNumber":47,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":49,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"petrickjerico"},"content":"    public void incrementPendingTasks_fromTestTaskList_turnsOneToTwo() throws CloneNotSupportedException {"},{"lineNumber":51,"author":{"gitId":"petrickjerico"},"content":"        TaskList taskList \u003d (TaskList) testTaskList.clone();"},{"lineNumber":52,"author":{"gitId":"petrickjerico"},"content":"        taskList.incrementPendingTasks();"},{"lineNumber":53,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(2, taskList.getNumOfPendingTasks());"},{"lineNumber":54,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":56,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"petrickjerico"},"content":"    public void decrementPendingTasks_fromTestTaskList_turnsOneToZero() throws CloneNotSupportedException {"},{"lineNumber":58,"author":{"gitId":"petrickjerico"},"content":"        TaskList taskList \u003d (TaskList) testTaskList.clone();"},{"lineNumber":59,"author":{"gitId":"petrickjerico"},"content":"        taskList.decrementPendingTasks();"},{"lineNumber":60,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(0, taskList.getNumOfPendingTasks());"},{"lineNumber":61,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":63,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"petrickjerico"},"content":"    public void getTaskID_variousParserVariousIndex_oneIndexBelowReturned() throws Exception {"},{"lineNumber":65,"author":{"gitId":"petrickjerico"},"content":"        TaskList taskList \u003d (TaskList) testTaskList.clone();"},{"lineNumber":66,"author":{"gitId":"petrickjerico"},"content":"        testParser.setCommandLine(\"done 1\");"},{"lineNumber":67,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(0, taskList.getTaskID(testParser));"},{"lineNumber":68,"author":{"gitId":"petrickjerico"},"content":"        testParser.setCommandLine(\"delete 2\");"},{"lineNumber":69,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(1, taskList.getTaskID(testParser));"},{"lineNumber":70,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":72,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"petrickjerico"},"content":"    public void done_indexThree_eventTaskDone() throws Exception {"},{"lineNumber":74,"author":{"gitId":"petrickjerico"},"content":"        TaskList taskList \u003d (TaskList) testTaskList.clone();"},{"lineNumber":75,"author":{"gitId":"petrickjerico"},"content":"        testParser.setCommandLine(\"done 3\");"},{"lineNumber":76,"author":{"gitId":"petrickjerico"},"content":"        taskList.done(testParser);"},{"lineNumber":77,"author":{"gitId":"petrickjerico"},"content":"        assertTrue(taskList.getTasks().get(2).isDone);"},{"lineNumber":78,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":80,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":81,"author":{"gitId":"petrickjerico"},"content":"    public void done_indexOne_toDoTaskAlreadyDone() throws Exception {"},{"lineNumber":82,"author":{"gitId":"petrickjerico"},"content":"        TaskList taskList \u003d (TaskList) testTaskList.clone();"},{"lineNumber":83,"author":{"gitId":"petrickjerico"},"content":"        testParser.setCommandLine(\"done 1\");"},{"lineNumber":84,"author":{"gitId":"petrickjerico"},"content":"        taskList.done(testParser);"},{"lineNumber":85,"author":{"gitId":"petrickjerico"},"content":"        assertTrue(taskList.getTasks().get(0).isDone);"},{"lineNumber":86,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":88,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":89,"author":{"gitId":"petrickjerico"},"content":"    public void delete_indexThree_pendingCountBecomesZero() throws Exception {"},{"lineNumber":90,"author":{"gitId":"petrickjerico"},"content":"        TaskList taskList \u003d (TaskList) testTaskList.clone();"},{"lineNumber":91,"author":{"gitId":"petrickjerico"},"content":"        testParser.setCommandLine(\"delete 3\");"},{"lineNumber":92,"author":{"gitId":"petrickjerico"},"content":"        taskList.delete(testParser);"},{"lineNumber":93,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(0, taskList.getNumOfPendingTasks());"},{"lineNumber":94,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":96,"author":{"gitId":"petrickjerico"},"content":"    @Test"},{"lineNumber":97,"author":{"gitId":"petrickjerico"},"content":"    public void add_toDoItem_pendingCountBecomesTwo() throws Exception {"},{"lineNumber":98,"author":{"gitId":"petrickjerico"},"content":"        TaskList taskList \u003d (TaskList) testTaskList.clone();"},{"lineNumber":99,"author":{"gitId":"petrickjerico"},"content":"        testParser.setCommandLine(\"todo call dad\");"},{"lineNumber":100,"author":{"gitId":"petrickjerico"},"content":"        taskList.add(testParser);"},{"lineNumber":101,"author":{"gitId":"petrickjerico"},"content":"        assertEquals(2, taskList.getNumOfPendingTasks());"},{"lineNumber":102,"author":{"gitId":"petrickjerico"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"petrickjerico"},"content":""},{"lineNumber":104,"author":{"gitId":"petrickjerico"},"content":"}"}],"authorContributionMap":{"petrickjerico":104}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"list"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":"todo call mom"},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"todo call dad"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"event project meeting /at 3pm"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"deadline homework /by Monday"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"todo clean fridge"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"list"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"bye"}],"authorContributionMap":{"petrickjerico":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"if ! ("},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"    find ../src/main/java -name \"*.java\" \u003esources.txt"},{"lineNumber":18,"author":{"gitId":"petrickjerico"},"content":"    javac -cp ../src -Xlint:none -d ../bin @sources.txt"},{"lineNumber":19,"author":{"gitId":"petrickjerico"},"content":"  )"},{"lineNumber":20,"author":{"gitId":"-"},"content":"then"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":26,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":29,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":30,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":33,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":34,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":35,"author":{"gitId":"-"},"content":"then"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":38,"author":{"gitId":"-"},"content":"else"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":41,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"petrickjerico":4,"-":37}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.TaskList.java"},{"lineNumber":2,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.exception.AlreadyDoneIndexException.java"},{"lineNumber":3,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.Storage.java"},{"lineNumber":4,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.Parser.java"},{"lineNumber":5,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.exception.RangeIndexException.java"},{"lineNumber":6,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.exception.NullTaskNameException.java"},{"lineNumber":7,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.exception.NullIndexException.java"},{"lineNumber":8,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.task.TaskType.java"},{"lineNumber":9,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.Ui.java"},{"lineNumber":10,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.task.Event.java"},{"lineNumber":11,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.exception.EmptyTasksException.java"},{"lineNumber":12,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.Task.java"},{"lineNumber":13,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/Duke.java"},{"lineNumber":14,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.task.Deadline.java"},{"lineNumber":15,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.task.ToDo.java"},{"lineNumber":16,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.exception.NullTaskDateException.java"},{"lineNumber":17,"author":{"gitId":"petrickjerico"},"content":"../src/main/java/duke.exception.DukeException.java"}],"authorContributionMap":{"petrickjerico":17}}]
