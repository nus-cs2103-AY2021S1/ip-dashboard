[
  {
    "path": "src/main/java/DeadLine.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "public class DeadLine extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    private String deadLine;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public DeadLine(String description, String deadLine) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        this.deadLine \u003d deadLine;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" + this.deadLine + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public static void echoInput() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        Scanner readInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        String currentWord \u003d readInput.next();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        while (!currentWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            System.out.println(currentWord);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            currentWord \u003d readInput.next();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * Split the phrase into each individual word"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * @return String array contains each individual word"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public static String[] split(String command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        String[] array \u003d command.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return array;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * Join each word in the input to form a proper phrase"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * @param stringArray String array contains the splitted word"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * @param index Position to start joining the words"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * @return Phrase without the command word"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public static String join(String[] stringArray, int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        for (int i \u003d index; i \u003c stringArray.length; i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            result +\u003d stringArray[i] + (i \u003d\u003d stringArray.length - 1 ? \"\" : \" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * Find the time given in the input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * @param task Input from user"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * @param keyword Keyword to specify whether it is deadline or event"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * @return Time specified in the input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * @throws EmptyDateException"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public static String findTime(String task, String keyword) throws EmptyDateException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        String[] array \u003d task.split(\"/\" + keyword);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        if (array.length \u003c 2) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            throw new EmptyDateException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            return array[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * Parse the description of the input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * @param task Input"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * @return Description of the task in String"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * @throws EmptyTaskException"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public static String findDescription(String task) throws EmptyTaskException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        String[] array \u003d task.split(\"/\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        if (array[0].equals(\"\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            throw new EmptyTaskException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            return array[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     * Driver function"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public static void run() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        String currentWord \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        while (!currentWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            String command \u003d split(currentWord)[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                if (Keyword.isValid(command)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                    if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                        System.out.println(taskList.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                        if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            String indexText \u003d join(split(currentWord), 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            if (indexText.equals(\"\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                                throw new InvalidIndexException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                                int taskNumber \u003d Integer.parseInt(indexText);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                                taskList.getTask(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            String indexText \u003d join(split(currentWord), 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            if (indexText.equals(\"\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                                throw new InvalidIndexException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                                int taskNumber \u003d Integer.parseInt(indexText);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                                taskList.deleteTask(taskNumber - 1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                        } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            String description \u003d findDescription(join(split(currentWord), 1));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            Task newTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            String detail \u003d join(split(currentWord), 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            String description \u003d findDescription(detail);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            String deadlineTime \u003d findTime(detail, \"by\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            Task newTask \u003d new DeadLine(description, deadlineTime);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            String detail \u003d join(split(currentWord), 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            String description \u003d findDescription(detail);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            String time \u003d findTime(detail, \"at\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            Task newTask \u003d new Event(description, time);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            } catch (InvalidIndexException err) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            } catch (EmptyTaskException err) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            } catch (EmptyDateException err) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            } catch (InvalidCommandException err) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                currentWord \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        System.out.println(\"Hola! Duke reporting for duty\\nWhat can I do for you sir?\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        run();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 150,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public DukeException() { }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 5
    }
  },
  {
    "path": "src/main/java/EmptyDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "public class EmptyDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    private static String message \u003d \"OOPS!!! Please specify the date\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 10
    }
  },
  {
    "path": "src/main/java/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "public class EmptyTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    private static String message \u003d \"OOPS!!! The description of a task cannot be empty.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return \"[E][\" + this.getStatusIcon() + \"] \" + this.description + \" (at: \" + this.time + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 15
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    private static String message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 10
    }
  },
  {
    "path": "src/main/java/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    private static String message \u003d \"OOPS!!! The task index is empty :\u0027(\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 10
    }
  },
  {
    "path": "src/main/java/Keyword.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "import java.security.Key;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "public enum Keyword {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    DONE(\"done\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    Keyword(String keyword) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public static boolean isValid(String inputKeyword) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        Keyword[] array \u003d Keyword.values();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        for (Keyword keyword : array) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            if (keyword.keyword.equals(inputKeyword)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 29
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + this.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            if (obj instanceof Task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                Task otherTask \u003d (Task) obj;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                return otherTask.getDescription().equals(this.description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 43
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        System.out.println(\"Now you have \" + this.taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        Task taskToBeDeleted \u003d taskList.get(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        taskList.remove(taskToBeDeleted);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        System.out.println(\"  \" + taskToBeDeleted.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        System.out.println(\"Now you have \" + this.taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        String result \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            int taskNumber \u003d i + 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "            result \u003d result + taskNumber + \".\" + taskList.get(i).toString()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "                    + (i \u003d\u003d taskList.size() - 1 ? \"\" : \"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 37
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "        return \"[T][\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "todo play dota"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "todo reply CS2101 meeting email"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "event free flow BBQ dinner /at Monday 4-6pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "deadline finish CS2103 assignment /by Friday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "blah"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "event /by Monday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "deadline read 2103 textbook"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "java -classpath ../bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 3,
      "-": 37
    }
  }
]
