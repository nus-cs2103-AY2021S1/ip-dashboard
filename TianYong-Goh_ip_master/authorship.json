[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 1,
      "-": 45
    }
  },
  {
    "path": "config/travis/check-eof-newline.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "# Checks that all text files end with a newline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "ret\u003d0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "# Preserve filename with spaces by only splitting on newlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "IFS\u003d\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        echo \"ERROR:$filename:$line: no newline at EOF.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 18
    }
  },
  {
    "path": "config/travis/check-line-endings.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "# Checks for prohibited line endings."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "# Prohibited line endings: \\r\\n"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ret \u003d 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 19
    }
  },
  {
    "path": "config/travis/check-trailing-whitespace.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "# Checks for trailing whitespace"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        # Only warn for markdown files (*.md) to accomodate text editors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        # which do not properly handle trailing whitespace."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        # (e.g. GitHub web editor)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if ($1 ~ /\\.md$/) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            severity \u003d \"WARN\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            severity \u003d \"ERROR\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ret \u003d 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        print severity, $1, $2, \" trailing whitespace.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 26
    }
  },
  {
    "path": "config/travis/run-checks.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "ret\u003d0 \u0026\u0026"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "for checkscript in \"$dir\"/check-*; do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    if ! \"$checkscript\"; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 11
    }
  },
  {
    "path": "mug-test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "TODO|0|read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "TODO|0|return book"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 2
    }
  },
  {
    "path": "mug.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "TODO|0|book"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 1
    }
  },
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * All the eligible command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    FIND"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 16
    }
  },
  {
    "path": "src/main/java/Mug.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * A tool to save task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Mug {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs a Mug Object that create/read the file from the given filepath"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * and pass the information from the file to TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param filePath Filepath"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Mug(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Runs user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.ui.welcome();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            System.out.println(this.ui.readCommand(input, this.tasks));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if (input.trim().equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Main."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param args Arguments."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        new Mug(\"mug.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 48
    }
  },
  {
    "path": "src/main/java/MugException/MugException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package mugexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Error that cause by Mug."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class MugException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs a new Mug Exception with specific detail message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param message error Message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public MugException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"Wrong command given/lack of information\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 21
    }
  },
  {
    "path": "src/main/java/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Parses and validates the user command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Validates user\u0027s input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param splitNum Length of the split string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param isTime About time."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException If splitNum less than 2."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static void input(Command command, int splitNum, boolean isTime) throws MugException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (splitNum \u003c 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if ((isTime \u0026\u0026 command \u003d\u003d Command.DEADLINE)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Feed me with {/by [date]}. MUG is hungry T_T\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else if (isTime"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    \u0026\u0026 command \u003d\u003d Command.EVENT) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Feed me with {/at [date]}. MUG is hungry T_T\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Don\u0027t be stingy give MUG more information \u003e.\u003c\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Validates the info that user\u0027s input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param info Task description."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param isTime About time."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException If info pass in is empty."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static void info(Command command, String info, boolean isTime) throws MugException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (info.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if ((isTime \u0026\u0026 command \u003d\u003d Command.DEADLINE)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Feed me with {/by [date]}. MUG is hungry T_T\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else if (isTime"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    \u0026\u0026 command \u003d\u003d Command.EVENT) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Feed me with {/at [date]}. MUG is hungry T_T\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Don\u0027t be stingy give MUG more information \u003e.\u003c\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Parses and validates the date."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param date Date."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Parse date."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException If date pass in with wrong format."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static LocalDate date(String date) throws MugException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return LocalDate.parse(date);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"MUG is picky. Give him the correct date format(YYYY-MM-DD) XD\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Parses and validates command."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Parse command."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException If wrong command give."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static Command command(String command) throws MugException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return Command.valueOf(command.toUpperCase());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IllegalArgumentException ex) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Hey!!! I\u0027m sorry, but MUG don\u0027t know what that means :-()\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Parses and validates integer number."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param strIndex Integer in string."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param splitNum Length of the split string."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Integer number."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException If splitNum smaller than 2 or strIndex is not integer in string."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static int index(String strIndex, int splitNum) throws MugException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int index \u003d Integer.parseInt(strIndex);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if (splitNum \u003c 2) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Don\u0027t be stingy give MUG more information \u003e.\u003c\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Please feed MUG an integer number ~_~\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 109
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Operations on local file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** File\u0027s path*/"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final String filepath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs a Storage object(file) at given path."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param filepath File\u0027s path"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            System.out.println(\"An error occurred!!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Loads Tasks from the file to arraylist of Task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Arraylist of Task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Scanner sc \u003d new Scanner(new File(this.filepath));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            sc.useDelimiter(\"[\\n]\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                line \u003d sc.next();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String[] newLine \u003d line.split(\"[|]\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Command command \u003d Parser.command(newLine[0]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                boolean taskStatus \u003d Integer.parseInt(newLine[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                if (command \u003d\u003d Command.TODO) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    taskList.add(new Todo(newLine[2], taskStatus));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                } else if (command \u003d\u003d Command.DEADLINE) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    LocalDate date \u003d Parser.date(newLine[3]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    taskList.add(new Deadline(newLine[2], date, taskStatus));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                } else if (command \u003d\u003d Command.EVENT) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    LocalDate date \u003d Parser.date(newLine[3]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    taskList.add(new Event(newLine[2], date, taskStatus));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (FileNotFoundException | MugException ex) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            System.out.println(\"WARNING: \" + ex.getMessage() + \" :WARNING\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            System.out.println(\"WARNING: There is Something wrong with your Storage :WARNING\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Adds Task to local file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param info Task description."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException When MugException cause by other method."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void appendTask(Command command, String info) throws MugException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filepath, true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                pw.println(\"TODO|0|\" + info);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String[] dInfo \u003d info.split(\" /by \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.input(command, dInfo.length, true);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.info(command, dInfo[1], true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String deadlineEvent \u003d dInfo[0];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                LocalDate deadlineTime \u003d Parser.date(dInfo[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                pw.println(\"DEADLINE|0|\" + deadlineEvent + \"|\" + deadlineTime);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String[] eInfo \u003d info.split(\" /at \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.input(command, eInfo.length, true);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.info(command, eInfo[1], true);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String eventEvent \u003d eInfo[0];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                LocalDate eventTime \u003d Parser.date(eInfo[1]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                pw.println(\"EVENT|0|\" + eventEvent + \"|\" + eventTime);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(ex.getMessage());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Something went wrong. MUG fail to add the Tasks.Task :_:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Deletes Task from local file."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param taskId Task index"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException When MugException cause by other method."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void deleteTask(int taskId) throws MugException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String tempFile \u003d \"temp.txt\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File oldFile \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File newFile \u003d new File(tempFile);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        int taskTrack \u003d 0;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(tempFile, true);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Scanner sc \u003d new Scanner(new File(this.filepath));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            sc.useDelimiter(\"[\\n]\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                line \u003d sc.next();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                taskTrack++;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                if (taskTrack !\u003d taskId) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    pw.println(line);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            oldFile.delete();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            File renameFile \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            newFile.renameTo(renameFile);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Something went wrong. MUG fail to delete the Tasks.Task :_:\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Marks Task done in local file."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param taskId Task index."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException When MugException cause by other method."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void doneTask(int taskId) throws MugException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String tempFile \u003d \"temp.txt\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File oldFile \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File newFile \u003d new File(tempFile);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        int taskTrack \u003d 0;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(tempFile, true);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Scanner sc \u003d new Scanner(new File(this.filepath));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            sc.useDelimiter(\"[\\n]\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                line \u003d sc.next();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                taskTrack++;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                if (taskTrack !\u003d taskId) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    pw.println(line);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String[] newLine \u003d line.split(\"[|]\" , 3);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    pw.println(newLine[0] + \"|\" + 1 + \"|\" + newLine[2]);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            oldFile.delete();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            File renameFile \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            newFile.renameTo(renameFile);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"File not found\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Something went wrong\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 212
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Create Deadline objects extends from Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** Deadline. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Deadline object with description and date given."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Deadline\u0027s description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param by Deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Deadline object with deadline\u0027s description, date and deadline status given."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Deadline\u0027s description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param by Deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param isDone Deadline status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Deadline(String description, LocalDate by, boolean isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Creates a new Deadline object with isDone equal true."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return New Deadline object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Deadline markAsDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Deadline(super.description, this.by, true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \" [\" + by.getDayOfWeek() + \"])\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 53
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Create Event objects extends from Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** Event\u0027s date. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Event object with event\u0027s description and event\u0027s date given."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Event\u0027s description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param at Event\u0027s date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Event object with description event status and event date given."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Event\u0027s description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param at Event\u0027s date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param isDone Event\u0027s status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Event(String description, LocalDate at, boolean isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Create a new Event object with isDone equal true."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return New Event object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Event markAsDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Event(super.description, this.at, true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"[\" + at.getDayOfWeek() + \"])\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 53
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Create Task objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** Task\u0027s description. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** Task status. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Deadline object with Task\u0027s description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Task\u0027s description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Deadline object with Task\u0027s description and Task\u0027s status."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Task\u0027s description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param isDone Task\u0027s status."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Gets status Icon."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Status Icon."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Gets Task\u0027s description."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Task\u0027s description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Create a new Task object with isDone equal true."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return New Task object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Task(this.description, true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Gets isDone status."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Task\u0027s status."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 74
    }
  },
  {
    "path": "src/main/java/Tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Operation for the list of Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** ArrayList of Task */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** Local storage that store list of task */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final Storage store;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs TaskList object with local Storage given."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param store Local Storage that store list of task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public TaskList(Storage store) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.taskList \u003d store.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.store \u003d store;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Length of task\u0027s list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Length of task\u0027s list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private int taskListLen() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Reads list of Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return list of Task in String."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String readList() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (this.taskListLen() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"MUG don\u0027t have any of your task \\\"_\\\"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int taskId \u003d 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            StringBuilder results \u003d new StringBuilder(\"Here is your tasks:\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            for (Task tsk : this.taskList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                results.append(taskId);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                results.append(\". \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                results.append(tsk);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                if (taskId !\u003d this.taskListLen()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    results.append(\"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                taskId++;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return results.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Adds Task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param info Task descriptions."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Message when task add."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String addTask(Command command, String info) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                task \u003d new Todo(info);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String[] dInfo \u003d info.split(\" /by \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.input(command, dInfo.length, true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.info(command, dInfo[1], true);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String deadlineEvent \u003d dInfo[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                LocalDate deadlineTime \u003d Parser.date(dInfo[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                task \u003d new Deadline(deadlineEvent, deadlineTime);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String[] eInfo \u003d info.split(\" /at \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.input(command, eInfo.length, true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.info(command, eInfo[1], true);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String eventEvent \u003d eInfo[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                LocalDate eventTime \u003d Parser.date(eInfo[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                task \u003d new Event(eventEvent, eventTime);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                task \u003d new Task(info);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            this.taskList.add(task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            store.appendTask(command, info);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"Got it. MUG has added this task:\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + \"\\nNow you have \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + this.taskListLen()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + \" tasks in the list.\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return ex.getMessage();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Deletes Task."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param taskId Task index."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Message when task delete."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String deleteTask(int taskId) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (taskId \u003e this.taskListLen()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"MUG don\u0027t have this task to Delete @_@\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                int taskIndex \u003d taskId - 1;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Task deletedTask \u003d this.taskList.get(taskIndex);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                this.taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                this.store.deleteTask(taskId);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                return \"Noted. MUG has removed this task:\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        + deletedTask"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        + \"\\nNow you have \""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        + this.taskListLen()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        + \" tasks in the list.\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } catch (MugException ex) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                return ex.getMessage();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Updates Task done."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param taskId Task index"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Message when task update done."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String taskDone(int taskId) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (taskId \u003e this.taskListLen()) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"MUG don\u0027t have this task to mark as Done :\u003e\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int taskIndex \u003d taskId - 1;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Task doneTask \u003d this.taskList.get(taskIndex);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if (doneTask.isDone()) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                return \"MUG had marked this task as done:\\n\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        + doneTask;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    doneTask \u003d doneTask.markAsDone();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    this.taskList.set(taskIndex, doneTask);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    this.store.doneTask(taskId);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    return \"Congratz! MUG has marked this task as done:\\n\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                            + doneTask;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                } catch (MugException ex) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    return ex.getMessage();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Searches the Task using the keyword provide."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param keyword Keyword to search."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return List of Task with the search keyword"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String searchTask(String keyword) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        int taskId \u003d 0;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        StringBuilder results \u003d new StringBuilder(\"Here is the result:\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskListLen(); i++) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Task task \u003d this.taskList.get(i);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            boolean hasKeyword \u003d task.getDescription().contains(keyword);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if (hasKeyword) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                taskId++;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                results.append(\"\\n\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                results.append(taskId);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                results.append(\". \");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                results.append(task);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (taskId \u003d\u003d 0) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"Opps!! MUG don\u0027t have the task you searching :)\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return results.toString();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 194
    }
  },
  {
    "path": "src/main/java/Tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Create Todo objects extends from Task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Todo object with Todo\u0027s description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Todo\u0027s description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Todo object with Todo\u0027s description and Todo\u0027s status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Todo\u0027s describtion"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param isDone Todo\u0027s status"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Create a new Todo object with isDone equal true."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return New Todo object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Todo markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Todo(super.description, true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 41
    }
  },
  {
    "path": "src/main/java/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * User interaction."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Prints welcome messages."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String logo \u003d \" ___    ___        ______\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"|   \\\\  /   |_    _|  ____|\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"|    \\\\/    | |  | |  |  _\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"|          | |__| |  |_| |\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"|__/\\\\__/\\\\__|\\\\___,_|______|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String welcome \u003d logo"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"** Hello! I\u0027m MUG  **\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"** What can MUG do for you ?_? **\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Adds design to the messages."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param word Messages."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Design messages."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private static String printDesign(String word) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"**\\n\" + word + \"\\n**\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Read the input command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param tasks Task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Messages according to the user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String readCommand(String input, TaskList tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String[] splitOrder \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Command command \u003d Parser.command(splitOrder[0]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d printDesign(tasks.readList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d \"** Bye. Hope to see you soon!! **\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.input(command, splitOrder.length, false);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.info(command, splitOrder[1], false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                int doneTaskId \u003d Parser.index(splitOrder[1], splitOrder.length);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d printDesign(tasks.taskDone(doneTaskId));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.input(command, splitOrder.length, false);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.info(command, splitOrder[1], false);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                int deleteTaskId \u003d Parser.index(splitOrder[1], splitOrder.length);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d printDesign(tasks.deleteTask(deleteTaskId));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.input(command, splitOrder.length, false);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.info(command, splitOrder[1], false);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String info \u003d splitOrder[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d printDesign(tasks.addTask(command, info));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.input(command, splitOrder.length, false);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Parser.info(command, splitOrder[1], false);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String keyword \u003d splitOrder[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d printDesign(tasks.searchTask(keyword));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String errorCommand \u003d \"Hey!!! I\u0027m sorry, but MUG don\u0027t know what that means :-()\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d printDesign(errorCommand);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            output \u003d printDesign(ex.getMessage());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            output \u003d printDesign(\"There is Something wrong with your Storage.Storage\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 101
    }
  },
  {
    "path": "src/test/java/Parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void inputTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Parser.input(Command.TODO, 1, true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String expect \u003d \"HEY!!! Don\u0027t be stingy give MUG more information \u003e.\u003c\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assertEquals(expect, ex.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void infoTest() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Parser.info(Command.TODO, \"\", true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String expect \u003d \"HEY!!! Don\u0027t be stingy give MUG more information \u003e.\u003c\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assertEquals(expect, ex.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void dateTest() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            LocalDate actDate \u003d Parser.date(\"2019-01-12\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            LocalDate expDate \u003d LocalDate.parse(\"2019-01-12\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assertEquals(expDate, actDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void commandTest() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Command command \u003d Parser.command(\"todo\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assertEquals(Command.TODO, command);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void indexTest() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int index \u003d Parser.index(\"2\", 4);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assertEquals(2, index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 65
    }
  },
  {
    "path": "src/test/java/Storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final Storage store \u003d new Storage(\"mug-test.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void load() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ArrayList\u003cTask\u003e actResult \u003d this.store.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        StringBuilder actString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        for (Task task: actResult) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            actString.append(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"[T][\\u2718] read book[T][\\u2718] return book\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actString.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 30
    }
  },
  {
    "path": "src/test/java/Ui/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private Storage store \u003d new Storage(\"mug-test.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private TaskList taskList \u003d new TaskList(store);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void readCommandTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String actResult \u003d this.ui.readCommand(\"bye\", taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"** Bye. Hope to see you soon!! **\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actResult);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 22
    }
  },
  {
    "path": "src/test/java/tasks/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final Storage store \u003d new Storage(\"mug-test.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final TaskList taskList \u003d new TaskList(store);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void addTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String actResult \u003d this.taskList.addTask(Command.TODO, \"borrow book\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d  \"Got it. MUG has added this task:\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"[T][\\u2718] borrow book\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"\\nNow you have \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actResult);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void taskDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String actResult \u003d this.taskList.taskDone(3);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"Congratz! MUG has marked this task as done:\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"[T][\\u2713] borrow book\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actResult);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void deleteTask() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String actResult \u003d this.taskList.deleteTask(3);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"Noted. MUG has removed this task:\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"[T][\\u2713] borrow book\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"\\nNow you have \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + 2"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actResult);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void readList() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String actResult \u003d this.taskList.readList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"Here is your tasks:\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"1. [T][\\u2718] read book\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"2. [T][\\u2718] return book\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"3. [T][\\u2718] borrow book\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actResult);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void searchTask() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String actResult \u003d this.taskList.searchTask(\"read\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"Here is the result:\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"1. [T][\\u2718] read book\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actResult);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 63
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "command"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "todo borrow textbook"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline return book /by"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline return book /by 2019-12-02"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event project meeting /at"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event project meeting /at 2019-12-01"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "find text"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "find hello"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 26
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "if"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "  )"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "java -classpath ../bin Mug \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 7,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/ui/Ui.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/tasks/TaskList.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/tasks/Event.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/tasks/Task.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/tasks/Deadline.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/tasks/Todo.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Mug.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/mugexception/MugException.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/parser/Parser.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/storage/Storage.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/command/Command.java"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 11
    }
  }
]
