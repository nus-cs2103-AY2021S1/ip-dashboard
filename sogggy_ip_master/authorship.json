[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 17,
      "-": 44
    }
  },
  {
    "path": "com/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 7
    }
  },
  {
    "path": "com/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isDone(String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return inputArr.length \u003d\u003d 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 input.substring(0, 4).equals(\"done\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 isNumber(input.substring(5, 6));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isDelete(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return inputArr.length \u003d\u003d 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 input.substring(0, 6).equals(\"delete\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 isNumber(input.substring(7, 8));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isNumber(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Integer.parseInt(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean correctInputFormat(String input) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //correct todo format"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean todoBool \u003d inputArr.length \u003d\u003d 2 \u0026\u0026 inputArr[0].equals(\"todo\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String taskWithDate \u003d inputArr[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] taskAndDateArr \u003d taskWithDate.split(\" /\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //correct deadline format"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean deadlineBool \u003d taskAndDateArr.length \u003d\u003d 2 \u0026\u0026 inputArr[0].equals(\"deadline\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //correct event format"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean eventBool \u003d taskAndDateArr.length \u003d\u003d 2 \u0026\u0026 inputArr[0].equals(\"event\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return todoBool || deadlineBool || eventBool;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static Task parseTask(String[] arr) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String taskCode \u003d arr[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String isDoneStr \u003d arr[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            boolean isDone \u003d isDoneStr.equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String task \u003d arr[2];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            //if toDo item"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (taskCode.equals(\"T\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                ToDos todo \u003d new ToDos(task, isDone);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                return todo;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                //if deadline item"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            } else if (taskCode.equals(\"D\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String date \u003d arr[3];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                date \u003d parseDate(date);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                Deadlines deadline \u003d new Deadlines(task, date, isDone);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                return deadline;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                //if events item"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String date \u003d arr[3];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                date \u003d parseDate(date);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                Events event \u003d new Events(task, date, isDone);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                return event;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //date input could be \"at 2/12/2019 1800\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //returns \"2019-12-02 1800\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String errMessage \u003d \"Sorry! Format of date is wrong. \" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    \"Example input should be \" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    \"deadline return book /by 2/12/2019 1800.\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String[] strArr \u003d date.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (strArr.length !\u003d 3 \u0026\u0026 strArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                throw new DukeException(errMessage);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String[] dateArr \u003d new String[0];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            int dateIndex \u003d -1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            int timeIndex \u003d -1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (strArr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                dateArr \u003d strArr[0].split(\"/\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                dateIndex \u003d 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                timeIndex \u003d 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            } else if (strArr.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                dateArr \u003d strArr[1].split(\"/\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                dateIndex \u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                timeIndex \u003d 2;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (dateArr.length !\u003d 3) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                throw new DukeException(errMessage);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            //if day \u003c 10, add 0 in front"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (Integer.parseInt(dateArr[0]) \u003c 10) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                dateArr[0] \u003d \"0\" + dateArr[0];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            //transform 2/12/2019 to 2019-12-02"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            date \u003d dateArr[2] + \"-\" + dateArr[1] + \"-\" + dateArr[0];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            strArr[dateIndex] \u003d date;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String res \u003d strArr[dateIndex] + \" \" + strArr[timeIndex];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String parseDateToSaveFormat(LocalDate date) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int day \u003d date.getDayOfMonth();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int month \u003d date.getMonthValue();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String monthStr \u003d Integer.toString(month);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int year \u003d date.getYear();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (month \u003c 10) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            monthStr \u003d \"0\" + monthStr;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return day + \"/\" + monthStr + \"/\" + year;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String[] splitTaskAndDate(String task) throws DukeException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            // date \u003d \"at 2/12/2019 1800\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String date \u003d task.substring(task.indexOf(\"/\") + 1, task.length());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            // date \u003d 2019-12-02 1800"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            date \u003d parseDate(date);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            // task \u003d project meeting"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            task \u003d task.substring(0, task.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String[] res \u003d new String[]{task, date};"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 151
    }
  },
  {
    "path": "com/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static String FILE_PATH \u003d \"src/main/data/input.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void printFileContents() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            File f \u003d new File(this.filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            List\u003cTask\u003e taskArr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String taskString \u003d s.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String[] taskStringArr \u003d taskString.split(\" - \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                Task task \u003d Parser.parseTask(taskStringArr);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                taskArr.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return taskArr;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new DukeException(\"File failed to load. Initializing new File...\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static String parseTaskToString(Task task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return task.parseToSaveFormat();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static void saveListToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter((FILE_PATH));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getList().size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            List\u003cTask\u003e list \u003d taskList.getList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            input +\u003d parseTaskToString(list.get(i)) + \"\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        fw.write(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 64
    }
  },
  {
    "path": "com/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskArr) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.list \u003d taskArr;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void addItem(Task item) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.list.add(item);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setDone(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Task task \u003d this.list.get(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Task getItem(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.list.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public List getList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.list.remove(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 43
    }
  },
  {
    "path": "com/duke/tasks/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    protected int time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Deadlines(String task, String dateAndTime) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //date \u003d 2019-12-02 1800"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] dateAndTimeArr \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        // date \u003d \u0027by Sunday\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String date \u003d task.substring(task.indexOf(\"/\") + 1, task.length());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        date \u003d com.duke.events.Task.reformatDate(date); // (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        // task \u003d return book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        task \u003d task.substring(0, task.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.date \u003d LocalDate.parse(dateAndTimeArr[0]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.time \u003d Integer.parseInt(dateAndTimeArr[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Deadlines(String task, String dateAndTime, boolean done) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] dateAndTimeArr \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.date \u003d LocalDate.parse(dateAndTimeArr[0]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.time \u003d Integer.parseInt(dateAndTimeArr[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String doneIndicator \u003d this.done ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int dayOfMonth \u003d this.date.getDayOfMonth();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String month \u003d this.date.getMonth().toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int year \u003d this.date.getYear();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String date \u003d dayOfMonth + \" \" + month + \" \" + year;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (this.time \u003c 100) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            time \u003d \"12\" + this.time + \"am\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else if (this.time \u003c 1200) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            time \u003d this.time + \"am\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            time \u003d (this.time - 1200) + \"pm\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"[D]\" + doneIndicator + \" \" + this.task + \" (by: \" + date + \", \" + time + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String parseToSaveFormat() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String isDoneStr \u003d this.done ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String dateSaveFormatStr \u003d Parser.parseDateToSaveFormat(this.date);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        res \u003d \"D - \" + isDoneStr + \" - \" + this.task + \" - \" + dateSaveFormatStr + \" \" + this.time;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 60
    }
  },
  {
    "path": "com/duke/tasks/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    protected int time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Events(String task, String dateAndTime) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        // date \u003d \u0027at Sunday 2-4pm\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String time \u003d task.substring(task.indexOf(\"/\") + 1, task.length());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        time \u003d com.duke.events.Task.reformatDate(time); // (by: Sunday)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        // task \u003d project meeting"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        task \u003d task.substring(0, task.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] dateAndTimeArr \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.date \u003d LocalDate.parse(dateAndTimeArr[0]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.time \u003d Integer.parseInt(dateAndTimeArr[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Events(String task, String dateAndTime, boolean done) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] dateAndTimeArr \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.date \u003d LocalDate.parse(dateAndTimeArr[0]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.time \u003d Integer.parseInt(dateAndTimeArr[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String doneIndicator \u003d this.done ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int dayOfMonth \u003d this.date.getDayOfMonth();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String month \u003d this.date.getMonth().toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int year \u003d this.date.getYear();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String date \u003d dayOfMonth + \" \" + month + \" \" + year;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (this.time \u003c 100) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            time \u003d \"12\" + this.time + \"am\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else if (this.time \u003c 1200) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            time \u003d this.time + \"am\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            time \u003d (this.time - 1200) + \"pm\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"[E]\" + doneIndicator + \" \" + this.task + \" (at: \" + date + \", \" + time + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String parseToSaveFormat() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String isDoneStr \u003d this.done ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String dateSaveFormatStr \u003d Parser.parseDateToSaveFormat(this.date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        res \u003d \"E - \" + isDoneStr + \" - \" + this.task + \" - \" + dateSaveFormatStr + \" \" + this.time;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 59
    }
  },
  {
    "path": "com/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Task(String task, boolean done) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setDone(boolean bool) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.done \u003d bool;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //format date from \u0027by Sunday\u0027 to \u0027(by: Sunday)\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String reformatDate(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"(\" + input.substring(0, input.indexOf(\" \"))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                + \":\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                + input.substring(input.indexOf(\" \"))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String parseToSaveFormat() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String isDoneStr \u003d this.done ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"com.duke.events.Task - \" + isDoneStr + \" - \" + this.task;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 46
    }
  },
  {
    "path": "com/duke/tasks/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public ToDos(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public ToDos(String task, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String doneIndicator \u003d this.done ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"[T]\" + doneIndicator + \" \" + this.task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String parseToSaveFormat() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String isDoneStr \u003d this.done ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String res \u003d \"T - \" + isDoneStr + \" - \" + this.task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 25
    }
  },
  {
    "path": "com/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Ui(TaskList taskList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.taskList \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static void sectionize() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static String errorMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static void initialize() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui ui \u003d new Ui(new TaskList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ui.listen();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static void initialize(TaskList taskList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui ui \u003d new Ui(taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ui.listen();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static void exit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void reply() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\t\\t\" + this.taskList.getList().get(this.taskList.size() - 1).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\tNow you have \" + this.taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void listItems() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"\\t\" + counter + \".\" + this.taskList.getItem(i).toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void sayBye() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Storage.saveListToFile(taskList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Ui.sectionize();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Ui.sectionize();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"Sorry! The file failed to save. Please try again.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void markDone(int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.taskList.setDone(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\t\" + this.taskList.getItem(index).toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void remove(int index) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Task task \u003d this.taskList.remove(index);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Ui.sectionize();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"\\tNoted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"\\t\\t\" + task.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"\\tNow you have \" + this.taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Ui.sectionize();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Ui.sectionize();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! I\u0027m sorry, this task does not exist in your list!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Ui.sectionize();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"Hello! I\u0027m DukeBot\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"File failed to load. Initializing new File...\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void listen() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (Parser.isDone(input)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            int index \u003d Integer.parseInt(input.substring(5, 6)) - 1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.markDone(index);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else if (Parser.isDelete(input)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.remove(index);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.sayBye();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.listItems();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                if (!Parser.correctInputFormat(input)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    throw new DukeException(Ui.errorMessage());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                //pull type of task and the task"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String taskType \u003d input.substring(0, input.indexOf(\" \"));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String task \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String[] taskAndDateArr;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String date;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                //System.out.println(task);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                case (\"todo\"):"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    taskList.addItem(new ToDos(task));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    this.reply();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                case (\"deadline\"):"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    // date \u003d \u0027by Sunday\u0027"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    taskAndDateArr \u003d Parser.splitTaskAndDate(task);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    task \u003d taskAndDateArr[0];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    date \u003d taskAndDateArr[1];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    taskList.addItem(new Deadlines(task, date));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    this.reply();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                case (\"event\"):"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    taskAndDateArr \u003d Parser.splitTaskAndDate(task);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    task \u003d taskAndDateArr[0];"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    date \u003d taskAndDateArr[1];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    taskList.addItem(new Events(task, date));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    this.reply();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    throw new DukeException(Ui.errorMessage());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                Ui.sectionize();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                System.out.println(\"\\t\\t\" + e.getMessage());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                Ui.sectionize();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.listen();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 161
    }
  },
  {
    "path": "src/main/data/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "T - 1 - read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": "D - 0 - return book - 6/06/2020 800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "E - 0 - project meeting - 6/08/2020 2130"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "T - 1 - join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "T - 0 - throw rubbish"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "E - 0 - halloween party - 22/10/2020 2000"
      }
    ],
    "authorContributionMap": {
      "sogggy": 6
    }
  },
  {
    "path": "src/main/java/com/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Entry point to application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Initializes all components needed to run program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static String FILE_PATH \u003d \"src/main/data/input.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Duke Default Constructor. Includes filepath to persistent storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Duke main method. Initializes tasks from persistent storage file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Duke duke \u003d new Duke(FILE_PATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        duke.ui.initialize(duke.tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 39,
      "-": 2
    }
  },
  {
    "path": "src/main/java/com/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Exception thrown when an unexpected event related to using the Duke application occurs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param message Message attached to exception thrown."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 17
    }
  },
  {
    "path": "src/main/java/com/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasks.Deadlines;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasks.Events;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasks.ToDos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Parser which is responsible in parsing all instruction from user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns boolean on whether format is correct for a \u0027done\u0027 command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * If format is wrong, returns false, else returns true."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param input Input command to check format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isDone(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return inputArr.length \u003d\u003d 2"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 input.substring(0, 4).equals(\"done\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 isNumber(input.substring(5, 6));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns boolean on whether format is correct for a \u0027delete\u0027 command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * If format is wrong, returns false, else returns true."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param input Input command to check format."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isDelete(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return inputArr.length \u003d\u003d 2"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 input.substring(0, 6).equals(\"delete\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 isNumber(input.substring(7, 8));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns boolean on whether format is correct for a \u0027find\u0027 command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * If format is wrong, returns false, else returns true."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param input Input command to check format."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isFind(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return inputArr[0].equals(\"find\") \u0026\u0026 inputArr.length \u003d\u003d 2;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static boolean isNumber(String input) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Integer.parseInt(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns boolean on whether format is correct for a create task command."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * This includes checks for \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027 tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * If format is wrong, returns false, else returns true."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param input Input command to check format."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isCorrectInputFormat(String input) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //correct todo format"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean isTodoBool \u003d inputArr.length \u003d\u003d 2 \u0026\u0026 inputArr[0].equals(\"todo\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String taskWithDate \u003d inputArr[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] taskAndDateArr \u003d taskWithDate.split(\" /\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //correct deadline format"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean isDeadlineBool \u003d taskAndDateArr.length \u003d\u003d 2 \u0026\u0026 inputArr[0].equals(\"deadline\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //correct event format"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean isEventBool \u003d taskAndDateArr.length \u003d\u003d 2 \u0026\u0026 inputArr[0].equals(\"event\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return isTodoBool || isDeadlineBool || isEventBool;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Parses a string saved from Storage into a Task Object."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * This includes \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027 tasks."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * If format is wrong, throws DukeException."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param taskString Input taskString to check format."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return Task if taskString is in correct format."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws DukeException if format is wrong."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static Task parseTask(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] taskStringArr \u003d taskString.split(\" - \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String taskCode \u003d taskStringArr[0];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String isDoneStr \u003d taskStringArr[1];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean isDone \u003d isDoneStr.equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String task \u003d taskStringArr[2];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //if toDo item"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (taskCode.equals(\"T\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            ToDos todo \u003d new ToDos(task, isDone);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return todo;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            //if deadline item"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else if (taskCode.equals(\"D\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String date \u003d taskStringArr[3];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            date \u003d parseDate(date);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Deadlines deadline \u003d new Deadlines(task, date, isDone);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            //if events item"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String date \u003d taskStringArr[3];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            date \u003d parseDate(date);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Events event \u003d new Events(task, date, isDone);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Parses a date saved from a Storage file."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Parses into LocalDate format and time in 24-hour format (HHMM) concatenated in a string."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * For example, transforms an input \"at 2/12/2019 1800\" to \"2019-12-02 1800\"."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param date Input date to be parsed."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return String date in LocalDate format and time in 24-hour format (HHMM)."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws DukeException if input format is incorrect."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //date input could be \"at 2/12/2019 1800\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //returns \"2019-12-02 1800\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String errMessage \u003d \"Sorry! Format of date is wrong. \""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    + \"Example input should be \""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    + \"deadline return book /by 2/12/2019 1800. \""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    + \"Please fix storage file before loading Duke again.\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String[] strArr \u003d date.split(\" \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (strArr.length !\u003d 3 \u0026\u0026 strArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                throw new DukeException(errMessage);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String[] dateArr \u003d new String[0];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            int dateIndex \u003d -1;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            int timeIndex \u003d -1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (strArr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                dateArr \u003d strArr[0].split(\"/\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                dateIndex \u003d 0;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                timeIndex \u003d 1;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            } else if (strArr.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                dateArr \u003d strArr[1].split(\"/\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                dateIndex \u003d 1;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                timeIndex \u003d 2;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (dateArr.length !\u003d 3) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                throw new DukeException(errMessage);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            //if day \u003c 10, add 0 in front"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (Integer.parseInt(dateArr[0]) \u003c 10) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                dateArr[0] \u003d \"0\" + dateArr[0];"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            //transform 2/12/2019 to 2019-12-02"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            date \u003d dateArr[2] + \"-\" + dateArr[1] + \"-\" + dateArr[0];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            strArr[dateIndex] \u003d date;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String res \u003d strArr[dateIndex] + \" \" + strArr[timeIndex];"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Parses a date into a format savable to Storage file."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Parses from LocalDate format to Storage file format."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * For example, transforms an input \"2019-12-02\" to \"2/12/2019\"."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param date Input LocalDate object to be parsed."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return String date in Storage file format."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String parseDateToSaveFormat(LocalDate date) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int day \u003d date.getDayOfMonth();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int month \u003d date.getMonthValue();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String monthStr \u003d Integer.toString(month);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int year \u003d date.getYear();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (month \u003c 10) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            monthStr \u003d \"0\" + monthStr;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return day + \"/\" + monthStr + \"/\" + year;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Parses a task command into an array containing the task and date."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Transforms an input \"event halloween party /at 2/12/2019 1800\" to \"[event halloween party, at 2/12/2019 1800]\"."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param task Input task to be parsed."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return String[] Array of strings containing task and date."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws DukeException throws DukeException if format of input command is wrong."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String[] splitTaskAndDate(String task) throws DukeException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            // date \u003d \"at 2/12/2019 1800\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String date \u003d task.substring(task.indexOf(\"/\") + 1, task.length());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            // date \u003d 2019-12-02 1800"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            date \u003d parseDate(date);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            // task \u003d project meeting"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            task \u003d task.substring(0, task.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String[] res \u003d new String[]{task, date};"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 226
    }
  },
  {
    "path": "src/main/java/com/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.parser.Parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasks.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Represents a Storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Pulls data from a persistent file upon initialisation of application."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Saves data to persistent file upon termination of session."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static String FILE_PATH \u003d \"src/main/data/input.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Prints contents from persistent file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void printFileContents() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            File f \u003d new File(this.filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Loads tasks saved in storage file into List when program starts."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return List returns list with tasks saved as entries."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws DukeException throws DukeException if file fails to load."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws DukeException throws DukeException if entry in file has incorrectly saved format."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            List\u003cTask\u003e taskArr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String taskString \u003d s.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                Task task \u003d Parser.parseTask(taskString);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                taskArr.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return taskArr;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new DukeException(\"File failed to load. Initializing new File...\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static String parseTaskToString(Task task) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return task.parseToSaveFormat();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Saves tasks from List into a persistent file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws IOException throws IOException if file saving fails."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static void saveListToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter((FILE_PATH));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getList().size(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            List\u003cTask\u003e list \u003d taskList.getList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            input +\u003d parseTaskToString(list.get(i)) + \"\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        fw.write(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 91
    }
  },
  {
    "path": "src/main/java/com/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Represents a Tasklist holding tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskArr) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.list \u003d taskArr;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Adds entry into TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param item task to add into TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void addItem(Task item) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.list.add(item);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns number of entries in TaskList."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return int returns number of entries in TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Marks specified entry in TaskList as done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param index index of task in TaskList."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setDone(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Task task \u003d this.list.get(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns specified task in TaskList."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param index index of task in TaskList."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return List returns list with tasks saved as entries."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Task getItem(int index) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.list.get(index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * returns list under the TaskList object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return List returns list under TaskList object."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public List getList() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Removes entry from TaskList."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param index Index of entry to be removed."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.list.remove(index);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 79
    }
  },
  {
    "path": "src/main/java/com/duke/tasks/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Represents a Deadline task item."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    protected int time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructor for Deadlines."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param task Task description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param dateAndTime date and time of deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Deadlines(String task, String dateAndTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //date \u003d 2019-12-02 1800"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] dateAndTimeArr \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.date \u003d LocalDate.parse(dateAndTimeArr[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.time \u003d Integer.parseInt(dateAndTimeArr[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructor for Deadlines."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param task Task description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param dateAndTime date and time of deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param isDone Whether task is done or not."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Deadlines(String task, String dateAndTime, boolean isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] dateAndTimeArr \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.date \u003d LocalDate.parse(dateAndTimeArr[0]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.time \u003d Integer.parseInt(dateAndTimeArr[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns a string representation of the contents of the specified array."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return String Returns a string representation of the contents of the specified array."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String doneIndicator \u003d this.isDone ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int dayOfMonth \u003d this.date.getDayOfMonth();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String month \u003d this.date.getMonth().toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int year \u003d this.date.getYear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String date \u003d dayOfMonth + \" \" + month + \" \" + year;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (this.time \u003c 100) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            time \u003d \"12\" + this.time + \"am\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else if (this.time \u003c 1200) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            time \u003d this.time + \"am\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            time \u003d (this.time - 1200) + \"pm\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"[D]\" + doneIndicator + \" \" + this.task + \" (by: \" + date + \", \" + time + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns a string representation of the Deadline object to be saved in persistent file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return String Returns a string representation of the Deadline object to be saved in persistent file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String parseToSaveFormat() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String isDoneStr \u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String dateSaveFormatStr \u003d Parser.parseDateToSaveFormat(this.date);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        res \u003d \"D - \" + isDoneStr + \" - \" + this.task + \" - \" + dateSaveFormatStr + \" \" + this.time;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 83
    }
  },
  {
    "path": "src/main/java/com/duke/tasks/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Represents a Event task item."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    protected int time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructor for Events."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param task Task description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param dateAndTime date and time of deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Events(String task, String dateAndTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // date \u003d \u0027at Sunday 2-4pm\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] dateAndTimeArr \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.date \u003d LocalDate.parse(dateAndTimeArr[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.time \u003d Integer.parseInt(dateAndTimeArr[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructor for Events."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param task Task description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param dateAndTime date and time of deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param isDone Whether task is done or not."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Events(String task, String dateAndTime, boolean isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String[] dateAndTimeArr \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.date \u003d LocalDate.parse(dateAndTimeArr[0]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.time \u003d Integer.parseInt(dateAndTimeArr[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns a string representation of the contents of the specified array."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return String Returns a string representation of the contents of the specified array."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String doneIndicator \u003d this.isDone ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int dayOfMonth \u003d this.date.getDayOfMonth();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String month \u003d this.date.getMonth().toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int year \u003d this.date.getYear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String date \u003d dayOfMonth + \" \" + month + \" \" + year;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (this.time \u003c 100) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            time \u003d \"12\" + this.time + \"am\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else if (this.time \u003c 1200) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            time \u003d this.time + \"am\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            time \u003d (this.time - 1200) + \"pm\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"[E]\" + doneIndicator + \" \" + this.task + \" (at: \" + date + \", \" + time + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns a string representation of the Deadline object to be saved in persistent file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return String Returns a string representation of the Events object to be saved in persistent file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String parseToSaveFormat() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String isDoneStr \u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String dateSaveFormatStr \u003d Parser.parseDateToSaveFormat(this.date);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        res \u003d \"E - \" + isDoneStr + \" - \" + this.task + \" - \" + dateSaveFormatStr + \" \" + this.time;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 83
    }
  },
  {
    "path": "src/main/java/com/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Represents a task item."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructor for Tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructor for Tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param task Task description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param isDone whether task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Task(String task, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructor for Tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param task Task description."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Sets a task as done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param bool boolean on whether task is done or not."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setDone(boolean bool) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.isDone \u003d bool;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Getter for details of task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return String returns task attribute of Task object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Getter for whether task is done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return boolean returns done attribute of Task object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Reformats date into format displayable."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Transform an example input \"by Sunday\" to \"(by: Sunday)\"."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return String returns String in displayable format."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //format date from \u0027by Sunday\u0027 to \u0027(by: Sunday)\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String reformatDate(String input) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"(\" + input.substring(0, input.indexOf(\" \"))"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                + \":\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                + input.substring(input.indexOf(\" \"))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns a string representation of the Deadline object to be saved in persistent file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return String Returns a string representation of the Task object to be saved in persistent file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    // Task - 1 - read book"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public abstract String parseToSaveFormat();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 88
    }
  },
  {
    "path": "src/main/java/com/duke/tasks/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Represents a todo task item."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public ToDos(String task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public ToDos(String task, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns a string representation of the contents of the specified array."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return String Returns a string representation of the contents of the specified array."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String doneIndicator \u003d this.isDone ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"[T]\" + doneIndicator + \" \" + this.task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns a string representation of the Deadline object to be saved in persistent file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return String Returns a string representation of the ToDos object to be saved in persistent file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String parseToSaveFormat() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String isDoneStr \u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String res \u003d \"T - \" + isDoneStr + \" - \" + this.task;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 39
    }
  },
  {
    "path": "src/main/java/com/duke/ui/Logo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Logo {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns Duke logo."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String logo() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 9,
      "-": 6
    }
  },
  {
    "path": "src/main/java/com/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasks.Deadlines;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasks.Events;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasks.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.tasks.ToDos;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Deals with responding to the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Calls methods of other classes to save/pull entries into/from session-based storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Ui(TaskList taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.taskList \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Adds entry into Duke and replies with response."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void addItem(String taskType, String task) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.taskList.addItem(new ToDos(task));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String[] taskAndDateArr \u003d Parser.splitTaskAndDate(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            task \u003d taskAndDateArr[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            date \u003d taskAndDateArr[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            taskList.addItem(new Events(task, date));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            taskAndDateArr \u003d Parser.splitTaskAndDate(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            task \u003d taskAndDateArr[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            date \u003d taskAndDateArr[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            taskList.addItem(new Deadlines(task, date));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new DukeException(Ui.errorMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\t\\t\" + this.taskList.getList().get(this.taskList.size() - 1).toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\tNow you have \" + this.taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Prints entries stored in Duke."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void listItems() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"\\t\" + counter + \".\" + this.taskList.getItem(i).toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Prints entries that match input keyword."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param input input keyword to match."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void findItem(String input) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int len \u003d this.taskList.size();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        //loop through taskstring in tasklist and find matching keywords"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        for (int i \u003d 0; i \u003c len; i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Task task \u003d this.taskList.getItem(i);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String taskDescription \u003d task.getTask();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (taskDescription.contains(input)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                matchingTaskList.add(task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (matchingTaskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.replyNoTaskFound(input);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.replyTasksFound(matchingTaskList);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void replyNoTaskFound(String input) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\tI\u0027m sorry, there are no tasks found with keyword \" + input + \".\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Lists entries that match input keyword."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param taskList list of tasks that match input keyword."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void replyTasksFound(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String reply \u003d \"\\tHere are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            reply +\u003d \"\\n\\t\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            reply +\u003d task.toString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(reply);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void sayBye() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Storage.saveListToFile(this.taskList);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Ui.sectionize();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Ui.sectionize();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"Sorry! The file failed to save. Please try again.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void markDone(int index) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.taskList.setDone(index);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\t\" + this.taskList.getItem(index).toString());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui.sectionize();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Removes specified entry from Duke and prints reply."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param index index of entry to be removed."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void remove(int index) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Task task \u003d this.taskList.remove(index);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Ui.sectionize();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"\\tNoted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"\\t\\t\" + task.toString());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"\\tNow you have \" + this.taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Ui.sectionize();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Ui.sectionize();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! I\u0027m sorry, this task does not exist in your list!\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Ui.sectionize();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Prints welcome message for Duke."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"Hello! I\u0027m DukeBot\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static void sectionize() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static String errorMessage() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Initializes Duke with no entries."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static void initialize() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui ui \u003d new Ui(new TaskList());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ui.listen();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Initializes Duke from persistent file."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static void initialize(TaskList taskList) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Ui ui \u003d new Ui(taskList);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ui.listen();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Tells user that persistent file failed to load."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.out.println(\"File failed to load. Initializing new File...\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static void exit() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Listens from commands from user."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Possible commands include: \"done 1\", \"delete 2\", \"bye\", \"list\"."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Possible event command: \"event halloween party /at 2/12/2019 1800\"."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Possible deadline command: \"deadline add comments /by 2/12/2019 1800\"."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Possible todo command: \"todo read book\"."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void listen() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (Parser.isDone(input)) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            int index \u003d Integer.parseInt(input.substring(5, 6)) - 1;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.markDone(index);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else if (Parser.isDelete(input)) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.remove(index);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.sayBye();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.listItems();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else if (Parser.isFind(input)) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String item \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.findItem(item);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                if (!Parser.isCorrectInputFormat(input)) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    throw new DukeException(Ui.errorMessage());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                //pull type of task and the task"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String taskType \u003d input.substring(0, input.indexOf(\" \"));"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String task \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                case (\"todo\"):"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    this.addItem(taskType, task);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                case (\"deadline\"):"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    // date \u003d \u0027by Sunday\u0027"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    this.addItem(taskType, task);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                case (\"event\"):"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    this.addItem(taskType, task);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    throw new DukeException(Ui.errorMessage());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                Ui.sectionize();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                System.out.println(\"\\t\\t\" + e.getMessage());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                Ui.sectionize();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.listen();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 262
    }
  },
  {
    "path": "src/test/data/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "T - 1 - read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": "D - 0 - return book - 6/06/2020 800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "E - 0 - project meeting - 6/08/2020 2130"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "T - 1 - join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "T - 0 - throw rubbish"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "E - 0 - halloween party - 22/10/2020 2000"
      }
    ],
    "authorContributionMap": {
      "sogggy": 6
    }
  },
  {
    "path": "src/test/java/com/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 12
    }
  },
  {
    "path": "src/test/java/com/duke/exceptions/DukeExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class DukeExceptionTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 4
    }
  },
  {
    "path": "src/test/java/com/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import com.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void isDoneTest_inputLetters_returnFalse() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean expectedOutput \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"done abc\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean actualOutput \u003d Parser.isDone(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void isDoneTest_inputThreeWords_returnFalse() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean expectedOutput \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"done 1 abc\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean actualOutput \u003d Parser.isDone(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void isDoneTest_normalInput_returnTrue() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean expectedOutput \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"done 1\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean actualOutput \u003d Parser.isDone(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void isDeleteTest_inputLetters_returnFalse() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean expectedOutput \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"delete abc\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean actualOutput \u003d Parser.isDelete(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void isDeleteTest_inputThreeWords_returnFalse() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean expectedOutput \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"delete 1 abc\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean actualOutput \u003d Parser.isDelete(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void isDeleteTest_normalInput_returnTrue() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean expectedOutput \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"delete 1\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean actualOutput \u003d Parser.isDelete(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void correctInputFormatTest_incorrectToDoInput_returnFalse() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"todoeatfood\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean actualOutput \u003d Parser.isCorrectInputFormat(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean expectedOutput \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void correctInputFormatTest_correctToDoInput_returnTrue() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"todo eat food\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean actualOutput \u003d Parser.isCorrectInputFormat(input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean expectedOutput \u003d true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void correctInputFormatTest_incorrectDeadlineInput_returnFalse() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"deadlines finishwritingJUnittests/by2/12/20191800\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean actualOutput \u003d Parser.isCorrectInputFormat(input);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean expectedOutput \u003d false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void correctInputFormatTest_correctDeadlineInput_returnTrue() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"deadline finish writing JUnit tests /by 2/12/2019 1800\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean actualOutput \u003d Parser.isCorrectInputFormat(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean expectedOutput \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void correctInputFormatTest_incorrectEventsInput_returnFalse() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"eventcs2103Tfinals/at2/12/20191800\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean actualOutput \u003d Parser.isCorrectInputFormat(input);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean expectedOutput \u003d false;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void correctInputFormatTest_correctEventsInput_returnTrue() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"event CS2103T finals /at 2/12/2019 1800\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean actualOutput \u003d Parser.isCorrectInputFormat(input);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        boolean expectedOutput \u003d true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void parseDateTest_correctDateInput() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String input \u003d \"at 2/12/2019 1800\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String actualOutput \u003d Parser.parseDate(input);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String expectedOutput \u003d \"2019-12-02 1800\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            //Assert.fail(\"Exception \" + e);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void parseDateTest_incorrectDateInput() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        DukeException e \u003d assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Parser.parseDate(\"at 2/12/20191800\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String expectedMessage \u003d \"Sorry! Format of date is wrong. \""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                + \"Example input should be deadline return book /by 2/12/2019 1800. \""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                + \"Please fix storage file before loading Duke again.\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String actualMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expectedMessage, actualMessage);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 133
    }
  },
  {
    "path": "src/test/java/com/duke/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void printFileContentsTest() throws Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Storage storage \u003d new Storage(\"data/test.txt\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        storage.printFileContents();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 14
    }
  },
  {
    "path": "src/test/java/com/duke/tasklist/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import com.duke.tasks.Events;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 9
    }
  },
  {
    "path": "src/test/java/com/duke/tasks/DeadlinesTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class DeadlinesTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void parseToSaveFormatTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Deadlines deadline \u003d new Deadlines(\"Clear trash\", \"2020-06-06 800\", true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String res \u003d \"D - 1 - Clear trash - 6/06/2020 800\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(res, deadline.parseToSaveFormat());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Deadlines deadline \u003d new Deadlines(\"project meeting\", \"2020-08-06 2130\", false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String res \u003d \"[D][✗] project meeting (by: 6 AUGUST 2020, 930pm)\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(res, deadline.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 22
    }
  },
  {
    "path": "src/test/java/com/duke/tasks/EventsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class EventsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void parseToSaveFormatTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Events event \u003d new Events(\"Clear trash\", \"2020-06-06 800\", true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String res \u003d \"E - 1 - Clear trash - 6/06/2020 800\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(res, event.parseToSaveFormat());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Events event \u003d new Events(\"project meeting\", \"2020-08-06 2130\", false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String res \u003d \"[E][✗] project meeting (at: 6 AUGUST 2020, 930pm)\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(res, event.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 22
    }
  },
  {
    "path": "src/test/java/com/duke/tasks/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void reformatDateTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String res \u003d \"(by: Sunday)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String input \u003d \"by Sunday\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(res, Task.reformatDate(input));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 15
    }
  },
  {
    "path": "src/test/java/com/duke/tasks/ToDosTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class ToDosTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void parseToSaveFormatTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ToDos todo \u003d new ToDos(\"Clear trash\", true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String res \u003d \"T - 1 - Clear trash\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(res, todo.parseToSaveFormat());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 15
    }
  },
  {
    "path": "src/test/java/com/duke/ui/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package com.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "event 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deadline b"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sogggy": 18
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "FC /W ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "sogggy": 2,
      "-": 19
    }
  }
]
