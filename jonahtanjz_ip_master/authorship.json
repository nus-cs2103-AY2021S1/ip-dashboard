[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Duke(String pathname) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.storage \u003d new Storage(pathname);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        Parser parser \u003d new Parser(new Scanner(System.in));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            this.storage.load(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            this.ui.printReply(\"OOPS!!! Can\u0027t access task data.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            this.ui.printReply(\"OOPS!!! Something went wrong... Tasks not saved.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.ui.greet();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            String reply \u003d parser.executeCommand(this.taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            if (reply.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            this.ui.printReply(reply);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                this.storage.save(this.taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                this.ui.printReply(\"OOPS!!! Something went wrong... Tasks not saved.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.ui.bye();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 47,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import exception.InvalidCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import exception.MissingInfoException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Scanner input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Parser(Scanner input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String executeCommand(TaskList taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String command \u003d this.input.next();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return \"bye\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return \"Here are the tasks in your list:\\n\" + taskList.listTasks();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                Task task \u003d taskList.getTasks().get(this.input.nextInt() - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                task.completeTask();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return \"This task has been marked as done:\\n\" + task.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return \"OOPS!!! Task number is invalid.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                this.input.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return \"OOPS!!! Task number must be a number.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                int taskNumber \u003d this.input.nextInt();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                Task task \u003d taskList.getTasks().get(taskNumber - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                taskList.removeTask(taskNumber - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return \"This task has been removed:\\n\" + task.toString()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        + \"\\nNow you have \" + taskList.getTasks().size() + \" in the list.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return \"OOPS!!! Task number is invalid.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                this.input.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return \"OOPS!!! Task number must be a number.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                TaskType.TypeOfTask typeOfTask;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        typeOfTask \u003d TaskType.TypeOfTask.TODO;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        typeOfTask \u003d TaskType.TypeOfTask.DEADLINE;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        typeOfTask \u003d TaskType.TypeOfTask.EVENT;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        this.input.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        throw new InvalidCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                Task newTask \u003d getTask(command, typeOfTask, taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                taskList.addTask(newTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return \"Got it. I\u0027ve added this task:\\n\" + newTask.toString()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        + \"\\nNow you have \" + taskList.getTasks().size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } catch (MissingInfoException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return \"OOPS!!! Date format is invalid. Make sure it is yyyy-mm-ddTHH:mm.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Task getTask(String command, TaskType.TypeOfTask typeOfTask, TaskList taskList) throws MissingInfoException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String[] commandArray \u003d this.input.nextLine().split(\" \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        LocalDateTime timing \u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        for (int i \u003d 1; i \u003c commandArray.length; i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            if (commandArray[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                timing \u003d getTiming(command, commandArray, i + 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } else if (commandArray[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                timing \u003d getTiming(command, commandArray, i + 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                description \u003d commandArray[i];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                description \u003d description + \" \" + commandArray[i];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw new MissingInfoException(\"OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if ((typeOfTask.equals(TaskType.TypeOfTask.DEADLINE) || typeOfTask.equals(TaskType.TypeOfTask.EVENT)) \u0026\u0026 timing \u003d\u003d null) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw new MissingInfoException(\"OOPS!!! The date/time of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return taskList.createTask(typeOfTask, description, timing, false);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private LocalDateTime getTiming(String command, String[] commandArray, int index) throws MissingInfoException, DateTimeParseException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String timing \u003d \"\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        for (int i \u003d index; i \u003c commandArray.length; i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            if (i \u003d\u003d index) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                timing \u003d commandArray[i];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                timing \u003d timing + \" \" + commandArray[i];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if (timing.isEmpty()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw new MissingInfoException(\"OOPS!!! The date/time of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return LocalDateTime.parse(timing);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 130
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private String pathname;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Storage(String pathname) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.pathname \u003d pathname;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void load(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String[] directories \u003d this.pathname.split(\"/\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            for (int i \u003d 0; i \u003c directories.length - 1; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                File directory \u003d new File(directories[i]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                if (!directory.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    directory.mkdir();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            File f \u003d new File(this.pathname);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                String[] data;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                data \u003d s.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                switch (data[0]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        taskList.addTask(taskList.createTask(TaskType.TypeOfTask.TODO, data[2], null, data[1].equals(\"1\") ? true : false));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        taskList.addTask(taskList.createTask(TaskType.TypeOfTask.DEADLINE, data[2], LocalDateTime.parse(data[3]), data[1].equals(\"1\") ? true : false));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        taskList.addTask(taskList.createTask(TaskType.TypeOfTask.EVENT, data[2], LocalDateTime.parse(data[3]), data[1].equals(\"1\") ? true : false));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void save(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String taskString \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            String typeOfTask \u003d task.getClass().getName();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            String timing \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            switch (typeOfTask) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                case \"Todo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    taskString \u003d taskString + \"T\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                case \"Deadline\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    taskString \u003d taskString + \"D\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    timing \u003d timing + ((Deadline) task).getTiming();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                case \"Event\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    taskString \u003d taskString + \"E\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    timing \u003d timing + ((Event) task).getTiming();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            taskString \u003d taskString + \" | \" + (task.getDone() ? \"1\" : \"0\") + \" | \" + task.getTaskDescription()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    + (typeOfTask.equals(\"Deadline\") || typeOfTask.equals(\"Event\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    ? \" | \" + timing"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    : \"\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            taskString \u003d taskString + \"\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.pathname);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            fw.write(taskString);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 91
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String listOfTasks \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            listOfTasks \u003d listOfTasks + (i + 1) + \". \" + this.tasks.get(i).toString()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    + (i \u003d\u003d this.tasks.size() - 1 ? \"\" : \"\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Task createTask(TaskType.TypeOfTask typeOfTask, String description, LocalDateTime timing, boolean done) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        switch (typeOfTask) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return new Todo(description, done);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return new Deadline(description, timing, done);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return new Event(description, timing, done);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return new Task(description, done);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void removeTask(int task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.tasks.remove(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 51
    }
  },
  {
    "path": "src/main/java/duke/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public enum TypeOfTask {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        EVENT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 9
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void printReply(String text) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String line \u003d \"\\t____________________________________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        System.out.println(line + \"\\n\\t\\t\" + text.replaceAll(\"\\\\n\", \"\\n\\t\\t\") + \"\\n\" + line);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        printReply(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        printReply(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 16
    }
  },
  {
    "path": "src/main/java/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 7
    }
  },
  {
    "path": "src/main/java/exception/MissingInfoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class MissingInfoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public MissingInfoException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 7
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Deadline(String description, LocalDateTime by, boolean done) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public LocalDateTime getTiming() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 22
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Event(String description, LocalDateTime at, boolean done) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public LocalDateTime getTiming() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 22
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Task(String taskDescription, boolean done) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.taskDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return (getDone() ? \"[✓] \" : \"[✘] \") + getTaskDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 28
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Todo(String description, boolean done) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 13
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void createTask_createUndoneDeadlineTask_deadlineTaskReturned() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        Task createdTask \u003d taskList.createTask(TaskType.TypeOfTask.DEADLINE, \"Test\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                LocalDateTime.parse(\"2020-08-23T00:00\"), false);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assertEquals(\"[D][✘] Test (by: Aug 23 2020, 00:00)\", createdTask.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void listTask_listAllTasks_allTasksReturnedAsString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        taskList.addTask(new Todo(\"Test1\", false));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        taskList.addTask(new Todo(\"Test2\", true));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assertEquals(\"1. [T][✘] Test1\\n2. [T][✓] Test2\", taskList.listTasks());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 30
    }
  },
  {
    "path": "src/test/java/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void toString_createNewDeadlineTask_deadlineTaskInfoReturned() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assertEquals(\"[D][✘] return books (by: Aug 31 2020, 18:00)\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                new Deadline(\"return books\", LocalDateTime.parse(\"2020-08-31T18:00\"), false).toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 15
    }
  },
  {
    "path": "src/test/java/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void toString_createNewEventTask_eventTaskInfoReturned() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assertEquals(\"[E][✘] 2103T Team Meeting (at: Aug 26 2020, 17:00)\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                new Event(\"2103T Team Meeting\", LocalDateTime.parse(\"2020-08-26T17:00\"), false).toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 15
    }
  },
  {
    "path": "src/test/java/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void toString_createNewTodoTask_todoTaskInfoReturned() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assertEquals(\"[T][✘] borrow books\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                new Todo(\"borrow books\", false).toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "todo borrow books"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "deadline return books /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "todo read books"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 3,
      "-": 20
    }
  }
]
