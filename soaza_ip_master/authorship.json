[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":""},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"soaza"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"soaza"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"soaza"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"soaza"},"content":"    testCompile \u0027junit:junit:4.12\u0027"},{"lineNumber":28,"author":{"gitId":"soaza"},"content":"    compile \u0027org.junit.jupiter:junit-jupiter-api:5.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"soaza"},"content":"    sourceSets.main.java.srcDirs \u003d [\u0027src\u0027]"},{"lineNumber":49,"author":{"gitId":"soaza"},"content":"    mainClassName \u003d \"main.java.Duke.Launcher\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"soaza":18,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"Fantasia is a task and expense management application which the user can use to set reminders and deadlines for upcoming events and also track their own expenses. It uses a CLI to process instructions from the user, which can provide a faster and more efficient experience than a usual to-do list application."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"![Fantasia](Ui.png)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"### Create Task"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"There are 3 different categories of tasks which can be created in Fantasia- `todo`,`deadline` and `event`. `todo` contains a description of the task while `deadline` and `event` contains a description of the task as well as its time(in YYYY-MM-DD format)."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"### Completing a Task"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"You can mark a Task as completed(`[âœ“]`) by using the `done` command."},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"### List all the Tasks"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"You can `list` all the current tasks and all its details in a list format."},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"### Find Tasks"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"You can `find` all the tasks with similar descriptions."},{"lineNumber":20,"author":{"gitId":"soaza"},"content":""},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"### Delete Task"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"You can `delete` task from your task list by its numbering on the task list."},{"lineNumber":23,"author":{"gitId":"soaza"},"content":""},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"### Create an Expense"},{"lineNumber":25,"author":{"gitId":"soaza"},"content":"You can track your expense by adding an `expense` in Fantasia."},{"lineNumber":26,"author":{"gitId":"soaza"},"content":""},{"lineNumber":27,"author":{"gitId":"soaza"},"content":"### List all Expenses"},{"lineNumber":28,"author":{"gitId":"soaza"},"content":"You can track all your expenses by in a list format as well as its cumulative total."},{"lineNumber":29,"author":{"gitId":"soaza"},"content":""},{"lineNumber":30,"author":{"gitId":"soaza"},"content":"### Delete an Expense"},{"lineNumber":31,"author":{"gitId":"soaza"},"content":"You can delete an expense from the list."},{"lineNumber":32,"author":{"gitId":"soaza"},"content":""},{"lineNumber":33,"author":{"gitId":"soaza"},"content":"## Commands for Tasks"},{"lineNumber":34,"author":{"gitId":"soaza"},"content":""},{"lineNumber":35,"author":{"gitId":"soaza"},"content":"### `list` - List out all the tasks stored"},{"lineNumber":36,"author":{"gitId":"soaza"},"content":""},{"lineNumber":37,"author":{"gitId":"soaza"},"content":"Format: `list`"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"soaza"},"content":"`list`"},{"lineNumber":41,"author":{"gitId":"soaza"},"content":""},{"lineNumber":42,"author":{"gitId":"soaza"},"content":"Expected outcome:"},{"lineNumber":43,"author":{"gitId":"soaza"},"content":""},{"lineNumber":44,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":45,"author":{"gitId":"soaza"},"content":"Here are the tasks in your list:"},{"lineNumber":46,"author":{"gitId":"soaza"},"content":"1.[T][âœ—] Homework "},{"lineNumber":47,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":48,"author":{"gitId":"soaza"},"content":""},{"lineNumber":49,"author":{"gitId":"soaza"},"content":""},{"lineNumber":50,"author":{"gitId":"soaza"},"content":"### `todo` - Create a todo Task"},{"lineNumber":51,"author":{"gitId":"soaza"},"content":""},{"lineNumber":52,"author":{"gitId":"soaza"},"content":"Format: `todo \u003ctodo description\u003e`"},{"lineNumber":53,"author":{"gitId":"soaza"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"soaza"},"content":"`todo Assignment`"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":61,"author":{"gitId":"soaza"},"content":"I have added this task:"},{"lineNumber":62,"author":{"gitId":"soaza"},"content":"[T][âœ—] Assignment"},{"lineNumber":63,"author":{"gitId":"soaza"},"content":"Now you have 2 task(s) in the list."},{"lineNumber":64,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":65,"author":{"gitId":"soaza"},"content":"### `deadline` - Create a deadline Task"},{"lineNumber":66,"author":{"gitId":"soaza"},"content":""},{"lineNumber":67,"author":{"gitId":"soaza"},"content":"Format: `deadline \u003cdeadline description\u003e /by \u003ctime in YYYY-MM-DD\u003e`"},{"lineNumber":68,"author":{"gitId":"soaza"},"content":""},{"lineNumber":69,"author":{"gitId":"soaza"},"content":"Example of usage: "},{"lineNumber":70,"author":{"gitId":"soaza"},"content":""},{"lineNumber":71,"author":{"gitId":"soaza"},"content":"`deadline Quiz /by 2020-09-20`"},{"lineNumber":72,"author":{"gitId":"soaza"},"content":""},{"lineNumber":73,"author":{"gitId":"soaza"},"content":"Expected outcome:"},{"lineNumber":74,"author":{"gitId":"soaza"},"content":""},{"lineNumber":75,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":76,"author":{"gitId":"soaza"},"content":"I have added this task:"},{"lineNumber":77,"author":{"gitId":"soaza"},"content":"[D][âœ—] Quiz (by:2020-09-20)"},{"lineNumber":78,"author":{"gitId":"soaza"},"content":"Now you have 3 task(s) in the list."},{"lineNumber":79,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":80,"author":{"gitId":"soaza"},"content":"### `event` - Create a event Task"},{"lineNumber":81,"author":{"gitId":"soaza"},"content":""},{"lineNumber":82,"author":{"gitId":"soaza"},"content":"Format: `event \u003cevent description\u003e /at \u003ctime in YYYY-MM-DD\u003e`"},{"lineNumber":83,"author":{"gitId":"soaza"},"content":""},{"lineNumber":84,"author":{"gitId":"soaza"},"content":"Example of usage: "},{"lineNumber":85,"author":{"gitId":"soaza"},"content":""},{"lineNumber":86,"author":{"gitId":"soaza"},"content":"`deadline Hackathon /by 2020-10-01`"},{"lineNumber":87,"author":{"gitId":"soaza"},"content":""},{"lineNumber":88,"author":{"gitId":"soaza"},"content":"Expected outcome:"},{"lineNumber":89,"author":{"gitId":"soaza"},"content":""},{"lineNumber":90,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":91,"author":{"gitId":"soaza"},"content":"I have added this task:"},{"lineNumber":92,"author":{"gitId":"soaza"},"content":"[E][âœ—] Hackathon (by:2020-10-01)"},{"lineNumber":93,"author":{"gitId":"soaza"},"content":"Now you have 4 task(s) in the list."},{"lineNumber":94,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":95,"author":{"gitId":"soaza"},"content":"### `delete` - To delete a Task"},{"lineNumber":96,"author":{"gitId":"soaza"},"content":""},{"lineNumber":97,"author":{"gitId":"soaza"},"content":"Format: `delete \u003ctask number\u003e`"},{"lineNumber":98,"author":{"gitId":"soaza"},"content":""},{"lineNumber":99,"author":{"gitId":"soaza"},"content":"Example of usage:"},{"lineNumber":100,"author":{"gitId":"soaza"},"content":""},{"lineNumber":101,"author":{"gitId":"soaza"},"content":"`delete 1`"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":104,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":105,"author":{"gitId":"soaza"},"content":"I have removed the task:"},{"lineNumber":106,"author":{"gitId":"soaza"},"content":"[T][âœ—] Homework "},{"lineNumber":107,"author":{"gitId":"soaza"},"content":"Now you have 3 tasks in the list."},{"lineNumber":108,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":109,"author":{"gitId":"soaza"},"content":"### `done` - To mark a Task as done"},{"lineNumber":110,"author":{"gitId":"soaza"},"content":""},{"lineNumber":111,"author":{"gitId":"soaza"},"content":"Format: `done \u003ctask number\u003e`"},{"lineNumber":112,"author":{"gitId":"soaza"},"content":""},{"lineNumber":113,"author":{"gitId":"soaza"},"content":"Example of usage:"},{"lineNumber":114,"author":{"gitId":"soaza"},"content":""},{"lineNumber":115,"author":{"gitId":"soaza"},"content":"`done 1`"},{"lineNumber":116,"author":{"gitId":"soaza"},"content":""},{"lineNumber":117,"author":{"gitId":"soaza"},"content":"Expected outcome:"},{"lineNumber":118,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":119,"author":{"gitId":"soaza"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":120,"author":{"gitId":"soaza"},"content":"[T][âœ“] Assignment"},{"lineNumber":121,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":122,"author":{"gitId":"soaza"},"content":"### `find` - To find similar Task"},{"lineNumber":123,"author":{"gitId":"soaza"},"content":""},{"lineNumber":124,"author":{"gitId":"soaza"},"content":"Format: `find \u003cdescription\u003e`"},{"lineNumber":125,"author":{"gitId":"soaza"},"content":""},{"lineNumber":126,"author":{"gitId":"soaza"},"content":"Example of usage:"},{"lineNumber":127,"author":{"gitId":"soaza"},"content":""},{"lineNumber":128,"author":{"gitId":"soaza"},"content":"`find Assignment`"},{"lineNumber":129,"author":{"gitId":"soaza"},"content":""},{"lineNumber":130,"author":{"gitId":"soaza"},"content":"Expected outcome:"},{"lineNumber":131,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":132,"author":{"gitId":"soaza"},"content":"Here are the matching tasks in your list:"},{"lineNumber":133,"author":{"gitId":"soaza"},"content":"1.[T][âœ“] Assignment"},{"lineNumber":134,"author":{"gitId":"soaza"},"content":"2.[T][âœ—] Assignment 2"},{"lineNumber":135,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":136,"author":{"gitId":"soaza"},"content":"## Commands for Expenses"},{"lineNumber":137,"author":{"gitId":"soaza"},"content":""},{"lineNumber":138,"author":{"gitId":"soaza"},"content":"### `expense` - To add an expense"},{"lineNumber":139,"author":{"gitId":"soaza"},"content":""},{"lineNumber":140,"author":{"gitId":"soaza"},"content":"Format: `expense \u003cdescription\u003e /amount \u003cexpense amount\u003e`"},{"lineNumber":141,"author":{"gitId":"soaza"},"content":""},{"lineNumber":142,"author":{"gitId":"soaza"},"content":"Example of usage:"},{"lineNumber":143,"author":{"gitId":"soaza"},"content":""},{"lineNumber":144,"author":{"gitId":"soaza"},"content":"`expense dinner /amount 20`"},{"lineNumber":145,"author":{"gitId":"soaza"},"content":""},{"lineNumber":146,"author":{"gitId":"soaza"},"content":"Expected outcome:"},{"lineNumber":147,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":148,"author":{"gitId":"soaza"},"content":"I have added this expense:"},{"lineNumber":149,"author":{"gitId":"soaza"},"content":"dinner ,Cost:$20.00"},{"lineNumber":150,"author":{"gitId":"soaza"},"content":"Now your total expense is:"},{"lineNumber":151,"author":{"gitId":"soaza"},"content":"$20.00"},{"lineNumber":152,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":153,"author":{"gitId":"soaza"},"content":"### `listExpense` - To list all expenses"},{"lineNumber":154,"author":{"gitId":"soaza"},"content":""},{"lineNumber":155,"author":{"gitId":"soaza"},"content":"Format: `listExpense`"},{"lineNumber":156,"author":{"gitId":"soaza"},"content":""},{"lineNumber":157,"author":{"gitId":"soaza"},"content":"Example of usage:"},{"lineNumber":158,"author":{"gitId":"soaza"},"content":""},{"lineNumber":159,"author":{"gitId":"soaza"},"content":"`listExpense`"},{"lineNumber":160,"author":{"gitId":"soaza"},"content":""},{"lineNumber":161,"author":{"gitId":"soaza"},"content":"Expected outcome:"},{"lineNumber":162,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":163,"author":{"gitId":"soaza"},"content":"Here are the expenses:"},{"lineNumber":164,"author":{"gitId":"soaza"},"content":"1.Breakfast ,Cost:$10.00"},{"lineNumber":165,"author":{"gitId":"soaza"},"content":"2.Lunch ,Cost:$10.00"},{"lineNumber":166,"author":{"gitId":"soaza"},"content":"3.Dinner ,Cost:$20.00"},{"lineNumber":167,"author":{"gitId":"soaza"},"content":""},{"lineNumber":168,"author":{"gitId":"soaza"},"content":"Total expenses: $40.00"},{"lineNumber":169,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":170,"author":{"gitId":"soaza"},"content":"### `deleteExpense` - To delete an expense"},{"lineNumber":171,"author":{"gitId":"soaza"},"content":""},{"lineNumber":172,"author":{"gitId":"soaza"},"content":"Format: `deleteExpense \u003cexpense number\u003e`"},{"lineNumber":173,"author":{"gitId":"soaza"},"content":""},{"lineNumber":174,"author":{"gitId":"soaza"},"content":"Example of usage:"},{"lineNumber":175,"author":{"gitId":"soaza"},"content":""},{"lineNumber":176,"author":{"gitId":"soaza"},"content":"`deleteExpense 2`"},{"lineNumber":177,"author":{"gitId":"soaza"},"content":""},{"lineNumber":178,"author":{"gitId":"soaza"},"content":"Expected outcome:"},{"lineNumber":179,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":180,"author":{"gitId":"soaza"},"content":"I have removed the expense:"},{"lineNumber":181,"author":{"gitId":"soaza"},"content":"Lunch ,Cost:$10.00"},{"lineNumber":182,"author":{"gitId":"soaza"},"content":"Now you have 2 expenses in the list."},{"lineNumber":183,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":184,"author":{"gitId":"soaza"},"content":"## Miscellaneous commands"},{"lineNumber":185,"author":{"gitId":"soaza"},"content":""},{"lineNumber":186,"author":{"gitId":"soaza"},"content":"### `(Random Input)` - Provides a helpful list of commands "},{"lineNumber":187,"author":{"gitId":"soaza"},"content":""},{"lineNumber":188,"author":{"gitId":"soaza"},"content":"Format : `Not applicable`"},{"lineNumber":189,"author":{"gitId":"soaza"},"content":""},{"lineNumber":190,"author":{"gitId":"soaza"},"content":"Example of usage:"},{"lineNumber":191,"author":{"gitId":"soaza"},"content":""},{"lineNumber":192,"author":{"gitId":"soaza"},"content":"`bla bla bla`"},{"lineNumber":193,"author":{"gitId":"soaza"},"content":""},{"lineNumber":194,"author":{"gitId":"soaza"},"content":"Expected outcome:"},{"lineNumber":195,"author":{"gitId":"soaza"},"content":"```"},{"lineNumber":196,"author":{"gitId":"soaza"},"content":" Please input:"},{"lineNumber":197,"author":{"gitId":"soaza"},"content":"                1)list - to access the list"},{"lineNumber":198,"author":{"gitId":"soaza"},"content":"                2)todo - to create a todo task"},{"lineNumber":199,"author":{"gitId":"soaza"},"content":"                3)deadline - to create a deadline"},{"lineNumber":200,"author":{"gitId":"soaza"},"content":"                4)event - to schedule an event"},{"lineNumber":201,"author":{"gitId":"soaza"},"content":"                5)done - to mark tasks as done"},{"lineNumber":202,"author":{"gitId":"soaza"},"content":"                6)delete - to delete tasks from the list"},{"lineNumber":203,"author":{"gitId":"soaza"},"content":"                7)find - to find tasks from the list"},{"lineNumber":204,"author":{"gitId":"soaza"},"content":"                -FOR EXPENSES-"},{"lineNumber":205,"author":{"gitId":"soaza"},"content":"                1)expense - to add an expense"},{"lineNumber":206,"author":{"gitId":"soaza"},"content":"                2)listExpense - to list all expenses"},{"lineNumber":207,"author":{"gitId":"soaza"},"content":"                3)deleteExpense - to delete expense from the list"},{"lineNumber":208,"author":{"gitId":"soaza"},"content":""},{"lineNumber":209,"author":{"gitId":"soaza"},"content":"                `bye` - to exit the program"},{"lineNumber":210,"author":{"gitId":"soaza"},"content":" ```"},{"lineNumber":211,"author":{"gitId":"soaza"},"content":" ## Exiting the program"},{"lineNumber":212,"author":{"gitId":"soaza"},"content":""},{"lineNumber":213,"author":{"gitId":"soaza"},"content":" ### `bye` - Exits the program"},{"lineNumber":214,"author":{"gitId":"soaza"},"content":" "},{"lineNumber":215,"author":{"gitId":"soaza"},"content":" Format: `bye`"},{"lineNumber":216,"author":{"gitId":"soaza"},"content":" "},{"lineNumber":217,"author":{"gitId":"soaza"},"content":" Example of usage:"},{"lineNumber":218,"author":{"gitId":"soaza"},"content":" "},{"lineNumber":219,"author":{"gitId":"soaza"},"content":" `bye`"},{"lineNumber":220,"author":{"gitId":"soaza"},"content":" "},{"lineNumber":221,"author":{"gitId":"soaza"},"content":" Expected outcome:"},{"lineNumber":222,"author":{"gitId":"soaza"},"content":" Terminates the program"},{"lineNumber":223,"author":{"gitId":"soaza"},"content":" "},{"lineNumber":224,"author":{"gitId":"soaza"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"soaza":206,"-":19}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":""},{"lineNumber":2,"author":{"gitId":"soaza"},"content":"dog ,Cost:$1000.00"},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"cat ,Cost:$500.00"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"rabbit ,Cost:$200.00"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"Duke ,Cost:$60.00"}],"authorContributionMap":{"soaza":5}},{"path":"src/main/java/Duke/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Commands;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":""},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":""},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"public class Command {"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    public boolean isExit;"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"    TaskList tasklist;"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"    String str;"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":""},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    public Command(TaskList tasklist, String str) {"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"        this.isExit \u003d false;"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"        this.tasklist \u003d tasklist;"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"        this.str \u003d str;"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":""},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"     * Executes the Command."},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"    public String execute() {"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"        return this.str;"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"soaza"},"content":""},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":24}},{"path":"src/main/java/Duke/Commands/addCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Commands;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.Task;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":""},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"public class addCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    Task task;"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"    public addCommand(TaskList tasklist, Task task) {"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"        super(tasklist,\"\");"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"        this.task \u003d task;"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":""},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"    public String execute() {"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"        return this.tasklist.addTask(this.task);"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":17}},{"path":"src/main/java/Duke/Commands/addExpenseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Commands;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.Expense;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.Task;"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":""},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"public class addExpenseCommand extends addCommand{"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"    public addExpenseCommand(TaskList tasklist, Task task) {"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"        super(tasklist, task);"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":""},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"    public String execute(){"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"        return tasklist.addExpense((Expense)task);"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":16}},{"path":"src/main/java/Duke/Commands/commandList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"1)list"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":"2)todo"},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"3)deadline"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"4)event"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"5)delete"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"6)done"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"7)bye"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"8)find"}],"authorContributionMap":{"soaza":8}},{"path":"src/main/java/Duke/Commands/deleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Commands;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"public class deleteCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"    int taskNumber;"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    public deleteCommand(TaskList tasklist, int taskNumber) {"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"        super(tasklist,\"\");"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":""},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"     * Executes a command to delete a task."},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"    public String execute() {"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"        return this.tasklist.deleteTask(taskNumber);"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":19}},{"path":"src/main/java/Duke/Commands/deleteExpenseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Commands;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"public class deleteExpenseCommand extends deleteCommand {"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"    public deleteExpenseCommand(TaskList tasklist, int expenseNumber) {"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"        super(tasklist, expenseNumber);"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":""},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    public String execute(){"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"        return this.tasklist.deleteExpense(taskNumber);"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":14}},{"path":"src/main/java/Duke/Commands/doneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Commands;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"public class doneCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"    int taskNumber;"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    public doneCommand(TaskList taskList, int taskNumber) {"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"        super(taskList,\"\");"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":""},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"     * Executes the command to mark a task as done."},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"    public String execute() {"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"        return this.tasklist.completeTask(taskNumber);"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":19}},{"path":"src/main/java/Duke/Commands/endCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Commands;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"public class endCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":""},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    public endCommand(TaskList taskList) {"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"        super(taskList,\"\");"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":""},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"     * Executes the command to end the loop in the main method and end the program."},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"    public String execute() {"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"        this.isExit \u003d true;"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"        return \"\";"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":19}},{"path":"src/main/java/Duke/Commands/exceptionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Commands;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":""},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":""},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"public class exceptionCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    public boolean isExit;"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"    TaskList tasklist;"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":""},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"    public exceptionCommand(TaskList tasklist,String str) {"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"        super(tasklist,str);"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":""},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"     * Executes the Command."},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"    public String execute() {"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"        return this.str;"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":""},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":21}},{"path":"src/main/java/Duke/Commands/findCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Commands;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"public class findCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":""},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    public findCommand(TaskList tasklist, String str) {"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"        super(tasklist,str);"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":""},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    public String execute() {"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"        return this.tasklist.findTask(this.str);"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":15}},{"path":"src/main/java/Duke/Commands/listCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Commands;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"public class listCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":""},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    public listCommand(TaskList tasklist) {"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"        super(tasklist,\"\");"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":""},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"     * Executes the Command to show the Task List."},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"    public String execute() {"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"        return this.tasklist.showList();"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":18}},{"path":"src/main/java/Duke/Commands/listExpenseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Commands;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"public class listExpenseCommand extends listCommand {"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":""},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    public listExpenseCommand(TaskList tasklist) {"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"        super(tasklist);"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":""},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    public String execute(){"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"        return this.tasklist.showExpenses();"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":15}},{"path":"src/main/java/Duke/Commands/totalExpenseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Commands;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"public class totalExpenseCommand extends Command{"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":""},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    public totalExpenseCommand(TaskList tasklist, String str) {"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"        super(tasklist, str);"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":""},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    public String execute() {"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"        return \"Total expenses: $\" + String.valueOf(this.tasklist.calculateTotalExpense());"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":15}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import javafx.application.Platform;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"import javafx.scene.layout.*;"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Commands.Command;"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"import main.java.Duke.DukeException.DukeException;"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.Task;"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.TaskList;"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":""},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"import javafx.geometry.Pos;"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"import javafx.scene.Node;"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"import javafx.application.Application;"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"import javafx.scene.Scene;"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"import javafx.scene.control.Button;"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"import javafx.stage.Stage;"},{"lineNumber":23,"author":{"gitId":"soaza"},"content":"import javafx.scene.image.Image;"},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"import java.io.IOException;"},{"lineNumber":25,"author":{"gitId":"soaza"},"content":"import java.util.Collections;"},{"lineNumber":26,"author":{"gitId":"soaza"},"content":""},{"lineNumber":27,"author":{"gitId":"soaza"},"content":"import javafx.fxml.FXML;"},{"lineNumber":28,"author":{"gitId":"soaza"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":29,"author":{"gitId":"soaza"},"content":""},{"lineNumber":30,"author":{"gitId":"soaza"},"content":"import java.util.ArrayList;"},{"lineNumber":31,"author":{"gitId":"soaza"},"content":""},{"lineNumber":32,"author":{"gitId":"soaza"},"content":"class DialogBox extends HBox {"},{"lineNumber":33,"author":{"gitId":"soaza"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"soaza"},"content":"    private Label dialog;"},{"lineNumber":35,"author":{"gitId":"soaza"},"content":"    @FXML"},{"lineNumber":36,"author":{"gitId":"soaza"},"content":"    private ImageView displayPicture;"},{"lineNumber":37,"author":{"gitId":"soaza"},"content":""},{"lineNumber":38,"author":{"gitId":"soaza"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":39,"author":{"gitId":"soaza"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"soaza"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":41,"author":{"gitId":"soaza"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":42,"author":{"gitId":"soaza"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":43,"author":{"gitId":"soaza"},"content":"            fxmlLoader.load();"},{"lineNumber":44,"author":{"gitId":"soaza"},"content":"        } catch (IOException e) {"},{"lineNumber":45,"author":{"gitId":"soaza"},"content":"            e.printStackTrace();"},{"lineNumber":46,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"soaza"},"content":""},{"lineNumber":48,"author":{"gitId":"soaza"},"content":"        dialog.setText(text);"},{"lineNumber":49,"author":{"gitId":"soaza"},"content":"        setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":50,"author":{"gitId":"soaza"},"content":"        displayPicture.setImage(img);"},{"lineNumber":51,"author":{"gitId":"soaza"},"content":"        Circle clip \u003d new Circle(70, 50, 50);"},{"lineNumber":52,"author":{"gitId":"soaza"},"content":"        displayPicture.setClip(clip);"},{"lineNumber":53,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"soaza"},"content":""},{"lineNumber":55,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"soaza"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":57,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"soaza"},"content":"    private void flip() {"},{"lineNumber":59,"author":{"gitId":"soaza"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":60,"author":{"gitId":"soaza"},"content":"        Collections.reverse(tmp);"},{"lineNumber":61,"author":{"gitId":"soaza"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":62,"author":{"gitId":"soaza"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":63,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"soaza"},"content":""},{"lineNumber":65,"author":{"gitId":"soaza"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":66,"author":{"gitId":"soaza"},"content":"        return new DialogBox(text, img);"},{"lineNumber":67,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"soaza"},"content":""},{"lineNumber":69,"author":{"gitId":"soaza"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":70,"author":{"gitId":"soaza"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":71,"author":{"gitId":"soaza"},"content":"        db.flip();"},{"lineNumber":72,"author":{"gitId":"soaza"},"content":"        if(text.contains(\"Bye.\")){"},{"lineNumber":73,"author":{"gitId":"soaza"},"content":"            Platform.exit();"},{"lineNumber":74,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"soaza"},"content":"        return db;"},{"lineNumber":76,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"soaza"},"content":"}"},{"lineNumber":78,"author":{"gitId":"soaza"},"content":""},{"lineNumber":79,"author":{"gitId":"soaza"},"content":"public class Duke extends Application {"},{"lineNumber":80,"author":{"gitId":"soaza"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/babyyoda.jpg\"));"},{"lineNumber":81,"author":{"gitId":"soaza"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/shiba.jpg\"));"},{"lineNumber":82,"author":{"gitId":"soaza"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":83,"author":{"gitId":"soaza"},"content":"    private VBox dialogContainer;"},{"lineNumber":84,"author":{"gitId":"soaza"},"content":"    private TextField userInput;"},{"lineNumber":85,"author":{"gitId":"soaza"},"content":"    private Button sendButton;"},{"lineNumber":86,"author":{"gitId":"soaza"},"content":"    private Scene scene;"},{"lineNumber":87,"author":{"gitId":"soaza"},"content":"    boolean isExit \u003d false;"},{"lineNumber":88,"author":{"gitId":"soaza"},"content":""},{"lineNumber":89,"author":{"gitId":"soaza"},"content":"    public Storage storage;"},{"lineNumber":90,"author":{"gitId":"soaza"},"content":"    public TaskList tasklist;"},{"lineNumber":91,"author":{"gitId":"soaza"},"content":"    public Ui ui;"},{"lineNumber":92,"author":{"gitId":"soaza"},"content":""},{"lineNumber":93,"author":{"gitId":"soaza"},"content":"    public Duke () {"},{"lineNumber":94,"author":{"gitId":"soaza"},"content":"        this.storage \u003d new Storage(\"duke.txt\");"},{"lineNumber":95,"author":{"gitId":"soaza"},"content":"        this.tasklist \u003d new TaskList(storage.arr,storage.arrExpenses);"},{"lineNumber":96,"author":{"gitId":"soaza"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":97,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"soaza"},"content":""},{"lineNumber":99,"author":{"gitId":"soaza"},"content":"    public static void main(String[] args) throws DukeException, IOException {"},{"lineNumber":100,"author":{"gitId":"soaza"},"content":"        boolean isExit \u003d false;"},{"lineNumber":101,"author":{"gitId":"soaza"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":102,"author":{"gitId":"soaza"},"content":"        ArrayList\u003cTask\u003e arrList \u003d duke.tasklist.list;"},{"lineNumber":103,"author":{"gitId":"soaza"},"content":"        Parser parser \u003d new Parser(duke);"},{"lineNumber":104,"author":{"gitId":"soaza"},"content":""},{"lineNumber":105,"author":{"gitId":"soaza"},"content":"        duke.ui.greetingMessage();"},{"lineNumber":106,"author":{"gitId":"soaza"},"content":"        String userinput \u003d \"\";"},{"lineNumber":107,"author":{"gitId":"soaza"},"content":""},{"lineNumber":108,"author":{"gitId":"soaza"},"content":"        while (!isExit) {"},{"lineNumber":109,"author":{"gitId":"soaza"},"content":"            duke.ui.prompt();"},{"lineNumber":110,"author":{"gitId":"soaza"},"content":"            userinput \u003d duke.ui.readCommand();"},{"lineNumber":111,"author":{"gitId":"soaza"},"content":"            Command command \u003d parser.parse(userinput, duke.tasklist);"},{"lineNumber":112,"author":{"gitId":"soaza"},"content":"            command.execute();"},{"lineNumber":113,"author":{"gitId":"soaza"},"content":"            isExit \u003d command.isExit;"},{"lineNumber":114,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"soaza"},"content":"        duke.storage.saveTasks(arrList,duke.tasklist.expenses);"},{"lineNumber":116,"author":{"gitId":"soaza"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":117,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"soaza"},"content":""},{"lineNumber":119,"author":{"gitId":"soaza"},"content":""},{"lineNumber":120,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":121,"author":{"gitId":"soaza"},"content":"    public void start(Stage stage) throws Exception {"},{"lineNumber":122,"author":{"gitId":"soaza"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":123,"author":{"gitId":"soaza"},"content":""},{"lineNumber":124,"author":{"gitId":"soaza"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":125,"author":{"gitId":"soaza"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":126,"author":{"gitId":"soaza"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":127,"author":{"gitId":"soaza"},"content":""},{"lineNumber":128,"author":{"gitId":"soaza"},"content":"        userInput \u003d new TextField();"},{"lineNumber":129,"author":{"gitId":"soaza"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":130,"author":{"gitId":"soaza"},"content":""},{"lineNumber":131,"author":{"gitId":"soaza"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":132,"author":{"gitId":"soaza"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":133,"author":{"gitId":"soaza"},"content":""},{"lineNumber":134,"author":{"gitId":"soaza"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":135,"author":{"gitId":"soaza"},"content":"        stage.setScene(scene);"},{"lineNumber":136,"author":{"gitId":"soaza"},"content":"        stage.show();"},{"lineNumber":137,"author":{"gitId":"soaza"},"content":""},{"lineNumber":138,"author":{"gitId":"soaza"},"content":"        stage.setTitle(\"Fantasia\");"},{"lineNumber":139,"author":{"gitId":"soaza"},"content":"        stage.setResizable(false);"},{"lineNumber":140,"author":{"gitId":"soaza"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":141,"author":{"gitId":"soaza"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":142,"author":{"gitId":"soaza"},"content":""},{"lineNumber":143,"author":{"gitId":"soaza"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":144,"author":{"gitId":"soaza"},"content":""},{"lineNumber":145,"author":{"gitId":"soaza"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":146,"author":{"gitId":"soaza"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":147,"author":{"gitId":"soaza"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":148,"author":{"gitId":"soaza"},"content":""},{"lineNumber":149,"author":{"gitId":"soaza"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":150,"author":{"gitId":"soaza"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":151,"author":{"gitId":"soaza"},"content":""},{"lineNumber":152,"author":{"gitId":"soaza"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":153,"author":{"gitId":"soaza"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":154,"author":{"gitId":"soaza"},"content":""},{"lineNumber":155,"author":{"gitId":"soaza"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":156,"author":{"gitId":"soaza"},"content":""},{"lineNumber":157,"author":{"gitId":"soaza"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":158,"author":{"gitId":"soaza"},"content":""},{"lineNumber":159,"author":{"gitId":"soaza"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":160,"author":{"gitId":"soaza"},"content":""},{"lineNumber":161,"author":{"gitId":"soaza"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":162,"author":{"gitId":"soaza"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":163,"author":{"gitId":"soaza"},"content":""},{"lineNumber":164,"author":{"gitId":"soaza"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":165,"author":{"gitId":"soaza"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":166,"author":{"gitId":"soaza"},"content":""},{"lineNumber":167,"author":{"gitId":"soaza"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":168,"author":{"gitId":"soaza"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":169,"author":{"gitId":"soaza"},"content":"            userInput.clear();"},{"lineNumber":170,"author":{"gitId":"soaza"},"content":"        });"},{"lineNumber":171,"author":{"gitId":"soaza"},"content":""},{"lineNumber":172,"author":{"gitId":"soaza"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":173,"author":{"gitId":"soaza"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":174,"author":{"gitId":"soaza"},"content":"            userInput.clear();"},{"lineNumber":175,"author":{"gitId":"soaza"},"content":"        });"},{"lineNumber":176,"author":{"gitId":"soaza"},"content":""},{"lineNumber":177,"author":{"gitId":"soaza"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":178,"author":{"gitId":"soaza"},"content":""},{"lineNumber":179,"author":{"gitId":"soaza"},"content":"        //Part 3. Add functionality to handle user input."},{"lineNumber":180,"author":{"gitId":"soaza"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":181,"author":{"gitId":"soaza"},"content":"            handleUserInput(duke);"},{"lineNumber":182,"author":{"gitId":"soaza"},"content":"        });"},{"lineNumber":183,"author":{"gitId":"soaza"},"content":""},{"lineNumber":184,"author":{"gitId":"soaza"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":185,"author":{"gitId":"soaza"},"content":"            handleUserInput(duke);"},{"lineNumber":186,"author":{"gitId":"soaza"},"content":"        });"},{"lineNumber":187,"author":{"gitId":"soaza"},"content":""},{"lineNumber":188,"author":{"gitId":"soaza"},"content":""},{"lineNumber":189,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"soaza"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":191,"author":{"gitId":"soaza"},"content":"        // You will need to import `javafx.scene.control.Label`."},{"lineNumber":192,"author":{"gitId":"soaza"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":193,"author":{"gitId":"soaza"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":194,"author":{"gitId":"soaza"},"content":""},{"lineNumber":195,"author":{"gitId":"soaza"},"content":"        return textToAdd;"},{"lineNumber":196,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"soaza"},"content":"    private void handleUserInput(Duke duke) {"},{"lineNumber":198,"author":{"gitId":"soaza"},"content":"        String userText \u003d new String(userInput.getText());"},{"lineNumber":199,"author":{"gitId":"soaza"},"content":"        String dukeText \u003d new String(getResponse(userInput.getText(),duke));"},{"lineNumber":200,"author":{"gitId":"soaza"},"content":""},{"lineNumber":201,"author":{"gitId":"soaza"},"content":""},{"lineNumber":202,"author":{"gitId":"soaza"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":203,"author":{"gitId":"soaza"},"content":"                DialogBox.getUserDialog(userText, new Image(String.valueOf(user))),"},{"lineNumber":204,"author":{"gitId":"soaza"},"content":"                DialogBox.getDukeDialog(dukeText, new Image(String.valueOf(dukeImage)))"},{"lineNumber":205,"author":{"gitId":"soaza"},"content":"        );"},{"lineNumber":206,"author":{"gitId":"soaza"},"content":"        userInput.clear();"},{"lineNumber":207,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"soaza"},"content":""},{"lineNumber":209,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":210,"author":{"gitId":"soaza"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":211,"author":{"gitId":"soaza"},"content":"     * Replace this stub with your completed method."},{"lineNumber":212,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"soaza"},"content":"    public String getResponse(String input,Duke duke) {"},{"lineNumber":214,"author":{"gitId":"soaza"},"content":"        Parser parser \u003d new Parser(duke);"},{"lineNumber":215,"author":{"gitId":"soaza"},"content":"        duke.ui.prompt();"},{"lineNumber":216,"author":{"gitId":"soaza"},"content":"        Command command \u003d parser.parse(input, duke.tasklist);"},{"lineNumber":217,"author":{"gitId":"soaza"},"content":"        String string \u003dcommand.execute();"},{"lineNumber":218,"author":{"gitId":"soaza"},"content":"        isExit \u003d command.isExit;"},{"lineNumber":219,"author":{"gitId":"soaza"},"content":""},{"lineNumber":220,"author":{"gitId":"soaza"},"content":"        if(!this.isExit) {"},{"lineNumber":221,"author":{"gitId":"soaza"},"content":"            return string;"},{"lineNumber":222,"author":{"gitId":"soaza"},"content":"        }else {"},{"lineNumber":223,"author":{"gitId":"soaza"},"content":"            duke.storage.saveTasks(duke.tasklist.list,duke.tasklist.expenses);"},{"lineNumber":224,"author":{"gitId":"soaza"},"content":"            return \"Bye. Hope to see you again soon!\";"},{"lineNumber":225,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"soaza"},"content":""},{"lineNumber":228,"author":{"gitId":"soaza"},"content":""},{"lineNumber":229,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":229}},{"path":"src/main/java/Duke/DukeException/DukeArrayException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.DukeException;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"public class DukeArrayException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"    public DukeArrayException(){"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":6}},{"path":"src/main/java/Duke/DukeException/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.DukeException;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"    public DukeException(){"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":""},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":8}},{"path":"src/main/java/Duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"soaza"},"content":" */"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":12}},{"path":"src/main/java/Duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Duke;"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":""},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"soaza"},"content":" */"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":""},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":""},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"soaza"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"soaza"},"content":"            ap.setId(\"pane\");"},{"lineNumber":26,"author":{"gitId":"soaza"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"soaza"},"content":"            stage.setTitle(\"Fantasia\");"},{"lineNumber":28,"author":{"gitId":"soaza"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":29,"author":{"gitId":"soaza"},"content":"            stage.show();"},{"lineNumber":30,"author":{"gitId":"soaza"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"soaza"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":34}},{"path":"src/main/java/Duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"soaza"},"content":" */"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"soaza"},"content":""},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"soaza"},"content":""},{"lineNumber":26,"author":{"gitId":"soaza"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/man2.jpg\"));"},{"lineNumber":27,"author":{"gitId":"soaza"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/man.jpg\"));"},{"lineNumber":28,"author":{"gitId":"soaza"},"content":""},{"lineNumber":29,"author":{"gitId":"soaza"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"soaza"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"soaza"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"soaza"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(new Duke().ui.greetingMessage(), dukeImage));"},{"lineNumber":33,"author":{"gitId":"soaza"},"content":""},{"lineNumber":34,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"soaza"},"content":""},{"lineNumber":36,"author":{"gitId":"soaza"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":37,"author":{"gitId":"soaza"},"content":"        duke \u003d d;"},{"lineNumber":38,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"soaza"},"content":""},{"lineNumber":40,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"soaza"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":42,"author":{"gitId":"soaza"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":43,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"soaza"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitId":"soaza"},"content":"    private void handleUserInput() {"},{"lineNumber":46,"author":{"gitId":"soaza"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":47,"author":{"gitId":"soaza"},"content":"        String response \u003d duke.getResponse(input,duke);"},{"lineNumber":48,"author":{"gitId":"soaza"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":49,"author":{"gitId":"soaza"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":50,"author":{"gitId":"soaza"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":51,"author":{"gitId":"soaza"},"content":"        );"},{"lineNumber":52,"author":{"gitId":"soaza"},"content":"        userInput.clear();"},{"lineNumber":53,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":54}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Commands.*;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"import main.java.Duke.DukeException.DukeArrayException;"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"import main.java.Duke.DukeException.DukeException;"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.*;"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":""},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":""},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    Duke duke;"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":""},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"    public Parser(Duke duke) {"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"        this.duke \u003d duke;"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":""},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"     /**"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"     * Parses the user input and returns a Command to be executed."},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"     * @param userInput User input from the user."},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"     * @param tasklist Current task list."},{"lineNumber":23,"author":{"gitId":"soaza"},"content":"     * @return Command to be executed."},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"     * @throws DateTimeParseException if user input for date is not in the correct format."},{"lineNumber":25,"author":{"gitId":"soaza"},"content":"     * @throws DukeException if user input is invalid."},{"lineNumber":26,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"soaza"},"content":"     public Command parse(String userInput, TaskList tasklist) {"},{"lineNumber":28,"author":{"gitId":"soaza"},"content":""},{"lineNumber":29,"author":{"gitId":"soaza"},"content":"         String commandType;"},{"lineNumber":30,"author":{"gitId":"soaza"},"content":"         String description \u003d null;"},{"lineNumber":31,"author":{"gitId":"soaza"},"content":""},{"lineNumber":32,"author":{"gitId":"soaza"},"content":"         //Splits the userInput into type of command and its description"},{"lineNumber":33,"author":{"gitId":"soaza"},"content":"        if (userInput.contains(\" \")) {"},{"lineNumber":34,"author":{"gitId":"soaza"},"content":"            commandType \u003d userInput.substring(0, userInput.indexOf(\u0027 \u0027));"},{"lineNumber":35,"author":{"gitId":"soaza"},"content":"            description \u003d userInput.substring(userInput.indexOf(\u0027 \u0027) + 1);"},{"lineNumber":36,"author":{"gitId":"soaza"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"soaza"},"content":"            commandType \u003d userInput;"},{"lineNumber":38,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"soaza"},"content":"         "},{"lineNumber":40,"author":{"gitId":"soaza"},"content":""},{"lineNumber":41,"author":{"gitId":"soaza"},"content":"        switch (commandType) {"},{"lineNumber":42,"author":{"gitId":"soaza"},"content":"            case \"list\":"},{"lineNumber":43,"author":{"gitId":"soaza"},"content":"                return new listCommand(tasklist);"},{"lineNumber":44,"author":{"gitId":"soaza"},"content":""},{"lineNumber":45,"author":{"gitId":"soaza"},"content":"            case \"todo\":"},{"lineNumber":46,"author":{"gitId":"soaza"},"content":""},{"lineNumber":47,"author":{"gitId":"soaza"},"content":"                assert userInput.length() \u003e 5 : \"No description for todo\";"},{"lineNumber":48,"author":{"gitId":"soaza"},"content":""},{"lineNumber":49,"author":{"gitId":"soaza"},"content":"                try {"},{"lineNumber":50,"author":{"gitId":"soaza"},"content":"                    if (userInput.length() \u003c\u003d 5) {"},{"lineNumber":51,"author":{"gitId":"soaza"},"content":"                        throw new DukeException();"},{"lineNumber":52,"author":{"gitId":"soaza"},"content":"                    }"},{"lineNumber":53,"author":{"gitId":"soaza"},"content":"                    String todoDescription \u003d userInput.substring(5);"},{"lineNumber":54,"author":{"gitId":"soaza"},"content":"                    toDo task \u003d new toDo(todoDescription, false);"},{"lineNumber":55,"author":{"gitId":"soaza"},"content":"                    return new addCommand(tasklist, task);"},{"lineNumber":56,"author":{"gitId":"soaza"},"content":""},{"lineNumber":57,"author":{"gitId":"soaza"},"content":"                } catch (DukeException e) {"},{"lineNumber":58,"author":{"gitId":"soaza"},"content":"                    return new exceptionCommand(tasklist, duke.ui.showException(\"Must include description for todo\"));"},{"lineNumber":59,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"soaza"},"content":""},{"lineNumber":61,"author":{"gitId":"soaza"},"content":"            case \"deadline\":"},{"lineNumber":62,"author":{"gitId":"soaza"},"content":""},{"lineNumber":63,"author":{"gitId":"soaza"},"content":"                assert userInput.contains(\"/by\") : \"deadline must include /by\";"},{"lineNumber":64,"author":{"gitId":"soaza"},"content":""},{"lineNumber":65,"author":{"gitId":"soaza"},"content":"                try {"},{"lineNumber":66,"author":{"gitId":"soaza"},"content":"                    if (!userInput.contains(\"/by\")) {"},{"lineNumber":67,"author":{"gitId":"soaza"},"content":"                        throw new DukeException();"},{"lineNumber":68,"author":{"gitId":"soaza"},"content":"                    } else {"},{"lineNumber":69,"author":{"gitId":"soaza"},"content":"                        int index \u003d userInput.indexOf(\"/by\");"},{"lineNumber":70,"author":{"gitId":"soaza"},"content":"                        if(userInput.substring(9,index).length() \u003d\u003d 0){"},{"lineNumber":71,"author":{"gitId":"soaza"},"content":"                            throw new DukeException();"},{"lineNumber":72,"author":{"gitId":"soaza"},"content":"                        }"},{"lineNumber":73,"author":{"gitId":"soaza"},"content":""},{"lineNumber":74,"author":{"gitId":"soaza"},"content":"                        if(userInput.substring((index + 4)).length() \u003d\u003d 0){"},{"lineNumber":75,"author":{"gitId":"soaza"},"content":"                            throw new DukeException();"},{"lineNumber":76,"author":{"gitId":"soaza"},"content":"                        }"},{"lineNumber":77,"author":{"gitId":"soaza"},"content":"                        String deadlineDateString \u003d userInput.substring(index + 4);"},{"lineNumber":78,"author":{"gitId":"soaza"},"content":""},{"lineNumber":79,"author":{"gitId":"soaza"},"content":"                        LocalDate deadlineDate \u003d LocalDate.parse(deadlineDateString);"},{"lineNumber":80,"author":{"gitId":"soaza"},"content":"                        Deadline deadline \u003d new Deadline(userInput.substring(9, index), false, deadlineDate);"},{"lineNumber":81,"author":{"gitId":"soaza"},"content":"                        return new addCommand(tasklist, deadline);"},{"lineNumber":82,"author":{"gitId":"soaza"},"content":"                    }"},{"lineNumber":83,"author":{"gitId":"soaza"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":84,"author":{"gitId":"soaza"},"content":"                    return new exceptionCommand(tasklist, duke.ui.showException(\"Please input date in the format: YYYY-MM-DD\"));"},{"lineNumber":85,"author":{"gitId":"soaza"},"content":"                } catch (DukeException e) {"},{"lineNumber":86,"author":{"gitId":"soaza"},"content":"                    return new exceptionCommand(tasklist, duke.ui.showException(\"deadline must include \u0027\u003cdescription\u003e /by \u003cdate\u003e\u0027\"));"},{"lineNumber":87,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"soaza"},"content":""},{"lineNumber":89,"author":{"gitId":"soaza"},"content":""},{"lineNumber":90,"author":{"gitId":"soaza"},"content":"            case \"event\":"},{"lineNumber":91,"author":{"gitId":"soaza"},"content":""},{"lineNumber":92,"author":{"gitId":"soaza"},"content":"                assert userInput.contains(\"/at\") : \"event must include /at\";"},{"lineNumber":93,"author":{"gitId":"soaza"},"content":""},{"lineNumber":94,"author":{"gitId":"soaza"},"content":"                try {"},{"lineNumber":95,"author":{"gitId":"soaza"},"content":"                    if (!userInput.contains(\"/at\")) {"},{"lineNumber":96,"author":{"gitId":"soaza"},"content":"                        throw new DukeException();"},{"lineNumber":97,"author":{"gitId":"soaza"},"content":"                    } else {"},{"lineNumber":98,"author":{"gitId":"soaza"},"content":"                        int index \u003d userInput.indexOf(\"/at\");"},{"lineNumber":99,"author":{"gitId":"soaza"},"content":"                        if (userInput.substring(6,index).length()\u003d\u003d0) {"},{"lineNumber":100,"author":{"gitId":"soaza"},"content":"                            throw new DukeException();"},{"lineNumber":101,"author":{"gitId":"soaza"},"content":"                        }"},{"lineNumber":102,"author":{"gitId":"soaza"},"content":"                        if (userInput.substring(index + 3).length() \u003c 1) {"},{"lineNumber":103,"author":{"gitId":"soaza"},"content":"                            throw new DukeArrayException();"},{"lineNumber":104,"author":{"gitId":"soaza"},"content":"                        }"},{"lineNumber":105,"author":{"gitId":"soaza"},"content":"                        String eventDateString \u003d userInput.substring(index + 4);"},{"lineNumber":106,"author":{"gitId":"soaza"},"content":""},{"lineNumber":107,"author":{"gitId":"soaza"},"content":"                        LocalDate eventDate \u003d LocalDate.parse(eventDateString);"},{"lineNumber":108,"author":{"gitId":"soaza"},"content":"                        Event event \u003d new Event(userInput.substring(6, index), false, eventDate);"},{"lineNumber":109,"author":{"gitId":"soaza"},"content":"                        return new addCommand(tasklist, event);"},{"lineNumber":110,"author":{"gitId":"soaza"},"content":"                    }"},{"lineNumber":111,"author":{"gitId":"soaza"},"content":"                } catch (DukeArrayException e){"},{"lineNumber":112,"author":{"gitId":"soaza"},"content":"                    return new exceptionCommand(tasklist,duke.ui.showException(\"event must include date after /at\"));"},{"lineNumber":113,"author":{"gitId":"soaza"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":114,"author":{"gitId":"soaza"},"content":"                return new exceptionCommand(tasklist,duke.ui.showException(\"Please input date in the format: YYYY-MM-DD\"));"},{"lineNumber":115,"author":{"gitId":"soaza"},"content":"                } catch (DukeException e) {"},{"lineNumber":116,"author":{"gitId":"soaza"},"content":"                return new exceptionCommand(tasklist,duke.ui.showException(\"event must include \u0027\u003cdescription\u003e /at \u003cdate\u003e\u0027\"));"},{"lineNumber":117,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":118,"author":{"gitId":"soaza"},"content":""},{"lineNumber":119,"author":{"gitId":"soaza"},"content":""},{"lineNumber":120,"author":{"gitId":"soaza"},"content":"        case \"delete\":"},{"lineNumber":121,"author":{"gitId":"soaza"},"content":""},{"lineNumber":122,"author":{"gitId":"soaza"},"content":"            assert userInput.length() \u003e7 : \"Must include number after delete\";"},{"lineNumber":123,"author":{"gitId":"soaza"},"content":""},{"lineNumber":124,"author":{"gitId":"soaza"},"content":"            try {"},{"lineNumber":125,"author":{"gitId":"soaza"},"content":"                if (userInput.length() \u003c\u003d 6) {"},{"lineNumber":126,"author":{"gitId":"soaza"},"content":"                    throw new DukeException();"},{"lineNumber":127,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":128,"author":{"gitId":"soaza"},"content":"                int taskNumber \u003d Integer.parseInt(userInput.substring(7)) - 1;"},{"lineNumber":129,"author":{"gitId":"soaza"},"content":"                if (taskNumber \u003e\u003d tasklist.list.size()) {"},{"lineNumber":130,"author":{"gitId":"soaza"},"content":"                    throw new DukeArrayException();"},{"lineNumber":131,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":132,"author":{"gitId":"soaza"},"content":"                return new deleteCommand(tasklist, taskNumber);"},{"lineNumber":133,"author":{"gitId":"soaza"},"content":"            } catch (DukeArrayException e) {"},{"lineNumber":134,"author":{"gitId":"soaza"},"content":"                return new exceptionCommand(tasklist,duke.ui.showException(\"Number cannot be longer than the list.\"));"},{"lineNumber":135,"author":{"gitId":"soaza"},"content":"            } catch (DukeException e) {"},{"lineNumber":136,"author":{"gitId":"soaza"},"content":"                return new exceptionCommand(tasklist,duke.ui.showException(\"Must include number after \u0027delete\u0027\"));"},{"lineNumber":137,"author":{"gitId":"soaza"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":138,"author":{"gitId":"soaza"},"content":"                return new exceptionCommand(tasklist,duke.ui.showException(\"Must include number after \u0027delete\u0027\"));"},{"lineNumber":139,"author":{"gitId":"soaza"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"soaza"},"content":""},{"lineNumber":141,"author":{"gitId":"soaza"},"content":"        case \"done\":"},{"lineNumber":142,"author":{"gitId":"soaza"},"content":""},{"lineNumber":143,"author":{"gitId":"soaza"},"content":"            assert userInput.length() \u003e5 : \"Must include number after done\";"},{"lineNumber":144,"author":{"gitId":"soaza"},"content":""},{"lineNumber":145,"author":{"gitId":"soaza"},"content":"            try {"},{"lineNumber":146,"author":{"gitId":"soaza"},"content":"                if (userInput.length() \u003c 6) {"},{"lineNumber":147,"author":{"gitId":"soaza"},"content":"                    throw new DukeException();"},{"lineNumber":148,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":149,"author":{"gitId":"soaza"},"content":"                int taskNumber \u003d Integer.parseInt(userInput.substring(5)) - 1;"},{"lineNumber":150,"author":{"gitId":"soaza"},"content":"                if (taskNumber \u003e\u003d tasklist.list.size()) {"},{"lineNumber":151,"author":{"gitId":"soaza"},"content":"                    throw new DukeArrayException();"},{"lineNumber":152,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":153,"author":{"gitId":"soaza"},"content":"                return new doneCommand(tasklist, taskNumber);"},{"lineNumber":154,"author":{"gitId":"soaza"},"content":"            } catch (DukeArrayException e){"},{"lineNumber":155,"author":{"gitId":"soaza"},"content":"                return new exceptionCommand(tasklist,duke.ui.showException(\"Number cannot be longer than list.\"));"},{"lineNumber":156,"author":{"gitId":"soaza"},"content":"            } catch (DukeException e) {"},{"lineNumber":157,"author":{"gitId":"soaza"},"content":"                return new exceptionCommand(tasklist,duke.ui.showException(\"Must include number after \u0027done\u0027.\"));"},{"lineNumber":158,"author":{"gitId":"soaza"},"content":"            }"},{"lineNumber":159,"author":{"gitId":"soaza"},"content":""},{"lineNumber":160,"author":{"gitId":"soaza"},"content":"        case \"bye\":"},{"lineNumber":161,"author":{"gitId":"soaza"},"content":"            return new endCommand(tasklist);"},{"lineNumber":162,"author":{"gitId":"soaza"},"content":""},{"lineNumber":163,"author":{"gitId":"soaza"},"content":"        case \"find\":"},{"lineNumber":164,"author":{"gitId":"soaza"},"content":""},{"lineNumber":165,"author":{"gitId":"soaza"},"content":"            assert userInput.length() \u003e5 : \"Must include name after \u0027find\u0027\";"},{"lineNumber":166,"author":{"gitId":"soaza"},"content":""},{"lineNumber":167,"author":{"gitId":"soaza"},"content":"            try {"},{"lineNumber":168,"author":{"gitId":"soaza"},"content":"                if (userInput.length() \u003c 6) {"},{"lineNumber":169,"author":{"gitId":"soaza"},"content":"                    throw new DukeException();"},{"lineNumber":170,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":171,"author":{"gitId":"soaza"},"content":"                return new findCommand(tasklist, description);"},{"lineNumber":172,"author":{"gitId":"soaza"},"content":"            } catch (DukeException e) {"},{"lineNumber":173,"author":{"gitId":"soaza"},"content":"                return new exceptionCommand(tasklist,duke.ui.showException(\"Must include name after \u0027find\u0027.\"));"},{"lineNumber":174,"author":{"gitId":"soaza"},"content":"            }"},{"lineNumber":175,"author":{"gitId":"soaza"},"content":""},{"lineNumber":176,"author":{"gitId":"soaza"},"content":"        case \"expense\":"},{"lineNumber":177,"author":{"gitId":"soaza"},"content":"            try {"},{"lineNumber":178,"author":{"gitId":"soaza"},"content":"                if (!userInput.contains(\"/amount\")) {"},{"lineNumber":179,"author":{"gitId":"soaza"},"content":"                    throw new DukeException();"},{"lineNumber":180,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":181,"author":{"gitId":"soaza"},"content":"                int amountIndex \u003d userInput.indexOf(\"/amount\");"},{"lineNumber":182,"author":{"gitId":"soaza"},"content":"                String expenseString \u003d userInput.substring(8,amountIndex);"},{"lineNumber":183,"author":{"gitId":"soaza"},"content":"                int expenseAmount \u003d Integer.parseInt(userInput.substring(amountIndex + 8));"},{"lineNumber":184,"author":{"gitId":"soaza"},"content":"                return new addExpenseCommand(tasklist, new Expense(expenseString,false,expenseAmount));"},{"lineNumber":185,"author":{"gitId":"soaza"},"content":""},{"lineNumber":186,"author":{"gitId":"soaza"},"content":"            } catch (DukeException e) {"},{"lineNumber":187,"author":{"gitId":"soaza"},"content":"                return new exceptionCommand(tasklist,duke.ui.showException(\"Must include \u0027/amount\u0027 after expense\"));"},{"lineNumber":188,"author":{"gitId":"soaza"},"content":"            }"},{"lineNumber":189,"author":{"gitId":"soaza"},"content":""},{"lineNumber":190,"author":{"gitId":"soaza"},"content":"        case \"listExpense\":"},{"lineNumber":191,"author":{"gitId":"soaza"},"content":"            return new listExpenseCommand(tasklist);"},{"lineNumber":192,"author":{"gitId":"soaza"},"content":""},{"lineNumber":193,"author":{"gitId":"soaza"},"content":"        case \"deleteExpense\":"},{"lineNumber":194,"author":{"gitId":"soaza"},"content":"            try {"},{"lineNumber":195,"author":{"gitId":"soaza"},"content":"                if (userInput.length() \u003c\u003d 14) {"},{"lineNumber":196,"author":{"gitId":"soaza"},"content":"                    throw new DukeException();"},{"lineNumber":197,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":198,"author":{"gitId":"soaza"},"content":"                int expenseNumber \u003d Integer.parseInt(userInput.substring(14)) - 1;"},{"lineNumber":199,"author":{"gitId":"soaza"},"content":"                if (expenseNumber \u003e\u003d tasklist.expenses.size()) {"},{"lineNumber":200,"author":{"gitId":"soaza"},"content":"                    throw new DukeArrayException();"},{"lineNumber":201,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":202,"author":{"gitId":"soaza"},"content":"                return new deleteExpenseCommand(tasklist, expenseNumber);"},{"lineNumber":203,"author":{"gitId":"soaza"},"content":"            } catch (DukeArrayException e) {"},{"lineNumber":204,"author":{"gitId":"soaza"},"content":"                return new exceptionCommand(tasklist,duke.ui.showException(\"Number cannot be longer than the list.\"));"},{"lineNumber":205,"author":{"gitId":"soaza"},"content":"            } catch (DukeException e) {"},{"lineNumber":206,"author":{"gitId":"soaza"},"content":"                return new exceptionCommand(tasklist,duke.ui.showException(\"Must include number after \u0027deleteExpense\u0027\"));"},{"lineNumber":207,"author":{"gitId":"soaza"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":208,"author":{"gitId":"soaza"},"content":"                return new exceptionCommand(tasklist, duke.ui.showException(\"Must include number after \u0027deleteExpense\u0027\"));"},{"lineNumber":209,"author":{"gitId":"soaza"},"content":"            }"},{"lineNumber":210,"author":{"gitId":"soaza"},"content":""},{"lineNumber":211,"author":{"gitId":"soaza"},"content":"        case \"totalExpense\":"},{"lineNumber":212,"author":{"gitId":"soaza"},"content":"            return new totalExpenseCommand(tasklist,\"\");"},{"lineNumber":213,"author":{"gitId":"soaza"},"content":""},{"lineNumber":214,"author":{"gitId":"soaza"},"content":"        default:"},{"lineNumber":215,"author":{"gitId":"soaza"},"content":"            return new Command(tasklist,duke.ui.badInput());"},{"lineNumber":216,"author":{"gitId":"soaza"},"content":""},{"lineNumber":217,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"soaza"},"content":"     }"},{"lineNumber":219,"author":{"gitId":"soaza"},"content":""},{"lineNumber":220,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":220}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.*;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"import java.io.*;"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":""},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"    public String filePath;"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    public ArrayList\u003cTask\u003e arr;"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    public ArrayList\u003cExpense\u003e arrExpenses;"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":""},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"    public Storage(String filePath) {"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"        this.arr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"        this.arrExpenses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"        readTasks();"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":""},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"     * Reads duke.txt for any pre-logged task list and appends the tasks inside to the current Task List."},{"lineNumber":23,"author":{"gitId":"soaza"},"content":"     * Creates a duke.txt file if it is not found in the directory."},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"soaza"},"content":"     * @throws IOException when file is unreadable."},{"lineNumber":26,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"soaza"},"content":"    public void readTasks() {"},{"lineNumber":28,"author":{"gitId":"soaza"},"content":"        BufferedReader objReader \u003d null;"},{"lineNumber":29,"author":{"gitId":"soaza"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"soaza"},"content":"            String strCurrentLine;"},{"lineNumber":31,"author":{"gitId":"soaza"},"content":""},{"lineNumber":32,"author":{"gitId":"soaza"},"content":"            objReader \u003d new BufferedReader(new FileReader(filePath));"},{"lineNumber":33,"author":{"gitId":"soaza"},"content":""},{"lineNumber":34,"author":{"gitId":"soaza"},"content":"            while ((strCurrentLine \u003d objReader.readLine()) !\u003d null \u0026\u0026 strCurrentLine.length()!\u003d0) {"},{"lineNumber":35,"author":{"gitId":"soaza"},"content":"                String taskType \u003d strCurrentLine.substring(1, 2);"},{"lineNumber":36,"author":{"gitId":"soaza"},"content":"                boolean taskCompletion \u003d strCurrentLine.contains(\"âœ—\") ? false : true;"},{"lineNumber":37,"author":{"gitId":"soaza"},"content":"                String taskDetails \u003d taskCompletion"},{"lineNumber":38,"author":{"gitId":"soaza"},"content":"                        ? strCurrentLine.substring(strCurrentLine.indexOf(\"âœ“\") + 3)"},{"lineNumber":39,"author":{"gitId":"soaza"},"content":"                        : strCurrentLine.substring(strCurrentLine.indexOf(\"âœ—\") + 3);"},{"lineNumber":40,"author":{"gitId":"soaza"},"content":""},{"lineNumber":41,"author":{"gitId":"soaza"},"content":"                switch (taskType) {"},{"lineNumber":42,"author":{"gitId":"soaza"},"content":"                case \"T\":"},{"lineNumber":43,"author":{"gitId":"soaza"},"content":"                    arr.add(new toDo(taskDetails, taskCompletion));"},{"lineNumber":44,"author":{"gitId":"soaza"},"content":"                    break;"},{"lineNumber":45,"author":{"gitId":"soaza"},"content":""},{"lineNumber":46,"author":{"gitId":"soaza"},"content":"                case \"D\":"},{"lineNumber":47,"author":{"gitId":"soaza"},"content":"                    String deadlineString \u003d taskDetails.substring(0, taskDetails.indexOf(\"(\"));"},{"lineNumber":48,"author":{"gitId":"soaza"},"content":"                    String taskDeadlineString \u003d taskDetails.substring(taskDetails.indexOf(\"by:\") + 3, taskDetails.indexOf(\")\"));"},{"lineNumber":49,"author":{"gitId":"soaza"},"content":"                    LocalDate taskDeadline \u003d LocalDate.parse(taskDeadlineString);"},{"lineNumber":50,"author":{"gitId":"soaza"},"content":"                    arr.add(new Deadline(deadlineString, taskCompletion, taskDeadline));"},{"lineNumber":51,"author":{"gitId":"soaza"},"content":"                    break;"},{"lineNumber":52,"author":{"gitId":"soaza"},"content":"                case \"E\":"},{"lineNumber":53,"author":{"gitId":"soaza"},"content":"                    String eventString \u003d taskDetails.substring(0, taskDetails.indexOf(\"(\"));"},{"lineNumber":54,"author":{"gitId":"soaza"},"content":"                    String eventDateString \u003d taskDetails.substring(taskDetails.indexOf(\"at:\") + 3, taskDetails.indexOf(\")\"));"},{"lineNumber":55,"author":{"gitId":"soaza"},"content":"                    LocalDate eventDate \u003d LocalDate.parse(eventDateString);"},{"lineNumber":56,"author":{"gitId":"soaza"},"content":"                    arr.add(new Event(eventString, taskCompletion, eventDate));"},{"lineNumber":57,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"soaza"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"soaza"},"content":""},{"lineNumber":60,"author":{"gitId":"soaza"},"content":"            while ((strCurrentLine \u003d objReader.readLine()) !\u003d null) {"},{"lineNumber":61,"author":{"gitId":"soaza"},"content":"                String expenseString \u003d strCurrentLine.substring(0, strCurrentLine.indexOf(\",\"));"},{"lineNumber":62,"author":{"gitId":"soaza"},"content":"                double expenseAmount \u003d Double.parseDouble(strCurrentLine.substring(strCurrentLine.indexOf(\"Cost:\") + 6));"},{"lineNumber":63,"author":{"gitId":"soaza"},"content":"                arrExpenses.add(new Expense(expenseString,false,expenseAmount));"},{"lineNumber":64,"author":{"gitId":"soaza"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"soaza"},"content":""},{"lineNumber":66,"author":{"gitId":"soaza"},"content":"        } catch (IOException e) {"},{"lineNumber":67,"author":{"gitId":"soaza"},"content":"            e.printStackTrace();"},{"lineNumber":68,"author":{"gitId":"soaza"},"content":"        } finally {"},{"lineNumber":69,"author":{"gitId":"soaza"},"content":"            try {"},{"lineNumber":70,"author":{"gitId":"soaza"},"content":"                if (objReader !\u003d null) {"},{"lineNumber":71,"author":{"gitId":"soaza"},"content":"                    objReader.close();"},{"lineNumber":72,"author":{"gitId":"soaza"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"soaza"},"content":"            } catch (IOException ex) {"},{"lineNumber":74,"author":{"gitId":"soaza"},"content":"                ex.printStackTrace();"},{"lineNumber":75,"author":{"gitId":"soaza"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"soaza"},"content":""},{"lineNumber":79,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"soaza"},"content":"     * Saves all the tasks in the Task List when program ends(ie. when the user input is \u0027bye\u0027)."},{"lineNumber":81,"author":{"gitId":"soaza"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"soaza"},"content":"     * @param arr Current task list."},{"lineNumber":83,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"soaza"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e arr , ArrayList\u003cExpense\u003e arrEx) {"},{"lineNumber":85,"author":{"gitId":"soaza"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"soaza"},"content":"            // Creates a FileWriter"},{"lineNumber":87,"author":{"gitId":"soaza"},"content":"            FileWriter file \u003d new FileWriter(filePath);"},{"lineNumber":88,"author":{"gitId":"soaza"},"content":""},{"lineNumber":89,"author":{"gitId":"soaza"},"content":"            // Creates a BufferedWriter"},{"lineNumber":90,"author":{"gitId":"soaza"},"content":"            BufferedWriter output \u003d new BufferedWriter(file);"},{"lineNumber":91,"author":{"gitId":"soaza"},"content":""},{"lineNumber":92,"author":{"gitId":"soaza"},"content":"            // Writes the string to the file"},{"lineNumber":93,"author":{"gitId":"soaza"},"content":"            for (int i \u003d 0 ; i \u003c arr.size() ; i++ ) {"},{"lineNumber":94,"author":{"gitId":"soaza"},"content":"                output.write(arr.get(i).stringify() + \"\\n\");"},{"lineNumber":95,"author":{"gitId":"soaza"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"soaza"},"content":""},{"lineNumber":97,"author":{"gitId":"soaza"},"content":"            output.write(\"\\n\");"},{"lineNumber":98,"author":{"gitId":"soaza"},"content":""},{"lineNumber":99,"author":{"gitId":"soaza"},"content":"            for (int i \u003d 0 ; i \u003c arrEx.size() ; i++ ) {"},{"lineNumber":100,"author":{"gitId":"soaza"},"content":"                output.write(arrEx.get(i).stringify() + \"\\n\");"},{"lineNumber":101,"author":{"gitId":"soaza"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"soaza"},"content":"            // Closes the writer"},{"lineNumber":103,"author":{"gitId":"soaza"},"content":"            output.close();"},{"lineNumber":104,"author":{"gitId":"soaza"},"content":"        } catch (Exception e) {"},{"lineNumber":105,"author":{"gitId":"soaza"},"content":"            e.getStackTrace();"},{"lineNumber":106,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":108}},{"path":"src/main/java/Duke/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Task;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"    public LocalDate deadline;"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":""},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"    public Deadline(String task, boolean isComplete, LocalDate deadline) {"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"        super(task, isComplete);"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":""},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"     * Returns the description of the task and its completion in a string."},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"     * @return Description of task in a String."},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"    @SuppressWarnings(\"checkstyle:WhitespaceAfter\")"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"    public String stringify() {"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"        if (this.isComplete \u003d\u003d true) {"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"            return \"[D][âœ“] \" + this.task + \"(by:\" + this.deadline + \")\";"},{"lineNumber":23,"author":{"gitId":"soaza"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"            return \"[D][âœ—] \" + this.task + \"(by:\" + this.deadline + \")\";"},{"lineNumber":25,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":27}},{"path":"src/main/java/Duke/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Task;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"public class Event extends Deadline {"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":""},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    public Event(String task, boolean isComplete, LocalDate date) {"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"        super(task, isComplete , date);"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":""},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"     * Returns the description of the task and its completion in a string."},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"     * @return Description of task in a String."},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"    public String stringify() {"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"        if (this.isComplete \u003d\u003d true) {"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"            return \"[E][âœ“] \" + this.task + \"(at:\" + this.deadline + \")\";"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"            return \"[E][âœ—] \" + this.task + \"(at:\" + this.deadline + \")\";"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":24}},{"path":"src/main/java/Duke/Task/Expense.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Task;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"public class Expense extends Task {"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"    double amount;"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":""},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"    public Expense(String task, boolean isComplete, double amount) {"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"        super(task, isComplete);"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"        this.amount \u003d amount;"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":""},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    public String stringify() {"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"        //Expense:Phone , Cost:$800"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"            return this.task +  \",Cost:$\" + String.format(\"%.2f\", this.amount);"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":16}},{"path":"src/main/java/Duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Task;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"    public String task;"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"    public boolean isComplete;"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":""},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    public Task(String task, boolean isComplete) {"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"        this.task \u003d task;"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"        this.isComplete \u003d isComplete;"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":""},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"     * Returns the description of the task and its completion in a string."},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"     * @return Description of task in a String."},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"    public String stringify() {"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"        if (this.isComplete \u003d\u003d true) {"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"            return \"[T][âœ“] \" + this.task;"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"            return \"[T][âœ—] \" + this.task;"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":24}},{"path":"src/main/java/Duke/Task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Task;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import java.lang.reflect.Array;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":""},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    public ArrayList\u003cTask\u003e list;"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"    public ArrayList\u003cExpense\u003e expenses;"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":""},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasklist, ArrayList\u003cExpense\u003e expenses) {"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"        this.list \u003d tasklist;"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"        this.expenses \u003d expenses;"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":""},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"     * Deletes the task from the Task List."},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"     * @param taskNumber Task number to be deleted."},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"    public String deleteTask(int taskNumber) {"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"        Task taskDeleted \u003d list.get(taskNumber);"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"        list.remove(taskNumber);"},{"lineNumber":23,"author":{"gitId":"soaza"},"content":"        return (\"I have removed the task:\\n\" + taskDeleted.stringify() + \"\\n\" + \"Now you have \""},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"                + list.size() + \" tasks in the list.\");"},{"lineNumber":25,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"soaza"},"content":""},{"lineNumber":27,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"soaza"},"content":"     * Adds the task to the Task List"},{"lineNumber":29,"author":{"gitId":"soaza"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"soaza"},"content":"     * @param task Task to be added."},{"lineNumber":31,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"soaza"},"content":"    public String addTask(Task task) {"},{"lineNumber":33,"author":{"gitId":"soaza"},"content":"        list.add(task);"},{"lineNumber":34,"author":{"gitId":"soaza"},"content":"        return"},{"lineNumber":35,"author":{"gitId":"soaza"},"content":"                \"I have added this task:\\n\""},{"lineNumber":36,"author":{"gitId":"soaza"},"content":"                        + task.stringify() + \"\\n\""},{"lineNumber":37,"author":{"gitId":"soaza"},"content":"                        + \"Now you have \" + list.size() + \" task(s) in the list.\";"},{"lineNumber":38,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"soaza"},"content":""},{"lineNumber":40,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"soaza"},"content":"     * Mark the task as completed."},{"lineNumber":42,"author":{"gitId":"soaza"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"soaza"},"content":"     * @param taskNumber Task number of the task to be marked as completed."},{"lineNumber":44,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"soaza"},"content":"    public String completeTask(int taskNumber) {"},{"lineNumber":46,"author":{"gitId":"soaza"},"content":"        Task taskCompleted \u003d this.list.get(taskNumber);"},{"lineNumber":47,"author":{"gitId":"soaza"},"content":"        taskCompleted.isComplete \u003d true;"},{"lineNumber":48,"author":{"gitId":"soaza"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + \"[âœ“] \" + taskCompleted.task ;"},{"lineNumber":49,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"soaza"},"content":""},{"lineNumber":51,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"soaza"},"content":"     * Shows the Task list."},{"lineNumber":53,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"soaza"},"content":"    public String showList(){"},{"lineNumber":55,"author":{"gitId":"soaza"},"content":"        String str \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":56,"author":{"gitId":"soaza"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":57,"author":{"gitId":"soaza"},"content":"            str +\u003d ((i+1)+\".\" + list.get(i).stringify() + \"\\n\");"},{"lineNumber":58,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"soaza"},"content":"        return str;"},{"lineNumber":60,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"soaza"},"content":""},{"lineNumber":62,"author":{"gitId":"soaza"},"content":"    public String findTask(String str) {"},{"lineNumber":63,"author":{"gitId":"soaza"},"content":"        String returnStr \u003d (\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":64,"author":{"gitId":"soaza"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":65,"author":{"gitId":"soaza"},"content":"            Task task \u003d list.get(i);"},{"lineNumber":66,"author":{"gitId":"soaza"},"content":"            if (task.task.contains(str)) {"},{"lineNumber":67,"author":{"gitId":"soaza"},"content":"                returnStr +\u003d ((i + 1) + \".\" + task.stringify() + \"\\n\");"},{"lineNumber":68,"author":{"gitId":"soaza"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"soaza"},"content":"        return returnStr;"},{"lineNumber":71,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"soaza"},"content":""},{"lineNumber":73,"author":{"gitId":"soaza"},"content":"    public double calculateTotalExpense(){"},{"lineNumber":74,"author":{"gitId":"soaza"},"content":"        double sum \u003d 0;"},{"lineNumber":75,"author":{"gitId":"soaza"},"content":""},{"lineNumber":76,"author":{"gitId":"soaza"},"content":"        for (int i \u003d 0; i \u003c expenses.size() ; i++) {"},{"lineNumber":77,"author":{"gitId":"soaza"},"content":"            sum+\u003d expenses.get(i).amount;"},{"lineNumber":78,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"soaza"},"content":"        return sum;"},{"lineNumber":80,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"soaza"},"content":""},{"lineNumber":82,"author":{"gitId":"soaza"},"content":"    public String addExpense(Expense expense){"},{"lineNumber":83,"author":{"gitId":"soaza"},"content":"        expenses.add(expense);"},{"lineNumber":84,"author":{"gitId":"soaza"},"content":"        return"},{"lineNumber":85,"author":{"gitId":"soaza"},"content":"                \"I have added this expense:\\n\""},{"lineNumber":86,"author":{"gitId":"soaza"},"content":"                        + expense.stringify() + \"\\n\""},{"lineNumber":87,"author":{"gitId":"soaza"},"content":"                        + \"Now your total expense is: $\" + String.format(\"%.2f\", this.calculateTotalExpense());"},{"lineNumber":88,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"soaza"},"content":""},{"lineNumber":90,"author":{"gitId":"soaza"},"content":"    public String showExpenses(){"},{"lineNumber":91,"author":{"gitId":"soaza"},"content":"        String str \u003d \"Here are the expenses:\\n\";"},{"lineNumber":92,"author":{"gitId":"soaza"},"content":""},{"lineNumber":93,"author":{"gitId":"soaza"},"content":"        for (int i \u003d 0; i \u003c expenses.size(); i++) {"},{"lineNumber":94,"author":{"gitId":"soaza"},"content":"            str +\u003d ((i+1)+\".\" + expenses.get(i).stringify() + \"\\n\");"},{"lineNumber":95,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"soaza"},"content":"        return str"},{"lineNumber":97,"author":{"gitId":"soaza"},"content":"                + \"\\n\""},{"lineNumber":98,"author":{"gitId":"soaza"},"content":"                + \"Total expenses: $\" + this.calculateTotalExpense();"},{"lineNumber":99,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"soaza"},"content":""},{"lineNumber":101,"author":{"gitId":"soaza"},"content":"    public String deleteExpense(int expenseNumber) {"},{"lineNumber":102,"author":{"gitId":"soaza"},"content":"        Expense expenseDeleted \u003d expenses.get(expenseNumber);"},{"lineNumber":103,"author":{"gitId":"soaza"},"content":"        expenses.remove(expenseNumber);"},{"lineNumber":104,"author":{"gitId":"soaza"},"content":"        return (\"I have removed the expense:\\n\" + expenseDeleted.stringify() + \"\\n\" + \"Now you have \""},{"lineNumber":105,"author":{"gitId":"soaza"},"content":"                + expenses.size() + \" expenses in the list.\");"},{"lineNumber":106,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":107}},{"path":"src/main/java/Duke/Task/toDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke.Task;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"public class toDo extends Task {"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"    public toDo(String task, boolean isComplete) {"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"        super(task, isComplete);"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":""},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"     * Returns the description of the task and its completion in a string."},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"     * @return Description of task in a String."},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"    public String stringify() {"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"        if (this.isComplete \u003d\u003d true) {"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"            return \"[T][âœ“] \" + this.task;"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"        } else {"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"            return \"[T][âœ—] \" + this.task;"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":22}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package main.java.Duke;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":""},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"    Scanner scanner;"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":""},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"    public Ui() {"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"        this.scanner \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":""},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"     * Reads the next input from the user using a Scanner."},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"     * @return User input in a string."},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"    public String readCommand() {"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"        return scanner.nextLine();"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":""},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"     * Greets the user when the program is executed."},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"soaza"},"content":"    public String greetingMessage() {"},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"        return (\"Hello! I\u0027m Fandesma. What can I do for you?\");"},{"lineNumber":25,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"soaza"},"content":""},{"lineNumber":27,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"soaza"},"content":"     * Prompts the user for an input"},{"lineNumber":29,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"soaza"},"content":"    public void prompt() {"},{"lineNumber":31,"author":{"gitId":"soaza"},"content":"        System.out.println(\"Input:\");"},{"lineNumber":32,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"soaza"},"content":""},{"lineNumber":34,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"soaza"},"content":"     * When the user input is invalid, prints the list of possible input for the user."},{"lineNumber":36,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"soaza"},"content":"    public String badInput() {"},{"lineNumber":38,"author":{"gitId":"soaza"},"content":"        return ("},{"lineNumber":39,"author":{"gitId":"soaza"},"content":"                \"Please input:\\n\""},{"lineNumber":40,"author":{"gitId":"soaza"},"content":"                + \"1)list - to access the list\\n\""},{"lineNumber":41,"author":{"gitId":"soaza"},"content":"                + \"2)todo - to create a todo task\\n\""},{"lineNumber":42,"author":{"gitId":"soaza"},"content":"                + \"3)deadline - to create a deadline\\n\""},{"lineNumber":43,"author":{"gitId":"soaza"},"content":"                + \"4)event - to schedule an event\\n\""},{"lineNumber":44,"author":{"gitId":"soaza"},"content":"                + \"5)done - to mark tasks as done\\n\""},{"lineNumber":45,"author":{"gitId":"soaza"},"content":"                + \"6)delete - to delete tasks from the list\\n\""},{"lineNumber":46,"author":{"gitId":"soaza"},"content":"                + \"7)find - to find tasks from the list\\n\""},{"lineNumber":47,"author":{"gitId":"soaza"},"content":"                + \"\\n-FOR EXPENSES-\\n\\n\""},{"lineNumber":48,"author":{"gitId":"soaza"},"content":"                + \"1)expense - to add an expense\\n\""},{"lineNumber":49,"author":{"gitId":"soaza"},"content":"                + \"2)listExpense - to list all expenses\\n\""},{"lineNumber":50,"author":{"gitId":"soaza"},"content":"                + \"3)deleteExpense - to delete expense from the list\""},{"lineNumber":51,"author":{"gitId":"soaza"},"content":"        );"},{"lineNumber":52,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"soaza"},"content":""},{"lineNumber":54,"author":{"gitId":"soaza"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"soaza"},"content":"     * Prints the exception message whenever an exception is thrown."},{"lineNumber":56,"author":{"gitId":"soaza"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"soaza"},"content":"     * @param str Exception message."},{"lineNumber":58,"author":{"gitId":"soaza"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"soaza"},"content":"    public String showException(String str){"},{"lineNumber":60,"author":{"gitId":"soaza"},"content":"        return (str);"},{"lineNumber":61,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"soaza"},"content":""},{"lineNumber":63,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":63}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":""},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" style\u003d\"-fx-padding: 20;\u0026#10;-fx-border-style: solid inside;\u0026#10;-fx-border-insets: 5;\u0026#10;-fx-border-radius: 15px;\u0026#10;-fx-border-color: green;-fx-background-color: white; -fx-opacity: 0.8; -fx-text-fill: green; -fx-font-family: Courier New;   \" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"150.0\" fitWidth\u003d\"150.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"soaza":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":""},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"653.0\" prefWidth\u003d\"464.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"main.java.Duke.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":"        \u003cTextField fx:id\u003d\"userInput\" alignment\u003d\"TOP_LEFT\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"464.0\" promptText\u003d\"Input:\"  style\u003d\"-fx-background-image: url(\u0027images/textbox.jpg\u0027); -fx-text-fill: white\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"            \u003cfont\u003e"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":"                \u003cFont name\u003d\"Helvetica\" size\u003d\"26.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"            \u003c/font\u003e\u003c/TextField\u003e"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"-1.0\" prefHeight\u003d\"604.0\" prefWidth\u003d\"464.0\"  vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"603.0\" prefWidth\u003d\"447.0\" style\u003d\"  -fx-background-image: url(\u0027/images/background.jpg\u0027);\" /\u003e"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"soaza"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"soaza":23}},{"path":"src/test/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"[T][âœ“] hw"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":"[E][âœ“] (at:2222-02-12)"},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"[T][âœ—] play"}],"authorContributionMap":{"soaza":3}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":""},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Commands.Command;"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Duke;"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Parser;"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"import main.java.Duke.Task.*;"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":""},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"soaza"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"soaza"},"content":""},{"lineNumber":13,"author":{"gitId":"soaza"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":14,"author":{"gitId":"soaza"},"content":""},{"lineNumber":15,"author":{"gitId":"soaza"},"content":"public class DukeTest {"},{"lineNumber":16,"author":{"gitId":"soaza"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"soaza"},"content":"    public void toDoTest() {"},{"lineNumber":18,"author":{"gitId":"soaza"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":19,"author":{"gitId":"soaza"},"content":"        Parser parser \u003d new Parser(duke);"},{"lineNumber":20,"author":{"gitId":"soaza"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"soaza"},"content":"        ArrayList\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"soaza"},"content":"        TaskList taskList \u003d new TaskList(arr,expenses);"},{"lineNumber":23,"author":{"gitId":"soaza"},"content":"        Command cmd \u003d parser.parse(\"todo Tutorial 1\", taskList);"},{"lineNumber":24,"author":{"gitId":"soaza"},"content":"        cmd.execute();"},{"lineNumber":25,"author":{"gitId":"soaza"},"content":""},{"lineNumber":26,"author":{"gitId":"soaza"},"content":"        Task taskInserted \u003d taskList.list.get(0);"},{"lineNumber":27,"author":{"gitId":"soaza"},"content":"        assertEquals(taskInserted.task, \"Tutorial 1\");"},{"lineNumber":28,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"soaza"},"content":""},{"lineNumber":30,"author":{"gitId":"soaza"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"soaza"},"content":"    public void deadlineTest() {"},{"lineNumber":32,"author":{"gitId":"soaza"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":33,"author":{"gitId":"soaza"},"content":"        Parser parser \u003d new Parser(duke);"},{"lineNumber":34,"author":{"gitId":"soaza"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"soaza"},"content":"        ArrayList\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":36,"author":{"gitId":"soaza"},"content":"        TaskList taskList \u003d new TaskList(arr,expenses);"},{"lineNumber":37,"author":{"gitId":"soaza"},"content":"        Command cmd \u003d parser.parse(\"deadline Tutorial 1 /by 2020-02-01\", taskList);"},{"lineNumber":38,"author":{"gitId":"soaza"},"content":"        cmd.execute();"},{"lineNumber":39,"author":{"gitId":"soaza"},"content":""},{"lineNumber":40,"author":{"gitId":"soaza"},"content":"        Deadline deadlineInserted \u003d (Deadline) taskList.list.get(0);"},{"lineNumber":41,"author":{"gitId":"soaza"},"content":"        assertEquals(deadlineInserted.deadline, LocalDate.parse(\"2020-02-01\"));"},{"lineNumber":42,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"soaza"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"soaza"},"content":"    public void eventTest() {"},{"lineNumber":45,"author":{"gitId":"soaza"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":46,"author":{"gitId":"soaza"},"content":"        Parser parser \u003d new Parser(duke);"},{"lineNumber":47,"author":{"gitId":"soaza"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":48,"author":{"gitId":"soaza"},"content":"        ArrayList\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"soaza"},"content":"        TaskList taskList \u003d new TaskList(arr,expenses);"},{"lineNumber":50,"author":{"gitId":"soaza"},"content":"        Command cmd \u003d parser.parse(\"event Tutorial 1 /at 2020-02-01\", taskList);"},{"lineNumber":51,"author":{"gitId":"soaza"},"content":"        cmd.execute();"},{"lineNumber":52,"author":{"gitId":"soaza"},"content":""},{"lineNumber":53,"author":{"gitId":"soaza"},"content":"        Event eventInserted \u003d (Event) taskList.list.get(0);"},{"lineNumber":54,"author":{"gitId":"soaza"},"content":"        assertEquals(eventInserted.deadline, LocalDate.parse(\"2020-02-01\"));"},{"lineNumber":55,"author":{"gitId":"soaza"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"soaza"},"content":"}"}],"authorContributionMap":{"soaza":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"soaza"},"content":"todo"},{"lineNumber":2,"author":{"gitId":"soaza"},"content":"todo slap ppl"},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"deadline"},{"lineNumber":4,"author":{"gitId":"soaza"},"content":"deadline homework"},{"lineNumber":5,"author":{"gitId":"soaza"},"content":"deadline homework /by Tuesday"},{"lineNumber":6,"author":{"gitId":"soaza"},"content":"event"},{"lineNumber":7,"author":{"gitId":"soaza"},"content":"event concert"},{"lineNumber":8,"author":{"gitId":"soaza"},"content":"event concert /at Wimbley Place,Tuesday"},{"lineNumber":9,"author":{"gitId":"soaza"},"content":"random string"},{"lineNumber":10,"author":{"gitId":"soaza"},"content":"bye"}],"authorContributionMap":{"soaza":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"soaza"},"content":"set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"},{"lineNumber":4,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":6,"author":{"gitId":"-"},"content":"then"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":8,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":11,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":12,"author":{"gitId":"-"},"content":"then"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":14,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"soaza":1,"-":38}}]
