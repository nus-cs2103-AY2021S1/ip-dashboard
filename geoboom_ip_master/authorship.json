[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geoboom"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geoboom": 1,
      "-": 45
    }
  },
  {
    "path": "design-docs/design-docs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geoboom"
        },
        "content": "# Week 2 (17 AUG - 23 AUG)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geoboom"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geoboom"
        },
        "content": "## Preliminary Design"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geoboom"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geoboom"
        },
        "content": "The task is to build an extensible terminal chat application named Duke. Having some experience with Android, FullStack web development, and system design, I decided to glance over the future specs and enhancements and read up a bit about JavaFX FXML (the GUI library) before starting. This gives me a feel of the scope and scale of project Duke so I can choose an architectural pattern to roll with. For now, the MVVM (Model-View-ViewModel) pattern seems promising, along with a DAO (Data Access Object) to encapsulate communication with the data layer."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geoboom"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geoboom"
        },
        "content": "Since I like microservice architecture and modular applications a lot, my goal is to make the transition from CLI to GUI or file-based storage to DB-based storage as simple as \"plug-n-play\". Perhaps my design may evolve or change over the next few weeks. We\u0027ll see."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geoboom"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geoboom"
        },
        "content": "## Project Management"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geoboom"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geoboom"
        },
        "content": "Just like in AGILE, project milestones are issued and checked in weekly sprints. This is nice because I plan to learn GitHub project board to manage the development process with Epics, User Stories, and issues."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geoboom"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geoboom"
        },
        "content": "## Gradle and JUnit"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geoboom"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geoboom"
        },
        "content": "I think I\u0027ll start by migrating the project over to Gradle and conduct testing with JUnit 5 rather than running the `.sh` script over and over. I\u0027ll also use gradle to build the `.jar`. If I have time I might set up CircleCI/Travis CI pipeline to automatically test and build the `.jar` and release it using semantic versioning. This too is a great opportunity for me to practice TDD (Test-Driven Development) as well, where unit tests are written before the actual code."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geoboom"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geoboom"
        },
        "content": "## Packages"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geoboom"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geoboom"
        },
        "content": "To be updated."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geoboom"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geoboom"
        },
        "content": "# Week 3 (24 AUG - 30 AUG)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geoboom"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geoboom"
        },
        "content": "```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geoboom"
        },
        "content": "     August 2020"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geoboom"
        },
        "content": "Mo Tu We Th Fr Sa Su"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geoboom"
        },
        "content": "                1  2"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geoboom"
        },
        "content": " 3  4  5  6  7  8  9"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geoboom"
        },
        "content": "10 11 12 13 14 15 16"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geoboom"
        },
        "content": "17 18 19 20 21 22 23"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geoboom"
        },
        "content": "24 25 26 27 28 29 30"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geoboom"
        },
        "content": "31"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geoboom"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "geoboom": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geoboom"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geoboom"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geoboom"
        },
        "content": "    System.out.println(\"Hello! I\u0027m Duke.\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geoboom"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geoboom"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geoboom"
        },
        "content": "    while (!(input \u003d sc.next()).equals(\"bye\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geoboom"
        },
        "content": "      System.out.println(input);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geoboom"
        },
        "content": "    System.out.println(\"Bye. Hope to see you again.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geoboom": 8,
      "-": 5
    }
  }
]
