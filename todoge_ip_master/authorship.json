[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"# User Guide for King Chat Bot"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":"This is a project under the module CS2103t taken in the National University of Singapore.  "},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"todoge"},"content":"\u003cimg\u003e![Java CI](https://github.com/todoge/ip/workflows/Java%20CI/badge.svg)\u003c/img\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003e\u003cu\u003eInstructions to run the app:\u003c/u\u003e\u003c/strong\u003e  "},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"Download and run the `king.jar` in `release v1.2`.\\"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"On running the application successfully, you should see the pop-up window.  "},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"## Features "},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"\u003cul\u003e"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"    \u003cli\u003etodo\u003c/li\u003e"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"    \u003cli\u003edeadline\u003c/li\u003e"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"    \u003cli\u003eevent\u003c/li\u003e"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"    \u003cli\u003edelete\u003c/li\u003e"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"    \u003cli\u003efind\u003c/li\u003e"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"    \u003cli\u003elist\u003c/li\u003e"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"    \u003cli\u003eclear list\u003c/li\u003e"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"    \u003cli\u003ebye\u003c/li\u003e"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"\u003c/ul\u003e"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":""},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"## Usage"},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"### `todo \u003ctask\u003e` - Adds a new task "},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"Adds a new task to list.  "},{"lineNumber":25,"author":{"gitId":"todoge"},"content":""},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"Example of usage: `todo running`  "},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"Got it. I\u0027ve added this task:  "},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"    [T][?] running  "},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"Now you have 1 tasks in the list."},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":33,"author":{"gitId":"todoge"},"content":""},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"### `event \u003ctask\u003e /at \u003ctime\u003e` - Adds a new event"},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"Adds a new event to list.  "},{"lineNumber":36,"author":{"gitId":"todoge"},"content":""},{"lineNumber":37,"author":{"gitId":"todoge"},"content":"Example of usage: `event marathon /at 2pm`  "},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"Got it. I\u0027ve added this task:  "},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"    [T][?] marathon (at: 2pm)  "},{"lineNumber":42,"author":{"gitId":"todoge"},"content":"Now you have 1 tasks in the list."},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":"### `deadline \u003ctask\u003e /by \u003cdate\u003e \u003ctime\u003e` - Adds a new deadline"},{"lineNumber":45,"author":{"gitId":"todoge"},"content":"Adds a new deadline to list.  "},{"lineNumber":46,"author":{"gitId":"todoge"},"content":""},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"Example of usage: `deadline homework /by 23/10/2020 1400`  "},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":49,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":50,"author":{"gitId":"todoge"},"content":"Got it. I\u0027ve added this task:  "},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"    [T][?] homework (by: Friday, Oct 23, 2020 2.00 pm) "},{"lineNumber":52,"author":{"gitId":"todoge"},"content":"Now you have 1 tasks in the list."},{"lineNumber":53,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":54,"author":{"gitId":"todoge"},"content":""},{"lineNumber":55,"author":{"gitId":"todoge"},"content":"### `delete [list of task numbers]` - Deletes tasks"},{"lineNumber":56,"author":{"gitId":"todoge"},"content":"Deletes all the tasks with the task numbers. "},{"lineNumber":57,"author":{"gitId":"todoge"},"content":""},{"lineNumber":58,"author":{"gitId":"todoge"},"content":"Example of usage: `delete 1 2 3`  "},{"lineNumber":59,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":60,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":61,"author":{"gitId":"todoge"},"content":"I have deleted the following item:  "},{"lineNumber":62,"author":{"gitId":"todoge"},"content":"    [T][?] running  "},{"lineNumber":63,"author":{"gitId":"todoge"},"content":"\t[E][?] marathon (at: 2pm)  "},{"lineNumber":64,"author":{"gitId":"todoge"},"content":"\t[T][?] sing  "},{"lineNumber":65,"author":{"gitId":"todoge"},"content":"You got 2 task(s) left."},{"lineNumber":66,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":67,"author":{"gitId":"todoge"},"content":""},{"lineNumber":68,"author":{"gitId":"todoge"},"content":"### `find [list of keywords]` - Find tasks with given keywords"},{"lineNumber":69,"author":{"gitId":"todoge"},"content":"Find all the tasks with at least 1 of the matching keyword.  "},{"lineNumber":70,"author":{"gitId":"todoge"},"content":""},{"lineNumber":71,"author":{"gitId":"todoge"},"content":"Example of usage: "},{"lineNumber":72,"author":{"gitId":"todoge"},"content":"`find run sing jump`  "},{"lineNumber":73,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":74,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":75,"author":{"gitId":"todoge"},"content":"I found 3 items with the given keyword(s):"},{"lineNumber":76,"author":{"gitId":"todoge"},"content":"\t1. [T][?] run"},{"lineNumber":77,"author":{"gitId":"todoge"},"content":"\t2. [T][?] sing"},{"lineNumber":78,"author":{"gitId":"todoge"},"content":"\t3. [T][?] jumping"},{"lineNumber":79,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":80,"author":{"gitId":"todoge"},"content":""},{"lineNumber":81,"author":{"gitId":"todoge"},"content":"### `list` - Returns all the tasks in the list"},{"lineNumber":82,"author":{"gitId":"todoge"},"content":"Shows all the tasks currently stored in the list."},{"lineNumber":83,"author":{"gitId":"todoge"},"content":""},{"lineNumber":84,"author":{"gitId":"todoge"},"content":"Example of usage: `list`  "},{"lineNumber":85,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":86,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":87,"author":{"gitId":"todoge"},"content":"There are 4 items in your list:"},{"lineNumber":88,"author":{"gitId":"todoge"},"content":"\t1. [E][?] marathon (at: 2pm)"},{"lineNumber":89,"author":{"gitId":"todoge"},"content":"\t2. [T][?] run"},{"lineNumber":90,"author":{"gitId":"todoge"},"content":"\t3. [T][?] sing"},{"lineNumber":91,"author":{"gitId":"todoge"},"content":"\t4. [T][?] jumping"},{"lineNumber":92,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":93,"author":{"gitId":"todoge"},"content":""},{"lineNumber":94,"author":{"gitId":"todoge"},"content":"### `clear list` - Removes all the tasks in the list"},{"lineNumber":95,"author":{"gitId":"todoge"},"content":"Remove all the tasks in the list."},{"lineNumber":96,"author":{"gitId":"todoge"},"content":"Example of usage: "},{"lineNumber":97,"author":{"gitId":"todoge"},"content":"`clear list`  "},{"lineNumber":98,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":99,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":100,"author":{"gitId":"todoge"},"content":"I have cleared the list!"},{"lineNumber":101,"author":{"gitId":"todoge"},"content":"```` "},{"lineNumber":102,"author":{"gitId":"todoge"},"content":"## Releases"},{"lineNumber":103,"author":{"gitId":"todoge"},"content":"\u003cu\u003e\u003cstrong\u003e Updated UI v1.2 on 14/09/2020: \u003c/strong\u003e\u003c/u\u003e"},{"lineNumber":104,"author":{"gitId":"todoge"},"content":"![GUI v1.2](docs/Ui.png)"},{"lineNumber":105,"author":{"gitId":"todoge"},"content":"\u003cu\u003e\u003cstrong\u003e Updated UI v1.1 on 05/09/2020: \u003c/strong\u003e\u003c/u\u003e"},{"lineNumber":106,"author":{"gitId":"todoge"},"content":"![GUI v1.1](docs/images/ui_v1_1.png)"},{"lineNumber":107,"author":{"gitId":"todoge"},"content":"![GUI v1.1](docs/images/ui_v1_1_2.png)"},{"lineNumber":108,"author":{"gitId":"todoge"},"content":""},{"lineNumber":109,"author":{"gitId":"todoge"},"content":""},{"lineNumber":110,"author":{"gitId":"todoge"},"content":"\u003cbr\u003e\u003cu\u003e\u003cstrong\u003eNew GUI on JavaFXML UI 01/09/2020: v1.0\u003c/strong\u003e\u003c/u\u003e\\"},{"lineNumber":111,"author":{"gitId":"todoge"},"content":"![GUI v0.1](docs/images/king_gui_v0_1.png)"},{"lineNumber":112,"author":{"gitId":"todoge"},"content":""},{"lineNumber":113,"author":{"gitId":"todoge"},"content":""},{"lineNumber":114,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003e\u003cu\u003eUPDATE: Deprecated method 01/09/2020:\u003c/u\u003e King now runs on javaFXML GUI.\u003c/strong\u003e\\"},{"lineNumber":115,"author":{"gitId":"todoge"},"content":"Simply download JAR file in `release v0.1` and run on your local system.\\"},{"lineNumber":116,"author":{"gitId":"todoge"},"content":"The program requires minimum `Java SDK 11`. To run the JAR file simply run `java -jar ip.jar`. \\"},{"lineNumber":117,"author":{"gitId":"todoge"},"content":"Refer to the fork for the project template."},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":120,"author":{"gitId":"todoge"},"content":"   ____  __.__"},{"lineNumber":121,"author":{"gitId":"todoge"},"content":"  |    |/ _|__| ____    ____"},{"lineNumber":122,"author":{"gitId":"todoge"},"content":"  |      \u003c |  |/    \\  / ___\\"},{"lineNumber":123,"author":{"gitId":"todoge"},"content":"  |    |  \\|  |   |  \\/ /_/  \u003e"},{"lineNumber":124,"author":{"gitId":"todoge"},"content":"  |____|__ \\__|___|  /\\___  /"},{"lineNumber":125,"author":{"gitId":"todoge"},"content":"          \\/       \\//_____/"},{"lineNumber":126,"author":{"gitId":"todoge"},"content":"  "},{"lineNumber":127,"author":{"gitId":"todoge"},"content":"  Hello! I\u0027m King"},{"lineNumber":128,"author":{"gitId":"todoge"},"content":"  What can I do for you?"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"todoge":123,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":""},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":""},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"    mainClassName \u003d \"king.gui.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"    archiveBaseName \u003d \"king\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"todoge"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"todoge":18,"-":43}},{"path":"data/test/parser/parserTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"E@0@test@2pm"}],"authorContributionMap":{"todoge":1}},{"path":"data/test/parserTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"E@0@test@2pm"}],"authorContributionMap":{"todoge":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"# User Guide for King Chat Bot"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":"This is a project under the module CS2103t taken in the National University of Singapore.  "},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"todoge"},"content":"\u003cimg\u003e![Java CI](https://github.com/todoge/ip/workflows/Java%20CI/badge.svg)\u003c/img\u003e"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":""},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003e\u003cu\u003eInstructions to run the app:\u003c/u\u003e\u003c/strong\u003e  "},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"Download and run the `king.jar` in `release v1.2`.\\"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"On running the application successfully, you should see the pop-up window.  "},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"## Features "},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"\u003cul\u003e"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"    \u003cli\u003etodo\u003c/li\u003e"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"    \u003cli\u003edeadline\u003c/li\u003e"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"    \u003cli\u003eevent\u003c/li\u003e"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"    \u003cli\u003edelete\u003c/li\u003e"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"    \u003cli\u003efind\u003c/li\u003e"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"    \u003cli\u003elist\u003c/li\u003e"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"    \u003cli\u003eclear list\u003c/li\u003e"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"    \u003cli\u003ebye\u003c/li\u003e"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"\u003c/ul\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"### `todo \u003ctask\u003e` - Adds a new task "},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"Adds a new task to list.  "},{"lineNumber":25,"author":{"gitId":"todoge"},"content":""},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"Example of usage: `todo running`  "},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"Got it. I\u0027ve added this task:  "},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"    [T][?] running  "},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"Now you have 1 tasks in the list."},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"### `event \u003ctask\u003e /at \u003ctime\u003e` - Adds a new event"},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"Adds a new event to list.  "},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"todoge"},"content":"Example of usage: `event marathon /at 2pm`  "},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"Got it. I\u0027ve added this task:  "},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"    [T][?] marathon (at: 2pm)  "},{"lineNumber":42,"author":{"gitId":"todoge"},"content":"Now you have 1 tasks in the list."},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":"### `deadline \u003ctask\u003e /by \u003cdate\u003e \u003ctime\u003e` - Adds a new deadline"},{"lineNumber":45,"author":{"gitId":"todoge"},"content":"Adds a new deadline to list.  "},{"lineNumber":46,"author":{"gitId":"todoge"},"content":""},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"Example of usage: `deadline homework /by 23/10/2020 1400`  "},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":49,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":50,"author":{"gitId":"todoge"},"content":"Got it. I\u0027ve added this task:  "},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"    [T][?] homework (by: Friday, Oct 23, 2020 2.00 pm) "},{"lineNumber":52,"author":{"gitId":"todoge"},"content":"Now you have 1 tasks in the list."},{"lineNumber":53,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"todoge"},"content":"### `delete [list of task numbers]` - Deletes tasks"},{"lineNumber":56,"author":{"gitId":"todoge"},"content":"Deletes all the tasks with the task numbers. "},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"todoge"},"content":"Example of usage: `delete 1 2 3`  "},{"lineNumber":59,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":60,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":61,"author":{"gitId":"todoge"},"content":"I have deleted the following item:  "},{"lineNumber":62,"author":{"gitId":"todoge"},"content":"    [T][?] running  "},{"lineNumber":63,"author":{"gitId":"todoge"},"content":"\t[E][?] marathon (at: 2pm)  "},{"lineNumber":64,"author":{"gitId":"todoge"},"content":"\t[T][?] sing  "},{"lineNumber":65,"author":{"gitId":"todoge"},"content":"You got 2 task(s) left."},{"lineNumber":66,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":67,"author":{"gitId":"todoge"},"content":""},{"lineNumber":68,"author":{"gitId":"todoge"},"content":"### `find [list of keywords]` - Find tasks with given keywords"},{"lineNumber":69,"author":{"gitId":"todoge"},"content":"Find all the tasks with at least 1 of the matching keyword.  "},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":72,"author":{"gitId":"todoge"},"content":"`find run sing jump`  "},{"lineNumber":73,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":74,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":75,"author":{"gitId":"todoge"},"content":"I found 3 items with the given keyword(s):"},{"lineNumber":76,"author":{"gitId":"todoge"},"content":"\t1. [T][?] run"},{"lineNumber":77,"author":{"gitId":"todoge"},"content":"\t2. [T][?] sing"},{"lineNumber":78,"author":{"gitId":"todoge"},"content":"\t3. [T][?] jumping"},{"lineNumber":79,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":80,"author":{"gitId":"todoge"},"content":""},{"lineNumber":81,"author":{"gitId":"todoge"},"content":"### `list` - Returns all the tasks in the list"},{"lineNumber":82,"author":{"gitId":"todoge"},"content":"Shows all the tasks currently stored in the list."},{"lineNumber":83,"author":{"gitId":"todoge"},"content":""},{"lineNumber":84,"author":{"gitId":"todoge"},"content":"Example of usage: `list`  "},{"lineNumber":85,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":86,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":87,"author":{"gitId":"todoge"},"content":"There are 4 items in your list:"},{"lineNumber":88,"author":{"gitId":"todoge"},"content":"\t1. [E][?] marathon (at: 2pm)"},{"lineNumber":89,"author":{"gitId":"todoge"},"content":"\t2. [T][?] run"},{"lineNumber":90,"author":{"gitId":"todoge"},"content":"\t3. [T][?] sing"},{"lineNumber":91,"author":{"gitId":"todoge"},"content":"\t4. [T][?] jumping"},{"lineNumber":92,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":93,"author":{"gitId":"todoge"},"content":""},{"lineNumber":94,"author":{"gitId":"todoge"},"content":"### `clear list` - Removes all the tasks in the list"},{"lineNumber":95,"author":{"gitId":"todoge"},"content":"Remove all the tasks in the list."},{"lineNumber":96,"author":{"gitId":"todoge"},"content":"Example of usage: "},{"lineNumber":97,"author":{"gitId":"todoge"},"content":"`clear list`  "},{"lineNumber":98,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003eOutcome:\u003c/strong\u003e  "},{"lineNumber":99,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":100,"author":{"gitId":"todoge"},"content":"I have cleared the list!"},{"lineNumber":101,"author":{"gitId":"todoge"},"content":"````"},{"lineNumber":102,"author":{"gitId":"todoge"},"content":"## Releases"},{"lineNumber":103,"author":{"gitId":"todoge"},"content":"\u003cu\u003e\u003cstrong\u003e Updated UI v1.2 on 14/09/2020: \u003c/strong\u003e\u003c/u\u003e"},{"lineNumber":104,"author":{"gitId":"todoge"},"content":"![GUI v1.2](Ui.png)"},{"lineNumber":105,"author":{"gitId":"todoge"},"content":"\u003cu\u003e\u003cstrong\u003e Updated UI v1.1 on 05/09/2020: \u003c/strong\u003e\u003c/u\u003e"},{"lineNumber":106,"author":{"gitId":"todoge"},"content":"![GUI v1.1](images/ui_v1_1.png)"},{"lineNumber":107,"author":{"gitId":"todoge"},"content":"![GUI v1.1](images/ui_v1_1_2.png)"},{"lineNumber":108,"author":{"gitId":"todoge"},"content":""},{"lineNumber":109,"author":{"gitId":"todoge"},"content":""},{"lineNumber":110,"author":{"gitId":"todoge"},"content":"\u003cbr\u003e\u003cu\u003e\u003cstrong\u003eNew GUI on JavaFXML UI 01/09/2020: v1.0\u003c/strong\u003e\u003c/u\u003e\\"},{"lineNumber":111,"author":{"gitId":"todoge"},"content":"![GUI v0.1](images/king_gui_v0_1.png)"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"todoge"},"content":"\u003cstrong\u003e\u003cu\u003eUPDATE: Deprecated method 01/09/2020:\u003c/u\u003e King now runs on javaFXML GUI.\u003c/strong\u003e\\"},{"lineNumber":115,"author":{"gitId":"todoge"},"content":"Simply download JAR file in `release v0.1` and run on your local system.\\"},{"lineNumber":116,"author":{"gitId":"todoge"},"content":"The program requires minimum `Java SDK 11`. To run the JAR file simply run `java -jar ip.jar`. \\"},{"lineNumber":117,"author":{"gitId":"todoge"},"content":"Refer to the fork for the project template."},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"todoge"},"content":"   ```"},{"lineNumber":120,"author":{"gitId":"todoge"},"content":"   ____  __.__"},{"lineNumber":121,"author":{"gitId":"todoge"},"content":"  |    |/ _|__| ____    ____"},{"lineNumber":122,"author":{"gitId":"todoge"},"content":"  |      \u003c |  |/    \\  / ___\\"},{"lineNumber":123,"author":{"gitId":"todoge"},"content":"  |    |  \\|  |   |  \\/ /_/  \u003e"},{"lineNumber":124,"author":{"gitId":"todoge"},"content":"  |____|__ \\__|___|  /\\___  /"},{"lineNumber":125,"author":{"gitId":"todoge"},"content":"          \\/       \\//_____/"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  "},{"lineNumber":127,"author":{"gitId":"todoge"},"content":"  Hello! I\u0027m King"},{"lineNumber":128,"author":{"gitId":"todoge"},"content":"  What can I do for you?"},{"lineNumber":129,"author":{"gitId":"todoge"},"content":"   ```"}],"authorContributionMap":{"todoge":115,"-":14}},{"path":"src/main/java/king/King.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":" * King is an individual project under cs2103t in the"},{"lineNumber":3,"author":{"gitId":"todoge"},"content":" * National University of Singapore."},{"lineNumber":4,"author":{"gitId":"todoge"},"content":" *"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":" * @author Jun Siang."},{"lineNumber":6,"author":{"gitId":"todoge"},"content":" */"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"package king;"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":""},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":""},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"import parser.Parser;"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"import storage.Storage;"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"import storage.StorageException;"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"import tasks.TaskList;"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"import ui.UI;"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":""},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"public class King {"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":""},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"    private final Storage storage;"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"    private final Parser parser;"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"    private TaskList taskList;"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":""},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"     * Creates the asset needed for the King program in the given file path."},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"     * @param filepath file path to create the asset file."},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"     * @throws StorageException kingException generated from Storage."},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"     * @see Storage"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"    public King(String filepath) throws StorageException {"},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"        storage \u003d new Storage(filepath);"},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"        taskList \u003d new TaskList();"},{"lineNumber":33,"author":{"gitId":"todoge"},"content":"        taskList.addAll(storage.load());"},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"        this.parser \u003d new Parser(storage, taskList);"},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"todoge"},"content":""},{"lineNumber":37,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"     * Returns a response from King given an input"},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"     * from the user."},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"     * @param input input from the user."},{"lineNumber":42,"author":{"gitId":"todoge"},"content":"     * @see Parser"},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":"    public String getResponse(String input) {"},{"lineNumber":45,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"todoge"},"content":"            return UI.emptyChatBox(parser.parse(input));"},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"        } catch (KingException e) {"},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"            return UI.errorBox(e.message);"},{"lineNumber":49,"author":{"gitId":"todoge"},"content":"        } catch (StorageException e) {"},{"lineNumber":50,"author":{"gitId":"todoge"},"content":"            return UI.errorBox(e.message);"},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"todoge"},"content":""},{"lineNumber":54,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"todoge"},"content":"     * Run the King program. King replies to the user."},{"lineNumber":56,"author":{"gitId":"todoge"},"content":"     * Used to run the King Program on the terminal."},{"lineNumber":57,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"todoge"},"content":"     * @deprecated Deprecated method since JavaFx was implemented."},{"lineNumber":59,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"todoge"},"content":"    @Deprecated"},{"lineNumber":61,"author":{"gitId":"todoge"},"content":"    public void run() {"},{"lineNumber":62,"author":{"gitId":"todoge"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":63,"author":{"gitId":"todoge"},"content":"        String phrase;"},{"lineNumber":64,"author":{"gitId":"todoge"},"content":"        while (scanner.hasNextLine() \u0026\u0026 !(phrase \u003d scanner.nextLine()).equals(\"bye\")) {"},{"lineNumber":65,"author":{"gitId":"todoge"},"content":"            System.out.println(UI.kingChatBox(getResponse(phrase)));"},{"lineNumber":66,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"todoge"},"content":"        System.out.print(UI.kingChatBox(\"Bye! Hope to see you again soon.\"));"},{"lineNumber":68,"author":{"gitId":"todoge"},"content":"        scanner.close();"},{"lineNumber":69,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"todoge"},"content":""},{"lineNumber":71,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"todoge"},"content":"     * Runs the King program on the terminal."},{"lineNumber":73,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"todoge"},"content":"    public static void main(String[] args) {"},{"lineNumber":76,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"todoge"},"content":"            King king \u003d new King(\"data/king.txt\");"},{"lineNumber":78,"author":{"gitId":"todoge"},"content":"            System.out.println(UI.welcome());"},{"lineNumber":79,"author":{"gitId":"todoge"},"content":"            king.run();"},{"lineNumber":80,"author":{"gitId":"todoge"},"content":"        } catch (StorageException e) {"},{"lineNumber":81,"author":{"gitId":"todoge"},"content":"            System.out.println(UI.errorBox(e.message));"},{"lineNumber":82,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"todoge"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"todoge":84,"-":1}},{"path":"src/main/java/king/KingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"package king;"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":""},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"public class KingException extends Exception {"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":""},{"lineNumber":5,"author":{"gitId":"todoge"},"content":"    public final String message;"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"    public final Throwable error;"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":""},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"     * Create a KingException generated from the King Program."},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"     * @param message message for the exception generated."},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"     * @param error   throwable error resulting in KingException generated."},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"     * @return KingException"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"    public KingException(String message, Throwable error) {"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"        this.error \u003d error;"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"        this.message \u003d message;"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":19}},{"path":"src/main/java/king/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":" * Launch the King program using GUI."},{"lineNumber":3,"author":{"gitId":"todoge"},"content":" * This is done using the JavaFx module."},{"lineNumber":4,"author":{"gitId":"todoge"},"content":" */"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":""},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"package king.gui;"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":""},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"import javafx.application.Application;"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":""},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"public class Launcher {"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":""},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":15}},{"path":"src/main/java/king/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":" * A GUI for Duke using FXML."},{"lineNumber":3,"author":{"gitId":"todoge"},"content":" * Serves as a bridge between the launcher and the"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":" * King Program."},{"lineNumber":5,"author":{"gitId":"todoge"},"content":" *"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":" * Sets the scenes."},{"lineNumber":7,"author":{"gitId":"todoge"},"content":" */"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"package king.gui;"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":""},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":""},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"import javafx.application.Application;"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"import javafx.scene.Scene;"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"import javafx.scene.layout.StackPane;"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"import javafx.scene.text.Text;"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"import javafx.stage.Stage;"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"import king.King;"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"import storage.StorageException;"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"import ui.controllers.MainWindow;"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":""},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"public class Main extends Application {"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":""},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"    private King king;"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":""},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"    public void start(Stage stage) {"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"            king \u003d new King(\"data/king.txt\");"},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"            stage.setTitle(\"King Bot\");"},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":33,"author":{"gitId":"todoge"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"            stage.setScene(scene);"},{"lineNumber":36,"author":{"gitId":"todoge"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setKing(king);"},{"lineNumber":37,"author":{"gitId":"todoge"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"            e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"        } catch (StorageException e) {"},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"            StackPane layout \u003d new StackPane();"},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"            Text text \u003d new Text(e.message);"},{"lineNumber":42,"author":{"gitId":"todoge"},"content":"            layout.getChildren().add(text);"},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"            Scene scene \u003d new Scene(layout, 500, 600);"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":"            stage.setScene(scene);"},{"lineNumber":45,"author":{"gitId":"todoge"},"content":"        } finally {"},{"lineNumber":46,"author":{"gitId":"todoge"},"content":"            stage.show();"},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":49}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":" * Parser class handles all the commands from the King Program"},{"lineNumber":3,"author":{"gitId":"todoge"},"content":" * and returns a reply from the commands."},{"lineNumber":4,"author":{"gitId":"todoge"},"content":" *"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":" * @see parser.ParserLogic"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":" */"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"package parser;"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":""},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"import king.KingException;"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"import storage.Storage;"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"import storage.StorageException;"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"import tasks.TaskList;"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":""},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"public class Parser {"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":""},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"    private final ParserExceptions exceptions \u003d new ParserExceptions();"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"    private final ParserLogic parserLogic;"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":""},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"     * Parse the commands from the King Program"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"     * @param storage  storage to save the commands to."},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"     * @param taskList taskList to be manipulated from the commands."},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"     * @return Parser parser to parse commands."},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"    public Parser(Storage storage, TaskList taskList) {"},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"        parserLogic \u003d new ParserLogic(taskList, storage);"},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":""},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"     * Parse the commands from the King Program."},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"     * The parser automatically modifies the asset file in the"},{"lineNumber":33,"author":{"gitId":"todoge"},"content":"     * storage and the taskList according to the commands"},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"     * given by the user."},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"todoge"},"content":"     * @param phrase the command given by the user."},{"lineNumber":37,"author":{"gitId":"todoge"},"content":"     * @return String the reply from the command given."},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"     * @throws KingException kingException is thrown when phrase is invalid."},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"     * @throws StorageException StorageException thrown by Storage when writing to asset file."},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"     * @see Storage"},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"todoge"},"content":""},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"    public String parse(String phrase) throws KingException, StorageException {"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":""},{"lineNumber":45,"author":{"gitId":"todoge"},"content":"        assert phrase !\u003d null : \"command cannot be null!\";"},{"lineNumber":46,"author":{"gitId":"todoge"},"content":""},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"        String mainCommand \u003d phrase.split(\" \")[0].toLowerCase();"},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"        if (mainCommand.equals(\"bye\")) {"},{"lineNumber":49,"author":{"gitId":"todoge"},"content":"            return parserLogic.parseBye();"},{"lineNumber":50,"author":{"gitId":"todoge"},"content":"        } else if (mainCommand.equals(\"list\")) {"},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"            return parserLogic.parseList();"},{"lineNumber":52,"author":{"gitId":"todoge"},"content":"        } else if (phrase.equals(\"clear list\")) {"},{"lineNumber":53,"author":{"gitId":"todoge"},"content":"            return parserLogic.parseClearList();"},{"lineNumber":54,"author":{"gitId":"todoge"},"content":"        } else if (mainCommand.equals(\"done\")) {"},{"lineNumber":55,"author":{"gitId":"todoge"},"content":"            return parserLogic.parseDone(phrase);"},{"lineNumber":56,"author":{"gitId":"todoge"},"content":"        } else if (mainCommand.equals(\"todo\")) {"},{"lineNumber":57,"author":{"gitId":"todoge"},"content":"            return parserLogic.parseToDo(phrase);"},{"lineNumber":58,"author":{"gitId":"todoge"},"content":"        } else if (mainCommand.equals(\"event\")) {"},{"lineNumber":59,"author":{"gitId":"todoge"},"content":"            return parserLogic.parseEvent(phrase);"},{"lineNumber":60,"author":{"gitId":"todoge"},"content":"        } else if (mainCommand.equals(\"deadline\")) {"},{"lineNumber":61,"author":{"gitId":"todoge"},"content":"            return parserLogic.parseDeadline(phrase);"},{"lineNumber":62,"author":{"gitId":"todoge"},"content":"        } else if (mainCommand.equals(\"delete\")) {"},{"lineNumber":63,"author":{"gitId":"todoge"},"content":"            return parserLogic.parseDelete(phrase);"},{"lineNumber":64,"author":{"gitId":"todoge"},"content":"        } else if (mainCommand.equals(\"find\")) {"},{"lineNumber":65,"author":{"gitId":"todoge"},"content":"            return parserLogic.parseFind(phrase);"},{"lineNumber":66,"author":{"gitId":"todoge"},"content":"        } else {"},{"lineNumber":67,"author":{"gitId":"todoge"},"content":"            throw exceptions.badCommandException();"},{"lineNumber":68,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":70}},{"path":"src/main/java/parser/ParserExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":" * ParserExceptions contains all the king exceptions thrown"},{"lineNumber":3,"author":{"gitId":"todoge"},"content":" * by parser during execution of the King program."},{"lineNumber":4,"author":{"gitId":"todoge"},"content":" *"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":" * @see parser.Parser"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":" * @see king.KingException"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":" */"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":""},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"package parser;"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":""},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"import king.KingException;"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":""},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"class ParserExceptions {"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":""},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"    public KingException itemNotFoundException(String item, Throwable error) {"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"        return new KingException(\"Item \" + item + \" is not found!\", error);"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":""},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"    public KingException doneNotFollowedByNumberException() {"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"        return new KingException(\"Done must be followed by item number\", new Throwable(\"number field empty\"));"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":""},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"    public KingException invalidNumberException(String item, Throwable error) {"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"        return new KingException(item + \" is not a valid item number!\", error);"},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":""},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"    public KingException badDoneSyntaxException() {"},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"        return new KingException(\"Please follow the syntax: done \u003citem no.\u003e\", new Throwable(\"bad done syntax\"));"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"todoge"},"content":""},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"    public KingException emptyTodoException() {"},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"        return new KingException(\"Todo cannot be empty!\", new Throwable(\"empty field\"));"},{"lineNumber":33,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"todoge"},"content":""},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"    public KingException badEventSyntaxException() {"},{"lineNumber":36,"author":{"gitId":"todoge"},"content":"        return new KingException(\"Follow the syntax event: \u003cdescription\u003e /at \u003ctime\u003e\", new Throwable("},{"lineNumber":37,"author":{"gitId":"todoge"},"content":"                \"bad event syntax\""},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"        ));"},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"todoge"},"content":""},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"    public KingException badDeadlineSyntaxException() {"},{"lineNumber":42,"author":{"gitId":"todoge"},"content":"        return new KingException(\"Follow the syntax: deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e\", new Throwable("},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"                \"bad deadline syntax\""},{"lineNumber":44,"author":{"gitId":"todoge"},"content":"        ));"},{"lineNumber":45,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"todoge"},"content":""},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"    public KingException badDeleteSyntaxException() {"},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"        return new KingException(\"Please follow the syntax: delete \u003citem no.\u003e\", new Throwable(\"bad delete syntax\"));"},{"lineNumber":49,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"todoge"},"content":""},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"    public KingException deleteNotFollowedByNumberException() {"},{"lineNumber":52,"author":{"gitId":"todoge"},"content":"        return new KingException(\"delete must be followed by item number\", new Throwable(\"number field empty\"));"},{"lineNumber":53,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"todoge"},"content":""},{"lineNumber":55,"author":{"gitId":"todoge"},"content":"    public KingException badCommandException() {"},{"lineNumber":56,"author":{"gitId":"todoge"},"content":"        return new KingException(\"Not a valid command!\", new Throwable(\"bad command\"));"},{"lineNumber":57,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"todoge"},"content":""},{"lineNumber":59,"author":{"gitId":"todoge"},"content":"    public KingException badLocalDateTimeException(Throwable error) {"},{"lineNumber":60,"author":{"gitId":"todoge"},"content":"        return new KingException(\"Date and Time must be formatted as /by \u003cdate\u003e \u003ctime\u003e. E.g. 2/1/2020 1400\","},{"lineNumber":61,"author":{"gitId":"todoge"},"content":"                error);"},{"lineNumber":62,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":63}},{"path":"src/main/java/parser/ParserLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":""},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":""},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"import king.KingException;"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"import storage.Storage;"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"import storage.StorageException;"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"import tasks.Deadline;"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"import tasks.Event;"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"import tasks.Task;"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"import tasks.TaskList;"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"import tasks.ToDo;"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"import ui.UI;"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":""},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"public class ParserLogic {"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":""},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"    private final ParserExceptions exceptions \u003d new ParserExceptions();"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"    private final Storage storage;"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"    private TaskList taskList;"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":""},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"    ParserLogic(TaskList taskList, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"        this.storage \u003d storage;"},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":""},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"     * Parse the \"Bye\" command from the user."},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"     * @return String String Reply from King."},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"    public String parseBye() {"},{"lineNumber":33,"author":{"gitId":"todoge"},"content":"        return UI.emptyChatBox(\"Bye! Come back soon.\");"},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"todoge"},"content":""},{"lineNumber":36,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"todoge"},"content":"     * Parse the \"clear list\" command from the user."},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"     * Clears the taskList data in storage."},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"     * @return String Reply from King."},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"todoge"},"content":"    public String parseClearList() throws StorageException {"},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"        taskList.clear();"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":"        storage.persistTaskList(taskList);"},{"lineNumber":45,"author":{"gitId":"todoge"},"content":"        return UI.emptyChatBox(\"I have cleared the list!\");"},{"lineNumber":46,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"todoge"},"content":""},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"todoge"},"content":"     * Parse the \"list\" command from the user."},{"lineNumber":50,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"     * @return String Reply from King."},{"lineNumber":52,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"todoge"},"content":"    public String parseList() {"},{"lineNumber":54,"author":{"gitId":"todoge"},"content":"        return UI.showTaskList(taskList);"},{"lineNumber":55,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"todoge"},"content":""},{"lineNumber":57,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"todoge"},"content":"     * Parse the \"todo\" command from the user."},{"lineNumber":59,"author":{"gitId":"todoge"},"content":"     * Updates the data in storage."},{"lineNumber":60,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"todoge"},"content":"     * @param command Phrase entered by user."},{"lineNumber":62,"author":{"gitId":"todoge"},"content":"     * @return String Reply from King."},{"lineNumber":63,"author":{"gitId":"todoge"},"content":"     * @throws KingException    Throws KingException for invalid commands."},{"lineNumber":64,"author":{"gitId":"todoge"},"content":"     * @throws StorageException Exception from writing to asset file."},{"lineNumber":65,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"todoge"},"content":"    public String parseToDo(String command) throws KingException, StorageException {"},{"lineNumber":67,"author":{"gitId":"todoge"},"content":"        String task \u003d command.substring(4).trim();"},{"lineNumber":68,"author":{"gitId":"todoge"},"content":"        if (!task.isEmpty()) {"},{"lineNumber":69,"author":{"gitId":"todoge"},"content":"            ToDo todo \u003d new ToDo(task);"},{"lineNumber":70,"author":{"gitId":"todoge"},"content":"            taskList.add(todo);"},{"lineNumber":71,"author":{"gitId":"todoge"},"content":"            storage.persistTaskList(taskList);"},{"lineNumber":72,"author":{"gitId":"todoge"},"content":"            return UI.addItemChatBox(todo.toString(), taskList.size());"},{"lineNumber":73,"author":{"gitId":"todoge"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"todoge"},"content":"            throw exceptions.emptyTodoException();"},{"lineNumber":75,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"todoge"},"content":""},{"lineNumber":78,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"todoge"},"content":"     * Parse the \"event\" command from the user."},{"lineNumber":80,"author":{"gitId":"todoge"},"content":"     * Updates the data in storage."},{"lineNumber":81,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"todoge"},"content":"     * @param command Phrase entered by user."},{"lineNumber":83,"author":{"gitId":"todoge"},"content":"     * @return String Reply from King."},{"lineNumber":84,"author":{"gitId":"todoge"},"content":"     * @throws KingException    Throws KingException for invalid commands."},{"lineNumber":85,"author":{"gitId":"todoge"},"content":"     * @throws StorageException Exception from writing to asset file."},{"lineNumber":86,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"todoge"},"content":"    public String parseEvent(String command) throws KingException, StorageException {"},{"lineNumber":88,"author":{"gitId":"todoge"},"content":"        String item \u003d command.substring(5).trim();"},{"lineNumber":89,"author":{"gitId":"todoge"},"content":"        String[] tokens \u003d item.split(\" /at \");"},{"lineNumber":90,"author":{"gitId":"todoge"},"content":"        if (tokens.length \u003d\u003d 2) {"},{"lineNumber":91,"author":{"gitId":"todoge"},"content":"            Event event \u003d new Event(tokens[0], tokens[1]);"},{"lineNumber":92,"author":{"gitId":"todoge"},"content":"            taskList.add(event);"},{"lineNumber":93,"author":{"gitId":"todoge"},"content":"            storage.persistTaskList(taskList);"},{"lineNumber":94,"author":{"gitId":"todoge"},"content":"            return UI.addItemChatBox(event.toString(), taskList.size());"},{"lineNumber":95,"author":{"gitId":"todoge"},"content":"        } else {"},{"lineNumber":96,"author":{"gitId":"todoge"},"content":"            throw exceptions.badEventSyntaxException();"},{"lineNumber":97,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"todoge"},"content":""},{"lineNumber":100,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"todoge"},"content":"     * Parse the \"deadline\" command from the user."},{"lineNumber":102,"author":{"gitId":"todoge"},"content":"     * Updates the data in storage."},{"lineNumber":103,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"todoge"},"content":"     * @param command Phrase entered by user."},{"lineNumber":105,"author":{"gitId":"todoge"},"content":"     * @return String Reply from King."},{"lineNumber":106,"author":{"gitId":"todoge"},"content":"     * @throws KingException    Throws KingException for invalid commands."},{"lineNumber":107,"author":{"gitId":"todoge"},"content":"     * @throws StorageException Exception from writing to asset file."},{"lineNumber":108,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"todoge"},"content":"    public String parseDeadline(String command) throws KingException, StorageException {"},{"lineNumber":110,"author":{"gitId":"todoge"},"content":"        String item \u003d command.substring(8).trim();"},{"lineNumber":111,"author":{"gitId":"todoge"},"content":"        String[] tokens \u003d item.split(\" /by \");"},{"lineNumber":112,"author":{"gitId":"todoge"},"content":"        if (tokens.length !\u003d 2) {"},{"lineNumber":113,"author":{"gitId":"todoge"},"content":"            throw exceptions.badDeadlineSyntaxException();"},{"lineNumber":114,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":116,"author":{"gitId":"todoge"},"content":"            LocalDateTime datetime \u003d stringToLocalDateTime(tokens[1]);"},{"lineNumber":117,"author":{"gitId":"todoge"},"content":"            Deadline deadline \u003d new Deadline(tokens[0], datetime);"},{"lineNumber":118,"author":{"gitId":"todoge"},"content":"            taskList.add(deadline);"},{"lineNumber":119,"author":{"gitId":"todoge"},"content":"            storage.persistTaskList(taskList);"},{"lineNumber":120,"author":{"gitId":"todoge"},"content":"            return UI.addItemChatBox(deadline.toString(), taskList.size());"},{"lineNumber":121,"author":{"gitId":"todoge"},"content":"        } catch (KingException badDateTimeSyntax) {"},{"lineNumber":122,"author":{"gitId":"todoge"},"content":"            throw badDateTimeSyntax;"},{"lineNumber":123,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"todoge"},"content":""},{"lineNumber":126,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"todoge"},"content":"     * Parse the \"delete\" command from the user."},{"lineNumber":128,"author":{"gitId":"todoge"},"content":"     * Updates the data in storage."},{"lineNumber":129,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"todoge"},"content":"     * @param command Phrase entered by user."},{"lineNumber":131,"author":{"gitId":"todoge"},"content":"     * @return String Reply from King."},{"lineNumber":132,"author":{"gitId":"todoge"},"content":"     * @throws KingException    Throws KingException for invalid commands."},{"lineNumber":133,"author":{"gitId":"todoge"},"content":"     * @throws StorageException Exception from writing to asset file."},{"lineNumber":134,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"todoge"},"content":"    public String parseDelete(String command) throws KingException, StorageException {"},{"lineNumber":136,"author":{"gitId":"todoge"},"content":""},{"lineNumber":137,"author":{"gitId":"todoge"},"content":"        String itemsToDelete \u003d command.substring(6).trim();"},{"lineNumber":138,"author":{"gitId":"todoge"},"content":"        // splits the item number an array while removing whitespaces"},{"lineNumber":139,"author":{"gitId":"todoge"},"content":"        String[] tasksToDeleteTokens \u003d itemsToDelete.replaceAll(\"\\\\s+\", \" \").split(\" \");"},{"lineNumber":140,"author":{"gitId":"todoge"},"content":"        Integer[] taskPositions \u003d new Integer[tasksToDeleteTokens.length];"},{"lineNumber":141,"author":{"gitId":"todoge"},"content":""},{"lineNumber":142,"author":{"gitId":"todoge"},"content":"        // taskNumber keeps track of the current task number in tasksToDeleteTokens being parsed."},{"lineNumber":143,"author":{"gitId":"todoge"},"content":"        String taskNumber \u003d tasksToDeleteTokens[0];"},{"lineNumber":144,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":145,"author":{"gitId":"todoge"},"content":"            for (int pos \u003d 0; pos \u003c taskPositions.length; pos++) {"},{"lineNumber":146,"author":{"gitId":"todoge"},"content":"                taskNumber \u003d tasksToDeleteTokens[pos];"},{"lineNumber":147,"author":{"gitId":"todoge"},"content":"                int itemNumber \u003d Integer.parseInt(taskNumber) - 1;"},{"lineNumber":148,"author":{"gitId":"todoge"},"content":"                taskPositions[pos] \u003d itemNumber;"},{"lineNumber":149,"author":{"gitId":"todoge"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"todoge"},"content":"            TaskList deletedTasks \u003d taskList.delete(taskPositions);"},{"lineNumber":151,"author":{"gitId":"todoge"},"content":"            storage.persistTaskList(taskList);"},{"lineNumber":152,"author":{"gitId":"todoge"},"content":"            return UI.deleteItemChatBox(taskList.size(), deletedTasks);"},{"lineNumber":153,"author":{"gitId":"todoge"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":154,"author":{"gitId":"todoge"},"content":"            throw exceptions.itemNotFoundException(taskNumber, e);"},{"lineNumber":155,"author":{"gitId":"todoge"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":156,"author":{"gitId":"todoge"},"content":"            throw (itemsToDelete.isEmpty())"},{"lineNumber":157,"author":{"gitId":"todoge"},"content":"                    ? exceptions.deleteNotFollowedByNumberException()"},{"lineNumber":158,"author":{"gitId":"todoge"},"content":"                    : exceptions.invalidNumberException(taskNumber, e);"},{"lineNumber":159,"author":{"gitId":"todoge"},"content":"        } catch (StorageException e) {"},{"lineNumber":160,"author":{"gitId":"todoge"},"content":"            throw e;"},{"lineNumber":161,"author":{"gitId":"todoge"},"content":"        } catch (Exception e) {"},{"lineNumber":162,"author":{"gitId":"todoge"},"content":"            throw exceptions.badDeleteSyntaxException();"},{"lineNumber":163,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"todoge"},"content":""},{"lineNumber":166,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"todoge"},"content":"     * Parse the \"find\" command from the user."},{"lineNumber":168,"author":{"gitId":"todoge"},"content":"     * Updates the data in storage."},{"lineNumber":169,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":170,"author":{"gitId":"todoge"},"content":"     * @param command Phrase entered by user."},{"lineNumber":171,"author":{"gitId":"todoge"},"content":"     * @return String Reply from King."},{"lineNumber":172,"author":{"gitId":"todoge"},"content":"     * @throws StorageException Exception from writing to asset file."},{"lineNumber":173,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"todoge"},"content":"    public String parseFind(String command) throws StorageException {"},{"lineNumber":175,"author":{"gitId":"todoge"},"content":"        String[] keywords \u003d command.substring(4).trim().split(\" \");"},{"lineNumber":176,"author":{"gitId":"todoge"},"content":"        return UI.showFoundItems(storage.find(keywords));"},{"lineNumber":177,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"todoge"},"content":""},{"lineNumber":179,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"todoge"},"content":"     * Parse the \"done\" command from the user."},{"lineNumber":181,"author":{"gitId":"todoge"},"content":"     * Updates the data in storage."},{"lineNumber":182,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":183,"author":{"gitId":"todoge"},"content":"     * @param command Phrase entered by user."},{"lineNumber":184,"author":{"gitId":"todoge"},"content":"     * @return String Reply from King."},{"lineNumber":185,"author":{"gitId":"todoge"},"content":"     * @throws KingException    Throws KingException for invalid commands."},{"lineNumber":186,"author":{"gitId":"todoge"},"content":"     * @throws StorageException Exception from writing to asset file."},{"lineNumber":187,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":188,"author":{"gitId":"todoge"},"content":"    public String parseDone(String command) throws KingException, StorageException {"},{"lineNumber":189,"author":{"gitId":"todoge"},"content":"        String stringItem \u003d command.substring(4).trim();"},{"lineNumber":190,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":191,"author":{"gitId":"todoge"},"content":"            int taskNumber \u003d Integer.parseInt(stringItem) - 1;"},{"lineNumber":192,"author":{"gitId":"todoge"},"content":"            Task item \u003d taskList.get(taskNumber);"},{"lineNumber":193,"author":{"gitId":"todoge"},"content":"            item.markAsDone();"},{"lineNumber":194,"author":{"gitId":"todoge"},"content":"            storage.persistTaskList(taskList);"},{"lineNumber":195,"author":{"gitId":"todoge"},"content":"            return UI.emptyChatBox(item.toString());"},{"lineNumber":196,"author":{"gitId":"todoge"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":197,"author":{"gitId":"todoge"},"content":"            throw exceptions.itemNotFoundException(stringItem, e);"},{"lineNumber":198,"author":{"gitId":"todoge"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":199,"author":{"gitId":"todoge"},"content":"            throw (stringItem.isEmpty())"},{"lineNumber":200,"author":{"gitId":"todoge"},"content":"                    ? exceptions.doneNotFollowedByNumberException()"},{"lineNumber":201,"author":{"gitId":"todoge"},"content":"                    : exceptions.invalidNumberException(stringItem, e);"},{"lineNumber":202,"author":{"gitId":"todoge"},"content":"        } catch (StorageException e) {"},{"lineNumber":203,"author":{"gitId":"todoge"},"content":"            throw e;"},{"lineNumber":204,"author":{"gitId":"todoge"},"content":"        } catch (Exception e) {"},{"lineNumber":205,"author":{"gitId":"todoge"},"content":"            throw exceptions.badDoneSyntaxException();"},{"lineNumber":206,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"todoge"},"content":""},{"lineNumber":209,"author":{"gitId":"todoge"},"content":"    // takes a Date Time string and returns a LocalDateTime"},{"lineNumber":210,"author":{"gitId":"todoge"},"content":"    private LocalDateTime stringToLocalDateTime(String localDateTime) throws KingException {"},{"lineNumber":211,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":212,"author":{"gitId":"todoge"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");"},{"lineNumber":213,"author":{"gitId":"todoge"},"content":"            return LocalDateTime.parse(localDateTime, formatter);"},{"lineNumber":214,"author":{"gitId":"todoge"},"content":"        } catch (Exception e) {"},{"lineNumber":215,"author":{"gitId":"todoge"},"content":"            throw exceptions.badLocalDateTimeException(e);"},{"lineNumber":216,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":218}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":" * Handles all Files input-output related functions."},{"lineNumber":3,"author":{"gitId":"todoge"},"content":" */"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":"package storage;"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":""},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"import java.io.BufferedWriter;"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"import java.io.File;"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"import java.io.FileReader;"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"import java.time.LocalDateTime;"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":""},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"import tasks.Deadline;"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"import tasks.Event;"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"import tasks.Task;"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"import tasks.TaskList;"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"import tasks.ToDo;"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":""},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":""},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"    public final String filePath;"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"    private File data;"},{"lineNumber":25,"author":{"gitId":"todoge"},"content":""},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"     * Creates the directories and the file given the filepath"},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"     * if file does not exists. Then, returns Storage which handles"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"     * the manipulation of asset in the filepath."},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"     * @param filepath file path for an existing asset or to initialise a new asset."},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"     * @throws StorageException io exception generated from creating file."},{"lineNumber":33,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"    public Storage(String filepath) throws StorageException {"},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"        this.filePath \u003d filepath;"},{"lineNumber":36,"author":{"gitId":"todoge"},"content":"        String[] tokens \u003d filepath.split(\"/\");"},{"lineNumber":37,"author":{"gitId":"todoge"},"content":"        int pathLength \u003d tokens.length;"},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"        if (pathLength \u003d\u003d 1) {"},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"            throw new StorageException(\"Invalid file path: \" + filepath, new Throwable(\"bad path\"));"},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"            String path \u003d tokens[0];"},{"lineNumber":42,"author":{"gitId":"todoge"},"content":"            for (int i \u003d 1; i \u003c pathLength; i++) {"},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"                File directory \u003d new File(path);"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":"                if (!directory.exists()) {"},{"lineNumber":45,"author":{"gitId":"todoge"},"content":"                    directory.mkdir();"},{"lineNumber":46,"author":{"gitId":"todoge"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"                path +\u003d \"/\" + tokens[i];"},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"todoge"},"content":"            try {"},{"lineNumber":50,"author":{"gitId":"todoge"},"content":"                data \u003d new File(path);"},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"                data.createNewFile();"},{"lineNumber":52,"author":{"gitId":"todoge"},"content":"            } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"todoge"},"content":"                throw new StorageException(\"Error occurred while loading asset file: \" + filepath, e);"},{"lineNumber":54,"author":{"gitId":"todoge"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"todoge"},"content":""},{"lineNumber":58,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"todoge"},"content":"     * Storage read the asset in the filepath and loads the"},{"lineNumber":60,"author":{"gitId":"todoge"},"content":"     * Tasks in the asset into an ArrayList."},{"lineNumber":61,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"todoge"},"content":"     * @return ArrayList list of tasks"},{"lineNumber":63,"author":{"gitId":"todoge"},"content":"     * @throws StorageException exception generated from reading asset file."},{"lineNumber":64,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"todoge"},"content":"    public ArrayList\u003cTask\u003e load() throws StorageException {"},{"lineNumber":66,"author":{"gitId":"todoge"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();"},{"lineNumber":67,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"todoge"},"content":"            FileReader input \u003d new FileReader(data.getAbsoluteFile());"},{"lineNumber":69,"author":{"gitId":"todoge"},"content":"            Scanner scanner \u003d new Scanner(input);"},{"lineNumber":70,"author":{"gitId":"todoge"},"content":"            while (scanner.hasNextLine()) {"},{"lineNumber":71,"author":{"gitId":"todoge"},"content":"                items.add(dataToTask(scanner.nextLine()));"},{"lineNumber":72,"author":{"gitId":"todoge"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"todoge"},"content":"            input.close();"},{"lineNumber":74,"author":{"gitId":"todoge"},"content":"            scanner.close();"},{"lineNumber":75,"author":{"gitId":"todoge"},"content":"        } catch (IOException e) {"},{"lineNumber":76,"author":{"gitId":"todoge"},"content":"            throw new StorageException(\"Error occurred while reading asset.\", e);"},{"lineNumber":77,"author":{"gitId":"todoge"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":78,"author":{"gitId":"todoge"},"content":"            throw new StorageException(\"Asset file is corrupted.\", e);"},{"lineNumber":79,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"todoge"},"content":"        return items;"},{"lineNumber":81,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"todoge"},"content":""},{"lineNumber":83,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"todoge"},"content":"     * Reads the tasks in the taskList and updates the tasks in the"},{"lineNumber":85,"author":{"gitId":"todoge"},"content":"     * filepath."},{"lineNumber":86,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"todoge"},"content":"     * @param taskList"},{"lineNumber":88,"author":{"gitId":"todoge"},"content":"     * @return boolean returns true if taskList is successfully persisted."},{"lineNumber":89,"author":{"gitId":"todoge"},"content":"     * @throws StorageException IOException when writing to asset file."},{"lineNumber":90,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"todoge"},"content":"    public boolean persistTaskList(TaskList taskList) throws StorageException {"},{"lineNumber":92,"author":{"gitId":"todoge"},"content":"        assert taskList !\u003d null : \"taskList cannot be null\";"},{"lineNumber":93,"author":{"gitId":"todoge"},"content":""},{"lineNumber":94,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"todoge"},"content":"            BufferedWriter output \u003d new BufferedWriter(new FileWriter(filePath));"},{"lineNumber":96,"author":{"gitId":"todoge"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":97,"author":{"gitId":"todoge"},"content":"                Task task \u003d taskList.get(i);"},{"lineNumber":98,"author":{"gitId":"todoge"},"content":"                String isLoaded \u003d task.isDone() ? \"1\" : \"0\";"},{"lineNumber":99,"author":{"gitId":"todoge"},"content":"                if (task.getClass().isAssignableFrom(ToDo.class)) {"},{"lineNumber":100,"author":{"gitId":"todoge"},"content":"                    String s \u003d \"T@\" + isLoaded + \"@\" + task.getDescription();"},{"lineNumber":101,"author":{"gitId":"todoge"},"content":"                    output.write(s);"},{"lineNumber":102,"author":{"gitId":"todoge"},"content":"                } else if (task.getClass().isAssignableFrom(Event.class)) {"},{"lineNumber":103,"author":{"gitId":"todoge"},"content":"                    String s \u003d \"E@\" + isLoaded + \"@\" + task.getDescription() + \"@\" + ((Event) task).getTime();"},{"lineNumber":104,"author":{"gitId":"todoge"},"content":"                    output.write(s);"},{"lineNumber":105,"author":{"gitId":"todoge"},"content":"                } else {"},{"lineNumber":106,"author":{"gitId":"todoge"},"content":"                    String s \u003d \"D@\" + isLoaded + \"@\" + task.getDescription() + \"@\" + ((Deadline) task).getBy();"},{"lineNumber":107,"author":{"gitId":"todoge"},"content":"                    output.write(s);"},{"lineNumber":108,"author":{"gitId":"todoge"},"content":"                }"},{"lineNumber":109,"author":{"gitId":"todoge"},"content":"                output.newLine();"},{"lineNumber":110,"author":{"gitId":"todoge"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"todoge"},"content":"            output.close();"},{"lineNumber":112,"author":{"gitId":"todoge"},"content":"        } catch (IOException e) {"},{"lineNumber":113,"author":{"gitId":"todoge"},"content":"            throw new StorageException(\"Error writing to \" + filePath + \" when persisting data\", e);"},{"lineNumber":114,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"todoge"},"content":"        return true;"},{"lineNumber":116,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"todoge"},"content":""},{"lineNumber":118,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"todoge"},"content":"     * Finds a keyword in the asset file"},{"lineNumber":120,"author":{"gitId":"todoge"},"content":"     * and returns the corresponding tasks found in"},{"lineNumber":121,"author":{"gitId":"todoge"},"content":"     * a taskList."},{"lineNumber":122,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"todoge"},"content":"     * @param keywords keywords to search for."},{"lineNumber":124,"author":{"gitId":"todoge"},"content":"     * @return TaskList containing the tasks with the keywords"},{"lineNumber":125,"author":{"gitId":"todoge"},"content":"     * @throws StorageException Throws exception from reading asset file."},{"lineNumber":126,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"todoge"},"content":"    public TaskList find(String... keywords) throws StorageException {"},{"lineNumber":128,"author":{"gitId":"todoge"},"content":"        TaskList tasksFound \u003d new TaskList();"},{"lineNumber":129,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":130,"author":{"gitId":"todoge"},"content":"            Scanner scanner \u003d new Scanner(data);"},{"lineNumber":131,"author":{"gitId":"todoge"},"content":"            while (scanner.hasNextLine()) {"},{"lineNumber":132,"author":{"gitId":"todoge"},"content":"                String item \u003d scanner.nextLine();"},{"lineNumber":133,"author":{"gitId":"todoge"},"content":"                for (String keyword : keywords) {"},{"lineNumber":134,"author":{"gitId":"todoge"},"content":"                    if (item.contains(keyword)) {"},{"lineNumber":135,"author":{"gitId":"todoge"},"content":"                        tasksFound.add(dataToTask(item));"},{"lineNumber":136,"author":{"gitId":"todoge"},"content":"                    }"},{"lineNumber":137,"author":{"gitId":"todoge"},"content":"                }"},{"lineNumber":138,"author":{"gitId":"todoge"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"todoge"},"content":"        } catch (IOException e) {"},{"lineNumber":140,"author":{"gitId":"todoge"},"content":"            throw new StorageException(\"Error was encountered when reading asset file: \" + filePath, e);"},{"lineNumber":141,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"todoge"},"content":"        return tasksFound;"},{"lineNumber":143,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"todoge"},"content":""},{"lineNumber":145,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"todoge"},"content":"     * Converts data to Task."},{"lineNumber":147,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":148,"author":{"gitId":"todoge"},"content":"     * @param data data stored in the asset file."},{"lineNumber":149,"author":{"gitId":"todoge"},"content":"     * @return Task task created from data."},{"lineNumber":150,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"todoge"},"content":"    private Task dataToTask(String data) {"},{"lineNumber":152,"author":{"gitId":"todoge"},"content":"        assert data !\u003d null : \"data cannot be null!\";"},{"lineNumber":153,"author":{"gitId":"todoge"},"content":""},{"lineNumber":154,"author":{"gitId":"todoge"},"content":"        String[] dataTokens \u003d data.split(\"@\", 4);"},{"lineNumber":155,"author":{"gitId":"todoge"},"content":"        Task task;"},{"lineNumber":156,"author":{"gitId":"todoge"},"content":"        switch (dataTokens[0]) {"},{"lineNumber":157,"author":{"gitId":"todoge"},"content":"        case \"T\":"},{"lineNumber":158,"author":{"gitId":"todoge"},"content":"            task \u003d new ToDo(dataTokens[2]);"},{"lineNumber":159,"author":{"gitId":"todoge"},"content":"            break;"},{"lineNumber":160,"author":{"gitId":"todoge"},"content":"        case \"D\":"},{"lineNumber":161,"author":{"gitId":"todoge"},"content":"            task \u003d new Deadline(dataTokens[2], LocalDateTime.parse(dataTokens[3]));"},{"lineNumber":162,"author":{"gitId":"todoge"},"content":"            break;"},{"lineNumber":163,"author":{"gitId":"todoge"},"content":"        default:"},{"lineNumber":164,"author":{"gitId":"todoge"},"content":"            task \u003d new Event(dataTokens[2], dataTokens[3]);"},{"lineNumber":165,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"todoge"},"content":"        if (dataTokens[1].equals(\"1\")) {"},{"lineNumber":167,"author":{"gitId":"todoge"},"content":"            task.markAsDone();"},{"lineNumber":168,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"todoge"},"content":"        return task;"},{"lineNumber":170,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":171}},{"path":"src/main/java/storage/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":""},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"public class StorageException extends Exception {"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":"    public final String message;"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":"    public final Throwable error;"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":""},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"     * Create a StorageException generated from running Storage."},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"     * @param message message for the exception generated."},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"     * @param error   throwable error resulting in StorageException generated."},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"     * @return StorageException"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"    public StorageException(String message, Throwable error) {"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"        this.error \u003d error;"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"        this.message \u003d message;"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":18}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":""},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":""},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"    protected LocalDateTime by;"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":""},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"     * Returns a deadline task."},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"     * @param description description of the deadline."},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"     * @param by          the date and time of the deadline."},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"     * @see Task"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"        this.by \u003d by;"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":""},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"     * Returns the date and time of the deadline."},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"     * @return LocalDateTime."},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"     * @see LocalDateTime"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"    public LocalDateTime getBy() {"},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"        return by;"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"todoge"},"content":""},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"todoge"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM d, yyyy h.mm a\");"},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatter.format(by) + \")\";"},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":36}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":""},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":"    protected String time;"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":""},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"     * Returns an Event task."},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"     * @param description description of the event."},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"     * @param time        time of the event."},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"     * @see Task"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"    public Event(String description, String time) {"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"        this.time \u003d time;"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":""},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"     * Returns the time of the event."},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"     * @return String time of event."},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"    public String getTime() {"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"        return time;"},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":""},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":31}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":" * Creates an unspecified Task."},{"lineNumber":3,"author":{"gitId":"todoge"},"content":" */"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":"package tasks;"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":""},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"    protected TaskStates state;"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":""},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"     * Returns the task created."},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"     * @param description description of the task."},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"    Task(String description) {"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"        state \u003d TaskStates.UNDONE;"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":""},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"     * Returns the description of the task."},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"     * @return String description of task."},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"    public String getDescription() {"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"        return description;"},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"todoge"},"content":""},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"     * Mark the task as Done."},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"    public void markAsDone() {"},{"lineNumber":33,"author":{"gitId":"todoge"},"content":"        state \u003d TaskStates.DONE;"},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"todoge"},"content":""},{"lineNumber":36,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"todoge"},"content":"     * Checks if a task is done."},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"     * @return boolean true if task is done."},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"    public boolean isDone() {"},{"lineNumber":42,"author":{"gitId":"todoge"},"content":"        return state \u003d\u003d TaskStates.DONE;"},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":""},{"lineNumber":45,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"todoge"},"content":"     * Returns the icon for the status of the task."},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"     * @return String icon for task status."},{"lineNumber":49,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"todoge"},"content":"    public String getStatusIcon() {"},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"        return (state \u003d\u003d TaskStates.DONE ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":52,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"todoge"},"content":""},{"lineNumber":54,"author":{"gitId":"todoge"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"todoge"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitId":"todoge"},"content":"        switch (state) {"},{"lineNumber":57,"author":{"gitId":"todoge"},"content":"        case DONE:"},{"lineNumber":58,"author":{"gitId":"todoge"},"content":"            return \"[\\u2713] \" + description;"},{"lineNumber":59,"author":{"gitId":"todoge"},"content":"        case UNDONE:"},{"lineNumber":60,"author":{"gitId":"todoge"},"content":"            return \"[\\u2718] \" + description;"},{"lineNumber":61,"author":{"gitId":"todoge"},"content":"        default:"},{"lineNumber":62,"author":{"gitId":"todoge"},"content":"            return description;"},{"lineNumber":63,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":65}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":""},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":""},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":""},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":""},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"     * Clears the task list."},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"    public void clear() {"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"        taskList.clear();"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":""},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"     * Returns the size of task list."},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"     * @return int size of task list."},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"    public int size() {"},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"        return taskList.size();"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"todoge"},"content":""},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"     * Adds all items in a given list to the task list."},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"     * @param list list of objects to be added to the task list."},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"     * @return boolean true if added successfully."},{"lineNumber":33,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"    public boolean addAll(List\u003cTask\u003e list) {"},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"        return taskList.addAll(list);"},{"lineNumber":36,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"todoge"},"content":""},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"     * Add a task to the task list."},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"     * @param task task to be added."},{"lineNumber":42,"author":{"gitId":"todoge"},"content":"     * @return boolean true if added successfully."},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":"    public boolean add(Task task) {"},{"lineNumber":45,"author":{"gitId":"todoge"},"content":"        return taskList.add(task);"},{"lineNumber":46,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"todoge"},"content":""},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"todoge"},"content":"     * Get an item in the task list in the specified position."},{"lineNumber":50,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"     * @param index index of item."},{"lineNumber":52,"author":{"gitId":"todoge"},"content":"     * @return task task in the given index."},{"lineNumber":53,"author":{"gitId":"todoge"},"content":"     * @see Task"},{"lineNumber":54,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"todoge"},"content":"    public Task get(int index) {"},{"lineNumber":56,"author":{"gitId":"todoge"},"content":"        return taskList.get(index);"},{"lineNumber":57,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"todoge"},"content":""},{"lineNumber":59,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"todoge"},"content":"     * Deletes a task in the given index."},{"lineNumber":61,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"todoge"},"content":"     * @param positions positions of the tasks to be deleted."},{"lineNumber":63,"author":{"gitId":"todoge"},"content":"     * @return TaskList of deleted tasks"},{"lineNumber":64,"author":{"gitId":"todoge"},"content":"     * @see Task"},{"lineNumber":65,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"todoge"},"content":"    public TaskList delete(Integer ... positions) {"},{"lineNumber":67,"author":{"gitId":"todoge"},"content":"        TaskList deleted \u003d new TaskList();"},{"lineNumber":68,"author":{"gitId":"todoge"},"content":"        Arrays.sort(positions, Collections.reverseOrder());"},{"lineNumber":69,"author":{"gitId":"todoge"},"content":"        for (int pos : positions) {"},{"lineNumber":70,"author":{"gitId":"todoge"},"content":"            deleted.add(taskList.get(pos));"},{"lineNumber":71,"author":{"gitId":"todoge"},"content":"            taskList.remove(pos);"},{"lineNumber":72,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"todoge"},"content":"        return deleted;"},{"lineNumber":74,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":75}},{"path":"src/main/java/tasks/TaskStates.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":""},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":" * State of the tasks"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":" */"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"public enum TaskStates {"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"    DONE, UNDONE"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":8}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":""},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":""},{"lineNumber":5,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"     * Returns a ToDo task"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"     * @param description description of todo."},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"     * @see Task"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"    public ToDo(String description) {"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":""},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":19}},{"path":"src/main/java/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":" * Handles all the UI design of the replies generated by King."},{"lineNumber":3,"author":{"gitId":"todoge"},"content":" * The text decorations are all handled by the UI."},{"lineNumber":4,"author":{"gitId":"todoge"},"content":" * Long texts are automatically wrapped by the UI and texts"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":" * are wrapped with a buffer to maintain the words in the text."},{"lineNumber":6,"author":{"gitId":"todoge"},"content":" *"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":" * @author jun siang"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":" */"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"package ui;"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":""},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"import java.util.stream.IntStream;"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":""},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"import tasks.TaskList;"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":""},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"public class UI {"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":""},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"    // maximum number of characters across a screen"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"    public static final int CHAT_WIDTH \u003d 50;"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":""},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"    // Buffer to wrap text to the next line if the text if too long."},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"    // This buffer helps to keep words intact while wrapping the text"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"    // to the next line."},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"    public static final int BUFFER \u003d CHAT_WIDTH - 6;"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":""},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"     * Returns the Welcome message and logo."},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"     * @return String welcome message."},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"    public static String welcome() {"},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"        String logo \u003d \" ___  __.__\\n\""},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"                + \"|    |/ _|__|  __       ___\\n\""},{"lineNumber":33,"author":{"gitId":"todoge"},"content":"                + \"|      \u003c |  |/ _  \\\\   /  __ \\\\\\n\""},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"                + \"|    |   \\\\|  | |   \\\\ \\\\/  /_/   \\\\\\n\""},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"                + \"|___|___\\\\__|   |  /\\\\__  /  /\\n\""},{"lineNumber":36,"author":{"gitId":"todoge"},"content":"                + \"                   \\\\//_____/\";"},{"lineNumber":37,"author":{"gitId":"todoge"},"content":""},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"        String message \u003d \"Hello! I\u0027m King!\\nWhat can I do for you?\";"},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"        return wrapBorderAroundText(\"#\", \"\", \"#\", \"    \", 20, logo, true)"},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"                + \"\\n\" + message;"},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"todoge"},"content":""},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":"     * Returns a chat box for KING wrapped around a given text."},{"lineNumber":45,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"todoge"},"content":"     * @param chatContent text string."},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"     * @return String chat box around text."},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"     * @see king.King"},{"lineNumber":49,"author":{"gitId":"todoge"},"content":"     * @deprecated no longer in use after moving UI to javafx."},{"lineNumber":50,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"    @Deprecated"},{"lineNumber":52,"author":{"gitId":"todoge"},"content":"    public static String kingChatBox(String chatContent) {"},{"lineNumber":53,"author":{"gitId":"todoge"},"content":"        return \"\\t\" + printLine(\"King says\", 5, \"-\", CHAT_WIDTH) + \"\\n\\t\""},{"lineNumber":54,"author":{"gitId":"todoge"},"content":"                + formatStringIfLong(chatContent, \"\\n\") + \"\\n\""},{"lineNumber":55,"author":{"gitId":"todoge"},"content":"                + \"\\t\" + printLine(\"\", null, \"-\", CHAT_WIDTH) + \"\\n\";"},{"lineNumber":56,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"todoge"},"content":""},{"lineNumber":58,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"todoge"},"content":"     * Returns an empty chat box."},{"lineNumber":60,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"todoge"},"content":"     * @param chatContent text string."},{"lineNumber":62,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"todoge"},"content":"    public static String emptyChatBox(String chatContent) {"},{"lineNumber":64,"author":{"gitId":"todoge"},"content":"        return chatContent;"},{"lineNumber":65,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"todoge"},"content":""},{"lineNumber":67,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"todoge"},"content":"     * Returns an error box wrapped around an error message."},{"lineNumber":69,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"todoge"},"content":"     * @param error error message."},{"lineNumber":71,"author":{"gitId":"todoge"},"content":"     * @return String error box around error message."},{"lineNumber":72,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"todoge"},"content":"    public static String errorBox(String error) {"},{"lineNumber":74,"author":{"gitId":"todoge"},"content":"        return printLine(\" Error Encountered \", 4, \"-\", CHAT_WIDTH) + \"\\n\""},{"lineNumber":75,"author":{"gitId":"todoge"},"content":"                + formatStringIfLong(error, \"\\n\");"},{"lineNumber":76,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"todoge"},"content":""},{"lineNumber":78,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"todoge"},"content":"     * Returns a chat box wrap around a message when the user successfully adds an item."},{"lineNumber":80,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"todoge"},"content":"     * @param chatContent text String."},{"lineNumber":82,"author":{"gitId":"todoge"},"content":"     * @param numOfItems  number of items in the new TaskList."},{"lineNumber":83,"author":{"gitId":"todoge"},"content":"     * @return String chat box after adding item."},{"lineNumber":84,"author":{"gitId":"todoge"},"content":"     * @see TaskList"},{"lineNumber":85,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"todoge"},"content":"    public static String addItemChatBox(String chatContent, int numOfItems) {"},{"lineNumber":87,"author":{"gitId":"todoge"},"content":"        return emptyChatBox(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":88,"author":{"gitId":"todoge"},"content":"                + \"\\t\" + chatContent"},{"lineNumber":89,"author":{"gitId":"todoge"},"content":"                + \"\\nNow you have \" + numOfItems + \" tasks in the list.\");"},{"lineNumber":90,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"todoge"},"content":""},{"lineNumber":92,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"todoge"},"content":"     * Returns a chat box wrap around a message when the user successfully deletes tasks."},{"lineNumber":94,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"todoge"},"content":"     * @param itemsDeletedList taskList of the items deleted."},{"lineNumber":96,"author":{"gitId":"todoge"},"content":"     * @param numOfItemsLeft   number of items left in the new TaskList."},{"lineNumber":97,"author":{"gitId":"todoge"},"content":"     * @return String chat box around text."},{"lineNumber":98,"author":{"gitId":"todoge"},"content":"     * @see TaskList"},{"lineNumber":99,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"todoge"},"content":"    public static String deleteItemChatBox(int numOfItemsLeft, TaskList itemsDeletedList) {"},{"lineNumber":101,"author":{"gitId":"todoge"},"content":"        String formattedText \u003d \"\";"},{"lineNumber":102,"author":{"gitId":"todoge"},"content":"        for (int i \u003d 0; i \u003c itemsDeletedList.size(); i++) {"},{"lineNumber":103,"author":{"gitId":"todoge"},"content":"            String item \u003d itemsDeletedList.get(i).toString();"},{"lineNumber":104,"author":{"gitId":"todoge"},"content":"            formattedText +\u003d (\"\\t\" + item + \"\\n\");"},{"lineNumber":105,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"todoge"},"content":"        return emptyChatBox(\"I have deleted the following item:\\n\""},{"lineNumber":107,"author":{"gitId":"todoge"},"content":"                + formattedText"},{"lineNumber":108,"author":{"gitId":"todoge"},"content":"                + \"You got \" + numOfItemsLeft + \" task(s) left.\");"},{"lineNumber":109,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"todoge"},"content":""},{"lineNumber":111,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"todoge"},"content":"     * Returns a chat box wrap around a message when the user sets an item as DONE."},{"lineNumber":113,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"todoge"},"content":"     * @param chatContent text String."},{"lineNumber":115,"author":{"gitId":"todoge"},"content":"     * @return String chat box around text."},{"lineNumber":116,"author":{"gitId":"todoge"},"content":"     * @see tasks.Task"},{"lineNumber":117,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"todoge"},"content":"    public static String doneChatBox(String chatContent) {"},{"lineNumber":119,"author":{"gitId":"todoge"},"content":"        return emptyChatBox(\"Nice! I\u0027ve marked this task as done:\\n\\t\""},{"lineNumber":120,"author":{"gitId":"todoge"},"content":"                + chatContent"},{"lineNumber":121,"author":{"gitId":"todoge"},"content":"        );"},{"lineNumber":122,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"todoge"},"content":""},{"lineNumber":124,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"todoge"},"content":"     * Returns a formatted chat string containing the items in the TaskList."},{"lineNumber":126,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"todoge"},"content":"     * @param taskList the task list to be printed."},{"lineNumber":128,"author":{"gitId":"todoge"},"content":"     * @return String formatted String with items in the taskList."},{"lineNumber":129,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"todoge"},"content":"    public static String showTaskList(TaskList taskList) {"},{"lineNumber":131,"author":{"gitId":"todoge"},"content":""},{"lineNumber":132,"author":{"gitId":"todoge"},"content":"        assert taskList !\u003d null : \"showTaskList cannot be null!\";"},{"lineNumber":133,"author":{"gitId":"todoge"},"content":""},{"lineNumber":134,"author":{"gitId":"todoge"},"content":"        StringBuilder formatted \u003d new StringBuilder();"},{"lineNumber":135,"author":{"gitId":"todoge"},"content":"        int len \u003d taskList.size();"},{"lineNumber":136,"author":{"gitId":"todoge"},"content":"        IntStream"},{"lineNumber":137,"author":{"gitId":"todoge"},"content":"                .range(0, len)"},{"lineNumber":138,"author":{"gitId":"todoge"},"content":"                .forEach(number -\u003e formatted.append(\"\\n\\t  \" + (number + 1) + \". \" + taskList.get(number).toString()));"},{"lineNumber":139,"author":{"gitId":"todoge"},"content":"        return emptyChatBox(\"There are \" + len + \" items in your list:\""},{"lineNumber":140,"author":{"gitId":"todoge"},"content":"                + formatted.toString());"},{"lineNumber":141,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"todoge"},"content":""},{"lineNumber":143,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"todoge"},"content":"     * Returns a formatted string containing items found in the list."},{"lineNumber":145,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"todoge"},"content":"     * @param taskList taskList of the items found."},{"lineNumber":147,"author":{"gitId":"todoge"},"content":"     * @return String formatted printable list"},{"lineNumber":148,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"todoge"},"content":"    public static String showFoundItems(TaskList taskList) {"},{"lineNumber":150,"author":{"gitId":"todoge"},"content":""},{"lineNumber":151,"author":{"gitId":"todoge"},"content":"        assert taskList !\u003d null : \"taskList cannot be null!\";"},{"lineNumber":152,"author":{"gitId":"todoge"},"content":""},{"lineNumber":153,"author":{"gitId":"todoge"},"content":"        StringBuilder formatted \u003d new StringBuilder();"},{"lineNumber":154,"author":{"gitId":"todoge"},"content":"        int len \u003d taskList.size();"},{"lineNumber":155,"author":{"gitId":"todoge"},"content":"        IntStream"},{"lineNumber":156,"author":{"gitId":"todoge"},"content":"                .range(0, len)"},{"lineNumber":157,"author":{"gitId":"todoge"},"content":"                .forEach(number -\u003e formatted.append(\"\\n\\t  \" + (number + 1) + \". \" + taskList.get(number).toString()));"},{"lineNumber":158,"author":{"gitId":"todoge"},"content":"        return emptyChatBox(\"I found \" + len + \" items with the given keyword(s):\""},{"lineNumber":159,"author":{"gitId":"todoge"},"content":"                + formatted.toString());"},{"lineNumber":160,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"todoge"},"content":""},{"lineNumber":162,"author":{"gitId":"todoge"},"content":"    // folds a string if it is too long to fit into the chat box"},{"lineNumber":163,"author":{"gitId":"todoge"},"content":"    private static String formatStringIfLong(String unformattedString, String delimiter) {"},{"lineNumber":164,"author":{"gitId":"todoge"},"content":"        int len \u003d unformattedString.length();"},{"lineNumber":165,"author":{"gitId":"todoge"},"content":"        if (len \u003e CHAT_WIDTH) {"},{"lineNumber":166,"author":{"gitId":"todoge"},"content":"            StringBuilder longString \u003d new StringBuilder(unformattedString);"},{"lineNumber":167,"author":{"gitId":"todoge"},"content":"            int processedLength \u003d 0;"},{"lineNumber":168,"author":{"gitId":"todoge"},"content":"            int pos \u003d 0;"},{"lineNumber":169,"author":{"gitId":"todoge"},"content":"            while (pos !\u003d longString.length()) {"},{"lineNumber":170,"author":{"gitId":"todoge"},"content":"                char c \u003d longString.charAt(pos);"},{"lineNumber":171,"author":{"gitId":"todoge"},"content":"                if (c \u003d\u003d \u0027\\n\u0027) {"},{"lineNumber":172,"author":{"gitId":"todoge"},"content":"                    processedLength \u003d 0;"},{"lineNumber":173,"author":{"gitId":"todoge"},"content":"                    pos++;"},{"lineNumber":174,"author":{"gitId":"todoge"},"content":"                } else if (c \u003d\u003d \u0027\\t\u0027) {"},{"lineNumber":175,"author":{"gitId":"todoge"},"content":"                    pos++;"},{"lineNumber":176,"author":{"gitId":"todoge"},"content":"                } else if ((processedLength \u003e\u003d BUFFER \u0026\u0026 c \u003d\u003d \u0027 \u0027) || processedLength \u003d\u003d CHAT_WIDTH) {"},{"lineNumber":177,"author":{"gitId":"todoge"},"content":"                    longString.insert(pos, delimiter);"},{"lineNumber":178,"author":{"gitId":"todoge"},"content":"                    pos +\u003d 4;"},{"lineNumber":179,"author":{"gitId":"todoge"},"content":"                    processedLength \u003d 1;"},{"lineNumber":180,"author":{"gitId":"todoge"},"content":"                } else if (processedLength \u003d\u003d 0 \u0026\u0026 c \u003d\u003d \u0027 \u0027) {"},{"lineNumber":181,"author":{"gitId":"todoge"},"content":"                    longString.deleteCharAt(pos);"},{"lineNumber":182,"author":{"gitId":"todoge"},"content":"                } else {"},{"lineNumber":183,"author":{"gitId":"todoge"},"content":"                    pos++;"},{"lineNumber":184,"author":{"gitId":"todoge"},"content":"                    processedLength++;"},{"lineNumber":185,"author":{"gitId":"todoge"},"content":"                }"},{"lineNumber":186,"author":{"gitId":"todoge"},"content":"            }"},{"lineNumber":187,"author":{"gitId":"todoge"},"content":"            return longString.toString();"},{"lineNumber":188,"author":{"gitId":"todoge"},"content":"        } else {"},{"lineNumber":189,"author":{"gitId":"todoge"},"content":"            return unformattedString;"},{"lineNumber":190,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"todoge"},"content":""},{"lineNumber":193,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":194,"author":{"gitId":"todoge"},"content":"     * Prints a line with the option to include a text in the middle"},{"lineNumber":195,"author":{"gitId":"todoge"},"content":"     * of the line."},{"lineNumber":196,"author":{"gitId":"todoge"},"content":"     * @param text"},{"lineNumber":197,"author":{"gitId":"todoge"},"content":"     * @param posOfText"},{"lineNumber":198,"author":{"gitId":"todoge"},"content":"     * @param symbol"},{"lineNumber":199,"author":{"gitId":"todoge"},"content":"     * @param length"},{"lineNumber":200,"author":{"gitId":"todoge"},"content":"     * @return"},{"lineNumber":201,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":202,"author":{"gitId":"todoge"},"content":"    private static String printLine(String text, Integer posOfText, String symbol, Integer length) {"},{"lineNumber":203,"author":{"gitId":"todoge"},"content":"        StringBuilder result \u003d new StringBuilder();"},{"lineNumber":204,"author":{"gitId":"todoge"},"content":"        if (text \u003d\u003d \"\") {"},{"lineNumber":205,"author":{"gitId":"todoge"},"content":"            for (int i \u003d 0; i \u003c length; i++) {"},{"lineNumber":206,"author":{"gitId":"todoge"},"content":"                result.append(symbol);"},{"lineNumber":207,"author":{"gitId":"todoge"},"content":"            }"},{"lineNumber":208,"author":{"gitId":"todoge"},"content":"        } else {"},{"lineNumber":209,"author":{"gitId":"todoge"},"content":"            for (int i \u003d 0; i \u003c posOfText; i++) {"},{"lineNumber":210,"author":{"gitId":"todoge"},"content":"                result.append(symbol);"},{"lineNumber":211,"author":{"gitId":"todoge"},"content":"            }"},{"lineNumber":212,"author":{"gitId":"todoge"},"content":"            result.append(text);"},{"lineNumber":213,"author":{"gitId":"todoge"},"content":"            while (result.length() \u003c length) {"},{"lineNumber":214,"author":{"gitId":"todoge"},"content":"                result.append(symbol);"},{"lineNumber":215,"author":{"gitId":"todoge"},"content":"            }"},{"lineNumber":216,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"todoge"},"content":"        return result.toString();"},{"lineNumber":218,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"todoge"},"content":""},{"lineNumber":220,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":221,"author":{"gitId":"todoge"},"content":"     * wrap border around text"},{"lineNumber":222,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":223,"author":{"gitId":"todoge"},"content":"     * @param top"},{"lineNumber":224,"author":{"gitId":"todoge"},"content":"     * @param right"},{"lineNumber":225,"author":{"gitId":"todoge"},"content":"     * @param bot"},{"lineNumber":226,"author":{"gitId":"todoge"},"content":"     * @param left"},{"lineNumber":227,"author":{"gitId":"todoge"},"content":"     * @param size"},{"lineNumber":228,"author":{"gitId":"todoge"},"content":"     * @param text"},{"lineNumber":229,"author":{"gitId":"todoge"},"content":"     * @param gotSideBorder"},{"lineNumber":230,"author":{"gitId":"todoge"},"content":"     * @return"},{"lineNumber":231,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":232,"author":{"gitId":"todoge"},"content":"    private static String wrapBorderAroundText(String top, String right, String bot, String left,"},{"lineNumber":233,"author":{"gitId":"todoge"},"content":"                                               int size, String text, boolean gotSideBorder) {"},{"lineNumber":234,"author":{"gitId":"todoge"},"content":"        String topBorder \u003d printLine(\"\", null, top, size);"},{"lineNumber":235,"author":{"gitId":"todoge"},"content":"        String botBorder \u003d printLine(\"\", null, bot, size);"},{"lineNumber":236,"author":{"gitId":"todoge"},"content":"        StringBuilder input \u003d new StringBuilder(text);"},{"lineNumber":237,"author":{"gitId":"todoge"},"content":"        StringBuilder output \u003d new StringBuilder();"},{"lineNumber":238,"author":{"gitId":"todoge"},"content":"        output.append(topBorder);"},{"lineNumber":239,"author":{"gitId":"todoge"},"content":"        output.append(\"\\n\");"},{"lineNumber":240,"author":{"gitId":"todoge"},"content":"        if (gotSideBorder) {"},{"lineNumber":241,"author":{"gitId":"todoge"},"content":"            int processedLength \u003d 0;"},{"lineNumber":242,"author":{"gitId":"todoge"},"content":"            int linePos \u003d 0;"},{"lineNumber":243,"author":{"gitId":"todoge"},"content":"            while (processedLength \u003c input.length()) {"},{"lineNumber":244,"author":{"gitId":"todoge"},"content":"                if (input.charAt(processedLength) \u003d\u003d \u0027\\n\u0027) {"},{"lineNumber":245,"author":{"gitId":"todoge"},"content":"                    while (linePos \u003c size - 1) {"},{"lineNumber":246,"author":{"gitId":"todoge"},"content":"                        output.append(\" \");"},{"lineNumber":247,"author":{"gitId":"todoge"},"content":"                        linePos++;"},{"lineNumber":248,"author":{"gitId":"todoge"},"content":"                    }"},{"lineNumber":249,"author":{"gitId":"todoge"},"content":"                    output.append(right + \"\\n\");"},{"lineNumber":250,"author":{"gitId":"todoge"},"content":"                    linePos \u003d 0;"},{"lineNumber":251,"author":{"gitId":"todoge"},"content":"                } else {"},{"lineNumber":252,"author":{"gitId":"todoge"},"content":"                    if (linePos \u003d\u003d 0) {"},{"lineNumber":253,"author":{"gitId":"todoge"},"content":"                        output.append(left);"},{"lineNumber":254,"author":{"gitId":"todoge"},"content":"                    }"},{"lineNumber":255,"author":{"gitId":"todoge"},"content":"                    output.append(input.charAt(processedLength));"},{"lineNumber":256,"author":{"gitId":"todoge"},"content":"                    linePos++;"},{"lineNumber":257,"author":{"gitId":"todoge"},"content":"                }"},{"lineNumber":258,"author":{"gitId":"todoge"},"content":"                processedLength++;"},{"lineNumber":259,"author":{"gitId":"todoge"},"content":"            }"},{"lineNumber":260,"author":{"gitId":"todoge"},"content":"        } else {"},{"lineNumber":261,"author":{"gitId":"todoge"},"content":"            output.append(text);"},{"lineNumber":262,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":263,"author":{"gitId":"todoge"},"content":"        output.append(\"\\n\" + botBorder);"},{"lineNumber":264,"author":{"gitId":"todoge"},"content":"        return output.toString();"},{"lineNumber":265,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":266,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":266}},{"path":"src/main/java/ui/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":" * An example of a custom control using FXML."},{"lineNumber":3,"author":{"gitId":"todoge"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":" * containing text from the speaker."},{"lineNumber":5,"author":{"gitId":"todoge"},"content":" */"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"package ui.controllers;"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":""},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"import java.util.Collections;"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":""},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"import javafx.fxml.FXML;"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"import javafx.geometry.Pos;"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"import javafx.scene.Node;"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"import javafx.scene.control.Label;"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"import javafx.scene.image.Image;"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"import javafx.scene.paint.ImagePattern;"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":23,"author":{"gitId":"todoge"},"content":""},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"public class DialogBox extends HBox {"},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"    private Label dialog;"},{"lineNumber":27,"author":{"gitId":"todoge"},"content":""},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"    private Circle imageCircle;"},{"lineNumber":30,"author":{"gitId":"todoge"},"content":""},{"lineNumber":31,"author":{"gitId":"todoge"},"content":""},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":33,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":36,"author":{"gitId":"todoge"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":37,"author":{"gitId":"todoge"},"content":"            fxmlLoader.load();"},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"        imageCircle.setStroke(Color.STEELBLUE);"},{"lineNumber":42,"author":{"gitId":"todoge"},"content":"        imageCircle.setFill(new ImagePattern(img));"},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"        dialog.setText(text);"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"todoge"},"content":""},{"lineNumber":46,"author":{"gitId":"todoge"},"content":"    public static DialogBox getKingDialog(String text, Image img) {"},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"        return new DialogBox(text, img);"},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"todoge"},"content":""},{"lineNumber":50,"author":{"gitId":"todoge"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"        DialogBox errorDialog \u003d new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"todoge"},"content":"        errorDialog.dialog.setStyle(\"-fx-background-color:#f786ce;\");"},{"lineNumber":53,"author":{"gitId":"todoge"},"content":"        return errorDialog;"},{"lineNumber":54,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"todoge"},"content":""},{"lineNumber":56,"author":{"gitId":"todoge"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"todoge"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"todoge"},"content":"        db.dialog.setStyle(\"-fx-background-color:#d9d9d9;\");"},{"lineNumber":59,"author":{"gitId":"todoge"},"content":"        db.flip();"},{"lineNumber":60,"author":{"gitId":"todoge"},"content":"        return db;"},{"lineNumber":61,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"todoge"},"content":""},{"lineNumber":63,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"todoge"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":65,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"todoge"},"content":"    private void flip() {"},{"lineNumber":67,"author":{"gitId":"todoge"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":68,"author":{"gitId":"todoge"},"content":"        Collections.reverse(tmp);"},{"lineNumber":69,"author":{"gitId":"todoge"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":70,"author":{"gitId":"todoge"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":71,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":72}},{"path":"src/main/java/ui/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":3,"author":{"gitId":"todoge"},"content":" * */"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":""},{"lineNumber":5,"author":{"gitId":"todoge"},"content":"package ui.controllers;"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":""},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"import javafx.scene.control.Button;"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"import king.King;"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"import ui.UI;"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":""},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"todoge"},"content":""},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"    private King king;"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":""},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/gunter.png\"));"},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"    private Image kingImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/king.jpg\"));"},{"lineNumber":32,"author":{"gitId":"todoge"},"content":""},{"lineNumber":33,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"     * initialise the MainWindow controller"},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"todoge"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"todoge"},"content":"    public void initialize() {"},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"        dialogContainer.getChildren().add(DialogBox.getKingDialog(UI.welcome(), kingImage));"},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"todoge"},"content":""},{"lineNumber":42,"author":{"gitId":"todoge"},"content":"    public void setKing(King king) {"},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"        this.king \u003d king;"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"todoge"},"content":""},{"lineNumber":46,"author":{"gitId":"todoge"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"     * Takes the user input and returns a"},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"     * dialog. Then take the input and parse it through King,"},{"lineNumber":49,"author":{"gitId":"todoge"},"content":"     * taking the result and return a king dialog."},{"lineNumber":50,"author":{"gitId":"todoge"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"todoge"},"content":"     * @see UI"},{"lineNumber":52,"author":{"gitId":"todoge"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"todoge"},"content":"    @FXML"},{"lineNumber":54,"author":{"gitId":"todoge"},"content":"    private void handleUserInput() {"},{"lineNumber":55,"author":{"gitId":"todoge"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":56,"author":{"gitId":"todoge"},"content":"        String response \u003d king.getResponse(input);"},{"lineNumber":57,"author":{"gitId":"todoge"},"content":"        DialogBox kingDialogBox;"},{"lineNumber":58,"author":{"gitId":"todoge"},"content":"        DialogBox userDialogBox;"},{"lineNumber":59,"author":{"gitId":"todoge"},"content":"        if (response.contains(UI.errorBox(\"\"))) {"},{"lineNumber":60,"author":{"gitId":"todoge"},"content":"            kingDialogBox \u003d DialogBox.getErrorDialog(response, kingImage);"},{"lineNumber":61,"author":{"gitId":"todoge"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"todoge"},"content":"            kingDialogBox \u003d DialogBox.getKingDialog(response, kingImage);"},{"lineNumber":63,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"todoge"},"content":"        userDialogBox \u003d DialogBox.getUserDialog(input, userImage);"},{"lineNumber":65,"author":{"gitId":"todoge"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":66,"author":{"gitId":"todoge"},"content":"                userDialogBox,"},{"lineNumber":67,"author":{"gitId":"todoge"},"content":"                kingDialogBox"},{"lineNumber":68,"author":{"gitId":"todoge"},"content":"        );"},{"lineNumber":69,"author":{"gitId":"todoge"},"content":"        userInput.clear();"},{"lineNumber":70,"author":{"gitId":"todoge"},"content":"        if (response.equals(king.getResponse(\"bye\"))) {"},{"lineNumber":71,"author":{"gitId":"todoge"},"content":"            Platform.exit();"},{"lineNumber":72,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":74}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":""},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"\u003c?import javafx.geometry.*?\u003e"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"\u003c?import javafx.scene.shape.*?\u003e"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":""},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" minWidth\u003d\"450.0\" stylesheets\u003d\"@../css/main.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"        \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"chat-box\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"      \u003cCircle fx:id\u003d\"imageCircle\" fill\u003d\"WHITE\" radius\u003d\"80.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"4.0\" styleClass\u003d\"border-lg-black\" /\u003e"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"    \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"    \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"    \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"todoge":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":""},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":"\u003c?import javafx.scene.text.*?\u003e"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":""},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"\u003cAnchorPane minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.controllers.MainWindow\"\u003e"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"    \u003cchildren\u003e"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"      \u003cAnchorPane layoutY\u003d\"557.4000244140625\" maxWidth\u003d\"40.0\" prefHeight\u003d\"40.0\" styleClass\u003d\"bg-cool-blue\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"         \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"              \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"424.0\" promptText\u003d\"Type a command\" styleClass\u003d\"border-md-black\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"              \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"0.5999755859375\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" styleClass\u003d\"btn-submit\" text\u003d\"Send!\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"               \u003cfont\u003e"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"               \u003c/font\u003e\u003c/Button\u003e"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"         \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"      \u003c/AnchorPane\u003e"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"560.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"40.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"            \u003ccontent\u003e"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"560.0\" prefWidth\u003d\"500.0\" styleClass\u003d\"bg-cool-blue\" /\u003e"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"            \u003c/content\u003e"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"    \u003c/children\u003e"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"todoge":24}},{"path":"src/test/data/test/parser/parserTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"E@0@test@2pm"}],"authorContributionMap":{"todoge":1}},{"path":"src/test/data/test/storage/loadTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"T@1@test1"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":"T@1@test2"},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"T@1@test3"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":"T@1@test4"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":"T@1@test5"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"T@1@test6"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"T@1@test7"}],"authorContributionMap":{"todoge":7}},{"path":"src/test/java/king/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"package king;"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":""},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":""},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":""},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"import parser.Parser;"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"import storage.Storage;"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"import tasks.Event;"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"import tasks.TaskList;"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"import tasks.ToDo;"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"import ui.UI;"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":""},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"public class ParserTest {"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":""},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"    private TaskList tasklist \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":""},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"todoge"},"content":"    public void parseToDoTest() {"},{"lineNumber":21,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"todoge"},"content":"            Storage storage \u003d new Storage(\"data/test/parser/parserTest.txt\");"},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"            String testCommand \u003d \"todo read book\";"},{"lineNumber":24,"author":{"gitId":"todoge"},"content":"            Parser parser \u003d new Parser(storage, tasklist);"},{"lineNumber":25,"author":{"gitId":"todoge"},"content":"            String actual \u003d parser.parse(testCommand);"},{"lineNumber":26,"author":{"gitId":"todoge"},"content":"            ToDo todo \u003d new ToDo(\"read book\");"},{"lineNumber":27,"author":{"gitId":"todoge"},"content":"            String expected \u003d UI.addItemChatBox(todo.toString(), tasklist.size());"},{"lineNumber":28,"author":{"gitId":"todoge"},"content":"            assertEquals(actual, expected);"},{"lineNumber":29,"author":{"gitId":"todoge"},"content":"        } catch (Exception e) {"},{"lineNumber":30,"author":{"gitId":"todoge"},"content":"            fail();"},{"lineNumber":31,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"todoge"},"content":""},{"lineNumber":34,"author":{"gitId":"todoge"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"todoge"},"content":"    public void parseEventTest() {"},{"lineNumber":36,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"todoge"},"content":"            Storage storage \u003d new Storage(\"data/test/parser/parserTest.txt\");"},{"lineNumber":38,"author":{"gitId":"todoge"},"content":"            String testCommand \u003d \"event test /at 2pm\";"},{"lineNumber":39,"author":{"gitId":"todoge"},"content":"            Parser parser \u003d new Parser(storage, tasklist);"},{"lineNumber":40,"author":{"gitId":"todoge"},"content":"            String actual \u003d parser.parse(testCommand);"},{"lineNumber":41,"author":{"gitId":"todoge"},"content":"            Event testEvent \u003d new Event(\"test\", \"2pm\");"},{"lineNumber":42,"author":{"gitId":"todoge"},"content":"            String expected \u003d UI.addItemChatBox(testEvent.toString(), tasklist.size());"},{"lineNumber":43,"author":{"gitId":"todoge"},"content":"            assertEquals(actual, expected);"},{"lineNumber":44,"author":{"gitId":"todoge"},"content":"        } catch (Exception e) {"},{"lineNumber":45,"author":{"gitId":"todoge"},"content":"            fail();"},{"lineNumber":46,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":48}},{"path":"src/test/java/king/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"package king;"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":""},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":""},{"lineNumber":5,"author":{"gitId":"todoge"},"content":"import storage.Storage;"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"import storage.StorageException;"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":""},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"public class StorageTest {"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":""},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"    public void invalidFilePath() {"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"        final String invalidFilePath \u003d \"notAPath\";"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"            Storage testStorage \u003d new Storage(invalidFilePath);"},{"lineNumber":15,"author":{"gitId":"todoge"},"content":"        } catch (StorageException e) {"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"            System.out.println(e.message);"},{"lineNumber":17,"author":{"gitId":"todoge"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"todoge"},"content":"}"}],"authorContributionMap":{"todoge":19}},{"path":"text-ui-test/data/king.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"D@1@return book@2020-03-02T14:00"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":"E@0@project meeting@Mon 2-4pm"}],"authorContributionMap":{"todoge":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"todoge"},"content":"clear list"},{"lineNumber":2,"author":{"gitId":"todoge"},"content":"blah"},{"lineNumber":3,"author":{"gitId":"todoge"},"content":"todo read book"},{"lineNumber":4,"author":{"gitId":"todoge"},"content":"deadline return book /by 2/03/2020 1400"},{"lineNumber":5,"author":{"gitId":"todoge"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"todoge"},"content":"delete 1"},{"lineNumber":7,"author":{"gitId":"todoge"},"content":"todo"},{"lineNumber":8,"author":{"gitId":"todoge"},"content":"event"},{"lineNumber":9,"author":{"gitId":"todoge"},"content":"deadline"},{"lineNumber":10,"author":{"gitId":"todoge"},"content":"delete"},{"lineNumber":11,"author":{"gitId":"todoge"},"content":"list"},{"lineNumber":12,"author":{"gitId":"todoge"},"content":"done 1"},{"lineNumber":13,"author":{"gitId":"todoge"},"content":"done 10"},{"lineNumber":14,"author":{"gitId":"todoge"},"content":"bye"}],"authorContributionMap":{"todoge":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"todoge"},"content":"C:\\Program\\ Files\\Java\\jdk-11.0.5\\bin\\java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"todoge":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"todoge"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"todoge"},"content":"/c/Program\\ Files/Java/jdk-11.0.5/bin/java -classpath ../bin king.King \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"todoge":2,"-":36}}]
