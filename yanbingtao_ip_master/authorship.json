[
  {
    "path": "data/listOfTasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "T | 0 | 123123"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "T | 1 | asdfa"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "E | 0 | asdfasdf  |  24"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "T | 0 | onemoretime"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 4
    }
  },
  {
    "path": "data/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "D | 0 | assd | 2020-08-22T19:00"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 1
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "T | 1 | 123 "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "E | 0 | asd | 2020-08-22T18:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "D | 0 | asd | 2020-08-22T19:20"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 3
    }
  },
  {
    "path": "src/main/java/duke/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    private LocalDateTime deadlineTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public Deadlines(String taskTitle, String deadlineTime, Boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        super(taskTitle, isDone, TaskTypes.DEADLINE);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        this.deadlineTime \u003d LocalDateTime.parse(deadlineTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void loadDeadlineTask(String taskTitle, String deadlineTime, Boolean isDone, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        deadlineTime\u003ddeadlineTime.replace(\u0027T\u0027,\u0027 \u0027);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Deadlines deadline \u003d new Deadlines(taskTitle, deadlineTime, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public String printTime() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return deadlineTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mm a\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return super.toString() + \" (by: \" + printTime() + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return super.writeToFile() + \" | \" + deadlineTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 35
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        ui.logoMsg();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        ui.greetingMsg();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Parser.parseUserInput(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        storage.writeTasks(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 21,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    protected LocalDateTime eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public Events(String taskTitle, String eventTime, Boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        super(taskTitle, isDone, TaskTypes.EVENT);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        this.eventTime \u003d LocalDateTime.parse(eventTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void loadEventTask(String taskTitle, String eventTime, Boolean isDone, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        eventTime\u003deventTime.replace(\u0027T\u0027,\u0027 \u0027);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Events event \u003d new Events(taskTitle, eventTime, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public String printTime() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return eventTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mm a\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return super.toString() + \" (at: \" + printTime() + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return super.writeToFile() + \" | \" + eventTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 34
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void parseUserInput(TaskList tasklist) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d tasklist.getTaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String inputMsg \u003d sc.nextLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        // The program will continue looping if the user didn\u0027t enter \"bye\" to terminate the program"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        while (!inputMsg.equals(\"bye\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            if (inputMsg.equals(\"list\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                Ui.getAllTasksMsg(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            } else if (inputMsg.equals(\"help\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                Ui.helpMsg();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            } else if (inputMsg.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    int index \u003d Integer.parseInt(inputMsg.split(\"done \")[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    TaskList.doneTask(index, tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    // if the user doesn\u0027t type the index after the keyword \"done\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    Warnings.invalidDoneTaskIndex(tasks.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    // if the user doesn\u0027t key in a valid index after keyword \"done\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    Warnings.invalidDoneTaskIndex(tasks.size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            } else if (inputMsg.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                String taskTitle;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    taskTitle \u003d inputMsg.split(\"todo \")[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    TaskList.addNewTodoTask(taskTitle, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    // if the user doesn\u0027t type the the task description after the keyword \"todo\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    Warnings.invalidToDo();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            } else if (inputMsg.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                String taskTitle;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                String deadlineTime;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    taskTitle \u003d inputMsg.split(\"deadline \")[1].split(\" /by \")[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    deadlineTime \u003d inputMsg.split(\"deadline \")[1].split(\" /by \")[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    TaskList.addNewDeadlineTask(taskTitle, deadlineTime, tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    // if the user doesn\u0027t follow the correct format after the keyword \"deadline\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    Warnings.invalidDeadline();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            } else if (inputMsg.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    String taskTitle \u003d inputMsg.split(\"event \")[1].split(\" /at \")[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    String eventTime \u003d inputMsg.split(\"event \")[1].split(\" /at \")[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    TaskList.addNewEventTask(taskTitle, eventTime, tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    // if the user doesn\u0027t follow the correct format after the keyword \"event\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    Warnings.invalidEvent();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            } else if (inputMsg.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    int index \u003d Integer.parseInt(inputMsg.split(\"delete \")[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    TaskList.deleteTask(index, tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    // if the user doesn\u0027t type the index after the keyword \"delete\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    Warnings.invalidDelete(tasks.size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    // if the user doesn\u0027t key in a valid index after keyword \"delete\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    Warnings.invalidDelete(tasks.size());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                // if the user randomly enter any other commands which are not inside the command list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                Warnings.invalidInput();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            // waiting for user to key in the next request"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            inputMsg \u003d sc.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        // say bye to the user"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Ui.byeMsg();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 80
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                FileReader fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                String lineData \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                while (lineData !\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    String[] lineSegment \u003d lineData.split(\" \\\\| \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    boolean isDone \u003d lineSegment[1].equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    switch (lineSegment[0]) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                        case \"T\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                            ToDos.loadTodoTask(lineSegment[2], isDone, tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                        case \"D\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                            Deadlines.loadDeadlineTask(lineSegment[2], lineSegment[3], isDone, tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                        case \"E\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                            Events.loadEventTask(lineSegment[2], lineSegment[3], isDone, tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    lineData \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                bufferedReader.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                fileReader.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            Warnings.invalidFileInput(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public void writeTasks(TaskList tasklist) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d tasklist.getTaskList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            FileWriter fileWriter;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            fileWriter \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                fileWriter.write(task.writeToFile() + \"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            Warnings.invalidFileOutput(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 68
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    protected String taskTitle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    protected TaskTypes taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public Task(String taskTitle, Boolean isDone, TaskTypes taskType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        this.taskTitle \u003d taskTitle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public String getStatusNum() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return \"[\" + this.taskType + \"]\" + \"[\" + getStatus() + \"] \" + taskTitle;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return this.taskType + \" | \" + getStatusNum() + \" | \" + taskTitle;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 34
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void addNewTodoTask(String taskTitle, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        ToDos newTodoTask \u003d new ToDos(taskTitle, false);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        tasks.add(newTodoTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Ui.addTodoTaskMsg(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void addNewDeadlineTask(String taskTitle, String deadlineTime, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Deadlines newDeadline \u003d new Deadlines(taskTitle, deadlineTime, false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Ui.addDeadlineTaskMsg(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void addNewEventTask(String taskTitle, String eventTime, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Events newEvent \u003d new Events(taskTitle, eventTime, false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        tasks.add(newEvent);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Ui.addEventTaskMsg(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void deleteTask(int index, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Task taskToDelete \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        int newSizeOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Ui.deleteTaskMsg(index, newSizeOfTasks, taskToDelete);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void doneTask(int index, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        tasks.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Ui.doneTaskMsg(index, tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 45
    }
  },
  {
    "path": "src/main/java/duke/TaskTypes.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "public enum TaskTypes {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    },"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    },"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 25
    }
  },
  {
    "path": "src/main/java/duke/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public ToDos(String taskTitle, Boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        super(taskTitle, isDone, TaskTypes.TODO);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void loadTodoTask(String taskTitle, Boolean isDone, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        ToDos todoTask \u003d new ToDos(taskTitle, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        tasks.add(todoTask);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        return super.writeToFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 19
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public void logoMsg() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String logo \u003d \" ___       __   _______   ___       ________  \" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \"________  _____ ______   _______      \\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \"|\\\\  \\\\     |\\\\  \\\\|\\\\  ___ \\\\ |\\\\  \\\\     \" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \"|\\\\   ____\\\\|\\\\   __  \\\\|\\\\   _ \\\\  _   \\\\|\\\\  ___ \\\\     \\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \"\\\\ \\\\  \\\\    \\\\ \\\\  \\\\ \\\\   __/|\\\\ \\\\  \\\\    \\\\ \\\\  \\\\___|\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \"\\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\\\\\\\\\__\\\\ \\\\  \\\\ \\\\   __/|    \\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \" \\\\ \\\\  \\\\  __\\\\ \\\\  \\\\ \\\\  \\\\_|/_\\\\ \\\\  \\\\    \\\\ \\\\  \\\\    \" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \"\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\\\\\|__| \\\\  \\\\ \\\\  \\\\_|/__  \\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \"  \\\\ \\\\  \\\\|\\\\__\\\\_\\\\  \\\\ \\\\  \\\\_|\\\\ \\\\ \\\\  \\\\____\\\\ \\\\  \\\\____\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \"\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\    \\\\ \\\\  \\\\ \\\\  \\\\_|\\\\ \\\\ \\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \"   \\\\ \\\\____________\\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\_______\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \"\\\\ \\\\_______\\\\ \\\\__\\\\    \\\\ \\\\__\\\\ \\\\_______\\\\\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \"    \\\\|____________|\\\\|_______|\\\\|_______|\\\\|_______|\\\\|_______\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                \"|\\\\|__|     \\\\|__|\\\\|_______|\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n\\n WELCOME to DukeBT!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public void greetingMsg() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String greetingMsg \u003d \"\\n___________________________________________________________\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n |°‿°|\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Hello! I\u0027m DukeBT.\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n What can I do for you?\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n___________________________________________________________\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(greetingMsg);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void helpMsg() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String commandList \u003d \"**************************************************************\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n ┗( ⊙.⊙ )┛ \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n These are all the commands you may use:\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n     1.list -- show all tasks\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n     2.todo \u003ctask name\u003e -- add a task\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n     3.deadline \u003ctask name\u003e /by \u003ctask deadline\u003e -- add a task with its deadline\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n     4.event \u003cevent name\u003e /at \u003cevent timing\u003e -- add an event with its timing\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n     5.done \u003ctask index\u003e -- mark this task as done\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n     6.delete \u003ctask index\u003e -- mark this task from task list\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n     7.help -- show all commands\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n     8.bye -- exit the chatbot\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n**************************************************************\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(commandList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void byeMsg() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String byeMsg \u003d \"\\n___________________________________________________________\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n |^_^|┛\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Bye. Hope to see you again soon!\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Your task list has been saved.\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n It will be automatically reloaded when you come back!\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n___________________________________________________________\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(byeMsg);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void addDeadlineTaskMsg(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String outputMsg \u003d \"\\n___________________________________________________________\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n (^.^)\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Got it. I\u0027ve added this Deadline task:\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n     \" + tasks.size() + \".\" + tasks.get(tasks.size() - 1)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n___________________________________________________________\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(outputMsg);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void addEventTaskMsg(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String outputMsg \u003d \"\\n___________________________________________________________\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n (^.^)\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Got it. I\u0027ve added this Event task:\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n     \" + tasks.size() + \".\" + tasks.get(tasks.size() - 1)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n___________________________________________________________\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(outputMsg);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void addTodoTaskMsg(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String outputMsg \u003d \"\\n___________________________________________________________\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n (^.^)\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Got it. I\u0027ve added this ToDo task:\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n     \" + tasks.size() + \".\" + tasks.get(tasks.size() - 1)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n___________________________________________________________\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(outputMsg);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void doneTaskMsg(int index, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String outputMsg \u003d \"___________________________________________________________\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n (ﾉﾟ0ﾟ)ﾉ~\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Congratulations from DukeBT! You have done 1 task!\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n The task below has been marked as done:\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n      Task #\" + index + \". \" + tasks.get(index - 1)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n___________________________________________________________\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(outputMsg);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void deleteTaskMsg(int index, int newSizeOfTasks, Task taskToDelete) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String outputMsg \u003d \"___________________________________________________________\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n (ಠ‿↼)\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Noted. This task has been removed from your task list:\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n      Task #\" + index + \". \" + taskToDelete"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Now you have \" + newSizeOfTasks + \" tasks in the list.\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n___________________________________________________________\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(outputMsg);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void getAllTasksMsg(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String outputMsg \u003d \"\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            outputMsg \u003d \"___________________________________________________________\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    + \"\\n (⊙ ‿ ⊙)\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    + \"\\n Task list is empty, please try to add some tasks first.\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    + \"\\n___________________________________________________________\\n\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            outputMsg \u003d \"___________________________________________________________\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    + \"\\n (⊙ ‿ ⊙)\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    + \"\\n You have \" + tasks.size() + \" tasks in total.\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                    + \"\\n Here they are:\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                outputMsg +\u003d \"\\n      \" + (i + 1) + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "            outputMsg +\u003d \"\\n___________________________________________________________\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(outputMsg);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 133
    }
  },
  {
    "path": "src/main/java/duke/Warnings.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "public class Warnings extends Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void invalidDoneTaskIndex(int tasksSize) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String warningMsg \u003d \"################################################################\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n [• ▂ •]What? \""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n I couldn\u0027t find this task, please re-enter a valid task index!\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n And make sure you follow this format - \u0027done \u003cTask_Index\u003e\u0027.\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n You have \" + tasksSize + \" tasks in total.\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n################################################################\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(warningMsg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void invalidToDo() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String warningMsg \u003d \"################################################################\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n [• ▂ •]What? \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n OOPS!!! The description of a todo cannot be empty.\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n And make sure you follow this format - \u0027todo \u003ctask name\u003e\u0027.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n################################################################\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(warningMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void invalidDeadline() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String warningMsg \u003d \"################################################################\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n [• ▂ •]What? \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n OOPS!!! The description or/and deadline of a deadline task cannot be empty.\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n And make sure you follow this format - \u0027deadline \u003ctask name\u003e /by \u003ctask deadline\u003e\u0027.\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n################################################################\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(warningMsg);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void invalidEvent() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String warningMsg \u003d \"################################################################\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n [• ▂ •]What? \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n OOPS!!! The description or/and event timing of a event task cannot be empty.\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n And make sure you follow this format - \u0027event \u003cevent name\u003e /at \u003cevent timing\u003e\u0027.\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n################################################################\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(warningMsg);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void invalidInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String warningMsg \u003d \"################################################################\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n [• ▂ •]What? \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n################################################################\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(warningMsg);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void invalidDelete(int tasksSize) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String warningMsg \u003d \"################################################################\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n [• ▂ •]What? \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n I couldn\u0027t find this task, please re-enter a valid task index!\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n And make sure you follow this format - \u0027delete \u003cTask_Index\u003e\u0027.\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n You have \" + tasksSize + \" tasks in total.\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n################################################################\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(warningMsg);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void invalidFileInput(IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String warningMsg1 \u003d \"################################################################\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n [• ▂ •]What? \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Invalid data inside data/taskList.txt file...\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Details:\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(warningMsg1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.err.println(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String warningMsg2 \u003d \"\\n################################################################\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(warningMsg2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    public static void invalidFileOutput(IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String warningMsg1 \u003d \"################################################################\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n [• ▂ •]What? \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Errors occurred when try to write data into data/taskList.txt file...\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "                + \"\\n Details:\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(warningMsg1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.err.println(e);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        String warningMsg2 \u003d \"\\n################################################################\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        System.out.println(warningMsg2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 88
    }
  },
  {
    "path": "src/test/duke/DeadlinesTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "class DeadlinesTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    void DeadlinePrintTimeTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Deadlines deadline\u003dnew Deadlines(\"deadline1\", \"2020-08-22 17:00\",false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        assertEquals(\"22 Aug 2020 05:00 pm\", deadline.printTime());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    void DeadlineWriteToFileTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Deadlines deadline\u003dnew Deadlines(\"deadline2\", \"2020-08-22 17:00\",false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        assertEquals(\"D | 0 | deadline2 | 2020-08-22T17:00\", deadline.writeToFile());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 21
    }
  },
  {
    "path": "src/test/duke/EventsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "class EventsTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    void EventsPrintTimeTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Events event\u003dnew Events(\"event1\", \"2020-08-22 17:00\",false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        assertEquals(\"22 Aug 2020 05:00 pm\", event.printTime());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    void EventToStringTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Events event\u003dnew Events(\"event2\", \"2020-08-22 17:00\",false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        assertEquals(\"[E][✗] event2 (at: 22 Aug 2020 05:00 pm)\", event.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 21
    }
  },
  {
    "path": "src/test/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    void TaskGetStatusNumTest_notDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Task task\u003dnew Task(\"test1\", false, TaskTypes.TODO);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        assertEquals(\"0\", task.getStatusNum());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    void TaskGetStatusNumTest_done() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Task task\u003dnew Task(\"test2\", true, TaskTypes.TODO);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        assertEquals(\"1\", task.getStatusNum());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    void TaskWriteToFileTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        Task task\u003dnew Task(\"test3\", true, TaskTypes.DEADLINE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "        assertEquals(\"D | 1 | test3\", task.writeToFile());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "todo task1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "deadline task2 /by 22Aug2020"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "event task3 /at Fri 1~6pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "hahaha"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "done 45"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "delete 45"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "    PAUSE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanbingtao"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "yanbingtao": 4,
      "-": 20
    }
  }
]
