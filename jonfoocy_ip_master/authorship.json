[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "sourceSets {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    java {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        sourceSets.main.java.srcDirs \u003d [\u0027src\u0027]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//jar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    manifest {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        attributes \u0027Main-Class\u0027: \u0027sparrow.Sparrow\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    mainClassName \u003d \"sparrow.Sparrow\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    archiveBaseName \u003d \"sparrow\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    sourceSets \u003d []"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//checkstyleTest.enabled \u003d false"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 17,
      "-": 44
    }
  },
  {
    "path": "src/main/java/sparrow/Sparrow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Sparrow {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    final private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Sparrow(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            tasks \u003d storage.loadFromFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Sparrow() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            tasks \u003d storage.loadFromFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Command c \u003d parser.parseCommand(command);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String result \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            ui.replyToUser(result);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            isExit \u003d c.getIsExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String getResponse(String userInput) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Command c \u003d parser.parseCommand(userInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Sparrow sparrow \u003d new Sparrow(\"Sparrow.txt\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        sparrow.run();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 65
    }
  },
  {
    "path": "src/main/java/sparrow/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class AddDeadlineCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public AddDeadlineCommand(Deadline toAdd) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(toAdd);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 12
    }
  },
  {
    "path": "src/main/java/sparrow/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class AddEventCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public AddEventCommand(Event toAdd) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(toAdd);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 12
    }
  },
  {
    "path": "src/main/java/sparrow/commands/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Aye Aye Captain! I\u0027ve added this task: \\n\\t%s\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final Task toAdd;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public AddTaskCommand(Task toAdd) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.toAdd \u003d toAdd;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        tasks.addTask(toAdd);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        storage.saveToFile(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(MESSAGE_SUCCESS, toAdd);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 25
    }
  },
  {
    "path": "src/main/java/sparrow/commands/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class AddTodoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public AddTodoCommand(Todo toAdd) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(toAdd);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 12
    }
  },
  {
    "path": "src/main/java/sparrow/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected int targetIndex \u003d -1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Command(int targetIndex) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.setTargetIndex(targetIndex);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        throw new UnsupportedOperationException(\"This method is to be implemented by child classes!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void setTargetIndex(int targetIndex) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public int getTargetIndex() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return this.targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public boolean getIsExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 35
    }
  },
  {
    "path": "src/main/java/sparrow/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            \"Jolly riddance! I\u0027ve deleted this task: \\n\\t%s\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public DeleteCommand(int indexToDelete) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(indexToDelete);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Task deletedTask \u003d tasks.deleteTask(getTargetIndex());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage.saveToFile(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return String.format(MESSAGE_DELETE_TASK_SUCCESS, deletedTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return \"INDEX OUT OF BOUNDS\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 29
    }
  },
  {
    "path": "src/main/java/sparrow/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_COMPLETED_TASK_SUCCESS \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            \"Great job! I\u0027ve marked this task as completed: \\n\\t%s\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public DoneCommand(int indexToDelete) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(indexToDelete);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Task completedTask \u003d tasks.markAsDone(getTargetIndex());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage.saveToFile(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return String.format(MESSAGE_COMPLETED_TASK_SUCCESS, completedTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return \"INDEX OUT OF BOUNDS\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 28
    }
  },
  {
    "path": "src/main/java/sparrow/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_EXIT \u003d \"Bye. Hope t\u0027 see ye again soon!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return MESSAGE_EXIT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 21
    }
  },
  {
    "path": "src/main/java/sparrow/commands/FilterCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class FilterCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"filter\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_FIND_SUCCESS \u003d \"I found tasks matching your search: \\n%s\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_FIND_FAILURE \u003d \"I didn\u0027t find any matching tasks :(\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public FilterCommand(LocalDate date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.filterList(date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return MESSAGE_FIND_FAILURE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String matchingTasksAsString \u003d ui.taskListToString(matchingTasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return String.format(MESSAGE_FIND_SUCCESS, matchingTasksAsString);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 36
    }
  },
  {
    "path": "src/main/java/sparrow/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_FIND_SUCCESS \u003d \"I found tasks matching your search: \\n%s\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_FIND_FAILURE \u003d \"I didn\u0027t find any matching tasks :(\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return MESSAGE_FIND_FAILURE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String matchingTasksAsString \u003d ui.taskListToString(matchingTasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return String.format(MESSAGE_FIND_SUCCESS, matchingTasksAsString);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 34
    }
  },
  {
    "path": "src/main/java/sparrow/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    // TODO: implement proper help documentation"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return \"You asked for help?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 16
    }
  },
  {
    "path": "src/main/java/sparrow/commands/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public IncorrectCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 20
    }
  },
  {
    "path": "src/main/java/sparrow/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Here are the tasks in your list: \\n%s\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        String tasksAsString \u003d ui.taskListToString(tasks.getTasks());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(MESSAGE_SUCCESS, tasksAsString);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 18
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/EmptyDeadlineDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class EmptyDeadlineDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public EmptyDeadlineDescriptionException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/EmptyEventDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class EmptyEventDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public EmptyEventDescriptionException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/EmptyTodoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class EmptyTodoDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public EmptyTodoDescriptionException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/InvalidDeadlineByException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class InvalidDeadlineByException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public InvalidDeadlineByException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/InvalidEventAtException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class InvalidEventAtException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public InvalidEventAtException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/MissingTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class MissingTaskNumberException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public MissingTaskNumberException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/SparrowException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class SparrowException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Returns emoji to be pre-pended to an exception message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return Pre-exception string."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static String standardExceptionMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return \"ARR!\\uD83C\\uDFF4\\u200D\\u2620\\uFE0F️ \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public SparrowException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 16
    }
  },
  {
    "path": "src/main/java/sparrow/data/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Represents a Deadline in the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected LocalDate dueDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates a Deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param description details of deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param dueDate when deadline is due"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Deadline(String description, LocalDate dueDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public LocalDate getDueDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.dueDate.format(formatter));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 31
    }
  },
  {
    "path": "src/main/java/sparrow/data/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Represents an Event in the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates an Event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param description Details of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param date When the event occurs."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), this.date.format(formatter));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 31
    }
  },
  {
    "path": "src/main/java/sparrow/data/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Represents a Task in the task list. Child classes include Todo, Deadline and Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 35
    }
  },
  {
    "path": "src/main/java/sparrow/data/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Encapsulates task list with operations to be carried out on list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Constructs an empty task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Constructs a task list with the input list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param tasks input task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void addTask(Task toAdd) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        tasks.add(toAdd);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Returns a task list matching the inputted date filter."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param dateFilter User\u0027s command and date to filter by."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return Filtered list based on input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @throws DateTimeParseException if date passed cannot be converted to a LocalDate object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public ArrayList\u003cTask\u003e filterList(LocalDate dateFilter) throws DateTimeParseException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            LocalDate taskDate;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            // Get date from Deadline/Event"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                taskDate \u003d ((Deadline) task).getDueDate();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                taskDate \u003d ((Event) task).getDate();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            // Check if task\u0027s date is on date specified"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (taskDate.isEqual(dateFilter)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                filteredList.add(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return filteredList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Marks a task in the task list as completed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param taskNum Task number corresponding to completed task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Task markAsDone(int taskNum) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Task completedTask \u003d tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        completedTask.markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return completedTask;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param taskNum Task number corresponding to the task to be deleted."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Task deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String taskStr) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (task.getDescription().contains(taskStr)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 91
    }
  },
  {
    "path": "src/main/java/sparrow/data/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Represents a Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates a Todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param description Details of the todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 19
    }
  },
  {
    "path": "src/main/java/sparrow/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Parses user input and calls the relevant methods."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern TASK_INDEX_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003ctargetIndex\u003e.+)\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern TODO_FORMAT \u003d Pattern.compile(\"(?\u003cdescription\u003e.+)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern DEADLINE_FORMAT \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Pattern.compile(\"(?\u003cdescription\u003e.+)\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    + \" /by (?\u003cdeadlineDate\u003e[0-9-]+)\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern EVENT_FORMAT \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Pattern.compile(\"(?\u003cdescription\u003e.+)\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    + \" /at (?\u003ceventDate\u003e[0-9-]+)\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern KEYWORDS_ARGS_FORMAT \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Pattern.compile(\"(?\u003ckeyword\u003e\\\\S+(?:\\\\s+\\\\S+)*)\"); // one or more keywords separated by whitespace"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern FILTER_ARGS_FORMAT\u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Pattern.compile(\"(?\u003ckeywords\u003e\\\\S+) (?\u003cdateFilter\u003e[0-9-]+)\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            // doesn\u0027t seem to enter this block"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Unknown Command\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case AddTodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return prepareAddTodo(arguments);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case AddDeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return prepareAddDeadline(arguments);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case AddEventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return prepareAddEvent(arguments);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return prepareDelete(arguments);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return prepareDone(arguments);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return prepareFind(arguments);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case FilterCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return prepareFilter(arguments);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            //todo"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareAddTodo(String args) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d TODO_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Description of a Todo can\u0027t be empty.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Todo todo \u003d new Todo(matcher.group(\"description\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return new AddTodoCommand(todo);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    // TODO: trim whitespace from end of deadline description"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareAddDeadline(String args) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d DEADLINE_FORMAT.matcher((args.trim()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Wrong deadline format.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            LocalDate dueDate \u003d LocalDate.parse(matcher.group(\"deadlineDate\"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Deadline deadline \u003d new Deadline(matcher.group(\"description\"), dueDate);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new AddDeadlineCommand(deadline);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(e.getParsedString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    // TODO: trim whitespace from end of event description"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareAddEvent(String args) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d EVENT_FORMAT.matcher((args.trim()));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Wrong event format.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            LocalDate eventDate \u003d LocalDate.parse(matcher.group(\"eventDate\"));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Event event \u003d new Event(matcher.group(\"description\"), eventDate);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new AddEventCommand(event);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(e.getParsedString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareDelete(String args) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            int targetIndex \u003d Integer.parseInt(args.trim());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"TARGET: \" + targetIndex);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new DeleteCommand(targetIndex);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareDone(String args) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            int targetIndex \u003d Integer.parseInt(args.trim());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new DoneCommand(targetIndex);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    // TODO: add functionality to search by \u003e1 keyword"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareFind(String args) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d KEYWORDS_ARGS_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Please pass a keyword to search for.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return new FindCommand(matcher.group(\"keywords\"));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareFilter(String args) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d FILTER_ARGS_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"no matches\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Please pass a proper date to filter by.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            LocalDate dateFilter \u003d LocalDate.parse(matcher.group(\"dateFilter\"));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new FilterCommand(dateFilter);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Please pass a proper date to filter by.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 164
    }
  },
  {
    "path": "src/main/java/sparrow/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Represents the file used to store the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private static final String DEFAULT_FILE_PATH \u003d \"Sparrow.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final Path path;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Storage() throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this(DEFAULT_FILE_PATH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Storage(String filePath) throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        path \u003d Path.of(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!isValidPath(path)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            throw new Exception(\"Invalid file extension\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private boolean isValidPath(Path filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return filePath.toString().endsWith(\".txt\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Returns list of tasks loaded from hard disk."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * If no file found, returns an empty list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return Task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public TaskList loadFromFile() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        File f \u003d new File(path.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                return decodeTaskList(Files.readAllLines(path));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return new TaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void saveToFile(TaskList tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Files.write(path, encodeTaskList(tasks));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            // TODO create exception for this"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"Error saving to file\" + e.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public TaskList decodeTaskList(List\u003cString\u003e encodedTaskList) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (String encodedTask : encodedTaskList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (!encodedTask.isBlank()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                tasks.add(stringToTask(encodedTask));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return new TaskList(tasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public List\u003cString\u003e encodeTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        List\u003cString\u003e encodedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            encodedTaskList.add(taskToString(task));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return encodedTaskList;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts user input into a Task."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param input User input to be converted."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Task stringToTask(String input) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        String[] inputArr \u003d input.split(\"\\\\s+\\\\|\\\\s+\", 4);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        boolean isTaskDone \u003d Integer.parseInt(inputArr[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        switch (inputArr[0]) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Todo todo \u003d new Todo(inputArr[2]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (isTaskDone) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                todo.markAsDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            task \u003d todo;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            LocalDate dueDate \u003d stringToDate(inputArr[3]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Deadline deadline \u003d new Deadline(inputArr[2], dueDate);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (isTaskDone) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                deadline.markAsDone();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            task \u003d deadline;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            LocalDate date \u003d stringToDate(inputArr[3]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Event event \u003d new Event(inputArr[2], date);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (isTaskDone) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                event.markAsDone();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            task \u003d event;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"No matching task found, shouldn\u0027t end up here\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"No task created\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts a Task into a String for storage."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param task Task to be converted."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return String representation of Task."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String taskToString(Task task) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(task.getDescription());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (task.getIsDone()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.insert(0, \"1 | \");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.insert(0, \"0 | \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.insert(0,\"T | \");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.insert(0,\"D | \");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.append(\" | \").append(((Deadline) task).getDueDate());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else if (task instanceof  Event) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.insert(0,\"E | \");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.append(\" | \").append(((Event) task).getDate());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts String representation of date to LocalDate."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param dateStr String representation of a date."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return LocalDate object."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @throws DateTimeParseException If input String cannot be parsed."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public LocalDate stringToDate(String dateStr) throws DateTimeParseException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return LocalDate.parse(dateStr);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 173
    }
  },
  {
    "path": "src/main/java/sparrow/test.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//package sparrow;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//public class test extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    private Scene scene;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    public void start(Stage stage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        // Step 1: setting up required components"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        stage.setScene(scene);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        stage.show();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        stage.setResizable(false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        //Step 3 add functionality to handle user input"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//            handleUserInput();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//            handleUserInput();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        dialogContainer.heightProperty().addListener((observable) -\u003e {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//            scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        return textToAdd;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    private void handleUserInput() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        );"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        userInput.clear();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    private String getResponse(String input) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 111
    }
  },
  {
    "path": "src/main/java/sparrow/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Responsible for sending messages to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private static final String DIVIDER \u003d \"    ________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private static final String MESSAGE_PREFIX \u003d \"    \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Welcomes the user to the program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        String welcome \u003d \"  _  _ _   ___ _                    \\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \" | || (_) |_ _( )_ __               \\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \" | __ | |  | ||/| \u0027  \\\\              \\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \" |_||_|_| |___| |_|_|_|             \\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \" / __|_ __  __ _ _ _ _ _ _____ __ __\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \" \\\\__ \\\\ \u0027_ \\\\/ _` | \u0027_| \u0027_/ _ \\\\ V  V /\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \" |___/ .__/\\\\__,_|_| |_| \\\\___/\\\\_/\\\\_/ \\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \"     |_|                            \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        replyToUser(\"How can I help ye?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Sends a reply to the user in a standard format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param message Reply to be formatted."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void replyToUser(String message) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Scanner sc \u003d new Scanner(message);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(MESSAGE_PREFIX + line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts input list to string."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String taskListToString(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String temp \u003d String.format(\"%d. %s\\n\", i + 1, tasks.get(i));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.append(temp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 60
    }
  },
  {
    "path": "src/test/java/sparrow/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 6
    }
  },
  {
    "path": "src/test/java/sparrow/SparrowTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.exceptions.SparrowException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class SparrowTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void exceptionMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        assertEquals(\"ARR!\\uD83C\\uDFF4\\u200D\\u2620\\uFE0F️ \", SparrowException.standardExceptionMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "todo buy ship"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "todo sail to Tortuga"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "wrong command"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "todo find treasure"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "deadline find a crew"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "deadline find a crew /by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "deadline find a crew /by end of Aug"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "event brethren\u0027s court meeting"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "event brethren\u0027s court meeting /at"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "event brethren\u0027s court meeting /at next Wed 2-4pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "done -5"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "done 1000"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "delete"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "delete -99"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "delete 999"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "bye"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 24
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "java -classpath ../bin Sparrow \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 2,
      "-": 36
    }
  }
]
