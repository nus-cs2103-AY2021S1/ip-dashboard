[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " * Main class / Entry point of Duke Personal Assistant Chatbot (Kim Jong Duke)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Starts Kim Jong Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void run() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        UI.summonSupremeLeaderAndGreet();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        Parser.run();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        UI.farewell();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Code entry point."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param args Entry point argument."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        Duke.run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 21,
      "-": 4
    }
  },
  {
    "path": "src/main/java/datetimeconverter/DateTimeConverter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package datetimeconverter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " * Accept dates in formats like dd-mm-yyyy and convert it to English date format."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class DateTimeConverter {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Accept dates in \"dd/MM/yyyy HHmm\", \"d/MM/yyyy HHmm\", \"dd-MM-yyyy HHmm\", \"d-MM-yyyy HHmm\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * \"dd/M/yyyy HHmm\", \"d/M/yyyy HHmm\", \"dd-M-yyyy HHmm\", \"d-M-yyyy HHmm\" format and convert"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * it to English date format (E.g Saturday, March 02, 2019 06:00 PM)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param input Date-Time pattern."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @return English date format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @throws DateTimeParseException If unable to convert Date-Time pattern to English date format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *                                If that happens, String input to formatDateTime(...) \u003d String"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *                                output from formatDateTime(...)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static String formatDateTime(String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        // Make a copy of the input string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        String result \u003d input;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        // Format the following date and time formats"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        List\u003cString\u003e formatStrings \u003d Arrays.asList("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"dd/MM/yyyy HHmm\", \"d/MM/yyyy HHmm\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"dd-MM-yyyy HHmm\", \"d-MM-yyyy HHmm\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"dd/M/yyyy HHmm\", \"d/M/yyyy HHmm\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"dd-M-yyyy HHmm\", \"d-M-yyyy HHmm\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        DateTimeFormatter formatter;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        LocalDateTime dateTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        // Try to fit the input string into a format in formatString"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        for (String formatString : formatStrings) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                formatter \u003d DateTimeFormatter.ofPattern(formatString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                dateTime \u003d LocalDateTime.parse(result, formatter);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // E.g Convert 2/12/2019 1800 to Monday, December 02, 2019 06:00 PM"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                result \u003d dateTime.format(DateTimeFormatter.ofPattern(\"EEEE, MMMM dd, yyyy hh:mm a\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // Pass and don\u0027t format input if the date and time format does not match any element in formatString"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 54
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " * Throws custom exception commands if something goes wrong when processing user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Line for proper formatting of error messages in DukeException methods."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    private final static String line \u003d \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders an error message that user input has been written incorrectly."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void invalidCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(line + \"\\tCommand written incorrectly. Please check again.\\n\" + line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders an error message that user did not specify the type of task (ie Deadline, To Do, Event)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void genericTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(line + \"\\tPlease specify either a Deadline, To Do, or Event!\\n\" + line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders an error message that there is no such task in the list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void noSuchTask() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(line + \"\\tNo such task in list of tasks.\\n\" + line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders an error message that user input format for deadline is invalid."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void invalidDeadline() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(line + \"\\tDeadline format is invalid\\n\" + line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders an error message that user input format for event is invalid."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void invalidEvent() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(line + \"\\tEvent format is invalid\\n\" + line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders an error message that user input format for todo is invalid."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void invalidTodo() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(line + \"\\tTodo format is invalid\\n\" + line);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders an error message that the application has issues creating a folder for duke.txt."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void errorCreatingFolder() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"Something went wrong while creating src\\\\main\\\\java\\\\data folder \\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders an error message that the application has issues appending to duke.txt."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void errorAppendingToFile() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"Something went wrong while writing to file \\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders an error message that the application has issues amending duke.txt."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void errorAmendingFile() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"Something went wrong while amending text to file \\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders an error message that the application has issues deleting text from duke.txt."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void errorDeletingTextFromFile() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"Something went wrong while deleting text from file \\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders an error message that the application has issues loading task data from duke.txt into task list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void errorLoadingTextIntoTaskList() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\u003c\u003cIGNORE THIS ERROR IF IT IS YOUR FIRST TIME USING THE APPLICATION \" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"AND HAVE NOT ADD ANYTHING INTO TASK LIST!\u003e\u003e\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\u003c\u003cERROR IS THROWN BECAUSE data\\\\duke.txt\\\\ HAS NOT BEEN CREATED YET ON FIRST RUN\u003e\u003e\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"Something went wrong while loading duke.txt into task list \\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 91
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import task.TaskDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import task.tasks.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Takes in user input and executes further actions depending on the command word."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Command words are list, find, todo, deadline, event, list, done, delete."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        String userCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        // Load duke.txt into task list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        List\u003cTask\u003e tasks \u003d Storage.loadTextIntoTaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        TaskList tasklist \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            userCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            if (userCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            } else if (userCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // Show list of tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                TaskDescription.showAllTask(tasklist.getTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            } else if (userCommand.contains(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // e.g done 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                tasklist.markTaskDone(userCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            } else if (userCommand.contains(\"todo\") || userCommand.contains(\"deadline\") || userCommand.contains(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // Add Task, e.g todo work"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                tasklist.addTask(userCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            } else if (userCommand.contains(\"delete\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                tasklist.deleteTask(userCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            } else if (userCommand.contains(\"find\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                tasklist.findTask(userCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // If a task is specified as a Task but not a Deadline / To Do / Event, throw an error"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                DukeException.genericTask();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 53
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import task.tasks.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import task.tasks.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import task.tasks.Deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import task.tasks.Event;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " * Deals with loading tasks from duke.txt and saving tasks in duke.txt."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Folder path of folder which duke.txt is found in."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    protected final static String FOLDERPATH \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            java.nio.file.Paths.get(System.getProperty(\"user.dir\"), \"data\").toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * File path of duke.txt."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    protected final static String FILEPATH \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            java.nio.file.Paths.get(System.getProperty(\"user.dir\"), \"data\", \"duke.txt\").toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Creates a folder path for duke.txt if there isn\u0027t a folder for duke.txt."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void createFolder() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            File writingDirectory \u003d new File(Storage.FOLDERPATH);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // If src\\main\\java\\data folder does not exist, create one"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            if (!writingDirectory.exists()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                writingDirectory.mkdir();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            DukeException.errorCreatingFolder();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            System.out.println(\"Error Message: \" + e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Appends text to duke.txt."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param textToAdd Text to be appended to duke.txt."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void appendToFile(String textToAdd) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // Create src\\main\\java\\data folder if needed"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            Storage.createFolder();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // Append instead of overwriting"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            FileWriter fw \u003d new FileWriter(Storage.FILEPATH, true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            fw.write(textToAdd + \"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            DukeException.errorAppendingToFile();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            System.out.println(\"Error Message: \" + e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Amends text in duke.txt."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param currentText Targeted text to be amended."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param amendedText New text written in place of targeted text."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void amendFile(String currentText, String amendedText) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            File file \u003d new File(Storage.FILEPATH);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // Replace currentText with amendedText"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            List\u003cString\u003e out \u003d Files.lines(file.toPath())"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    .map(line -\u003e line.replace(currentText, amendedText))"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // TRUNCATE_EXISTING overwrites our existing text file and rewrites the text file"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            Files.write(file.toPath(), out, StandardOpenOption.WRITE, StandardOpenOption.TRUNCATE_EXISTING);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            DukeException.errorAmendingFile();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            System.out.println(\"Error Message: \" + e.getMessage());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Deletes text in duke.txt."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param textToDelete Targeted text to be deleted."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void deleteFromFile(String textToDelete) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            File file \u003d new File(Storage.FILEPATH);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // Use Stream filter to remove line that contains textToDelete"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            List\u003cString\u003e out \u003d Files.lines(file.toPath())"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    .filter(line -\u003e !line.contains(textToDelete))"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // TRUNCATE_EXISTING replaces old contents of duke.txt file"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            Files.write(file.toPath(), out, StandardOpenOption.WRITE, StandardOpenOption.TRUNCATE_EXISTING);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            DukeException.errorDeletingTextFromFile();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            System.out.println(\"Error Message: \" + e.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Pulls all task data inside duke.txt into Kim Jong Duke\u0027s task list upon starting application."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static List\u003cTask\u003e loadTextIntoTaskList() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        List\u003cString\u003e lines;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        File file \u003d new File(Storage.FILEPATH);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // E.g [D][Y] return book (by: Sunday)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            lines \u003d Files.readAllLines(file.toPath(), StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            for (String line : lines) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // E.g [[D][Y], return book (by: Sunday)]"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String[] parts \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // E.g [D][Y]"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String prefix \u003d parts[0];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // E.g return book (by: Sunday)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String description \u003d parts[1];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                if (prefix.contains(\"[T]\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    task \u003d new Todo(description);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    if (prefix.contains(\"[Y]\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                } else if (prefix.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    // Take words before brackets"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    String agenda \u003d description.substring(0, description.lastIndexOf(\" (\"));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    // Grab \"by: Sunday\" in \"(by: Sunday)\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    // lastIndexOf ensures that something like return book (OK will do so) (by: Sunday) will not throw error"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    String bracketText \u003d description.substring(description.lastIndexOf(\"(\") + 1, description.lastIndexOf(\")\"));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    // Grab \"Sunday\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    String by \u003d bracketText.split(\"by: \", 2)[1];"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    task \u003d new Deadline(agenda, by);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    if (prefix.contains(\"[Y]\")) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                } else { // prefix.contains(\"[E]\"))"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    // Take words before brackets"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    String agenda \u003d description.substring(0, description.lastIndexOf(\" (\"));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    // Grab \"at: Mon 2-4pm\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    // lastIndexOf ensures that something like return book (OK will do so) (at: Mon 2-4pm) will not throw error"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    String bracketText \u003d description.substring(description.lastIndexOf(\"(\") + 1, description.lastIndexOf(\")\"));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    // Grab \"Mon 2-4pm\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    String at \u003d bracketText.split(\"at: \", 2)[1];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    task \u003d new Event(agenda, at);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    if (prefix.contains(\"[Y]\")) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // Add task to list of task"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            DukeException.errorLoadingTextIntoTaskList();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            System.out.println(\"Error Message: \" + e.getMessage());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 185
    }
  },
  {
    "path": "src/main/java/task/TaskDescription.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import task.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " * Renders description of a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class TaskDescription {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders all outstanding tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param tasks Outstanding tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void showAllTask(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            int serialNumber \u003d i + 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            System.out.println(\"\\t\" + serialNumber + \".\" + task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders successful addition of task to outstanding tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param tasks   Outstanding tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param newTask Added task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void addedTaskDescription(List\u003cTask\u003e tasks, Task newTask) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t\\t\" + newTask + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders successful marked completion of task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param doneTask Completed task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void doneTaskDescription(Task doneTask) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t\" + doneTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders successful deletion of task from outstanding tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param tasks       Outstanding tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param deletedTask Deleted task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void deletedTaskDescription(List\u003cTask\u003e tasks, Task deletedTask) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t\\t\" + deletedTask + \"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders tasks that user searched for."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param searchedTasks Searched tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void searchedTaskDescription(List\u003cTask\u003e searchedTasks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        if (searchedTasks.size() \u003e 0) { // Items found with find command"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            System.out.println(\"\\tHere are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            for (int i \u003d 0; i \u003c searchedTasks.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                int serialNumber \u003d i + 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                Task task \u003d searchedTasks.get(i);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                System.out.println(\"\\t\" + serialNumber + \".\" + task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        } else { // No items found with find command"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            System.out.println(\"\\tNo items with the finding keyword specified found in list.\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 88
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import task.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import task.tasks.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import task.tasks.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import task.tasks.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " * Contains list of tasks and provide operations to manipulate this list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    protected List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Creates TaskList object containing a list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param tasks Task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Retrieves task list from TaskList object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @return Task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Adds a task to task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param userCommand User input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException If /by or /at user input not written properly."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *                                        E.g deadline return book /bylmklmlmlkmlkmlmlmlmlmkl Sunday."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void addTask(String userCommand) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        if (userCommand.contains(\"todo\")) { // To Do"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // E.g todowork"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            if (userCommand.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                DukeException.invalidTodo();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // Add and report that the todo is added"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String[] userCommandSplit \u003d userCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String description \u003d userCommandSplit[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                Task newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                this.tasks.add(newTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                TaskDescription.addedTaskDescription(this.tasks, newTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                Storage.appendToFile(newTask.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        } else if (userCommand.contains(\"deadline\")) { // Deadline"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String[] userCommandSplit \u003d userCommand.split(\" /by \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String description \u003d userCommandSplit[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String by \u003d userCommandSplit[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // Add and report that the deadline is added"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                Task newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                this.tasks.add(newTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                TaskDescription.addedTaskDescription(this.tasks, newTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                Storage.appendToFile(newTask.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // E.g deadline return book /bylmklmlmlkmlkmlmlmlmlmkl Sunday"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                DukeException.invalidDeadline();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        } else { // Event"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String[] userCommandSplit \u003d userCommand.split(\" /at \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String description \u003d userCommandSplit[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String at \u003d userCommandSplit[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // Add and report that the event is added"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                Task newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                this.tasks.add(newTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                TaskDescription.addedTaskDescription(this.tasks, newTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                Storage.appendToFile(newTask.toString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // E.g event project meeting /atlmklmlmlkmlkmlmlmlmlmkl Mon 2-4pm"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                DukeException.invalidEvent();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Marks a task in task list as completed."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param userCommand User input."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @throws IndexOutOfBoundsException If given a non-existent task S/N number."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *                                   E.g \"done 719329813298712398123\" is not valid as number of tasks is cap to 100"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *                                   by requirements. E.g \"done 7\" is not valid if there are only 6 tasks in the"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *                                   task list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @throws NumberFormatException     If user input is invalid. E.g \"done work\"."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void markTaskDone(String userCommand) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // E.g given \"done 1\", we split to [\"done\", \"1\"]"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            String[] userCommandSplit \u003d userCommand.split(\" \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // To prevent cases such as \"done 1 7\", \"done\", \"done123123123\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            if (userCommandSplit.length !\u003d 2) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                DukeException.invalidCommand();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // Take serial number e.g 1 \"done 1\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                int serialNumber \u003d Integer.parseInt(userCommandSplit[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                int index \u003d serialNumber - 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // Mark as done and report that the task is done"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                Task doneTask \u003d this.tasks.get(index);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String currentText \u003d doneTask.toString();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                doneTask.markAsDone();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                String amendedText \u003d doneTask.toString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                TaskDescription.doneTaskDescription(doneTask);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                Storage.amendFile(currentText, amendedText);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // E.g \"done 719329813298712398123\" is not valid as number of tasks is cap to 100 by requirements"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            DukeException.noSuchTask();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // E.g \"done work\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            DukeException.invalidCommand();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Deletes a task in task list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param userCommand User input."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @throws IndexOutOfBoundsException If given a non-existent task S/N number."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *                                   E.g \"delete 719329813298712398123\" is not valid as number of tasks is cap to 100 by requirements."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *                                   E.g \"delete 7\" is not valid if there are only 6 tasks in the task list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void deleteTask(String userCommand) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // E.g given \"delete 1\", we split to [\"delete\", \"1\"]"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            String[] userCommandSplit \u003d userCommand.split(\" \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // To prevent cases such as \"delete 1 7\", \"delete\", \"delete123123123\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            if (userCommandSplit.length !\u003d 2) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                DukeException.invalidCommand();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // Take serial number e.g 1 \"delete 1\" and delete"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                int serialNumber \u003d Integer.parseInt(userCommandSplit[1]);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                int index \u003d serialNumber - 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                // Mark as deleted and report that the task is deleted"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                Task deletedTask \u003d this.tasks.get(index);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                this.tasks.remove(index);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                TaskDescription.deletedTaskDescription(this.tasks, deletedTask);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                Storage.deleteFromFile(deletedTask.toString());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // E.g \"delete 719329813298712398123\" is not valid as number of tasks is cap to 100 by requirements"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            DukeException.noSuchTask();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Finds a task in task list."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param userCommand User input."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void findTask(String userCommand) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        // E.g given \"find book\", we split to [\"find\", \"book\"]"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        String[] userCommandSplit \u003d userCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        // To prevent cases such as \"findasd\""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        if (userCommandSplit.length !\u003d 2) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            DukeException.invalidCommand();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            String keyword \u003d userCommandSplit[1];"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            // Make a copy of the existing tasks and remove a task if keyword is not found"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            List\u003cTask\u003e tasksCopy \u003d this.tasks;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            tasksCopy.removeIf(task -\u003e !task.getDescription().contains(keyword));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "            TaskDescription.searchedTaskDescription(tasksCopy);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 187
    }
  },
  {
    "path": "src/main/java/task/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package task.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import datetimeconverter.DateTimeConverter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " * Task that needs to be done before a specific date/time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Due date of deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Creates a deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param description Contents of deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param by          Due date of deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Returns a string representation of a deadline description and its completion status."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @return String representation of a deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DateTimeConverter.formatDateTime(by) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 34
    }
  },
  {
    "path": "src/main/java/task/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package task.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import datetimeconverter.DateTimeConverter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " * Task that start at a specific time and ends at a specific time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Start and end time of event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Creates an event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param description Contents of event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param at          Start and end time of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Returns a string representation of a event description and its completion status."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @return String representation of a event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DateTimeConverter.formatDateTime(at) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 34
    }
  },
  {
    "path": "src/main/java/task/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package task.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " * Stores text entered by user as a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Contents of task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * True if a task is completed. False if a task is not completed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Creates a task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param description Contents of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Checks if a task is completed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @return Y if a task is completed. N if a task is not completed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); // Return Y or N"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Marks a task as completed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Returns contents of task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @return Task contents."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Returns a string representation of a task description and its completion status."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @return String representation of a task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 60
    }
  },
  {
    "path": "src/main/java/task/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package task.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " * Task without any date/time attached to it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Creates a todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @param description Contents of todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Returns a string representation of a todo description and its completion status."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * @return String representation of a todo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 25
    }
  },
  {
    "path": "src/main/java/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders Kim Jong Un\u0027s portrait."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void summonSupremeLeader() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \".............................:7$8DDDDDDDDDDDD8DNDDDDNNNNO+.,~\u003d~,....................................\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"..........................+D8DNDDDDNNND8DDDDND88O88N8O8D8DDDDO+.....................................\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \".............,,,,..,,,.,+DDNNDDDNDDDDD8NDD8ODOZ88OO888O8D888D8DDD8I:................................\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \".........,:~~\u003d\u003d\u003d~~~\u003dIZNNNNNNNND88O8D888ODN88DO8DOND8Z88OOOZ8DNOOD8D88NO?............................\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"........,:?8DDDDOZ88DDDDDDND8DNNNDO88OOZDONNDDD888DNDDODO8DO88DO8DZ888DDDDI.........................\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"........,:~?7ZOO8DDDDDD8D88DN88NNNNDND8D8DDNNNNNDDDNNDN8ND8DOD8N8ODZOOOO8D88N$~.....................\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \".........,.:~Z8DDND8DNNDDNNNNNNNNNNNNNNDDDDNNNNNNDDNDNNNDNDNNDDNDD8Z8OZO88888DON~........,,~~~,,....\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \".........,,\u003dZDDDNDDNDDNNNDDNNNMMNNNNNNNNNNDDNNNNNNNNNNNNNNNNNNNNNNDDDOOOOZO88$8D8O\u003d.+...,:+8DD?~,...\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"..........~O8DNNNNNNNND88NNDDDDNNNNNNNMNNNNNDNNNNNNNDDDDNNNNDNDDDDDDDDD8OZOO8Z$8D8DO887:,~?8DD8?:,..\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"........,+NDDNNNNNND$888D888888ODDDDNNNNNNNNNDDDDDDD8DDDD8D8DO8O$O8DDDDDD8D88888O8OO8O877IIODDD$\u003d,..\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"........\u003dNNNDDDDDNDD8DNDDNDDD88888888D8DDDDDDDD888DD8OZZZZ$ZZ777I77$$O8DDDDDDDDDOOZZO8ZDZZ$7DDD8?:,.\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \".......,DD888D8DNDDNNDNNNNDDDD8DDDDNDDD88OOOOZZ$Z$$$$7I+??++\u003d~\u003d\u003d~\u003d\u003d\u003d+?77Z8O8DDDDD888O8OD8OZIODDD7:,.\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \".......:O88DDDDNNNNDNNNNDDDDDDDDDDNDDD8OOZZ$$7$7????+++\u003d\u003d~~~:::::~~~~\u003d\u003d+I777Z8DNNND8D888OO8+IODD7~,,\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"......,:7DDNNNNNNNNNNNODDND8DNDDN8DDDDO8OZ$II???+++\u003d\u003d\u003d~~~~::::::~:~~~~~~\u003d++?I7Z8NNDDD8DO88DO$$D$I:,.\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \".......~ONNNNNNNNNDNNDDDDNDNDDD888DD8DOOZ$7I?++\u003d\u003d\u003d\u003d\u003d~~~::::::::::::::~~~\u003d\u003d\u003d\u003d\u003d+?I8NNDDD88DDD88$O8I:,.\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"......,,+8NNNNNNNNNNNDDNDNND8DDDD88D88OOZ$7?++\u003d\u003d\u003d\u003d~~~~~~~~::~::::::::~~~~~\u003d\u003d\u003d\u003d\u003d+IZDNNDDDDDDD8OZ8I:,.\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \".....,,,~ONNNNNNNNNNNDNDDNN8DDDDD88O88OOZ$7I+\u003d~~~~~~~~~~~~~~~~::::::~~~~~~\u003d\u003d\u003d\u003d\u003d\u003d++7NNDDDDDDDD8O7I~,,\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"....,,,,:8NNNNNNNNNDNNDNN88DDDDDD8888OOO$7I?\u003d~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u003d\u003d\u003d\u003d\u003d\u003d\u003d++ZNNNDDDDDDD8ZI:,,\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"..,,::::,8NNNNNNNNDDDDNNDDDDNDDDD8888OOO$$7?~:~~~~~~~~~~~~~~~\u003d\u003d\u003d\u003d\u003d\u003d~~~~~~~\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d++$NNNNNNNND8Z?:,.\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,:~?OD$\u003d8NNDNDDDDDDDDDDDNNDNDDNDDDD88ZZ$7I+\u003d~~::~~~~~~~~~~~~::~~~~~~~~~~\u003d\u003d\u003d\u003d\u003d++++++?$NNNNNND8O$?:,.\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,~I8DDO?8NDDDDDDDDDDDDDDDDDNDDDDDDD8OOZ777I++\u003d~~~~~~~~~:::::~:~~~~~~~~\u003d\u003d\u003d\u003d\u003d\u003d\u003d++++++++NNNNNNND$Z?:,,\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,:+I$7?~DDD88O88888D88DDDDDDDDDDDDD888ZZ$7I+\u003d~~~~~~~~~~:::::::::::~~~~\u003d\u003d\u003d\u003d\u003d\u003d+++++++++7DNNNNDD8Z?~,.\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,:~~::,D888OZZZ$ZOOO88888888888888OOZZ$$I?+\u003d\u003d~~~~~~~~~~::::::::::~~~~~\u003d\u003d\u003d\u003d\u003d\u003d\u003d+++++++?8NNDDDD8Z?:,,\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,,,,,8OO$IIIII7$$ZOOZZZOOOOOOOOOOO$$I?++~~~~~~:::::::~::::::::::~~~~~~~\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d++++?NNDDDD8O?:,.\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \".,,,,,,,.8O7IIIIIIII77$$7$$$ZZZZOZZ$77I??\u003d\u003d\u003d~~~~~~::::::::::::::::~~~~~~~~~~~~~~~\u003d\u003d\u003d+++?ODDDDDD8I:,,\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \".,,,,..,.8OIIIIIIIIIIIIIII77I7$777I???++\u003d\u003d~~\u003d~~~~~~~:::~~~\u003d~\u003d\u003d~:~~~~\u003d\u003d~~~~~~~~~~~\u003d\u003d\u003d\u003d+++IDDDDDD8Z~,,\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,..,.87I7IIIIIIIIIIIIIIIIII????+++\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d~\u003d++++I?I?I?7I77I+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d~~~~~\u003d\u003d\u003d\u003d\u003d\u003d++?Z8DDDDDZ++\u003d\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"..,,.....87IIIIIIIIIIIIIII?IIII???++\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d++++++\u003d\u003d\u003d\u003d\u003d?I$ZZ77++++\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+++7DDDDD8O8DN\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"....,,,,.Z77777777IIIIII????????+++++\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d~~~~~~\u003d~~~~~~~~~\u003d+?7777I?I?++++++++\u003d\u003d\u003d\u003d\u003d\u003d+?IODDDD8DDDD\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,,,~+++\u003d\u003d+O$IIIIIII??????++++++???+\u003d\u003d\u003d\u003d+++\u003d\u003d~~~~~~\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d++?7777III???????+++???+\u003d+?$DDD8O88OO\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,,?I$O8O7?I$$777IIII?????+++++++++++?\u003d\u003d\u003d\u003d+++?+??+++++++??++??II77777I????II???7$ZOZZI+IDDD7++\u003d\u003d\u003d\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,I7$8OOOO$IIZZ$77IIIII????+++++++\u003d\u003d\u003d+???777?7I77$$Z88OZZ$$ZZ8Z$$$$77?IIIIIIIII7ZZZZ$Z$7ZOO:,,,,,\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,+IOOOO$$ZO$I$ZZ$$77IIII?????????++\u003d\u003d\u003d\u003d\u003d\u003d~~~~~~~~\u003d\u003d+???7Z88DNN88Z$$77IIII777777I??+++?I$7I:,,,,..\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,.I7OOZ777ZOO7I7$Z$$77IIIIIIIII?????++++\u003d\u003d\u003d~~~~~\u003d+?IIIII77IIIZ8N8ZZ$77III77$$777I???+???+7\u003d,..,,..\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,~IZZZ7??I7$Z$777$$$777IIIIIII7III??+++\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d~~~\u003d$ZZ$$$$$$$$DZZ$II?+?I7$$77III77I?????,.......\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,\u003d?7$$I?III7$Z$7777777777II7I7II????+++++\u003d\u003d\u003d\u003d\u003d+\u003d+\u003d\u003d\u003d\u003d\u003d\u003d?ZZZZZZZ$7Z$??\u003d\u003d\u003d\u003d?7Z$$$ZO88D888Z7?:,.,..,,\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,I7$7?I7$Z8DOZ$7II777777IIIII7II???++++++++++++++?++++++II7$7$$I7?+\u003d~::~+I7$ODNN88NDNDDDI\u003d..,,.,,\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,.77Z7?7$ZO88OZZ7III77777IIIIIIII????++++++++?+??????+\u003d\u003d\u003d\u003d\u003d++????+\u003d\u003d~::::~+II++?III?II7$8$\u003d..,,,,,\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,.77ZI?$$OOZZZOZI?IIIIIIIIIIIIIII?I????????????I?I??+\u003d~~~~~\u003d++++\u003d~\u003d\u003d:::::~\u003dIIIII777$$$$$IOI,,.....\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,.7I$??7Z$7II$OII?????IIIIIIIIIIIIIIIII?????+?+\u003d~~~:::~~~~~\u003d\u003d++\u003d~~::::::::~++???7$$$$$Z$7I?,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,+??7+?7??7ZO$7$???????IIIIIIIIIIIIIII????++\u003d\u003d~~~~~~\u003d\u003d~\u003d\u003d\u003d++I?+\u003d\u003d~::::::::\u003d+++++?II77I??++~,,,,,.\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,:I\u003dI$I\u003d\u003d~\u003d7Z$$7????????IIIIIIIIIIIII????+++\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+++++?II$$77I+~~~:~:::\u003d++\u003d\u003d\u003d++++++++???,,,,,,\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,7++I$7?+++I$$I??????IIII??IIIIIIIII????++++++++??????II77ZZ?~\u003d~:~\u003d~:::::\u003d\u003d?+++\u003d++\u003d++++???,:,,,,\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,~7+\u003d+\u003d\u003d\u003d\u003d\u003d+?I??????I??I???IIIIIII???????+???????IIIII77$OZ7+~,:,:,:~~~~~~\u003d+7I?+\u003d+\u003d\u003d++??II\u003d\u003d\u003d\u003d~~\\n\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,,\u003dI+\u003d~~\u003d\u003d\u003d\u003d+???????II?I???IIIII????????????IIIII7I777$ZOOOZ7I?++\u003d~~\u003d\u003d~\u003d\u003d\u003d++Z$7II?+++++???IDDDDD\\n\" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,,~77?+\u003d\u003d\u003d\u003d\u003d+???IIIIII?III????II???????IIIIIIII777777$ZZZZO8ZZ$$77II????????\u003d$Z7I????++???$DDDDD\\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,,:$$$7I?++?7IIIIIIIIIIIII?????II????IIIIIII7I7777$$ZZZZZ$$O88OO8D8OZ7777$$I??O$7IIIIIIII?I$ZZZZ\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,,:$$$$ZZ$$$7IIIIIIIIIIIIIII?IIII?IIIIIIIII77777$$$ZOZ$$7777$ZOOO88D8ZZZZZ$$$$8Z$7777I7III~~~\u003d\u003d\u003d\\n\" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,,,$$$$ZZZZZII7777III77IIIIIIIIIIIIIIIIII77777$$$ZZOZZ$$777777$ZZOOO88888D88OOOOZ$$77777II,,,,,,\\n\" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,,,$$$$ZZZ$7II7I7777777777IIIIIIIIIIIIIII77777$$ZZOOZZ$$7I7IIII7$ZZOOO88888ZZZOOZ$$7$77777,,,,,,\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,,,7777Z$$$777777777777777IIIIIIIIIIIIII777777$$$ZZZZZ$$777IIIIII7$ZOOOOOOZ$ZZOOZ$$$$$$777,,,,,,\\n\" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,,,\u003d77$$$$7777777777777777777777IIIIIII77777777$$$ZOZZ$$$$$$ZZZZZZ$7$$$$$$$$ZZO8OZ$$$$$77~,,,,,,\\n\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,,,:77$$77777777777$77777777777777I7I7IIIII77777$$ZO888D8OODO888OOOOOOOZ$$7$ZOO8OZ$$$$$77.,,,,,,\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \",,,,,:::77$$$777$$$$$77$7$777777777777777777I77777777$8DD8OOO$7Z+?O$ZO8O8O88O$$$ZOOOOZZ$$$$$,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"?????III77$$$$$$7$$$$$$$$$$$777777777777777777777777$O8NMNNNO$$7II$+?77I$Z8ND8ZZOOZZZZ$$$$7I,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"OOOOZZOO7$$$$$$$$$$$$$$$$$$$$$$$$$$$77777$77777777$$ZZ$8ODODD88DNNO++I\u003d+?78NN8OOOZZ$$$$$$$7~,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDD8877$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$7$$$$$$$$7$$I$I+I?7DNDNDO7I$DNN8OZZ$$7$$$$7$7,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDD$$$$$$$$$$$$$$$$$$$$$$$$ZZ$Z$$$$$$$$$$$$$$Z$$77777$$??7+?I?7I$$$NNND8ZZZ$$7777$$777,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDN$$$$$$$$$$$$$$Z$$$$$Z$ZZZZZZZZZZZ$$$$$$$$Z$$777777777$$?7?I?II$INND$$$$$$7777777$7,,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDD$ZZ$$$$$ZZ$$Z$$$$$ZZZZZZZZZZZZZZZZ$Z$$$$$$$$7777II77$7?+I77$$77DDO$$$$$$777777$77?,,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"8DDDDDDDNOZZZZZZ$$$Z$Z$ZZZZZZZZZZZZZZZZZZZZZ$$$$$$$$77777777$$$$$$$$I77$$ZZ7$$$$777777$$$,,,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"8DDDDDDDDNDOZZZZZZZZZ$ZZZZZZZZZZZZZZZZZZZZZZ$$$$777777I777$$$$ZZZZZZ$$ZZZ$$77$$$77$$$$7$,,,,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDNNN8ZOZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ$$$77IIIIII777$$ZZZOOZZZZZZ$$$77$777$$$$$$?,,,,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDNNN8OOZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ$$$7I??+?IIIIII77$ZZOOOZZZ$$777777$$$$$$7,,,,,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDNNND8OOOZZZZZZZZZZZZZZZZZZZZZZZZZZZZ$$7I?+++\u003d\u003d\u003d+++++?I77$$ZZ$$7II7777$$ZZZZ,,,,,,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDNNNN8OOOZZZZZZZZZZZZZZZZ$ZZ$ZZZZZZZZZ$$7?++\u003d\u003d\u003d\u003d\u003d\u003d\u003d~\u003d+++??I77II?I77$$ZZZZ?,,,,,,,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDNNNNN8OOOZZZZZZZZZZZZZZZZ$$$$$$ZZZZZZZ$$7I?+??+++\u003d++??????IIIII7$$ZOOO:,:,,,,,,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDNNNNND8OOOZZZZZZZZZ$$$$$$$$$$$$$ZZOOOZZ$$77IIIII???III????II?7$$OOOOI+:,:,,,,,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDDDNNNND8OOOZZZZZZZZZZ$$$$$$$$$$$$ZOOOOOOZZZ$$$$7$7$7777IIIIII$ZOOOO8888OIII~:,,,,,,,,,\\n\" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDDDDNNNNNZ88OOOZZZZZZZZZZZ$$$$$$$$$$ZO8888OOOOOOOZZZZZ$Z$$$7$ZOOO8DDDDDDD888OOZ$7\u003d,,,,,\\n\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDDDDDDDNNM$88OOOOZZZZZZZZZZZZZ$$$$$$$ZO888888888O8OOOOOOOOOOO8O88DDDDDDDDDDDDDD88O7??:,\\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDDDDDDDNNNNMO8OOOOZZZZZZZZZZZZZZZ$$$$ZZOO88D8888888888888888OO8NNNNDDDDDDDDDDDDDD888O77\\n\" +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDDDDDDDDDNNNM+D88OOOOOOZZZOZZZZZZZZZZZZZZOO8888D8DDDDDDDD88O8DMMNNNNNNNNDDDDDDDDDDDD88O\\n\" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDDDDDDDDDDNNNND?N888OOOOOOOOOOOOOOOZZZOOOOOOOOO888888888888DNMMNNNNNNNNNDDDDDDDDDDDDDDD\\n\" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDDDDDDDDDDDDNNNN7DDD88OOOOOOOOOOOOOOOOOOOOOOOOOO88888888DNNNNNNNNNNNNNNNNNDDDDDDD8DDDDD\\n\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDDDDDDDDDDDDDNNNN8+8ND888888888O8888888888OOO88888888DNNNNNNNNMMMMNNNNNNNNNNNNNDDDD888D\\n\" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDNMIO8DDD88888888D888888D8888888DDNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDDDDD888\\n\" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDNNN:O88NNDINMNNNNNNNNNNNNMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNDDDDDDD8\\n\" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDNDM8Z+ZNNNNNMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNDDDDDD8\\n\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"D888888DDDDDDDDDDDDDDDDDDDDDDDDDNMN88MNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDDNNNNNNNNDDDDDDD\\n\" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"D8DDDDDDDDDDDDDDDDDDDDDDDDDDDDDNNNN8NMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNDDDDNNNNDDDDDDD8\\n\" +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                        \"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDNNNNDNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDDDDDDNNNDDDDDDDD\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders greeting message to user."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\tYOU HAVE SUMMONED THE GREAT KIM JONG DUKE.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\tHURRY UP BEFORE I NUKE YOUR CODE BASE! WHAT DO YOU WANT?\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders Kim Jong Un\u0027s portrait and greeting message to user."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void summonSupremeLeaderAndGreet() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        summonSupremeLeader();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     * Renders farewell message to user."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public static void farewell() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\tBYE, GONNA GO NUKE AMERICA NOW!!!!!!!!!!!\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\" +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"\\t        |\\n\" +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"\\t       / \\\\\\n\" +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"\\t      / _ \\\\\\n\" +"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"\\t     |.o \u0027.|\\n\" +"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"\\t     |\u0027._.\u0027|\\n\" +"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"\\t     |     |\\n\" +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"\\t   ,\u0027|  |  |`.\\n\" +"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"\\t  /  |  |  |  \\\\\\n\" +"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "                \"\\t  |,-\u0027--|--\u0027-.|\\n\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        System.out.println(\"\\t\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\u003cCAKE\u003e\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 132
    }
  },
  {
    "path": "src/test/java/datetime/DateTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package datetime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import datetimeconverter.DateTimeConverter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class DateTimeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void correctDateTimeFormatTest(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"Monday, August 24, 2020 06:00 PM\", DateTimeConverter.formatDateTime(\"24/08/2020 1800\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"Saturday, August 01, 2020 06:00 PM\", DateTimeConverter.formatDateTime(\"1/08/2020 1800\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"Monday, August 24, 2020 06:00 PM\", DateTimeConverter.formatDateTime(\"24-08-2020 1800\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"Saturday, August 01, 2020 06:00 PM\", DateTimeConverter.formatDateTime(\"1-08-2020 1800\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"Monday, August 24, 2020 06:00 PM\", DateTimeConverter.formatDateTime(\"24/8/2020 1800\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"Saturday, August 01, 2020 06:00 PM\", DateTimeConverter.formatDateTime(\"1/8/2020 1800\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"Monday, August 24, 2020 06:00 PM\", DateTimeConverter.formatDateTime(\"24-8-2020 1800\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"Saturday, August 01, 2020 06:00 PM\", DateTimeConverter.formatDateTime(\"1-8-2020 1800\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void wrongDateTimeFormatTest(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"1800 24/08/2020\", DateTimeConverter.formatDateTime(\"1800 24/08/2020\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"1800\", DateTimeConverter.formatDateTime(\"1800\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"24/08/2020\", DateTimeConverter.formatDateTime(\"24/08/2020\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"Date and Time Format Test\", DateTimeConverter.formatDateTime(\"Date and Time Format Test\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 30
    }
  },
  {
    "path": "src/test/java/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    protected TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void init(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        tasks.addTask(\"todo Some Work\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        tasks.addTask(\"deadline Some Deadline /by Some Time\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        tasks.addTask(\"event Some Event /at Some Time\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void testSize() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(3, tasks.getTasks().size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void testAdd() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        tasks.addTask(\"todo Some Other Work\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(4, tasks.getTasks().size());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void testDelete() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        tasks.deleteTask(\"delete 1\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(2, tasks.getTasks().size());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void testMarkDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        tasks.markTaskDone(\"done 1\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"[T][Y] Some Work\", tasks.getTasks().get(0).toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 42
    }
  },
  {
    "path": "src/test/java/task/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package task.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void correctDeadlineRepresentation(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Sample Deadline\", \"Today\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"[D][N] Sample Deadline (by: Today)\", deadline.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"N\", deadline.getStatusIcon());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void testDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Sample Deadline\", \"Today\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        deadline.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"[D][Y] Sample Deadline (by: Today)\", deadline.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"Y\", deadline.getStatusIcon());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 22
    }
  },
  {
    "path": "src/test/java/task/tasks/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package task.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void correctEventRepresentation(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        Event event \u003d new Event(\"Sample Event\", \"Mon 2 - 4pm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"[E][N] Sample Event (at: Mon 2 - 4pm)\", event.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"N\", event.getStatusIcon());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void testDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        Event event \u003d new Event(\"Sample Event\", \"Mon 2 - 4pm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        event.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"[E][Y] Sample Event (at: Mon 2 - 4pm)\", event.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"Y\", event.getStatusIcon());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 22
    }
  },
  {
    "path": "src/test/java/task/tasks/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "package task.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void correctTodoRepresentation(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        Todo todo \u003d new Todo(\"Go to the gym\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"[T][N] Go to the gym\", todo.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"N\", todo.getStatusIcon());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    public void testDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        Todo todo \u003d new Todo(\"Go to the gym\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"[T][Y] Go to the gym\", todo.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "        assertEquals(\"Y\", todo.getStatusIcon());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 22
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "[D][N] submit work (by: Monday, December 02, 2019 06:00 PM)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "[D][N] submit work (by: Monday, December 02, 2019 06:00 PM)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "[D][N] submit work (by: Monday, December 02, 2019 06:00 PM)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "[D][N] submit work (by: Monday, December 02, 2019 06:00 PM)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "[D][N] submit work (by: Tuesday, March 12, 2019 06:00 PM)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "[E][Y] meet friend (at: Saturday, March 02, 2019 06:00 PM)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "[E][Y] meet friend (at: Saturday, March 02, 2019 06:00 PM)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "[E][N] meet friend (at: 1800 02/12/2019)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "[E][N] project meeting (at: Mon 2-4pm)"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "invalidtask"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "todo work"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "todowork"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "deadline return book /byasdasd Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "deadline submit work /by 02/12/2019 1800"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "deadline submit work /by 2/12/2019 1800"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "deadline submit work /by 02-12-2019 1800"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "deadline submit work /by 2-12-2019 1800"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "deadline submit work /by 12/3/2019 1800"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "event meet friend /at 2/3/2019 1800"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "event meet friend /at 12-3-2019 1800"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "event meet friend /at 2-3-2019 1800"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "event meet friend /at 1800 02/12/2019"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "event project meeting /asdasd Mon 2-4pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "done 8"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "find work"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "findwork"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "find work 123"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 29
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "REM reset duke.txt for every run so that we will not carry forward the previous test state"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "break \u003e data/duke.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\datetimeconverter\\*.java ..\\src\\main\\java\\exception\\*.java ..\\src\\main\\java\\parser\\*.java ..\\src\\main\\java\\storage\\*.java ..\\src\\main\\java\\task\\*.java ..\\src\\main\\java\\task\\tasks\\*.java ..\\src\\main\\java\\ui\\*.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 5,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "C:\\Users\\Wong Jun Long\\Documents\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "C:\\Users\\Wong Jun Long\\Documents\\ip\\src\\main\\java\\datetimeconverter\\DateTimeConverter.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "C:\\Users\\Wong Jun Long\\Documents\\ip\\src\\main\\java\\exception\\DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "C:\\Users\\Wong Jun Long\\Documents\\ip\\src\\main\\java\\parser\\Parser.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "C:\\Users\\Wong Jun Long\\Documents\\ip\\src\\main\\java\\storage\\Storage.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "C:\\Users\\Wong Jun Long\\Documents\\ip\\src\\main\\java\\task\\TaskDescription.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "C:\\Users\\Wong Jun Long\\Documents\\ip\\src\\main\\java\\task\\TaskList.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "C:\\Users\\Wong Jun Long\\Documents\\ip\\src\\main\\java\\task\\tasks\\Deadline.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "C:\\Users\\Wong Jun Long\\Documents\\ip\\src\\main\\java\\task\\tasks\\Event.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "C:\\Users\\Wong Jun Long\\Documents\\ip\\src\\main\\java\\task\\tasks\\Task.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "C:\\Users\\Wong Jun Long\\Documents\\ip\\src\\main\\java\\task\\tasks\\Todo.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junlong4321"
        },
        "content": "C:\\Users\\Wong Jun Long\\Documents\\ip\\src\\main\\java\\ui\\UI.java"
      }
    ],
    "authorContributionMap": {
      "junlong4321": 12
    }
  }
]
