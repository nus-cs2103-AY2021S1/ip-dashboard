[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    mainClassName \u003d \"src.main.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "bangyiwu": 16
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### **Feature 1:** Adding Tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Schedule deadlines, events and todos for you day to day activities"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### **Feature 2:** Viewing Schedule"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "View your schedule, check what is due by a certain date, what is happening on a certain date"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### **Feature 3:** Get Reminders"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Define a custom range of dates and view all events/deadlines within that range"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "## *Adding tasks*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### `deadline` - Create a new deadline task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`deadline (task description) /by (date)`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "e.g. `deadline sleep /by 2020-12-09`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`Aight new task for you:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "[D][X] sleep (by: Dec 9 2020)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Now you got 1 task(s) waiting man`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### `event` - Schedule an event"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`event (task description) /at (date)`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "e.g. `event sleep /at 2020-12-09`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`Aight new task for you:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "[E][X] sleep (at: Dec 9 2020)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Now you got 1 task(s) waiting man`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### `todo` - List all events happening on a certain date"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`todo (task description)`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "e.g. `todo sleep`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`Aight new task for you:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " [T][X] sleep "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " Now you got 1 task(s) waiting man`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "## *Manage your tasks*"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### `delete` - Delete a task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`delete (task id)`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "e.g. `delete 1`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`Gotchu, I am removing "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "[T][X] sleep"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Now you got 1 task(s) waiting man`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`done (task id)`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "e.g. `done 1`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`Gratz, you finished this dawg:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "[T][✓] sleep`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "## *View your tasks*"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### `by` - Check what deadlines you have *by* a certain date"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`by (date)`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "e.g. `by 2020-12-09`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`By this day, you have:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "*deadlines due before the date*"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "[A total of 1 deadline(s)]`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### `find` - Search your tasks containing a certain keyword"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`find (keyword)`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "e.g. `find sleep`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`1. [T][X] sleep`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### `list` - List all tasks"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`Here\u0027s your schedule lil dude 1. [T][X] sleep`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### `on` - List all events happening on a certain date"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`on (date)`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "e.g. `on 2020-12-09`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`On this day, you have: [E][X] sleep (at: Dec 9 2020)`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### `reminder` - List all events happening on a certain date"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`reminder (range)`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "e.g. `reminder 100`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`In 100 days, you have: 1.[E][X] sleep (at: Dec 9 2020) [A total of 1 reminder(s)]`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "## *Other user commands*"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "### `bye` - Exits the program"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "`Duke closes`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "bangyiwu": 160
    }
  },
  {
    "path": "out/production/ip/duke/resources/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 1
    }
  },
  {
    "path": "out/production/ip/duke/resources/todo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "D/0/ sleep /2020-01-12"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "E/0/ drink /2019-12-01"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "T/0/ 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "T/0/ book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "T/0/ read book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "T/0/ steal book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "T/0/ return book"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 8
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 11
    }
  },
  {
    "path": "src/main/java/duke/Command/ByC.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class ByC extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public ByC(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private boolean isBy(Deadline d, LocalDate date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return (d.by.isBefore(date) || d.by.equals(date));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String execute(Ui ui, TaskList todoList, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        assert input.length() \u003e 2 : \"no date entered\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            LocalDate checkBy \u003d LocalDate.parse(input.substring(3));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d \"By this day, you have: \\n\" ;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            int deadCount \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            for (Task checkDead : todoList.todoList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                if (checkDead instanceof Deadline \u0026\u0026 isBy((Deadline)checkDead, checkBy)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    result +\u003d checkDead.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    deadCount++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            if (deadCount \u003e 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                result +\u003d \"   [ A total of \" + deadCount + \" deadline(s)]\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                result +\u003d \"      [ You have no deadlines by this day ]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            throw new DukeException(\"You didn\u0027t enter date!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 49
    }
  },
  {
    "path": "src/main/java/duke/Command/ByeC.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class ByeC extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String execute(Ui ui, TaskList todoList, Storage store){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String result \u003d \"See you later alligator!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 19
    }
  },
  {
    "path": "src/main/java/duke/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String execute(Ui ui, TaskList tl, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String result \u003d \"I don\u0027t understand, did you type an invalid command?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 18
    }
  },
  {
    "path": "src/main/java/duke/Command/DeadlineC.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class DeadlineC extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public DeadlineC(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String execute(Ui ui, TaskList todoList, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        assert input.length() \u003e 7 : \"no date entered\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            String fullDL \u003d input.substring(9);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            String dlName \u003d fullDL.split(\"/by\")[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            LocalDate dlTime \u003d LocalDate.parse(fullDL.split(\"/by \")[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            Deadline dl \u003d new Deadline(dlName, dlTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            todoList.addDead(dl);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d \"Aight new task for you: \\n\" + dl.toString() +\"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d \"Now you got \" + todoList.size() + \" task(s) waiting man\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            store.write(dl);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            throw new DukeException(\"You either didn\u0027t enter a date or a task\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 37
    }
  },
  {
    "path": "src/main/java/duke/Command/DeleteC.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class DeleteC extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public DeleteC(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String execute(Ui ui, TaskList todoList, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        assert input.length() \u003e 6 : \"no date entered\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            int deleteID \u003d Integer.parseInt( input.substring(7)) - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            Task deleted \u003d todoList.get(deleteID);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            todoList.deleteTask(deleteID);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            store.overwrite(todoList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d \"Gotchu, I am removing \\n\" + deleted.toString() + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d \"Now you got \" + todoList.size() + \" task(s) waiting man\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            throw new DukeException(\"You didn\u0027t enter the ID of the task you want to delete!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            throw new DukeException(\"There is no task with that ID, use list to find the \" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    \"ID of the task you want to delete\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 43
    }
  },
  {
    "path": "src/main/java/duke/Command/DoneC.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class DoneC extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public DoneC(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String execute(Ui ui, TaskList todoList, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        assert input.length() \u003e 4 : \"no id entered\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            int taskID \u003d Integer.parseInt( input.substring(5)) - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            Task task \u003d todoList.get(taskID);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d \"Gratz, you finished this dawg :\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d task.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            throw new DukeException(\"You didn\u0027t enter a task you want to mark as done!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 39
    }
  },
  {
    "path": "src/main/java/duke/Command/EventC.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class EventC extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public EventC(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String execute(Ui ui, TaskList todoList, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        assert input.length() \u003e 5 : \"no date entered\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            String fullE \u003d input.substring(6) ;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            String eventName \u003d fullE.split(\"/at\")[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            LocalDate eventTime \u003d LocalDate.parse(fullE.split(\"/at \")[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            Event e \u003d new Event(eventName, eventTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            todoList.addEvent(e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d \"Aight new task for you: \\n\" + e.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d \"\\nNow you got \" + todoList.size() + \" task(s) waiting man\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            store.write(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            throw new DukeException(\"You didn\u0027t enter a date!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 38
    }
  },
  {
    "path": "src/main/java/duke/Command/FindC.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class FindC extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public FindC(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String execute(Ui ui, TaskList todoList, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        assert input.length() \u003e 4 : \"no keyword entered\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            int findCount \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            for (Task found: todoList.todoList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                if (found.description.contains(keyword)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    result +\u003d findCount + 1 + \".\" + found.toString() + \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    findCount++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            if (findCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                result +\u003d \"No related tasks found\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            throw new DukeException(\"You didn\u0027t enter a keyword!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 47
    }
  },
  {
    "path": "src/main/java/duke/Command/ListC.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class ListC extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String execute(Ui ui, TaskList todoList, Storage store){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        result +\u003d \"Here\u0027s your schedule lil dude\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        for (Task task :"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                todoList.getTodoList()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d todoList.getID(task) + 1 + \". \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        if (todoList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d \"Your life is empty now bruh\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 28
    }
  },
  {
    "path": "src/main/java/duke/Command/OnC.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class OnC extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public OnC(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String execute(Ui ui, TaskList todoList, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        assert input.length() \u003e 2 : \"no date entered\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            LocalDate checkOn \u003d LocalDate.parse(input.substring(3).trim());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d \"On this day, you have: \\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            int eventCount \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            for (Task checkEvent : todoList.getTodoList()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                if (checkEvent instanceof Event \u0026\u0026 ((Event) checkEvent).at.equals(checkOn)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    result +\u003d checkEvent.toString() + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    eventCount++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            if (eventCount \u003e 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                result +\u003d \"   [ A total of \" + eventCount + \" event(s)]\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                result +\u003d \"   [ You have no events on this day ]\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            throw new DukeException(\"You didn\u0027t enter a date!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 45
    }
  },
  {
    "path": "src/main/java/duke/Command/ReminderC.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class ReminderC extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public ReminderC(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * checks if the deadline is within the date range."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param reminder"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param today"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public boolean checkDeadline(Deadline d, LocalDate reminder, LocalDate today) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return d.by.isBefore(reminder) \u0026\u0026 ( d.by.isAfter(today) || d.by.isEqual(today));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * checks if the event is within the date range."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param reminder"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param today"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public boolean checkEvent(Event e, LocalDate reminder, LocalDate today) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return e.at.isBefore(reminder) \u0026\u0026 ( e.at.isAfter(today) || e.at.isEqual(today));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Takes the range from the input and returns all events within that range as a reminder."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param todoList"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param store"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String execute(Ui ui, TaskList todoList, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            int range \u003d Integer.parseInt(input.substring(9));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            LocalDate today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            LocalDate by \u003d today.plusDays(range);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            result +\u003d \"In \" + range + \" days, you have:\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            int reminderCount \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            for (Task task : todoList.todoList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    if (checkDeadline((Deadline) task, by, today)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                        reminderCount++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                        result +\u003d reminderCount + \". \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                if (task instanceof Event) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    if (checkEvent((Event) task, by, today)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                        reminderCount++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                        result +\u003d reminderCount + \". \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            if (reminderCount \u003e 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                result +\u003d \"   [ A total of \" + reminderCount + \" reminder(s)]\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                result +\u003d \"      [ You have no events or deadlines by this day ]\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            throw new DukeException(\"You didn\u0027t enter a range!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 87
    }
  },
  {
    "path": "src/main/java/duke/Command/TodoC.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class TodoC extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public TodoC(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String execute(Ui ui, TaskList todoList, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        assert input.length() \u003e 4 : \"no date entered\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            String name \u003d input.substring(5);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            if (name.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                throw new DukeException(\"no task indicated\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                Todo td \u003d new Todo(name);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                todoList.addTodo(td);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                result +\u003d \"Aight new task for you: \\n\" + td.toString() + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                result +\u003d \"Now you got \" + todoList.size() +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                        \" task(s) waiting man\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                store.write(td);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            throw new DukeException(\"You didn\u0027t enter a task\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 43
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private DialogBox(String text, Image img, boolean isDuke) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DukeDialogBox.fxml\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        var db \u003d new DialogBox(text, img, true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 75
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import com.sun.source.util.TaskListener;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * The Duke class is the main class and drives the program"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class Duke{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private duke.Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Constructor for a new driver system"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        storage \u003d new Storage(\"src/main/java/duke/text/todo.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            System.out.println(e.getMessage());;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            output \u003d c.execute(ui, tasks, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            output \u003d (e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 55
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * The DukeException is a custom exception class for Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                DialogBox.getDukeDialog(d.getWelcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        assert response !\u003d \"\" : \"duke AI wasn\u0027t able to formulate a response\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 55
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.Command.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * The Parser class comprehends and carries out the user commands"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * It is used in the Ui class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Constructor for loading deadlines using switch and case"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param input   the user\u0027s command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public static Command parse(String input) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        assert input !\u003d \"\" : \"input is null\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        String command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return new ByeC();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return new ListC();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return new DoneC(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return new TodoC(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return new DeadlineC(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return new EventC(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return new DeleteC(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        case \"on\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return new OnC(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        case \"by\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return new ByC(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return new FindC(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        case \"reminder\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return new ReminderC(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return new Command();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 51
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * The Storage class deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    String filepath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Constructor for a new driver system."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param filepath  the file path of the schedule text file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Writes tasks into the schedule file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param task      the task that\u0027s to be written into the text file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public void write(Task task) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        FileWriter todoWriter \u003d new FileWriter(this.filepath, true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        todoWriter.write(task.splitToString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        todoWriter.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Loads a schedule file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @return  a TaskList that has all the tasks in the schedule text file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(this.filepath));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                String[] taskArr \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                if (taskArr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    todoList.add(new Todo(taskArr[2], taskArr[1]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                } else if (taskArr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    todoList.add(new Event(taskArr[1], taskArr[2], LocalDate.parse(taskArr[3])));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                } else if (taskArr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                    todoList.add(new Deadline(taskArr[1], taskArr[2], LocalDate.parse(taskArr[3])));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            throw new DukeException(\"error! i couldn\u0027t read the data file correctly, please do a system check!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return todoList;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Writes tasks into the schedule file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param tl      the TaskList that\u0027s to be over written into the text file"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public void overwrite(TaskList tl) throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        FileWriter todoWriter \u003d new FileWriter(this.filepath, false);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        for (Task task: tl.todoList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            todoWriter.write(task.splitToString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        todoWriter.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 84
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * The TaskList class contains the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.todoList \u003d ls;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public void addTodo(Todo todo){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.todoList.add(todo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public void addEvent(Event event){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.todoList.add(event);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public void addDead(Deadline deadline){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.todoList.add(deadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public void deleteTask(int id){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.todoList.remove(id);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public int size(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return todoList.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public Task get(int id){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return todoList.get(id);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public int getID(Task task){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return todoList.indexOf(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public ArrayList\u003cTask\u003e getTodoList(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return todoList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 51
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * The Ui class deals with interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public  Ui(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public static String showWelcome(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return \"What\u0027s new scooby doo?\\n\" + \"How can I help you today?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * The Deadline class acts as a task that has a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * It extends the parent class Task and has a LocalDate by to represent the specified deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public LocalDate by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Constructor for new deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param description   the description of the deadline task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param by            the specified deadline for the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Constructor for loading deadlines."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param description   the description of the deadline task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param by            the specified deadline for the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param done          specifies whether the task is completed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public Deadline(String done, String description, LocalDate by) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.isDone \u003d (done \u003d\u003d \"1\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Display deadline."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @return deadline in a string format."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * How deadline is written into the text file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @return deadline in a string format"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String splitToString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return \"\\n\" + \"D\" + \"/\" + this.ifDone() + \"/\" + this.description + \"/\" + this.by.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * The Event class acts as a task that occurs on a specific day."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * It extends the parent class Task and has a LocalDate at to represent the specified date"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public LocalDate at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Constructor for new event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param description   the description of the event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param at            the specified date for the event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Constructor for loading deadlines."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param description   the description of the event"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param at            the specified date for the event"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param done          specifies whether the event is completed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public Event(String done, String description, LocalDate at) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.isDone \u003d (done \u003d\u003d \"1\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Display event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @return event in a string format"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * How event is written into the text file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @return event in a string format"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String splitToString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return \"\\n\" + \"E\" + \"/\" + this.ifDone() + \"/\" + this.description + \"/\" + this.at;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * The Task class is the parent class for deadline, event and todos."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Constructor for new Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @param description   the description of the deadline task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Constructor for new Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @return a string that symbolises if the task is done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[X]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @return 1 or 0 depending on if the task is done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public int ifDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * Displays the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @return the task in String form"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * How the task is to be written."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     * @return the task in String form"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String splitToString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return  this.getStatusIcon() + \"|\" + this.description;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * The Todo class acts as a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " * It extends the parent class Task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public Todo(String description, String done) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        this.isDone \u003d (done \u003d\u003d \"1\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    public String splitToString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        return \"\\n\" + \"T\" + \"/\" + this.ifDone() + \"/\" + this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 29
    }
  },
  {
    "path": "src/main/java/duke/text/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 1
    }
  },
  {
    "path": "src/main/java/duke/text/todo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "T/1/sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "E/0/sleep /2020-12-09"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "T/0/sleep "
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 4
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"dialogue-label\" stylesheets\u003d\"@dialogBox.css\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 16
    }
  },
  {
    "path": "src/main/resources/view/DukeDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"dialogue-label\" stylesheets\u003d\"@dukeDialogBox.css\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "bangyiwu": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "if ! javac /Users/viromics/Desktop/CS2103/ip/ip/src/main/java/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bangyiwu"
        },
        "content": "java -cp ../src/main/java/duke Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "bangyiwu": 2
    }
  }
]
