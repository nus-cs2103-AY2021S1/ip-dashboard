[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class Deadline extends ToDo {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public Deadline(String desc, String time) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), time);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 11
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javax.management.InvalidAttributeValueException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        boolean hasNext \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        while(hasNext) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            System.out.println(\"-----------------\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                hasNext \u003d processLine(sc);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }  catch(DukeException ex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            System.out.println(\"-----------------\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public static boolean processLine(Scanner sc) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        ArrayList\u003cString\u003e tokens \u003d new ArrayList\u003cString\u003e(Arrays.asList(str.split(\" \")));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        if (tokens.size()\u003d\u003d0||tokens.get(0).equals(\"\")){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            throw new EmptyCommandException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        boolean bl;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        DukeCommand command \u003d DukeCommand.getCommand(tokens.get(0));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            throw new InvalidCommandException(\"I do not recognise this command!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        if (command \u003d\u003d DukeCommand.BYE){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            bl \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (command \u003d\u003d DukeCommand.DONE) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (tokens.size() \u003c 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new MissingArgumentException(\"Must provide number after done!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                int ind;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                ind \u003d Integer.parseInt(tokens.get(1))-1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                } catch(Exception ex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new InvalidCommandException(tokens.get(1)+\" is not a number!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (tasks.size()\u003c\u003dind || ind \u003c 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new DukeException(\"Task \"+ tokens.get(1) +\" does not exist!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                tasks.get(ind).completeTask();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                System.out.println(tasks.get(ind).toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            } else if (command \u003d\u003d DukeCommand.DELETE) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (tokens.size() \u003c 2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new MissingArgumentException(\"Must provide number after delete!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                int ind;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    ind \u003d Integer.parseInt(tokens.get(1)) - 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                } catch(Exception ex) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new InvalidCommandException(tokens.get(1) + \" is not a number!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (tasks.size()\u003c\u003dind || ind \u003c 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new DukeException(\"Task \" + tokens.get(1) + \" does not exist!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                Task task \u003d tasks.remove(ind);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                System.out.println(\"I have removed this task\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                System.out.println(task.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                System.out.println(\"You now have \" + tasks.size() + \" tasks left!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }else if (command \u003d\u003d DukeCommand.LIST) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                int i\u003d0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                for(Task task:tasks){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    System.out.println(String.format(\"%d.%s\", ++i, task));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                Task task \u003d addNewTask(command, tokens);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                        String.format(\"I have added this task: \\n\\t%s\\nYou now have %d tasks in the list\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                                task.toString(), tasks.size()));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            bl \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return bl;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public static Task addNewTask(DukeCommand command, ArrayList\u003cString\u003e tokens) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        if (command \u003d\u003d DukeCommand.TODO) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (tokens.size() \u003c 2) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                throw new MissingArgumentException(\"todo cannot be empty!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            return new ToDo(stringCombiner(tokens, 1, tokens.size()));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } else if (command \u003d\u003d DukeCommand.DEADLINE) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            int ind \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            boolean found\u003d false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            while (!found \u0026\u0026 ind \u003c tokens.size()-1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                ind++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (tokens.get(ind).equals(\"/by\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    found \u003d true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (!found) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                throw new MissingArgumentException(\"Deadline need an /by time!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (ind \u003d\u003d 1) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                throw new MissingArgumentException(\"Deadline needs a name!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (ind \u003d\u003d tokens.size()-1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                throw new MissingArgumentException(\"Deadline needs a deadline time!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            return new Deadline(stringCombiner(tokens, 1, ind),"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    stringCombiner(tokens, ind+1, tokens.size()));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            int ind \u003d 0;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            boolean found\u003d false;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            while (!found \u0026\u0026 ind \u003c tokens.size()-1) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                ind++;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (tokens.get(ind).equals(\"/at\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    found \u003d true;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (!found) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                throw new MissingArgumentException(\"Event need an /at time!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (ind \u003d\u003d 1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                throw new MissingArgumentException(\"Event needs a name!\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (ind \u003d\u003d tokens.size()-1) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                throw new MissingArgumentException(\"Event needs a event time!\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            return new Event(stringCombiner(tokens, 1, ind),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    stringCombiner(tokens, ind+1, tokens.size()));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public static String stringCombiner(ArrayList\u003cString\u003e tokens, int start, int end) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        for (int i \u003d start; i \u003c end; i++) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            str.append(tokens.get(i));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (i !\u003d end - 1) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                str.append(\" \");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 147,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public enum DukeCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    LIST, DELETE, TODO, DONE, DEADLINE, EVENT, BYE;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public static DukeCommand getCommand(String str) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        switch(str) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                return LIST;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                return DELETE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                return TODO;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                return DONE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                return DEADLINE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                return EVENT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                return BYE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 23
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    String error;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return \"Invalid Command! \" + error;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 10
    }
  },
  {
    "path": "src/main/java/EmptyCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class EmptyCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public EmptyCommandException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(\"Command is empty!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public Event(String desc, String time) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), this.time);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 12
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class InvalidCommandException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public InvalidCommandException(String str) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 5
    }
  },
  {
    "path": "src/main/java/MissingArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class MissingArgumentException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public MissingArgumentException(String str) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(\"Missing Argument: \"+ str);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    protected boolean done \u003d false;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return (this.done ? \"[✓]\":\"[✘]\")+\" \"+this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 19
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public ToDo(String desc) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "tttt"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "todo 123"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "event help /at asd"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "deadline uuu /by jjj"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "done -5"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "event help2 /at asd2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "deadline uuu2 /by jjj2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "event help2 /at"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "event 2223"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "deadline 11"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "pooty3": 21
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "pooty3": 1,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "pooty3": 3,
      "-": 36
    }
  }
]
