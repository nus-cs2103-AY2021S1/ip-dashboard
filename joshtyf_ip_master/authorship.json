[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 60
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Duke is a simple task manager that can help you keep track of your todos,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "deadlines and events."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "1. Ensure that you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "2. Download the latest Duke.jar from here."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "4. Double-click the file to start the app. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "5. Talk to Duke to manage your tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "6. Refer to [Features](#features) below for details of each command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "1. [Add a todo](#add-a-todo)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "2. [Add a deadline](#add-a-deadline)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "3. [Add an event](#add-an-event)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "4. [List all tasks](#list-all-tasks)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "5. [Delete a task](#delete-a-task)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "6. [Mark a task as complete](#mark-task-complete)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "7. [Exit](#exit)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "8. [Cancel](#cancel)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "9. [Error](#error)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "### Add a todo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Adds a todo"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Format: `/todo`, `\u003ctodo name\u003e`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "![todo](Todo.png)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "### Add a deadline"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Adds a deadline."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Format: `/deadline`, `\u003cdeadline name\u003e`, `\u003cdeadline due date\u003e`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Deadline due date should be given in this format: `dd mm yyyy`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "![deadline 1](Deadline1.png) ![deadline 2](Deadline2.png)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "### Add an event"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Adds an event"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Format: `/event`, `\u003cevent name\u003e`, `\u003cevent start time\u003e`, `\u003cevent end time\u003e`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Event timings should be given in this format: `dd mm yyyy HH:mm`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "![event 1](Event1.png) ![event 2](Event2.png)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "### List all tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Lists all tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Format: `/list`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "![list](List.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "### Delete a task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Deletes a task. Task is indicated by its number in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "The number can be checked with the command `list`."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Format: `/delete`, `\u003ctask number\u003e`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "![delete 1](Delete1.png) ![delete 2](Delete2.png)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "### Mark task complete"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Marks a task as completed. Task is indicated by its number in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "The number can be checked with the command `list`."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Format: `/complete`, `\u003ctask number\u003e`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "![completed 1](Complete1.png) ![completed 2](Complete2.png)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "### Exit"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Exits the application."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Format: `/bye`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "![bye](Bye.png)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "### Cancel"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Cancels an ongoing command."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Format: `/cancel`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "![cancel 1](Cancel1.png) ![cancel 2](Cancel2.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "### Error"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Displays an error message when a command is expected but "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "a wrong one is given."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "![error](Error.png)"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 88,
      "-": 20
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":end"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 104
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.text.TextFlow;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private TextFlow textContainer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    final private String DUKE_DIALOG_CSS \u003d \"-fx-background-color: #CDEDFD; -fx-border-radius: 10; -fx-background-radius: 10; -fx-padding: 10;\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Also changes the colour of the dialog box."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        textContainer.setStyle(DUKE_DIALOG_CSS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns the user\u0027s \u003ccode\u003eDialogBox\u003c/code\u003e that has both the text and user image."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param text the user\u0027s text to be shown in the \u003ccode\u003eDialogBox\u003c/code\u003e."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param img the user\u0027s image to be shown in the \u003ccode\u003eDialogBox\u003c/code\u003e."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a \u003ccode\u003eDialogBox\u003c/code\u003e."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns Duke\u0027s \u003ccode\u003eDialogBox\u003c/code\u003e that has both the text and Duke image."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param text Duke\u0027s response text to be shown in the \u003ccode\u003eDialogBox\u003c/code\u003e."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param img Duke\u0027s image to be shown in the \u003ccode\u003eDialogBox\u003c/code\u003e."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a \u003ccode\u003eDialogBox\u003c/code\u003e."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 80
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.commands.CommandHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * Main class that will oversee the running of the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private CommandHandler commandHandler;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Command cmd;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.commandHandler \u003d new CommandHandler();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            this.taskManager \u003d new Storage().load(new TaskManager());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            System.out.println(\"OOPS error loading storage: \" + e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns a response depending on the user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the response."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        // If a command has not been set yet or if the ongoing command has been completed"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (cmd \u003d\u003d null || cmd.isDone()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            Command newCmd \u003d commandHandler.parseCommand(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            newCmd.init(taskManager, ui);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setCommand(newCmd);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return newCmd.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                if (input.equals(\"/cancel\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    // replace the current command with a cancel command"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    cmd \u003d commandHandler.parseCommand(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                cmd.execute(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return cmd.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return \"OOPS! Something went wrong while executing:\\n\" + e.getMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private void setCommand(Command cmd) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 54,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * An exception class that handles user input exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param error the error message to show"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 14
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 13
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Starts the GUI using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param stage the stage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * Controller for duke.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Pikachu.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Piplup.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (input.equals(\"/bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            // Create a timer so that the user has time to read the goodbye message"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            new Timer().schedule(new TimerTask() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                public void run () {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }, 2000);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 65
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eStorage\u003c/code\u003e handles all file read and writes."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    final static String TASKS_TEXT_FILE_PATH \u003d \"./data/tasks.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Loads the information from the file \"duke.tasks.txt\" into a"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * \u003ccode\u003eList\u003c/code\u003e. Since each task from the file is"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * comma seperated, it splits each string into a string array using \",\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * as a delimiter. Then it creates objects of the child classes of"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * \u003ccode\u003eTask\u003c/code\u003e according to the information provided."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a list of tasks as a \u003ccode\u003eList\u003c/code\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if there is an IOexception while creating a new empty file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public TaskManager load(TaskManager tm) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        List\u003cTodo\u003e todos \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        List\u003cDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        List\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            File f \u003d new File(TASKS_TEXT_FILE_PATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                String taskInfo \u003d sc.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                String[] taskArr \u003d taskInfo.split(\",\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                switch (taskArr[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    Todo todo \u003d new Todo(taskArr[2]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    if (isMarkedDone(taskArr)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        todo.setCompleted();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    todos.add(todo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    Deadline deadline \u003d new Deadline(taskArr[2], taskArr[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    if (isMarkedDone(taskArr)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        deadline.setCompleted();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    deadlines.add(deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    Event event \u003d new Event(taskArr[2], taskArr[3], taskArr[4]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    if (isMarkedDone(taskArr)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        event.setCompleted();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    events.add(event);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    throw new DukeException(\"Unrecognised category character when loading from tasks.txt\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            tm.initialiseTodos(todos);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            tm.initialiseDeadlines(deadlines);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            tm.initialiseEvents(events);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return tm;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                System.out.println(\"File \\\"tasks.txt\\\" does not exist. Attempting to create one for you.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                File file \u003d new File(TASKS_TEXT_FILE_PATH);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                System.out.println(\"Successfully created file tasks.txt\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return tm;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            } catch (IOException io) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                throw new DukeException(io.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private boolean isMarkedDone(String[] taskArr) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return taskArr[1].equals(\"1\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Writes the list of tasks to the file \"tasks.txt\"."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param fileContent the comma seperated string information to be written to the file"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if something went wrong while saving to the file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public static void writeTasksFile(String fileContent) throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            FileWriter fw \u003d new FileWriter(TASKS_TEXT_FILE_PATH, false);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            fw.write(fileContent);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"Something went wrong while saving to the backend: \" + e.getMessage());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 108
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eUi\u003c/code\u003e contains all the methods and information needed to diplay"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * the user interface on the screen."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the name of a todo."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the question"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String askTodo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"What is the name of your Todo?\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the name of a deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the question"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String askDeadlineName() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"What is the name of your Deadline?\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the due date of the deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the question"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String askDeadlineDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"When is the deadline? (Give in this format: day month year)\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the name of the event."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the question"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String askEventName() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"What is the name of your Event?\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the start time of the event."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the question"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String askEventStartTime() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"When is the start of your event? (Give in this format: day month year hour:min)\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to to ask for the end time of the event."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the question"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String askEventEndTime() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"When is the end of your event? (Give in this format: day month year hour:min)\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the number of the"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * task to be marked as completed."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the question"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String askTaskNumToComplete() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"What is the number of the task you wish to mark as complete?\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Displays a message to indicating a task has been marked as completed."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param task the task that has completed"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the message indicated the task has been marked as completed"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String taskCompleted(Task task) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"Nice, I\u0027ve marked this task as done!\\n\" + task.toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the number of the"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * task to be deleted."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the question"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String askTaskNumToDelete() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"What is the number of the task you wish to delete?\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Show interface to ask for a keyword."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the question"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String askForKeyword() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"Give me a keyword to search for\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 98
    }
  },
  {
    "path": "src/main/java/duke/commands/CancelCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class CancelCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets the duke response telling the user that the current command has been cancelled."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param input the user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setResponse(\"I\u0027ve cancelled your current actions\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void init(TaskManager tm, Ui ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setResponse(\"There\u0027s nothing to cancel\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * Command is the abstract base class for all commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * Each command will have different stages in its life cycle and will always"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * be initialised with zero."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * Each stage will have a different response to be displayed to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    protected TaskManager tm;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    protected int stage \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets utility tools that will be used by child command classes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tm the task manager."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param ui the ui object that will output the user interface."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void setUtility(TaskManager tm, Ui ui) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.tm \u003d tm;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Different child command classes will have different behaviours"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * when the method \u003ccode\u003eexecute\u003c/code\u003e is called."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param input the user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if an exception has occured while executing the command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public abstract boolean execute(String input) throws DukeException;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Initialises the command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Different child command classes will have different behaviours."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tm the task manager."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public abstract void init(TaskManager tm, Ui ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    protected void incrementStage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        stage++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    protected void setResponse(String response) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.response \u003d response;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns the value of \u003ccode\u003eisDone\u003c/code\u003e."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a boolean value."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    protected void setDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        assert (response !\u003d null) : \"response has not been initialised\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 74
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * Represents a command handler."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class CommandHandler {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Parses the \u003ccode\u003ecmd\u003c/code\u003e and returns"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * an appropriate \u003ccode\u003eCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param cmd the string command to be parsed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a \u003ccode\u003eCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public Command parseCommand(String cmd) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case \"/bye\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case \"/list\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case \"/todo\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return new TodoCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case \"/deadline\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return new DeadlineCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case \"/event\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return new EventCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case \"/complete\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return new CompleteCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case \"/delete\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return new DeleteCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case \"/find\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return new FindCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case \"/cancel\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return new CancelCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return new ErrorCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 37
    }
  },
  {
    "path": "src/main/java/duke/commands/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eCompleteCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of marking tasks as complete."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class CompleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Marks a task as complete."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if an invalid task number was given by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute(String input) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            Task task \u003d tm.markDone(Integer.parseInt(input));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setResponse(ui.taskCompleted(task));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"I couldn\u0027t understand your input. Please give a number\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets the utility tools \u003ccode\u003etm\u003c/code\u003e and \u003ccode\u003eui\u003c/code\u003e."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Checks if there are any tasks in the task manager. If there are tasks, this will set the response to ask"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * for a task number to mark complete."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * If not, then the command will be set as done and set a response indicating that there are no tasks to mark."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tm the task manager."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void init(TaskManager tm, Ui ui) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setUtility(tm, ui);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (tm.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setResponse(\"The task list is empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setResponse(ui.askTaskNumToComplete());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 49
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eDeadlineCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of adding deadlines to the task manager."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String deadlineName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String deadlineDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private void setDeadlineName(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        deadlineName \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private void setDeadlineDate(String date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        deadlineDate \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Adds a \u003ccode\u003eDeadline\u003c/code\u003e to the task manager."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param input the user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if the construction of the \u003ccode\u003eDeadline\u003c/code\u003e object results in an \u003ccode\u003eexception\u003c/code\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute(String input) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        switch (stage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setDeadlineName(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setResponse(ui.askDeadlineDate());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            incrementStage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setDeadlineDate(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            tm.addDeadline(new Deadline(deadlineName, deadlineDate));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setResponse(\"Deadline added\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets the utility tools \u003ccode\u003etm\u003c/code\u003e and \u003ccode\u003eui\u003c/code\u003e."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * In addition, it sets the initial response to ask for the name"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * of the deadline to be created."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tm the task manager."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void init(TaskManager tm, Ui ui) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setUtility(tm, ui);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setResponse(ui.askDeadlineName());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 61
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eDeleteCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of deleting tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Deletes a task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if an invalid task number was given by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute(String input) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            Task task \u003d tm.deleteTask(Integer.parseInt(input));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            String response \u003d String.format(\"Successfully removed the following task:\\n %s\", task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setResponse(response);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"I couldn\u0027t understand your input. Please give a number.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets the utility tools \u003ccode\u003etm\u003c/code\u003e and \u003ccode\u003eui\u003c/code\u003e."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Checks if there are any tasks in the task manager. If there are tasks, this will set the response to ask"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * for a task number to delete."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * If not, then the command will be set as done and set a response indicating that there are no tasks to delete."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tm the task manager."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void init(TaskManager tm, Ui ui) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setUtility(tm, ui);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (tm.isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setResponse(\"The task list is empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setResponse(ui.askTaskNumToDelete());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 51
    }
  },
  {
    "path": "src/main/java/duke/commands/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eErrorCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the situation when the user gives an invalid command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Calls the ui class to output an error message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Initialises the response with an error message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tm the task manager."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void init(TaskManager tm, Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setResponse(\"Oops, you gave an invalid command! Commands need to start a with \\\"/\\\".\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eEventCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of adding events to the task manager."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String eventName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String eventStartTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String eventEndTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private void setEventName(String name) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        eventName \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private void setEventStartTime(String startTime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        eventStartTime \u003d  startTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private void setEventEndTime(String endTime) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        eventEndTime \u003d endTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Adds an \u003ccode\u003eEvent\u003c/code\u003e to the task manager."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param input the user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if the construction of the \u003ccode\u003eEvent\u003c/code\u003e object results in an \u003ccode\u003eexception\u003c/code\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute(String input) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        switch (stage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setEventName(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setResponse(ui.askEventStartTime());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            incrementStage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setEventStartTime(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setResponse(ui.askEventEndTime());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            incrementStage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setEventEndTime(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            tm.addEvent(new Event(eventName, eventStartTime, eventEndTime));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setResponse(\"Event added\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setEventEndTime(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            setDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets the utility tools \u003ccode\u003etm\u003c/code\u003e and \u003ccode\u003eui\u003c/code\u003e."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * In addition, sets the initial response to ask for the name of the"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * event to be created."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tm the task manager."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void init(TaskManager tm, Ui ui) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setResponse(ui.askEventName());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setUtility(tm, ui);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 71
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eExitCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of exiting duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns true."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Note that this method won\u0027t be called for ExitCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param input the user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets the initial response to be \"Goodbye\"."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tm the task manager."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void init(TaskManager tm, Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setResponse(\"Goodbye!\"); // TODO: refactor"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eFindCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * It handles the execution of finding tasks given a particular keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Receives the keyword to search for and sets the response to be the result of the tasks found."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param input the user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String result \u003d tm.findTask(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setResponse(result);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets the inital response to ask for the keyword to search for."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * In addition, it sets the utility tools \u003ccode\u003etm\u003c/code\u003e and \u003ccode\u003eui\u003c/code\u003e."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tm the task manager."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void init(TaskManager tm, Ui ui) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setResponse(ui.askForKeyword());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setUtility(tm, ui);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 36
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eListCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of listing tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns true since there is only one initial response which has been set in"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * the method call \u003ccode\u003einit\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param input the user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets the initial response to be the list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * In addition, it Sets the utility tools \u003ccode\u003etm\u003c/code\u003e and \u003ccode\u003eui\u003c/code\u003e."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tm the task manager."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void init(TaskManager tm, Ui ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setUtility(tm, ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setResponse(tm.listTasks());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eTodoCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of adding todos to the task manager."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Adds an \u003ccode\u003eTodo\u003c/code\u003e to the task manager."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param input the user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute(String input) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        tm.addTodo(new Todo(input));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setResponse(\"Todo added\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets the initial response to ask for the name of the todo to be created."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * In addition, sets the utility tools \u003ccode\u003etm\u003c/code\u003e and \u003ccode\u003eui\u003c/code\u003e."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tm the task manager."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void init(TaskManager tm, Ui ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setResponse(ui.askTodo());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        setUtility(tm, ui);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 37
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eDeadline\u003c/code\u003e inherits from \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and is used to represent a deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class Deadline extends Task implements Comparable\u003cDeadline\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Date dueDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Constructor for creating a new \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Requires a \u003ccode\u003ename\u003c/code\u003e and a \u003ccode\u003edueDate\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param name the name of this object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param dueDate the due date of this object in the format of \"dd MM yyyy\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if the date format given is invalid"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public Deadline(String name, String dueDate) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MM yyyy\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {        "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            this.dueDate \u003d formatter.parse(dueDate);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"Date format is invalid!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns a comma seperated \u003ccode\u003eString\u003c/code\u003e containing the relevant information"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * about this deadline. This information will then be saved in a text file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the comma seperated text of this deadline"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String completeStatus \u003d super.isCompleted() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd MM yyyy\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"D,\" + completeStatus + \",\" + super.getName() + \",\" + dateFormat.format(dueDate);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns the string representation of this deadline."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a string representation of this deadline"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"[D]%s (due: %s)\", super.toString(), dateFormat.format(dueDate));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Compares with another deadline. Both are equal if they have the same name and same date."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Else, they will be compared according to their date."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param other the other deadline to be compared with."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a value 0 if both deadlines are equal;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * a value greater than 0 if this Deadline is later than the Deadline argument;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * a value less than 0 if this deadline is before the Deadline argument."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public int compareTo(Deadline other) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        boolean sameName \u003d getName().equals(other.getName());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        boolean sameDate \u003d dueDate.compareTo(other.dueDate) \u003d\u003d 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (sameName \u0026\u0026 sameDate) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return dueDate.compareTo(other.dueDate);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 74
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eEvent\u003c/code\u003e inherits from \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and is used to represent an event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class Event extends Task implements Comparable\u003cEvent\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Date start;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Date end;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Constructor to create an event object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param name the name of the event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param start the start time of the event in the format \"dd MM yyyy HH:mm\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param end the end time of the event in the format \"dd MM yyyy HH:mm\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if the format of the given dates are wrong"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public Event(String name, String start, String end) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MM yyyy HH:mm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {        "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            this.start \u003d formatter.parse(start);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            this.end \u003d formatter.parse(end);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"Date format is invalid!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns a comma seperated \u003ccode\u003eString\u003c/code\u003e containing the relevant information"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * about this event. This information will then be saved in a text file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the comma seperated text of this event"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String completeStatus \u003d super.isCompleted() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd MM yyyy HH:mm\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"E,\" + completeStatus + \",\" + super.getName() + \",\" + dateFormat.format(start) + \",\" + dateFormat.format(end);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * \u003ccode\u003eString\u003c/code\u003e represenation of this event object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the string representation this object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"[E]%s (start: %s, end: %s)\", super.toString(), dateFormat.format(start), dateFormat.format(end));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Compares with another event. Both are equal if they have the same name and start date."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Else, they will be compared according to their start date."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param other the other event to be compared with."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a value 0 if both events are equal;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * a value greater than 0 if this Event is later than the Event argument;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * a value less than 0 if this Event is before the Event argument."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public int compareTo(Event other) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        boolean sameName \u003d getName().equals(other.getName());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        boolean sameDate \u003d start.compareTo(other.start) \u003d\u003d 0;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (sameName \u0026\u0026 sameDate) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return start.compareTo(other.start);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 76
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eTask\u003c/code\u003e is the base class for all kinds of duke.tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Constructor for creating a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param name the name of this task object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        // TODO: initialise the isCompleted field"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Gets the name of this task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the name of this class as a \u003ccode\u003eString\u003c/code\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns a boolean value indicating whether or not this task is completed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if this task is completed, \u003ccode\u003efalse\u003c/code\u003e otherwise"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return isCompleted;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns a comma seperated \u003ccode\u003eString\u003c/code\u003e containing the relevant information"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * about this task. This information will then be saved in a text file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the comma seperated text of this task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String completeStatus \u003d isCompleted ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"duke.tasks.Task,\" +  completeStatus + \",\" + name;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Marks this task as done by setting the value of its field"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * \u003ccode\u003eisCompleted\u003c/code\u003e to \u003ccode\u003etrue\u003c/code\u003e."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        isCompleted \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * \u003ccode\u003eString\u003c/code\u003e represenation of this task object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the string representation this object"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String symbol \u003d isCompleted ? \"\\u2713\" : \"x\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"[\" + symbol + \"] \" + name; "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 62
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eTaskManager\u003c/code\u003e handles every operation related to tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private List\u003cTodo\u003e todos;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private List\u003cDeadline\u003e deadlines;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private List\u003cEvent\u003e events;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        todos \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        deadlines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets the todo list with the given argument."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param todos the todo list to be set."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void initialiseTodos(List\u003cTodo\u003e todos) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.todos \u003d todos;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets the deadline list with the given argument."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param deadlines the deadline list to be set."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void initialiseDeadlines(List\u003cDeadline\u003e deadlines) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.deadlines \u003d deadlines;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets the event list with the given argument."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param events the event list to be set."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void initialiseEvents(List\u003cEvent\u003e events) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.events \u003d events;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Adds a todo."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param todo the todo to be added."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if something went wrong while saving."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void addTodo(Todo todo) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        todos.add(todo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Adds a deadline and sorts the deadline list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param deadline the deadline to be added."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if something went wrong while saving."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void addDeadline(Deadline deadline) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        deadlines.add(deadline);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        deadlines.sort(Deadline::compareTo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Adds a event and sorts the events list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param event the event to be added."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if something went wrong while saving."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void addEvent(Event event) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        events.add(event);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        events.sort(Event::compareTo);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Gets each task from the three lists and saves them to Task.txt file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if something went wrong while writing to the file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private void save() throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        for (Todo todo : todos) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(todo.saveText()).append(\"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        for (Deadline deadline : deadlines) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(deadline.saveText()).append(\"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        for (Event event : events) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(event.saveText()).append(\"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        Storage.writeTasksFile(sb.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Creates a string representation of all the tasks."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the string representation of all the tasks"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (!todos.isEmpty()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(\"Here are your todos:\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            for (Todo todo : todos) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                sb.append(i).append(\". \").append(todo).append(\"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(\"You have no todos.\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (!deadlines.isEmpty()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(\"Here are your deadlines:\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            for (Deadline deadline : deadlines) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                sb.append(i).append(\". \").append(deadline).append(\"\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(\"You have no deadlines.\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (!events.isEmpty()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(\"Here are your events:\\n\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            for (Event event : events) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                sb.append(i).append(\". \").append(event).append(\"\\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(\"You have no events.\\n\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Marks a particular task as done."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param taskNum the number of the task in the task list"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the \u003ccode\u003eTask\u003c/code\u003e that is marked done"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if the provided task number is out of the range of number of tasks."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public Task markDone(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        checkValidIndex(taskNum);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (taskNum \u003c\u003d todos.size()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            task \u003d todos.get(taskNum - 1);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else if (taskNum \u003c\u003d todos.size() + deadlines.size()) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            int ind \u003d taskNum - todos.size() - 1;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            task \u003d deadlines.get(ind);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            int ind \u003d taskNum - todos.size() - deadlines.size() - 1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            task \u003d events.get(ind);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        task.setCompleted();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private void checkValidIndex(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        int totalNumber \u003d getTotalNumberOfItems();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (taskNum \u003c 0 || taskNum \u003e totalNumber) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            String errorResponse \u003d String.format(\"You gave an invalid task number. Give a number from 0 to %d.\", totalNumber);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(errorResponse);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param taskNum the task number of the task to be deleted"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if the provided task number is out of bounds of the range of the \u003ccode\u003eArrayList\u003c/code\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public Task deleteTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        checkValidIndex(taskNum);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (taskNum \u003c\u003d todos.size()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            task \u003d todos.remove(taskNum - 1);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else if (taskNum \u003c\u003d todos.size() + deadlines.size()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            task \u003d deadlines.remove(taskNum - 1 - todos.size());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            task \u003d events.remove(taskNum - 1 - todos.size() - deadlines.size());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private boolean hasKeyword(String keyword, Task task) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return task.getName().toLowerCase().contains((keyword.toLowerCase()));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Finds a task with a given keyword in its name."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param keyword the keyword to search for"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the string represenation of the list of duke.tasks found. If none found, it will"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * return a message indicating that no asks were found."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String findTask(String keyword) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        todos.stream().filter(todo -\u003e hasKeyword(keyword, todo)).forEach(temp::add);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        deadlines.stream().filter(deadline -\u003e hasKeyword(keyword, deadline)).forEach(temp::add);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        events.stream().filter(event -\u003e hasKeyword(keyword, event)).forEach(temp::add);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (temp.isEmpty()) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return \"Sorry there are no tasks that matches your keyword\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(\"Here are the tasks that match your keyword\\n\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            for (int i \u003d 0; i \u003c temp.size(); i++) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                sb.append(\"\\n\").append(i + 1).append(\". \").append(temp.get(i));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private int getTotalNumberOfItems() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return todos.size() + deadlines.size() + events.size();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Checks if the task manager has any tasks."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if there are no tasks."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return getTotalNumberOfItems() \u003d\u003d 0;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"This is an instance of a task manager\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 230
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eTodo\u003c/code\u003e inherits from \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and is used to represent a todo."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns a comma seperated \u003ccode\u003eString\u003c/code\u003e containing the relevant information"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * about this todo. This information will then be saved in a text file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the comma seperated text of this todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String completeStatus \u003d super.isCompleted() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ";        return \"T,\" + completeStatus + \",\" + super.getName();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns the string representation of this todo."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a string representation of this todo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 31
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.scene.text.TextFlow?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "      \u003cTextFlow fx:id\u003d\"textContainer\" prefHeight\u003d\"5.0\" prefWidth\u003d\"150.0\" style\u003d\"-fx-background-color: #FFDE00; -fx-border-radius: 10; -fx-background-radius: 10; -fx-padding: 10;\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "      \u003c/TextFlow\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 24
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c?import javafx.scene.text.TextFlow?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"651.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"607.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"3.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"607.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"3.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"61.0\" prefHeight\u003d\"546.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"44.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"61.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"544.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "      \u003cTextFlow prefHeight\u003d\"41.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-padding: 20; -fx-background-color: #e4e0dc#e4e0dc #e4e0dc#e4e0dc;\" textAlignment\u003d\"CENTER\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            \u003cText fill\u003d\"#4dc0f5\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Duke Task Manager\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                  \u003cFont name\u003d\"Comic Sans MS Bold\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            \u003c/Text\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "      \u003c/TextFlow\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 31
    }
  },
  {
    "path": "src/test/java/TaskManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class TaskManagerTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void listTasks_listOfTasks_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            TaskManager tm \u003d new TaskManager();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            tm.add(new Todo(\"eat\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            tm.add(new Deadline(\"assignment\", \"24 5 2020\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            String expected \u003d \"Here are your duke.tasks\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    \"\\n1. [T][x] eat\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    \"\\n2. [D][x] assignment (due: 24/05/2020)\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            assertEquals(expected, tm.listTasks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            assertEquals(\"OOPS! Date format is invalid!\", e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void markDone_todoMarkedDone_success() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            TaskManager tm \u003d new TaskManager();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            tm.add(new TodoStub(\"eat\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            Task task \u003d tm.markDone(1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            assertEquals(\"[T][\\u2713] eat\", task.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            assertEquals(\"OOPS! you gave an invalid task number!\", e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 39
    }
  },
  {
    "path": "src/test/java/TodoStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class TodoStub extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    TodoStub(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        isCompleted \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        isCompleted \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String symbol \u003d isCompleted ? \"\\u2713\" : \"x\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"[T][%s] %s\", symbol, name);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 23
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        assertEquals(\"[T][x] eat\", new Todo(\"eat\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "clean my room"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "assignment"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "tomorrow"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "soccer practice"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "6pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 1,
      "-": 37
    }
  }
]
