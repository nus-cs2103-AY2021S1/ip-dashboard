[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 14,
      "-": 44
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "1.[D][âœ“] return book (by: Oct 15 2019)"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a specific type of task of the user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * that has deadline information stored."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.by \u003d LocalDate.parse(by,inputFormat);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(description, isDone, \"D\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.by \u003d LocalDate.parse(by,inputFormat);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String byTime \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return super.toString() + \"(by: \" + byTime + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 32
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 46
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents an interactive chat bot named \"Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * who can manage simple tasks for users."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for Duke chat bot."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param filePath the relative path of assigned"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     *                 file for reading and writing of data."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method simulate the interaction between"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Duke and human users."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        while (ui.getIn().hasNextLine()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            String command \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            Parser.respond(command, ui, tasks, storage.filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This is the main method which makes use of run method."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * A new Duke chat bot will be initiated by reading from and writing"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * into the file of relative path \"data/tasks.txt\"."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        });"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        });"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        });"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        });"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return \"Duke heard: \" + input; // needs to be customised later"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 195,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents an event marked by the user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * that has time information stored."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for an event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param at String containing time information of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return nothing"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.at \u003d LocalDate.parse(at,inputFormat);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for an event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param isDone Boolean value indicating if the event is completed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param at String containing time information of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return nothing"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(description, isDone,\"E\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.at \u003d LocalDate.parse(at,inputFormat);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String atTime \u003d at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return super.toString() + \"(at: \" + atTime + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 43
    }
  },
  {
    "path": "src/main/java/FileReading.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a reader class that can read content from files"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * in local environment."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class FileReading {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static String printFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(\"Here is the current task status: \\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            String str \u003d s.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            output \u003d output + str + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            System.out.println(str);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 22
    }
  },
  {
    "path": "src/main/java/FileWriting.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a writer class that can write content into files"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * in local environment."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class FileWriting {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 20
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a class of exceptions that are caused"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * by invalid inputs."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 9
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a parser that deals with making sense of the user command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * How the parser will respond to users\u0027 command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param command Full command by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param ui Ui used in responding."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param taskList Task list referred to in the interaction."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param filePath The relative path to assigned file for reading"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     *                 and writing of data."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return nothing"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static String respond(String command, Ui ui, TaskList taskList, String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String[] pieces \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        if (command.equals(\"bye\")) { // terminating command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            ui.bye();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else if (command.equals(\"list\")) { // listing command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (taskList.list.isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                ui.emptyList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                ui.printAll(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else if (pieces[0].equals(\"find\")) { // listing command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (taskList.list.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                ui.emptyList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                ui.printRelevant(taskList, pieces[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else if (pieces[0].equals(\"done\")) { // Mark Done task command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (pieces.length \u003d\u003d 1) { // task number is missing"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                ui.markDoneFailure();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                int task \u003d Integer.parseInt(pieces[1]); // get the task number"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                if (task \u003e taskList.noOfTasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ui.uncreatedTask(); // task has not been created"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    Task cur \u003d taskList.list.get(task - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    cur.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ui.markDoneSuccessful(cur);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            Storage.updateTasks(taskList.getNoOfTasks(), taskList.list, filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else if (pieces[0].equals(\"delete\")) { // delete command"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (pieces.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                ui.incompleteDeleteCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                int num \u003d Integer.valueOf(pieces[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                if (num \u003e taskList.noOfTasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ui.uncreatedTask();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    Task removed \u003d taskList.list.get(num - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    taskList.deleteTask(removed);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ui.deleteSuccessful(removed, taskList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            Storage.updateTasks(taskList.getNoOfTasks(), taskList.list, filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (pieces.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                switch (pieces[0]) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ui.missingDescription(\"todo\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ui.missingDescription(\"deadline\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ui.missingDescription(\"event\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ui.unknownCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                Task t \u003d new Task(\"\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String[] array;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                switch (pieces[0]) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        t \u003d new ToDo(pieces[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        array \u003d pieces[1].split(\"/by \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        if (array.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                            ui.missingDeadline();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                            t \u003d new Deadline(array[0], array[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        array \u003d pieces[1].split(\"/at \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        if (array.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                            ui.missingEventTime();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                            t \u003d new Deadline(array[0], array[1]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                if (t.description !\u003d \"\") {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    taskList.addTask(t);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ui.addSuccessful(t, taskList);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    Storage.updateTasks(taskList.getNoOfTasks(), taskList.list, filePath);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 122
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a class for storage that deals with loading tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * from the file and saving tasks in the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            return FileReading.printFileContents(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } catch (FileNotFoundException e) { // if the required file/path directory is not yet created"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            System.out.println(\"Creating the storage file...\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (!f.getParentFile().exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                f.getParentFile().mkdirs(); //create directory if not created"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    f.createNewFile(); // create file if not created"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                } catch (Exception ex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ex.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            // read the file again"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                return FileReading.printFileContents(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                ex.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return FileReading.printFileContents(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static void updateTasks(int count, List\u003cTask\u003e list, String filePath) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        for (int i \u003d 1; i \u003c count + 1; i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            Task cur \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            String currentTask \u003d \"\" + i + \".\" + cur + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            output \u003d output + currentTask;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        // System.out.println(output);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            FileWriting.writeToFile(filePath, output);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 64
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a task of the user. A task object will have its description,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * completion status and task type stored."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param description The detailed description of the task created."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.type \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for a task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param description The detailed description of the task created."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param isDone The completion status of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param type The type of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Task(String description, boolean isDone, String type) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * A getter for icon that shows completion status of a task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param args unused"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return A tick for completed task, a cross for uncompleted task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to mark a task as done."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        if (!isDone) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to mark a task as deleted."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void markAsDeleted() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to set the type of a task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void setType(String type) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return \"[\" + this.type + \"][\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 73
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a list of tasks that can execute operations like"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * add and delete tasks inside."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public int noOfTasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Default constructor for a task list without any task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param args unused"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.noOfTasks \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for a task list with given String input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param tasks Multiple lines of strings that are formatted"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * in a specific way to represent task information of existing task(s)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public TaskList(String tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.noOfTasks \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String lines[] \u003d tasks.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        List\u003cString\u003e taskInfo \u003d Arrays.asList(lines);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        if (!taskInfo.isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            for (String command : taskInfo) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                if (command.length() \u003c 3) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                command \u003d command.substring(3, command.length());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String[] pieces \u003d command.split(\"]\", 3);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String type \u003d pieces[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String icon \u003d pieces[1].substring(pieces[1].length() - 1); // status icon"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                boolean isDone \u003d (icon \u003d\u003d \"\\u2713\") ? true : false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String description \u003d pieces[2].substring(1, pieces[2].length());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                Task t \u003d new Task(\"\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String[] array;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String OLD_FORMAT \u003d \"MMM dd yyyy\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String NEW_FORMAT \u003d \"yyyy/MM/dd\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        t \u003d new ToDo(description, isDone);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        array \u003d description.split(\"(by: \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        String oldDateString \u003d array[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        String newDateString;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        SimpleDateFormat sdf \u003d new SimpleDateFormat(OLD_FORMAT);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        Date d \u003d null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                            d \u003d sdf.parse(oldDateString);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        } catch (ParseException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        sdf.applyPattern(NEW_FORMAT);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        newDateString \u003d sdf.format(d);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        t \u003d new Deadline(array[0], isDone, newDateString);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        array \u003d description.split(\"(at: \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        String oldDateStr \u003d array[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        String newDateStr;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(OLD_FORMAT);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        Date date \u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                            date \u003d simpleDateFormat.parse(oldDateStr);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        } catch (ParseException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        simpleDateFormat.applyPattern(NEW_FORMAT);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        newDateStr \u003d simpleDateFormat.format(date);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        t \u003d new Deadline(array[0], isDone, newDateStr);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                noOfTasks++;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * A getter of number of tasks in the task list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param args unused"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * return Number of tasks"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public int getNoOfTasks() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return this.noOfTasks;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Add task to the task list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * return nothing"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        noOfTasks ++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Delete task from the task list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param task Task to be deleted"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * return nothing"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void deleteTask(Task task) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.list.remove(task);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        noOfTasks --;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 132
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a to-do task without any specific time attached."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for a to-do."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param description Description of the to-do."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param isDone Boolean value indicating if the to-do is completed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return nothing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(description, isDone, \"T\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a class for storage that deals with interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String LINE \u003d  \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String GREETING\u003d \"Hello! I\u0027m Duke from the chat bot universe ~ \\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"Nice to meet you! \\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"I\u0027ll be your task manager from now onwards.\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String BYE \u003d \"Awwww, I guess you are gonna leave... \\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"I\u0027ll keep track of your tasks nicely. \\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"Text me if you wanna talk again! Have a nice day!\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Scanner getIn() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return in;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public PrintStream getOut() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to greet the user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(LINE + GREETING + LINE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to say good bye to the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(LINE + BYE + LINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to get command from the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return fullInputLine;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to print all the tasks in the task list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param taskList The task list used for printing."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void printAll(TaskList taskList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(LINE + \"Here are the tasks in your list: \\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        for (int i \u003d 1; i \u003c taskList.getNoOfTasks() + 1; i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            Task cur \u003d taskList.list.get(i - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            System.out.println(\"\" + i + \".\" + cur);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void printRelevant(TaskList taskList, String keyWord) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(LINE + \"Here are the matching tasks in your list: \\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        for (int i \u003d 1; i \u003c taskList.getNoOfTasks() + 1; i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            Task cur \u003d taskList.list.get(i - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (!cur.toString().contains(keyWord)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            System.out.println(\"\" + i + \".\" + cur);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that the list is empty."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void emptyList() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Oops, your list is currently empty. Add some tasks first!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.err.println(LINE + ex.getMessage() + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    // ADD RELATED"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void addSuccessful(Task added, TaskList list) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + added);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(\"Now you have \" + list.getNoOfTasks() + \" tasks in the list. \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that the command is undefined."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void unknownCommand() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Ah oh! I didn\u0027t know what that means \u003en\u003c, sorry! \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.err.println(LINE + ex.getMessage() + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    // DELETE RELATED"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void deleteSuccessful(Task deleted, TaskList list) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve removed this task: \\n\" + deleted);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(\"Now you have \" + list.getNoOfTasks() + \" tasks in the list. \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that task to be deleted is not specified."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void incompleteDeleteCommand() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Hey, you forgot to tell me which task to delete\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.err.println(LINE + ex.getMessage() + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    // MODIFY"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void markDoneSuccessful(Task done) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + done);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    // PRINT RELATED"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void markDoneFailure() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Hey, you forgot to tell me which task is done!\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.err.println(LINE + ex.getMessage() + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that the task referred to has not been created."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void uncreatedTask() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Oops, this task has not been created yet!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.err.println(LINE + ex.getMessage() + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that there is not prior data from Duke."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(\"Creating the storage file...\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void missingDescription(String type) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Hey, you forget the description for your \" + type +\"!\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.err.println(LINE + ex.getMessage() + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that the deadline information is missing."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void missingDeadline() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Sorry, but I can\u0027t help if you don\u0027t tell me the exact deadline!\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.err.println(LINE + ex.getMessage() + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that the event time is missing."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void missingEventTime() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"I see...But what time is this event at?\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.err.println(LINE + ex.getMessage() + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 180
    }
  },
  {
    "path": "src/test/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    void getNoOfTasks() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String tasks \u003d \"1.[T][âœ“] read book\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        TaskList list \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assertEquals(1,list.getNoOfTasks());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    void addTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String tasks \u003d \"1.[T][âœ“] read book\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        TaskList list \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Task t \u003d new Task(\"do homework\", false, \"T\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        list.addTask(t);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assertEquals(t, list.list.get(1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    void deleteTask() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String tasks \u003d \"1.[T][âœ“] read book\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        TaskList list \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Task t \u003d list.list.get(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        list.deleteTask(t);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assertEquals(true, list.list.isEmpty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 32
    }
  },
  {
    "path": "src/test/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import org.junit.jupiter.api.DynamicTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Task task \u003d new Task(\"study\", false, \"T\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assertEquals(\"T\", task.getType());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Task task \u003d new Task(\"study\", false, \"T\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assertEquals(true, task.isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "bye"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "# BASH RUNTEST.SH"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 6,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "../src/main/java/ToDo.java"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 5
    }
  }
]
