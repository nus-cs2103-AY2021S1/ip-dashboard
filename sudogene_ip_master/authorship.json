[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    //id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    //mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    archiveBaseName \u003d \"TebbyGui\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    //archiveBaseName \u003d \"TebbyCli\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/*"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}*/"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "//compileJava.options.fork \u003d true"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "//compileJava.options.forkOptions.executable \u003d \u0027.gradle\\\\javac.exe\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "apply plugin: \u0027java\u0027"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "sourceCompatibility \u003d 11"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "targetCompatibility \u003d 11"
      }
    ],
    "authorContributionMap": {
      "sudogene": 36,
      "-": 42
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Tebby is a chatbot app for managing tasks via either a Graphical User Interface (GUI) or Command Line Interface (CLI). Both interfaces are"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "generally the same except GUI has a more user-friendly way of choosing dates from a dropdown calendar when creating tasks. Interacting with"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "a chatbot with a fun personality can help make task management more appealing, hence improving productivity."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "1. Ensure you have Java 11 or above installed in your system. If not, you can get it [here](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "2. Download the latest version of `TebbyGUI.jar` from [here](https://github.com/sudogene/ip/releases)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "3. Move the file to a directory of your choice, note that additional folder and file will be created in that directory."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "4. Double click `TebbyGUI.jar`. You should see a GUI with a welcome message from Tebby."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "5. You can start with the `help` command to get a list of commands."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "![sample image](samplegui.png)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Alternatively, you can start Tebby in CLI mode (for advanced users) with the following steps"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "2. Download the latest version of `TebbyCLI.jar` from [here](https://github.com/sudogene/ip/releases)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "3. Start up your terminal."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "5. Navigate to the directory containing `TebbyCLI.jar`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "6. Run the program using `java -jar TebbyCLI.jar`."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "7. You should see the following CLI with a welcome message from Tebby."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "![sample image](samplecli.png)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "* Add tasks to a task list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  * Todo"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  * Event"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  * Deadline"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  * Fixed duration task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "* View task list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "* Mark tasks as done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "* Delete tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "* Sort tasks by"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  * Description"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  * Date time"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  * Task type"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "* Find tasks by keyword"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Note that the command keywords are case-insensitive and certain commands have strict formats."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "`\u003cfield\u003e` describes a required field while `[field]` describes an optional field."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "`\u003c[field1] [field2]\u003e` describes a field of at least `field1` or `field2`. Every other text within the"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "formats should be followed exactly."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "### `todo` - Adds a Todo task to the list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Format: `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\\\u003e Example of usage:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "todo read a book"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c Expected outcome:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Okay I\u0027ve added:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  [T][✘] read a book"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "now you have 1 task in the list!"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "### `deadline` - Adds a Deadline task to the list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Format: `deadline \u003cdescription\u003e /by \u003cdate\u003e [time]`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Date format: `YYYY/MM/dd` or `YYYY-MM-dd`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Date alternatives: `today` or `tomorrow` or select from dropdown calendar in GUI"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Time format (24 hr): `HH:mm`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\\\u003e Example of usage:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "deadline finish README.md /by tomorrow"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c Expected outcome:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Okay I\u0027ve added:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  [D][✘] finish README.md (by: 14 Sep)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "now you have 2 tasks in the list!"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "### `event` - Adds an Event task to the list"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Format: `event \u003cdescription\u003e /at \u003cdate\u003e [time]`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Date format: `YYYY/MM/dd` or `YYYY-MM-dd`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Date alternatives: `today` or `tomorrow` or select from dropdown calendar in GUI"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Time format (24 hr): `HH:mm`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\\\u003e Example of usage:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sudogene"
        },
        "content": "event speed dating /at 2021-03-07 9:00"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c Expected outcome:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Okay I\u0027ve added:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  [E][✘] speed dating (at: 7 Mar 21, 9:00 am)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sudogene"
        },
        "content": "now you have 3 tasks in the list!"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sudogene"
        },
        "content": "### `fixed` - Adds a Fixed Duration Task to the list"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Format: `fixed \u003cdescription\u003e /for \u003cduration\u003e`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Duration format: `\u003c[xh] [ym]\u003e` for x hours y minutes"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\\\u003e Example of usage:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sudogene"
        },
        "content": "fixed meditate /for 30m"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c Expected outcome:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Okay I\u0027ve added:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  [F][✘] meditate (for: 30 min)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sudogene"
        },
        "content": "now you have 4 tasks in the list!"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sudogene"
        },
        "content": "### `start` - Starts a Fixed Duration Task"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Format: `start \u003ctask number\u003e \u003cdate\u003e \u003ctime\u003e`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Alternative: `start \u003ctask number\u003e now` to set current date time"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Date format: `YYYY/MM/dd` or `YYYY-MM-dd`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Date alternatives: `today` or `tomorrow` or select from dropdown calendar in GUI"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Time format (24 hr): `HH:mm`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\\\u003e Example of usage:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sudogene"
        },
        "content": "start 4 today 23:00"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c Expected outcome:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Okay I\u0027ve set this task\u0027s start date time:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  [F][✘] meditate (at: 13 Sep, 11:00 pm) (for: 30 min)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sudogene"
        },
        "content": "### `done` - Marks Task as done"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Format: `done \u003ctask number\u003e`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Alternative: `done all`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\\\u003e Example of usage:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c Expected outcome:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Okay I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  [F][✓] meditate (at: 13 Sep, 11:00 pm) (for: 30 min)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sudogene"
        },
        "content": "### `remove`/`delete` - Removes a Task"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Format: `remove \u003ctask number\u003e`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Alternative command: `delete`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Alternative: `remove all` to clear the task list"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Alternative: `remove done` to remove all tasks that are done"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\\\u003e Example of usage:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sudogene"
        },
        "content": "remove 4"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c Expected outcome:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Okay I\u0027ve removed:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sudogene"
        },
        "content": "  [F][✓] meditate (at: 13 Sep, 11:00 pm) (for: 30 min)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sudogene"
        },
        "content": "now you have 3 tasks in the list!"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sudogene"
        },
        "content": "### `sort` - Sorts the list"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Format: `sort \u003csort by\u003e`"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Sort by: `name` or `datetime` or `type`"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\\\u003e Example of usage:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "sudogene"
        },
        "content": "sort datetime"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c Expected outcome:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Your list has been sorted!"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "sudogene"
        },
        "content": "### `list` - Views the list"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\\\u003e Example of usage:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "sudogene"
        },
        "content": "list"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c Expected outcome:"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sudogene"
        },
        "content": "1. [D][✘] finish README.md (by: 14 Sep)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "sudogene"
        },
        "content": "2. [E][✘] speed dating (at: 7 Mar 21, 9:00 am)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "sudogene"
        },
        "content": "3. [T][✘] read a book"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "sudogene"
        },
        "content": "### `find` - Filters list by keyword"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Format: `find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Tasks with description matching the entire string will be filtered, substrings are not filtered."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "sudogene"
        },
        "content": "For example, `\"friend\"` will get description `\"lunch with friend\"` but not `\"find girlfriend\"`."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\\\u003e Example of usage:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "sudogene"
        },
        "content": "find book"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c Expected outcome:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Search result:"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "sudogene"
        },
        "content": "3. [T][✘] read a book"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "sudogene"
        },
        "content": "## Using the GUI Calendar"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "sudogene"
        },
        "content": "![sample calendar](samplecalendar.png)"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "sudogene"
        },
        "content": "The calendar dropdown button can be found on the right next to the text field. Upon selection of a date,"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "sudogene"
        },
        "content": "the date will be appended to the text field. This eases user from typing entire dates, and also aids users"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "sudogene"
        },
        "content": "in planning of dates with the visuals of a calendar."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "sudogene"
        },
        "content": "This is a greenfield Java project using [NUS-CS2103](https://github.com/nus-cs2103-AY2021S1/ip) project template."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "sudogene"
        },
        "content": "---"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "sudogene"
        },
        "content": "Okay I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    [D][✓] finish README.md (by: 14 Sep)"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "sudogene"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "sudogene": 285,
      "-": 13
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Duke is a personal task management bot which users will interact with through"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * a messaging interface."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * @author Andy Wu"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the bot with a given file path for the txt file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param filePath the path of the txt file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        TaskList temp;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            temp \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            temp \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        tasks \u003d temp;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the bot."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        TaskList temp;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            temp \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            temp \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        tasks \u003d temp;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Runs the bot by continuously reading user inputs,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * responding to the input, and exiting only when"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * an exit signal has been given."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                isRunning \u003d !c.isExit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the response message of the bot based on the user input."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param input the user input."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the response message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the welcome message."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the message."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return ui.getGuiWelcomeMessage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Driver to run the application in command line interface (CLI)."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param args optional and will be treated as the first user input."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 100,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.gui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Launcher used to launch the Graphical User Interface (GUI) of the application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 13
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The add command manages the adding of a new task to the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * task list. Details are in the execute method."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class AddCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public AddCommand(String type, String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d TaskList.createTask(type, description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getTaskSuccessMessage(\"add\", task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            msg +\u003d \"\\n\" + ui.getTaskReportMessage(tasks.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 49
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The command is the response of the program to be executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Execution of command may involve manipulation of TaskList,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Ui, or Storage depending on the required response. Implementations"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * of Command will mainly function using the execute method."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Identifies if the command calls for an exit of the program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the value of whether the command is an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    boolean isExit();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Executes the command and generates the response message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the response message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException if command execution fails."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The done command is in charge of marking tasks as done when"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the user indicates via the task number. This command allows for"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the marking of all tasks as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final boolean isEntireList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the done command which targets one task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param index the task number to be marked as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isEntireList \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the done command which targets the entire task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public DoneCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.index \u003d -1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isEntireList \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Identifies if the command calls for an exit of the program."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the value of whether the command is an exit command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Executes the command and generates the response message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the response message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (isEntireList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            for (Task task: tasks.getList()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                if (!task.getDone()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d \"Wow, you\u0027ve done everything??\\nNice, I\u0027ve marked them all!\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d tasks.markDone(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getTaskSuccessMessage(\"done\", task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 77
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The exit command flags the program to exit after execution."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Identifies if the command calls for an exit of the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the value of whether the command is an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Executes the command and generates the response message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the response message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"Have a good day! See you!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 32
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The find command searches for tasks that match the input query and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * generate the filtered list containing the tasks. The search only"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * matches entire words (space-delimited). For example,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     query \"friend\" matches task \"call a friend\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     query \"friend\" does NOT match task \"find girlfriend\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String query;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the find command which will search for tasks in the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param query the keyword(s) to be used in the search."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public FindCommand(String query) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Identifies if the command calls for an exit of the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the value of whether the command is an exit command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Executes the command and generates the response message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the response message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String msg \u003d tasks.getFilteredListMessage(query);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.sendMessage(msg);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 48
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The help command provides users a way to learn how to use the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Available commands will be generated and shown to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class HelpCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Identifies if the command calls for an exit of the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the value of whether the command is an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Executes the command and generates the response message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the response message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String message \u003d ui.getListOfCommands();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.sendMessage(message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return ui.getListOfCommands();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 35
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * This command handles invalid user commands and has the option to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * send users a default message notifying the wrong command or send"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * user a custom message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class InvalidCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String toSend;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the invalid command with a custom message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param toSend the custom message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public InvalidCommand(String toSend) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.toSend \u003d toSend;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the invalid command with a default message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public InvalidCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        toSend \u003d \"Sorry I do not know what that means :(\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Identifies if the command calls for an exit of the program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the value of whether the command is an exit command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Executes the command and generates the response message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the response message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.sendMessage(toSend);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return toSend;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 52
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The list command helps to show the user all the tasks in a list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * in a formatted manner."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Identifies if the command calls for an exit of the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the value of whether the command is an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Executes the command and generates the response message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the response message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String msg \u003d tasks.getPrintMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.sendMessage(msg);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 35
    }
  },
  {
    "path": "src/main/java/duke/command/RemoveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The remove command is in charge of removing tasks by"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * specific task number, tasks that are done, or clearing the entire list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class RemoveCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final boolean isRemoveEntireList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final boolean isRemoveDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the remove command which targets a task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param index the task number."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public RemoveCommand(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isRemoveEntireList \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isRemoveDone \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the remove command which targets the entire task list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * or targets tasks that are done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public RemoveCommand(String type) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isRemoveEntireList \u003d type.equals(\"all\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isRemoveDone \u003d type.equals(\"done\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        index \u003d -1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Identifies if the command calls for an exit of the program."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the value of whether the command is an exit command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Executes the command and generates the response message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the response message."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (isRemoveEntireList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            tasks.removeAll();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getClearListMessage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (isRemoveDone) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            tasks.removeDoneTasks();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getRemoveDoneMessage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getTaskSuccessMessage(\"remove\", task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            msg +\u003d \"\\n\" + ui.getTaskReportMessage(tasks.size());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 85
    }
  },
  {
    "path": "src/main/java/duke/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * This command handles the sorting of the task list via appropriate"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * parameters given by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class SortCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String sortBy;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the sort command which will sort by the input parameter."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param sortBy the parameter used to sort the task list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when the parameter is not supported or incorrect."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public SortCommand(String sortBy) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        assert List.of(\"name\", \"type\", \"datetime\").contains(sortBy)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                : \"sortBy should only be name, type, or datetime.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (!List.of(\"name\", \"type\", \"datetime\").contains(sortBy)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid sorting parameter!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.sortBy \u003d sortBy;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Identifies if the command calls for an exit of the program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the value of whether the command is an exit command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Executes the command and generates the response message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the response message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException if command execution fails."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (tasks.getList().isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getEmptyListSortingMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        tasks.sort(sortBy);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        storage.update(tasks.getList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String msg \u003d ui.getSuccessSortingMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.sendMessage(msg);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 62
    }
  },
  {
    "path": "src/main/java/duke/command/StartTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.FixedDurationTaskWithDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.FixedDurationTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * This command is in charge of setting date time values to"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * fixed duration tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class StartTaskCommand implements Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String startAt;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the start task command which will set a date time"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * to the given task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param index the task number."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param startAt the raw string of date time."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public StartTaskCommand(int index, String startAt) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.startAt \u003d startAt;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Identifies if the command calls for an exit of the program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the value of whether the command is an exit command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Executes the command and generates the response message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the response message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (!(task instanceof FixedDurationTask)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"That is not a fixed duration task!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            // Creating FixedDurationTaskWithDateTime using previous task description"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FixedDurationTask fixedDurationTask \u003d (FixedDurationTask) task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String[] rawDesc \u003d fixedDurationTask.getDescription().split(\" / \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String description \u003d rawDesc[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            int duration \u003d Integer.parseInt(rawDesc[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task newTask \u003d new FixedDurationTaskWithDateTime(description, duration, startAt);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            // Replacing the task and sending response message"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            tasks.replace(index - 1, newTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getTaskSuccessMessage(\"start\", newTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 74
    }
  },
  {
    "path": "src/main/java/duke/gui/DukeDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The javafx dialog box for Duke with standard messages."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class DukeDialogBox extends HBox {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the duke dialog box which will contain the bot\u0027s message and image."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param text the bot\u0027s message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param img the bot\u0027s image."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public DukeDialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DukeDialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 39
    }
  },
  {
    "path": "src/main/java/duke/gui/DukeErrorDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The javafx dialog box for Duke with error messages."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class DukeErrorDialogBox extends HBox {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the duke error dialog box which will contain the bot\u0027s message and image."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param text the bot\u0027s message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param img the bot\u0027s image."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public DukeErrorDialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DukeErrorDialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 39
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Starts the application after setting up the stage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param stage the stage to be displayed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            stage.setTitle(\"Tebby the Task Manager\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 34
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.DatePicker;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.Tooltip;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Controller for MainWindow. Provides layout for the other controls."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private DatePicker datePicker;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tebby.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Image dukeHuhImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tebbyHuh.png\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Image dukeErrorImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tebbyError.png\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Initializes the main window of the GUI with a welcome message from the bot."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Tebby started in GUI mode ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        datePicker.setTooltip(new Tooltip(\"Pick a date\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        duke \u003d new Duke();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String welcomeMessage \u003d duke.getWelcomeMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                new DukeDialogBox(welcomeMessage, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Sets the bot\u0027s logic with the given bot."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param d the bot."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Upon selection of a date using the DatePicker in the GUI, this"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * method appends the selected date\u0027s text to the user input text field."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param event the event of DatePicker selecting a date."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void appendDateTextToUserInput(ActionEvent event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            LocalDate date \u003d datePicker.getValue();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String currentText \u003d userInput.getText();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            userInput.setText(currentText.strip() + \" \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    + date.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\")));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            datePicker.getEditor().clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            datePicker.setValue(null);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            System.out.println(\"User has selected a date from DatePicker.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String input \u003d userInput.getText().strip();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (!input.isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            System.out.println(\"User: \" + input);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    new UserDialogBox(input, userImage),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    response.startsWith(\"\u003e\u003c\")"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                            ? new DukeErrorDialogBox(response, dukeErrorImage)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                            : response.startsWith(\"Sorry\")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                                ? new DukeDialogBox(response, dukeHuhImage)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                                : new DukeDialogBox(response, dukeImage)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            );"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 99
    }
  },
  {
    "path": "src/main/java/duke/gui/UserDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The javafx dialog box for users"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class UserDialogBox extends HBox {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the user dialog box which will contain the user\u0027s message and image."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param text the user\u0027s message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param img the user\u0027s image."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public UserDialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Deadline is a subtype of TaskWithDateTime in which the date time provided"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * is a looming deadline. Example:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     [D][✘] assignment (by: Aug 26 2020, 11:59 pm)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Deadline extends TaskWithDateTime {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param by the raw string of the date time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when task creation fails."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"D\", description, by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the deadline with its completion status."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param by the raw string of the date time."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param isDone the completion status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when task creation fails."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"D\", description, by, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Formats the string representation of the task and returns it."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the formatted string representation of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String pattern \u003d (date.getYear() \u003d\u003d LocalDate.now().getYear() ? \"d MMM\" : \"d MMM yy\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String dt \u003d String.format(\" (by: %s\", date.format(DateTimeFormatter.ofPattern(pattern)));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (time.isPresent()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            dt +\u003d String.format(\", %s)\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    time.get().format(DateTimeFormatter.ofPattern(\"h:mm a\")));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            dt +\u003d \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return super.toString() + dt;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 52
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Event is a subtype of TaskWithDateTime in which the provided date time"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * is the occurrence of the event. Example:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     [E][✘] birthday celebration (at: Mar 7 2020, 08:00 pm)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Event extends TaskWithDateTime {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param at the raw string of the date time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when task creation fails."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"E\", description, at);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the event with the completion status."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param at the raw string of the date time."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param isDone the completion status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when task creation fails."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Event(String description, String at, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"E\", description, at, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Formats the string representation of the task and returns it."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the formatted string representation of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String pattern \u003d (date.getYear() \u003d\u003d LocalDate.now().getYear() ? \"d MMM\" : \"d MMM yy\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String dt \u003d String.format(\" (at: %s\", date.format(DateTimeFormatter.ofPattern(pattern)));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (time.isPresent()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            dt +\u003d String.format(\", %s)\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    time.get().format(DateTimeFormatter.ofPattern(\"h:mm a\")));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            dt +\u003d \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return super.toString() + dt;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 52
    }
  },
  {
    "path": "src/main/java/duke/task/FixedDurationTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The fixed duration task is a subtype of a task which has no set date time"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * but has a known duration. Example:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     [F][✘] meditate (for: 2 hr)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class FixedDurationTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected final Duration duration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the fixed duration task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param duration the raw string of the duration."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when task creation fails."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public FixedDurationTask(String description, String duration) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"F\", description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.duration \u003d parseDuration(duration);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the fixed duration task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param durationSeconds the duration in seconds."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public FixedDurationTask(String description, long durationSeconds) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"F\", description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.duration \u003d Duration.ofSeconds(durationSeconds);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Parses the user input string into a duration for the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * This duration object will be stored in the task and used to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * generate the start time and end time of a particular date once"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * the date time information is provided by the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Example:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     \"1h 10m\" -\u003e PT1H10M"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     \"2h\" -\u003e PT2H"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     \"160m\" -\u003e PT2H40M"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Users have some freedom in choosing whether or not the hour"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * or minute should be included."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param raw the user input to be parsed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the duration of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Duration parseDuration(String raw) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (!raw.contains(\"h\") \u0026\u0026 !raw.contains(\"m\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid duration!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] temp \u003d raw.toLowerCase().split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        int hour \u003d 0;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        int minute \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            for (String token : temp) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                if (token.endsWith(\"h\") \u0026\u0026 hour \u003d\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    hour \u003d Integer.parseInt(token.split(\"h\")[0]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                } else if (token.endsWith(\"m\") \u0026\u0026 minute \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    minute \u003d Integer.parseInt(token.split(\"m\")[0]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                } else if (hour !\u003d 0 \u0026\u0026 minute !\u003d 0){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid duration!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (hour \u003c 0 || minute \u003c 0 || (hour \u003d\u003d 0 \u0026\u0026 minute \u003d\u003d 0)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid duration!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return Duration.ofMinutes((long) (60 * hour) + minute);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return description of the task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return String.format(\"%s / %s\", description, duration.getSeconds());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Formats the string representation of the task and returns it."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the formatted string representation of the task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        long sec \u003d duration.getSeconds();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        long hr \u003d sec / 3600;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        long min \u003d (sec % 3600) / 60;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String durationString \u003d \" (for: \";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (hr !\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            durationString +\u003d String.format(\"%d hr\", hr);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (min !\u003d 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            durationString +\u003d String.format(\" %d min\", min);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        durationString +\u003d \")\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return super.toString() + durationString;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 105
    }
  },
  {
    "path": "src/main/java/duke/task/FixedDurationTaskWithDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The fixed duration task with date time provides an additional information on"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the starting date time of the fixed duration task. Example:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     [F][✘] meditate (for: 2 hr) (at: 15 Sep, 11:00 pm)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class FixedDurationTaskWithDateTime extends FixedDurationTask {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the fixed duration task with date time."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param durationSeconds the duration in seconds."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param dateTime the raw string of the date time."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when task creation fails."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public FixedDurationTaskWithDateTime(String description, long durationSeconds, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(description, durationSeconds);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        parseDateTime(dateTime);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the date of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the date of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the time of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the time of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Parses the raw date time string and sets the task\u0027s date and time."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param dateTime the user input containing the date and time."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void parseDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (dateTime.equals(\"now\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            LocalTime time \u003d LocalTime.now();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            setStartDateTime(date, time);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String[] dateTimeSplit \u003d dateTime.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            LocalDate date \u003d parseDate(dateTimeSplit[0]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            LocalTime time \u003d parseTime(dateTimeSplit[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            setStartDateTime(date, time);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid date or time format!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Missing date or time!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private void setStartDateTime(LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private LocalDate parseDate(String raw) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (raw.equals(\"today\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return LocalDate.now();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else if (raw.equals(\"tomorrow\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return LocalDate.now().plusDays(1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return LocalDate.parse(raw.replaceAll(\"/\", \"-\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private LocalTime parseTime(String raw) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String timeString \u003d String.format(\"%1$\" + 5 + \"s\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                raw.replace(\" \", \"0\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return LocalTime.parse(timeString);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return description of the task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return String.format(\"%s / %s / %s %s\", description, duration.getSeconds(),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                date.toString(), time.toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Formats the string representation of the task and returns it."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the formatted string representation of the task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String datePattern \u003d (date.getYear() \u003d\u003d LocalDate.now().getYear() ? \"d MMM\" : \"d MMM yy\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String dateTime \u003d String.format(\" (at: %s, %s)\","
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(datePattern)),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                time.format(DateTimeFormatter.ofPattern(\"h:mm a\")));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return super.toString() + dateTime;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 113
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The Task class encapsulates tasks which are pieces of work to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The description of the task */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** Status of whether a task has been completed */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The type of task */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs a task which defaults to be not completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the type of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task(String type, String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs a task with the completion status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the type of task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param isDone the completion status of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task(String type, String description, boolean isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the type of the task as an identifier."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the type of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the completion flag of the task and generates the"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * unicode string representation of the task status;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * a tick for completed, a cross for not completed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the unicode of the completion status."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Checks if the task is completed based on the completion flag."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return boolean value for completion status."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Marks a task as completed by setting completion status to true."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      * @return description of the task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Formats the string representation of the task and returns it."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the formatted string representation of the task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return String.format(\"[%s][%s] %s\", type, getStatusIcon(), description);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 89
    }
  },
  {
    "path": "src/main/java/duke/task/TaskWithDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Task with date time encapsulates tasks that contain date time information."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Date is compulsory while time is optional. The reasoning is that some tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * can take arbitrary time range or the entire day, hence having the date suffices."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public abstract class TaskWithDateTime extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected Optional\u003cLocalTime\u003e time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the task with date time."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param dateTime the raw date time string of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when task creation fails."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public TaskWithDateTime(String type, String description, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(type, description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String[] dateTimeSplit \u003d dateTime.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            date \u003d parseDate(dateTimeSplit[0]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (dateTimeSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                time \u003d Optional.empty();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                time \u003d Optional.of(parseTime(dateTimeSplit[1]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid date or time format!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Missing date!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the task with date time with completion status."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param dateTime the raw date time string of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param isDone the completion status of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when task creation fails."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public TaskWithDateTime(String type, String description, String dateTime, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(type, description, isDone);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String[] dateTimeSplit \u003d dateTime.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            date \u003d parseDate(dateTimeSplit[0]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (dateTimeSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                time \u003d Optional.empty();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                time \u003d Optional.of(parseTime(dateTimeSplit[1]));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid date or time format!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Missing date!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private LocalDate parseDate(String raw) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (raw.equals(\"today\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return LocalDate.now();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else if (raw.equals(\"tomorrow\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return LocalDate.now().plusDays(1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return LocalDate.parse(raw.replaceAll(\"/\", \"-\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private LocalTime parseTime(String raw) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (!raw.contains(\":\") || !raw.contains(\".\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            raw +\u003d \":00\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String timeString \u003d String.format(\"%1$\" + 5 + \"s\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                raw.replace(\".\", \":\"))"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .replace(\" \", \"0\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return LocalTime.parse(timeString);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the date of the task."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the date of the task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the optional time of the task."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the optional time of the task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Optional\u003cLocalTime\u003e getTime() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Formats the string representation of the task and returns it."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the formatted string representation of the task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return String.format(\"%s / %s%s\", description, date,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                time.map(localTime -\u003e \" \" + localTime).orElse(\"\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 111
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Todo is a simple subtype of Task which has a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Example:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     [T][✘] cry"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The task description has no further parsing and will be taken"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * literally as a string."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the todo."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"T\", description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the todo with its completion status."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param isDone the completion status of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"T\", description, isDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 29
    }
  },
  {
    "path": "src/main/java/duke/util/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Duke exception encompasses all the possible native exceptions generated"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * in the program by wrapping them under the context of the chat bot application."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Personality of the bot can be easily portrayed in the standardized prefix of the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * error messages."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the duke exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param message the error message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"\u003e\u003c \" + message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 17
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.RemoveCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.SortCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.StartTaskCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The Parser is in charge of parsing raw strings of user inputs"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * and generating the appropriate response to the inputs."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private static String[] format(String raw) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return raw.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the command in lower case."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param raw the raw string input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the command in lower case."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static String getCommand(String[] raw) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return raw[0].toLowerCase();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the text after the command which is typically the first token"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * of the raw string."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param raw the raw string input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the text after the command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static String getTextAfterCommand(String[] raw) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] temp \u003d Arrays.copyOfRange(raw, 1, raw.length);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return String.join(\" \", temp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Parses the raw string input and generates the appropriate"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * command as a response to the input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param input the raw string input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the appropriate Command object in response to the user input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when parsing of the input fails."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (input.contains(\"|\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new InvalidCommand(\"Sorry you cannot use \u0027|\u0027 because that\u0027s my favorite character :P\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] parsed \u003d Parser.format(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String command \u003d Parser.getCommand(parsed);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"quit\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"fixed\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String description \u003d Parser.getTextAfterCommand(parsed);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new AddCommand(command, description);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String taskSelection \u003d parsed[1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                if (taskSelection.equals(\"all\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    return new DoneCommand();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(taskSelection);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new InvalidCommand(\"Uh oh! Here\u0027s an example:\\n\u0027done 1\u0027 or \u0027done all\u0027\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"remove\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String taskSelection \u003d parsed[1].toLowerCase();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                if (taskSelection.equals(\"all\") || taskSelection.equals(\"done\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    return new RemoveCommand(taskSelection);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(taskSelection);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new RemoveCommand(taskNumber);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new InvalidCommand(\"Uh oh! Here\u0027s an example:\\n\u0027remove 1\u0027 or \u0027remove all\u0027\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new FindCommand(parsed[1]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new InvalidCommand(\"Uh oh! Here\u0027s an example:\\n\u0027find assignment\u0027\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"sort\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new SortCommand(parsed[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new InvalidCommand("
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        \"Uh oh! Here\u0027s an example:\\n\u0027sort name\u0027\\nYou can sort by name, datetime, type\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"start\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(parsed[1]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String startAt \u003d String.join(\" \", Arrays.copyOfRange(parsed, 2, parsed.length));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new StartTaskCommand(taskNumber, startAt);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new InvalidCommand(\"Uh oh! Here\u0027s an example:\\n\u0027start 1 today 23:00\u0027 or \u0027start 1 now\u0027\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid fixed task number!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 130
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.FixedDurationTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.FixedDurationTaskWithDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The storage handles all the reading and writing between"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the program and the txt file which stores all the tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * This enables the saving and loading feature of the application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the storage with a given file path. If the path"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * does not exist, the directories and file will be created."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param filePath the path of the txt file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (!file.getParentFile().exists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (IOException ioe) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                System.err.println(\"IOException: \" + ioe.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Loads the task list from the txt file. A new task list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * is created and populated with the corresponding tasks as"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * parsed in the txt file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the list of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when task creation fails or txt file can\u0027t be read."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String[] t \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                assert List.of(\"T\", \"E\", \"D\", \"F\").contains(t[0]) : \"Subtype should be T, E, F, or D only\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                switch (t[0]) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    list.add(new Todo(t[2], t[1].equals(\"1\")));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    list.add(new Deadline(t[2], t[3], t[1].equals(\"1\")));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    list.add(new Event(t[2], t[3], t[1].equals(\"1\")));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"F\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    FixedDurationTask fdt;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    if (t.length \u003e 4) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        fdt \u003d new FixedDurationTaskWithDateTime(t[2], Integer.parseInt(t[3]), t[4]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        fdt \u003d new FixedDurationTask(t[2], Integer.parseInt(t[3]));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    if (t[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        fdt.markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    list.add(fdt);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    throw new DukeException(\"Corrupted file, previous data will not be loaded!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Updates the task list txt file using the given task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Tasks are generally written to the txt file in the following format:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     type|isDone|description|others"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * where \u0027others\u0027 is only relevant to certain types of tasks."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param list the list of task to be written into txt file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void update(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            for (Task t: list) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                StringBuilder toWrite \u003d new StringBuilder("
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        String.format(\"%s|%s\", t.getType(), (t.getDone() ? \"1\" : \"0\")));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String desc \u003d t.getDescription();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                if (List.of(\"D\", \"E\", \"F\").contains(t.getType())) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    toWrite.append(\"|\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    String[] descSplit \u003d desc.split(\" / \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    toWrite.append(String.join(\"|\", descSplit));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    toWrite.append(\"|\").append(desc);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                fw.write(toWrite + \"\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            System.err.println(\"IOException: \" + ioe.getMessage());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 124
    }
  },
  {
    "path": "src/main/java/duke/util/TaskDateTimeComparator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.TaskWithDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.FixedDurationTaskWithDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Comparator for comparing tasks using the date time fields."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class TaskDateTimeComparator implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Compares two tasks. The comparison follows the rules:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     - Task without date time will be last"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     - Two tasks with dates will be compared"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *         - Task with earlier date will be first"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *         - If same date, time will be compared"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *             - Task without time will be last"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *             - Task with earlier time will be first"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param t1 the first task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param t2 the second task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the compare value."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public int compare(Task t1, Task t2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (hasNoDateTime(t1)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return (hasNoDateTime(t2) ? 0 : 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        LocalDate date1 \u003d getLocalDate(t1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        LocalTime time1 \u003d getLocalTime(t1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        LocalDate date2 \u003d getLocalDate(t2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        LocalTime time2 \u003d getLocalTime(t2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        int compareValue \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        compareValue +\u003d compareDate(date1, date2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (compareValue \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            compareValue +\u003d compareTime(time1, time2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return compareValue;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private boolean hasNoDateTime(Task t) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        boolean isTodo \u003d t instanceof Todo;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        boolean isTaskWithDateTime \u003d t instanceof TaskWithDateTime;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        boolean isFixedDurationTaskWithDateTime \u003d t instanceof FixedDurationTaskWithDateTime;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return (isTodo || (!isTaskWithDateTime \u0026\u0026 !isFixedDurationTaskWithDateTime));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private LocalDate getLocalDate(Task t) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (t instanceof TaskWithDateTime) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            TaskWithDateTime dt \u003d (TaskWithDateTime) t;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            date \u003d dt.getDate();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else if (t instanceof FixedDurationTaskWithDateTime) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FixedDurationTaskWithDateTime f \u003d (FixedDurationTaskWithDateTime) t;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            date \u003d f.getDate();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private LocalTime getLocalTime(Task t) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        LocalTime time \u003d null;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (t instanceof TaskWithDateTime) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            TaskWithDateTime dt \u003d (TaskWithDateTime) t;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            time \u003d dt.getTime().orElse(null);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else if (t instanceof FixedDurationTaskWithDateTime) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FixedDurationTaskWithDateTime f \u003d (FixedDurationTaskWithDateTime) t;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            time \u003d f.getTime();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private int compareDate(LocalDate d1, LocalDate d2) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (d1 \u003d\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return (d2 \u003d\u003d null ? 0 : 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (d2 \u003d\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (d1.isBefore(d2)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else if (d2.isBefore(d1)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private int compareTime(LocalTime t1, LocalTime t2) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (t1 \u003d\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return (t2 \u003d\u003d null ? 0 : 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (t2 \u003d\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (t1.isBefore(t2)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else if (t2.isBefore(t1)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 109
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.FixedDurationTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The task list keeps track of all the tasks and has additional"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * functionalities including adding, removing, modifying tasks,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * filtering, and formatting of the list for printing."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the task list with a given list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param list the list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs an empty task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the size of the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Returns the task list object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the task list object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The static factory method to create the subtypes of tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the subtype of the task to be created."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the raw description of the task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the created task object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when task creation fails."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static Task createTask(String type, String description) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        Task task \u003d new Todo(\"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] split;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Description cannot be empty!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (hasInvalidKeyword(\" /by \", description)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Oops, incorrect format!\\nSay \u0027help\u0027 to learn about the commands!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                split \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                desc \u003d split[0];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String by \u003d split[split.length - 1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid \" + type + \" description!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (hasInvalidKeyword(\" /at \", description)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Oops, incorrect format!\\nSay \u0027help\u0027 to learn about the commands!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                split \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                desc \u003d split[0];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String at \u003d split[split.length - 1];;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid \" + type + \" description!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"fixed\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (hasInvalidKeyword(\" /for \", description)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Oops, incorrect format!\\nSay \u0027help\u0027 to learn about the commands!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                split \u003d description.split(\" /for \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                desc \u003d split[0];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String duration \u003d split[split.length - 1];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task \u003d new FixedDurationTask(desc, duration);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid \" + type + \" description!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private static boolean hasInvalidKeyword(String keyword, String text) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (!text.contains(keyword)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        for (int i \u003d 0; i \u003c text.length() - keyword.length(); i++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (text.startsWith(keyword, i)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (count \u003e 1) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param task the task to be added."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the task from the task list using a task number."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param i the index of the task."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the task."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return list.get(i);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Removes and returns the task of the given task number."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param i the index of the task to be removed."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the removed task."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when the index does not contain a task."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task remove(int i) throws DukeException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            i--;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return list.remove(i);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Removes all tasks from the task list."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void removeAll() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.clear();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Removes all tasks that are done."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void removeDoneTasks() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.removeIf(Task::getDone);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Replaces a task at the given index."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param i the index."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param task the new task."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void replace(int i, Task task) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.set(i, task);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Marks a task as done and returns the task."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param i the index of the task."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the task."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when the index does not contain a task."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task markDone(int i) throws DukeException {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            i--;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (task.getDone()) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Task is already done!\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the formatted message of the task list for printing."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the formatted print message of the list."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getPrintMessage() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return \"Your list is empty!\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String msg \u003d (list.size() \u003e 1"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                ? \"Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                : \"Here\u0027s your one and only task:\\n\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        msg +\u003d IntStream.range(0, list.size())"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, list.get(i)))"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .reduce((t1, t2) -\u003e String.format(\"%s\\n%s\", t1, t2))"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .orElse(\"\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the formatted message of the filtered task list for printing."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param query the keyword to filter tasks."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the formatted print message of the filtered list."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getFilteredListMessage(String query) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        Optional\u003cString\u003e filtered \u003d IntStream.range(0, list.size())"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, list.get(i)))"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .filter(s -\u003e Arrays.asList(s.split(\" \")).contains(query))"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .reduce((t1, t2) -\u003e String.format(\"%s\\n%s\", t1, t2));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (filtered.isEmpty()) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return \"Search result is empty!\";"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"Search result:\\n\" + filtered.get();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Sorts the task list based on the input parameter."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param sortBy the parameter of sorting the list."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void sort(String sortBy) throws DukeException {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        switch (sortBy) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"name\":"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sortByName();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"type\":"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sortByType();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"datetime\":"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sortByDateTime();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid sorting parameter\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Sorts the task list by the task description."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void sortByName() {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.sort(Comparator.comparing(Task::getDescription));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Sorts the task list by the task type."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void sortByType() {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.sort(Comparator.comparing(Task::getType));"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Sorts the task list by task\u0027s the date time."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void sortByDateTime() {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.sort(new TaskDateTimeComparator());"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 284
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * User interface (UI) handles all the message formatting for the bot\u0027s"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * personality, and also printing of messages to the command line interface (CLI)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * All bot messages and response go through this Ui to reach the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String LINE \u003d \"    --------------------------------------------------------------\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String WELCOME_MESSAGE \u003d \"Hello! Tebby lives to serve :)\\nSend \u0027help\u0027 for list of commands!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructs the Ui and scanner."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Prints the logo of the application along with the greeting message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String logo \u003d \"                                                 _     _\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \" _______  _______  _______  _______  __   __    (c).-.(c)\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"|       ||       ||  _    ||  _    ||  | |  |    / ._. \\\\ \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"|_     _||    ___|| |_|   || |_|   ||  |_|  |  __\\\\( Y )/__\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |   |  |   |___ |       ||       ||       | (_.-/\u0027-\u0027\\\\-._)\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |   |  |    ___||  _   | |  _   | |_     _|    ||   || \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |   |  |   |___ | |_|   || |_|   |  |   |    _.\u0027 `-\u0027 \u0027._\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |___|  |_______||_______||_______|  |___|   (.-./`-\u0027\\\\.-.)\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"                                               `-\u0027     `-\u0027\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"The Task Manager\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sendMessage(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Prints the exit message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String msg \u003d LINE + \"\\n    Have a good day! Tebby logging off...\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        msg +\u003d \"    ----------------------------X---------------------------------\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Prints the bot\u0027s message in a formatted way."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The standardized format for printing messages from the bot is:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     --------------------------------------------------------------"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     Bot\u0027s message here, Line 1"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     Line 2"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     --------------------------------------------------------------"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param message the message of the bot to be formatted."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void sendMessage(String message) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(message);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        int offset \u003d 0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            int nextIndex \u003d sb.indexOf(\"\\n\", offset);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (nextIndex !\u003d -1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                sb.insert(nextIndex + 1, \"    \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                offset \u003d nextIndex + 5;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(LINE + \"\\n    \" + sb + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Prefixes the scanner input with \"\u003e\u003e\" as a"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * visual indication for the user to type an input. Example:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * \u003e\u003e User input here"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the entire line of user input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.print(\"\u003e\u003e \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Returns the message for reporting the number of tasks in the list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The message considers zero, singular, and plural number of tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param size the size of the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the task report message."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getTaskReportMessage(int size) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String task \u003d size \u003d\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String num \u003d size \u003d\u003d 0 ? \"no\" : String.valueOf(size);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"now you have \" + num + \" \" + task + \" in the list!\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Returns the message after a task manipulation command has been"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * successfully processed."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the type of task manipulation."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param task the task object to be added to the message."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the formatted success message."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getTaskSuccessMessage(String type, Task task) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Okay I\u0027ve \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        assert List.of(\"add\", \"remove\", \"done\", \"start\").contains(type)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                : \"Task manipulation type can only be one of [add, remove, done, start].\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        switch(type) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\"added:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"remove\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\"removed:\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\"marked this task as done:\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"start\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\"set this task\u0027s start date time:\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Unrecognized task manipulation type!\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sb.append(String.format(\"\\n    %s\", task));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the list of commands available in the application."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the list of commands in a string message."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getListOfCommands() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] commands \u003d new String[]{"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"list\", \"todo \u003cdescription\u003e\","
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"event \u003cdescription\u003e /at \u003cdate\u003e [time]\","
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"deadline \u003cdescription\u003e /by \u003cdate\u003e [time]\","
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"fixed \u003cdescription\u003e /for \u003cduration\u003e\","
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"done \u003ctask no./all\u003e\", \"remove \u003ctask no./all/done\u003e\","
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"sort \u003cname/type/datetime\u003e\","
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"start \u003ctask no.\u003e \u003cdate time/now\u003e\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        };"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the available commands:\\n\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        for (String command: commands) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\"- \").append(command).append(\"\\n\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String additionalInfo \u003d \"Fields: \u003crequired\u003e [optional]\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"\\nDate: YYYY-MM-DD or today/tomorrow\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"\\nTime: HH:MM (24 hr format)\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sb.append(\"\\n\").append(additionalInfo).append(\"\\n\\nRefer to user guide for the complete guide :)\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the message when clearing of list is successful."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the message."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getClearListMessage() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"Your list has been cleared!! Yay~\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the message when removing of done tasks in the list is successful."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the message."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getRemoveDoneMessage() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"All completed tasks have been removed :)\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the message when there is attempt to sort an empty list."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the message."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getEmptyListSortingMessage() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"I can\u0027t sort an empty list :(\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the message when sorting of list is sucessful."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the message."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getSuccessSortingMessage() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"Your list has been sorted!\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the welcome message."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the message."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getGuiWelcomeMessage() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return WELCOME_MESSAGE;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 197
    }
  },
  {
    "path": "src/main/java/test/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void constructor_missingTime_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            new Deadline(\"unit testing\", \"2020-01-01\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail(\"Should create task successfully, time is Optional.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 18
    }
  },
  {
    "path": "src/main/java/test/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void constructor_missingTime_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            new Event(\"unit testing\", \"2020-01-01\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail(\"Should create task successfully, time is Optional.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 18
    }
  },
  {
    "path": "src/main/java/test/FixedDurationTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.FixedDurationTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class FixedDurationTaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void parseDuration_noHour_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            new FixedDurationTask(\"test\", \"10m\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail(\"Should not throw exception!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void parseDuration_noMinute_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            new FixedDurationTask(\"test\", \"2h\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail(\"Should not throw exception!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void parseDuration_invalidString_throwException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            new FixedDurationTask(\"test\", \" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail(\"Should throw exception!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            System.out.println(\"Task failed successfully: \" + e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void parseDuration_negativeValue_throwException() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            new FixedDurationTask(\"test\", \"-10h\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail(\"Should throw exception!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            System.out.println(\"Task failed successfully: \" + e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 49
    }
  },
  {
    "path": "src/main/java/test/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void getTaskDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        assertEquals(\"2 3 4\", Parser.getTextAfterCommand("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                new String[] {\"1\", \"2\", \"3\", \"4\"}));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void parse() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        // err ..."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 19
    }
  },
  {
    "path": "src/main/java/test/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void createTask_todo_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(new Todo(\"borrow book\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    TaskList.createTask(\"todo\", \"borrow book\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void createTask_event_success() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(new Event(\"book borrowing\", \"2020-08-26 00:00\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    TaskList.createTask(\"event\", \"book borrowing /at 2020-08-26 00:00\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void createTask_eventMissingAt_exceptionThrown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(new Event(\"book borrowing\", \"2020-08-26 00:00\"),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    TaskList.createTask(\"event\", \"book borrowing at 2020-08-26 00:00\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail(\"Should have thrown exception.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(\"!!Whoops!! Invalid event description!\", e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 43
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"405.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"8.0\" lineSpacing\u003d\"1.0\" maxWidth\u003d\"250.0\" style\u003d\"-fx-background-color: #42A6FE;\" styleClass\u003d\"roundify\" stylesheets\u003d\"@../images/stylesheet.css\" text\u003d\"oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets right\u003d\"15.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cFont name\u003d\"Segoe UI\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cimage\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cImage url\u003d\"@../images/user.png\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/image\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "sudogene": 36
    }
  },
  {
    "path": "src/main/resources/view/DukeDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"0.0\" prefWidth\u003d\"405.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      \u003cStackPane prefWidth\u003d\"99.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "               \u003cimage\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                  \u003cImage url\u003d\"@../images/tebby.png\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "               \u003c/image\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"8.0\" lineSpacing\u003d\"1.0\" maxWidth\u003d\"250.0\" style\u003d\"-fx-background-color: #42A6FE;\" styleClass\u003d\"dukespeech\" stylesheets\u003d\"@../images/stylesheet.css\" text\u003d\"UWU UWU UWU\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cFont name\u003d\"Segoe UI\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets left\u003d\"15.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      \u003cInsets /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "sudogene": 43
    }
  },
  {
    "path": "src/main/resources/view/DukeErrorDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"0.0\" prefWidth\u003d\"405.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cimage\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cImage url\u003d\"@../images/tebbyError.png\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/image\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"8.0\" lineSpacing\u003d\"1.0\" maxWidth\u003d\"250.0\" style\u003d\"-fx-background-color: #f44d5e;\" styleClass\u003d\"roundify\" stylesheets\u003d\"@../images/stylesheet.css\" text\u003d\"Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cFont name\u003d\"Segoe UI\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets left\u003d\"15.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      \u003cInsets /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "sudogene": 39
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.control.DatePicker?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #898888;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      \u003cDatePicker fx:id\u003d\"datePicker\" editable\u003d\"false\" layoutX\u003d\"289.0\" layoutY\u003d\"562.0\" onAction\u003d\"#appendDateTextToUserInput\" prefHeight\u003d\"32.0\" prefWidth\u003d\"50.0\" styleClass\u003d\"button\" stylesheets\u003d\"@../images/stylesheet.css\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"4.0\" layoutY\u003d\"562.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"32.0\" prefWidth\u003d\"311.0\" stylesheets\u003d\"@../images/stylesheet.css\" AnchorPane.bottomAnchor\u003d\"6.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #898888;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"553.0\" prefWidth\u003d\"380.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"343.0\" layoutY\u003d\"562.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"32.0\" prefWidth\u003d\"53.0\" style\u003d\"-fx-background-color: #584f4f;\" styleClass\u003d\"maximumround\" stylesheets\u003d\"@../images/stylesheet.css\" text\u003d\"Send\" textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cFont name\u003d\"Arial Rounded MT Bold\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      \u003c/Button\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "sudogene": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "todo todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": "event event at 2020-08-10"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "event event /at some date"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "deadline deadline /by some date"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done two"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "delete 200"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sudogene": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "sudogene": 1,
      "-": 37
    }
  }
]
