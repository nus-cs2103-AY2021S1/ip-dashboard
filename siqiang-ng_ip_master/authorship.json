[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "# Duckie project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duckie_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duckie.java` file, right-click it, and choose `Run Duckie.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 3,
      "-": 23
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    mainClassName \u003d \"Duckie.duckie\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    archiveBaseName \u003d \"Duckie\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 18,
      "-": 43
    }
  },
  {
    "path": "data/duckie.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "T | 0 | book hotel"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "T | 1 | study quiz"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "D | 0 | Project OP| Tue, Sep 01 2020"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "E | 0 | Homecoming| Sat, Sep 19 2020 09:30 AM"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "E | 0 | exam| Tue, Sep 15 2020 10:30 AM"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 5
    }
  },
  {
    "path": "src/main/java/duckie/Duckie.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Main file for the chatbot Duckie"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Duckie {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private String cwd \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private Path filePath \u003d Paths.get(cwd, \"data\", \"duckie.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate the Duckie object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public Duckie() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ui.showIntro();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        storage \u003d new Storage(String.valueOf(filePath));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (DuckieException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Activates the chatbot to take in commands"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            } catch (DuckieException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            Command c \u003d Parser.parse(input.trim());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            if (c.isExit()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (DuckieException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 76
    }
  },
  {
    "path": "src/main/java/duckie/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 12
    }
  },
  {
    "path": "src/main/java/duckie/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private Duckie duckie \u003d new Duckie();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuckie(duckie);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 33
    }
  },
  {
    "path": "src/main/java/duckie/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.command.AddCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.command.ByeCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.command.DeleteAllCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.command.DeleteCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.command.DoneCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieInsufficientInfoException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieInvalidCommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Deadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Event;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Todo;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Responsible for the parsing of input Commands"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private static boolean isAWord(String s) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return (s.length() \u003e 0 \u0026\u0026 s.split(\"\\\\s+\").length \u003d\u003d 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Parse the input Command to direct Duckie on what actions to carry out"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param fullCommand Input string command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return Specific Command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @throws DuckieException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static Command parse(String fullCommand) throws DuckieException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String input \u003d fullCommand.strip();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        if (input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else if (input.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else if (input.toLowerCase().indexOf(\"done\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            if (isAWord(input)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                throw new DuckieInsufficientInfoException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                throw new DuckieException(\"You have to input a number after \u0027done\u0027!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            int ind \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return new DoneCommand(ind);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else if (input.toLowerCase().indexOf(\"delete\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            if (isAWord(input)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                throw new DuckieInsufficientInfoException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            String description \u003d input.split(\" \")[1].strip();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            if (description.toLowerCase().equals(\"all\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                return new DeleteAllCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    throw new DuckieException(\"You have to input a number after \u0027delete\u0027!\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                            + \"\\t\" + \"If you want to delete all, input \u0027delete all\u0027\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                int ind \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                return new DeleteCommand(ind);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else if (input.toLowerCase().indexOf(\"todo\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            if (isAWord(input)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                throw new DuckieInsufficientInfoException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            String todo \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            Task t1 \u003d new Todo(todo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return new AddCommand(t1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else if (input.toLowerCase().indexOf(\"deadline\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            if (isAWord(input)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                throw new DuckieInsufficientInfoException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            if (input.contains(\"/\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                String[] splitted \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                if (isAWord(splitted[1])) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    throw new DuckieException(\"Please state a date in the format \u0027DD MMM YYYY\u0027 after \u0027/by\u0027.\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                            + \"\\t\" + \"For example, \u0027deadline Quiz /by 21 Aug 2000\u0027.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                String time \u003d splitted[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                String description \u003d splitted[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(time, formatter);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                Task t1 \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                return new AddCommand(t1);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                throw new DuckieException(\"Please use \u0027/by\u0027 to indicate the date input.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else if (input.toLowerCase().indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            if (isAWord(input)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                throw new DuckieInsufficientInfoException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            if (input.contains(\"/\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                String[] splitted \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                if (isAWord(splitted[1])) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    throw new DuckieException(\"Please state a date in the format \u0027DD MMM YYYY HH:MM a\u0027 after \u0027/at\u0027.\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                            + \"\\t\" + \"For example, \u0027event Party /at 21 Aug 2000 07:20 PM\u0027.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                String time \u003d splitted[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                String description \u003d splitted[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                LocalDateTime dateTime \u003d LocalDateTime.parse(time, formatter);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                Task t1 \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                return new AddCommand(t1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                throw new DuckieException(\"Please use \u0027/at\u0027 to indicate the date input.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else if (input.toLowerCase().indexOf(\"find\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            if (isAWord(input)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                throw new DuckieInsufficientInfoException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            String keyword \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw new DuckieInvalidCommandException();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 135
    }
  },
  {
    "path": "src/main/java/duckie/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieFileErrorException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Todo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.ui.Ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Deals with the stored duckie file in the HardDrive"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate a Storage object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param filePath Path of duckie.txt"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Opens the duckie file from the harddrive"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Creates the file and directory if cannot be found"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return File containing the saved tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @throws DuckieException"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public File openFile() throws DuckieException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            File duckieFile \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            if (!duckieFile.exists()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                File dir \u003d new File(duckieFile.getParent());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                if (!dir.exists()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    if (dir.mkdirs() \u0026\u0026 duckieFile.createNewFile()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        System.out.println(\"\\t\" + \"Memory File created successfully!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        throw new DuckieException(\"\\t\" + \"Quack! Unable to create file!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    if (duckieFile.createNewFile()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        System.out.println(\"\\t\" + \"Memory File created successfully!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        throw new DuckieException(\"Quack! Unable to create file!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return duckieFile;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw new DuckieFileErrorException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Load the duckie file and generate the ArrayList containing the tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return ArrayList containing all the saved tasks"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @throws DuckieException"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DuckieException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        File duckieFile \u003d openFile();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            Scanner sc \u003d new Scanner(duckieFile);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                String[] taskBreakdown \u003d task.split(\"\\\\|\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                String type \u003d taskBreakdown[0].strip();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                String isDone \u003d taskBreakdown[1].strip();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                String description \u003d taskBreakdown[2].strip();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    Todo taskToDo \u003d new Todo(description);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        taskToDo.markDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    tasks.add(taskToDo);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    String date \u003d taskBreakdown[3].strip();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"E, MMM dd yyyy\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    LocalDate d1 \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    Deadline taskD \u003d new Deadline(description, d1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        taskD.markDone();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    tasks.add(taskD);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    String dateTime \u003d taskBreakdown[3].strip();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"E, MMM dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    LocalDateTime d2 \u003d LocalDateTime.parse(dateTime, formatter2);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    Event taskE \u003d new Event(description, d2);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        taskE.markDone();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    tasks.add(taskE);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw new DuckieException(\"Quack! Duckie cannot find your File!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            Ui.displayNoListReply();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            Ui.displayListReply(tasks);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Update the current tasks in the TaskList to the duckie file"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks List containing all the current tasks"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @throws DuckieException"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void saveToFile(ArrayList\u003cTask\u003e tasks) throws DuckieException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            for (Task t1 : tasks) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                toWrite +\u003d (t1.getType() + (t1.isCompleted() ? \" | 1 | \" : \" | 0 | \")"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        + t1.getDescription())"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        + (t1.getDate() !\u003d null ? \"| \" + t1.getDate() : \"\")"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        + System.lineSeparator();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            fw.write(toWrite);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw new DuckieFileErrorException();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 150
    }
  },
  {
    "path": "src/main/java/duckie/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Command to add task into the TaskList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate the AddCommand"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Execute the command to add task into TaskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks TaskList containing all the tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param ui Ui to interact with the users"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param storage Storage to write to File"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @throws DuckieException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckieException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.addTask(this.task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            storage.saveToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (DuckieException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String output \u003d \"Quack! Added: \\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        output +\u003d \"Now you have \" + tasks.getTaskList().size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 42
    }
  },
  {
    "path": "src/main/java/duckie/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Command to signify the exit of the chatbot"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Check if the Command is exiting"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display the ending message and end the chatbot"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks TaskList containing all the tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param ui Ui to interact with the users"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param storage Storage to write to File"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return \"Quack! Hope to see you again!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 30
    }
  },
  {
    "path": "src/main/java/duckie/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Parent class of all the Commands action"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Execute the command according to the input given"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks TaskList containing all the tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param ui Ui to interact with the users"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param storage Storage to write to File"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @throws DuckieException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DuckieException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Check if the Command signifies exit of the chatbot"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 30
    }
  },
  {
    "path": "src/main/java/duckie/command/DeleteAllCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieNoListException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Command to delete all tasks in the TaskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DeleteAllCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Delete all Tasks in TaskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks TaskList containing all the tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param ui Ui to interact with the users"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param storage Storage to write to File"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @throws DuckieException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckieException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        if (lst.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw new DuckieNoListException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.deleteAllTasks();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            storage.saveToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (DuckieException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return \"Quack! All tasks are cleared in the list!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 39
    }
  },
  {
    "path": "src/main/java/duckie/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieNoIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieNoListException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Command to delete a task in the TaskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private int ind;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate the DeleteCommand"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param ind Index of the Task in TaskList to be deleted"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public DeleteCommand(int ind) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.ind \u003d ind;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Delete the required Task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks TaskList containing all the tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param ui Ui to interact with the users"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param storage Storage to write to File"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @throws DuckieException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckieException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        if (lst.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw new DuckieNoListException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        if (lst.size() \u003c ind) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw new DuckieNoIndexException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task task \u003d lst.get(this.ind - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.deleteTask(ind - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            storage.saveToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (DuckieException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String output \u003d \"Quack! I\u0027ve remove this task: \\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        output +\u003d task.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 57
    }
  },
  {
    "path": "src/main/java/duckie/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieNoIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieNoListException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Command to mark a task as Done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private int ind;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate the DoneCommand"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param ind Index of the Task in TaskList to be marked done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public DoneCommand(int ind) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.ind \u003d ind;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Mark a required Task as done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks TaskList containing all the tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param ui Ui to interact with the users"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param storage Storage to write to File"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @throws DuckieException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckieException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        if (lst.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw new DuckieNoListException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        if (lst.size() \u003c ind) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw new DuckieNoIndexException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.markTaskDone(this.ind - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task task \u003d tasks.getTaskList().get(this.ind - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            storage.saveToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (DuckieException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String output \u003d \"Quack! I\u0027ve marked this task as done: \\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        output +\u003d task.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 57
    }
  },
  {
    "path": "src/main/java/duckie/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Command to retrieve all Tasks containing the keyword"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate a FindCommand object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param keyword Keyword that is going to be matched"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Find the matching tasks and display them"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks TaskList containing all the tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param ui Ui to interact with the users"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param storage Storage to write to File"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @throws DuckieException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckieException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d tasks.filterList(keyword);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        if (filteredList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw new DuckieException(\"Duckie can\u0027t find any matching tasks!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            String output \u003d \"Quack! Duckie found these matching tasks: \\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            for (Task task : filteredList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                output +\u003d index + \". \" + task + \"\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 48
    }
  },
  {
    "path": "src/main/java/duckie/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieNoListException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Command to list all the current tasks in the TaskList"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * List and display all the tasks in the TaskList currently"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks TaskList containing all the tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param ui Ui to interact with the users"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param storage Storage to write to File"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @throws DuckieException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckieException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        if (tasks.getTaskList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw new DuckieNoListException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            String output \u003d \"Quack! You have these in your list currently: \\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                output +\u003d index + \". \" + task + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 35
    }
  },
  {
    "path": "src/main/java/duckie/exception/DuckieException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Parent class of all the possible DuckieExceptions"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DuckieException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate DuckieException"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param message Error message of why the Exception is thrown"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public DuckieException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Overrides method to show the message of a DuckieException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 23
    }
  },
  {
    "path": "src/main/java/duckie/exception/DuckieFileErrorException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * DuckieException thrown when facing errors loading duckie file"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DuckieFileErrorException extends DuckieException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate DuckieFileErrorException"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public DuckieFileErrorException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(\"Duckie is facing some problems loading your file.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 14
    }
  },
  {
    "path": "src/main/java/duckie/exception/DuckieInsufficientInfoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * DuckieException thrown when there are insufficient info input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DuckieInsufficientInfoException extends DuckieException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate DuckieInsufficientInfoErrorException"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public DuckieInsufficientInfoException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(\"Duckie needs more description after the first word.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 14
    }
  },
  {
    "path": "src/main/java/duckie/exception/DuckieInvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * DuckieException thrown when Duckie does not understand the command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DuckieInvalidCommandException extends DuckieException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate DuckieInvalidCommandException"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public DuckieInvalidCommandException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(\"Sorry, Duckie does not understand what you are trying to do.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 15
    }
  },
  {
    "path": "src/main/java/duckie/exception/DuckieNoIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * DuckieException thrown when the input index is not found in the TaskList"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DuckieNoIndexException extends DuckieException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate DuckieNoIndexException"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public DuckieNoIndexException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(\"Quack. The input index is not found in the list.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 13
    }
  },
  {
    "path": "src/main/java/duckie/exception/DuckieNoListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * DuckieException thrown when the input command targets a Task but there are no"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * task in the List"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DuckieNoListException extends DuckieException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate DuckieNoListException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public DuckieNoListException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(\"Quack. You have no tasks in the list currently.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 15
    }
  },
  {
    "path": "src/main/java/duckie/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * A task type in charge of task containing deadline date"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected static final DateTimeFormatter DT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"E, MMM dd yyyy\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected LocalDate deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate a Deadline task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param deadline Deadline date of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public Deadline(String description, LocalDate deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Overrides method to return the type of the Deadline task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return \"D\" string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Overrides method to return the date of the Deadline task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return Date string of Deadline Task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return DT_FORMATTER.format(this.deadline);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Overrides method to return the String representation of a Deadline task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return String representation of Deadline task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DT_FORMATTER.format(this.deadline) + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 49
    }
  },
  {
    "path": "src/main/java/duckie/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * A task type in charge of task containing Event date and time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected static final DateTimeFormatter DT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"E, MMM dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate a Event task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param dateTime Date and Time of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public Event(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Overrides method to return the type of the Event task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return \"E\" string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Overrides method to return the date and time of the Event task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return Date and Time string of Event Task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return DT_FORMATTER.format(this.dateTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Overrides method to return the String representation of a Event task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return String representation of Event task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DT_FORMATTER.format(this.dateTime) + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 50
    }
  },
  {
    "path": "src/main/java/duckie/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Parent class of all Tasks type"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate a Task object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Check the task and mark as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Check if a Task is completed or not"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return Boolean value indicating the completeness of the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Return the description of a Task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return String description of a Task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Return the type of a Task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return null"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Return the date of a Task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Overrided method to return the String representation of a Task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return String representation of a Task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String tick \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String cross \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return \"[\" + tick + \"] \" + this.description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return \"[\" + cross + \"] \" + this.description;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 72
    }
  },
  {
    "path": "src/main/java/duckie/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieNoListException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Contains all the saved tasks in a List form"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate an empty list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate a TaskList with pre-saved tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks ArrayList containing pre-saved tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Return the ArrayList containing the current tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return ArrayList containing current tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Return the actual Index of a task in the ArrayList"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param task Task required"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return Integer index value"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public int getIndex(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return tasks.indexOf(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Add a Task to TaskList"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param t1 Task to be added"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void addTask(Task t1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.add(t1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Delete a Task from the TaskList"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param ind Index of the Task in ArrayList"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void deleteTask(int ind) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.remove(ind);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Delete all Tasks in the TaskList"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void deleteAllTasks() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Check the Task in the TaskList as done"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param ind Index of the Task in ArrayList"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void markTaskDone(int ind) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task t1 \u003d tasks.get(ind);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        t1.markDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display the current tasks in the TaskList"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @throws DuckieException If list is empty"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void displayList() throws DuckieException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            throw new DuckieNoListException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Ui.displayListReply(tasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Filter the list based on the keyword provided"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param keyword"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return ArrayList containing all the tasks matching the keyword"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public ArrayList\u003cTask\u003e filterList(String keyword) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        for (Task t1 : tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            String description \u003d t1.getDescription();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                filteredList.add(t1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return filteredList;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 106
    }
  },
  {
    "path": "src/main/java/duckie/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * A task type in charge of task description only"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate Todo object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param description Description of a Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Overrides method to return the type of the Todo Task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return \"T\" string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Overrides method to return the String representation of a Todo task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return String representation of Todo task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 32
    }
  },
  {
    "path": "src/main/java/duckie/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static DialogBox getDuckieDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 61
    }
  },
  {
    "path": "src/main/java/duckie/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.Duckie;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private Duckie duckie;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private Image duckieImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duckie.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void setDuckie(Duckie d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        duckie \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Creates two dialog boxes, one is to greet and another one displays the available tasks in the list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String logo \u003d Ui.getLogo();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String toShow \u003d \"Quack. Duckie is here to remember your tasks!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDuckieDialog(logo + toShow, duckieImage));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDuckieDialog(duckie.getResponse(\"list\"), duckieImage));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duckie\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String response \u003d duckie.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                DialogBox.getDuckieDialog(response, duckieImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 63
    }
  },
  {
    "path": "src/main/java/duckie/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " * Deals with the interaction with users"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private static final String INDENT \u003d \"\\t\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private static final String HORIZ_LINE \u003d INDENT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private static final String LOGO \u003d \"             ___                         _           _\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            + \"      __   |  _ \\\\   _   _    __    | |  _    (_)  __     __\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            + \"___( o)\u003e | | | | | | | | /  __| | |/  /   | | / _ \\\\  \u003c(o )___ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            + \"\\\\ \u003c_. )    | |_| | | | | | | (__  |   \u003c      | | | __/    ( ._\u003e /\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            + \" `---\u0027     |___/  \\\\_,_| \\\\ __| |_|\\\\_\\\\ |_| \\\\__|    `---\u0027 \\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Instantiate an Ui object with the Scanner object ready"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display logo"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static String getLogo() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return LOGO;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display the horizontal line to break the lines"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(HORIZ_LINE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display Duckie introduction and the loading tasks message"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void showIntro() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(HORIZ_LINE + \"\\n\" + LOGO + \"\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + INDENT + \"Quack. Duckie is here to remember your tasks!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        showLoading();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display Duckie ending when \u0027bye\u0027 is input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void showEnding() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + \"Quack! Hope to see you again!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display the addTask message"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param t1 Task that is added"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks ArrayList containing all the tasks"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void addTaskReply(Task t1, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT + \"Quack! Added: \" + t1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT + \"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display the contents in the List"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks ArrayList containing the tasks that are to be displayed"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void displayListReply(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT + \"Quack! You have these in your list currently: \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            System.out.println(INDENT + index + \". \" + task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display the contents in the List"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param tasks ArrayList containing the tasks that are to be displayed"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void displayMatchingTasksReply(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT + \"Quack! Duckie found these matching tasks: \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            System.out.println(INDENT + index + \". \" + task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display the message that there are no tasks in the list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void displayNoListReply() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT + \"Quack. You have no tasks in the list currently\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(HORIZ_LINE);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display the current Task condition after being marked as Done"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param t1 Task being marked Done"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void checkTaskReply(Task t1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + \"Quack! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + INDENT + t1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display the current Task that is being deleted"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param t1 Task being deleted"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void deleteTaskReply(Task t1) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT + \"Quack! I\u0027ve remove this task: \\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + INDENT + t1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display the message that all tasks in the Tasklist has been removed."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void deleteAllReply() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT + \"Quack! All tasks are cleared in the list!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display the Exception message"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @param msg Message of the Exception thrown"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void showError(String msg) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT + \"Oh no! \" + msg);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Read the input Command"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * @return Input string"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(input);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     * Display the Loading Tasks message"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void showLoading() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT + \"Loading tasks...\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(HORIZ_LINE);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 159
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"600.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"90.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 24
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"539.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duckie.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"449.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"451.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"84.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"536.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"533.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 19
    }
  },
  {
    "path": "src/test/java/duckie/DuckieTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DuckieTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 12
    }
  },
  {
    "path": "src/test/java/duckie/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void deadline_inputCommand_deadlineString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String date \u003d \"24 Aug 2020\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task task \u003d new Deadline(\"Homework Quiz\", LocalDate.parse(date, formatter));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        assertEquals(\"[D][✘] Homework Quiz (by: Mon, Aug 24 2020)\", task.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void deadlineMarkDone_inputCommand_deadlineString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String date \u003d \"24 Aug 2020\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task task \u003d new Deadline(\"Homework Quiz\", LocalDate.parse(date, formatter));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        assertEquals(\"[D][✔] Homework Quiz (by: Mon, Aug 24 2020)\", task.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 27
    }
  },
  {
    "path": "src/test/java/duckie/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void event_inputCommand_eventString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String date \u003d \"20 Aug 2020 07:30 PM\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task task \u003d new Event(\"Dinner with friends\", LocalDateTime.parse(date, formatter));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        assertEquals(\"[E][✘] Dinner with friends (at: Thu, Aug 20 2020 07:30 PM)\", task.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void eventMarkDone_inputCommand_eventString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String date \u003d \"20 Aug 2020 07:30 PM\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task task \u003d new Event(\"Dinner with friends\", LocalDateTime.parse(date, formatter));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        assertEquals(\"[E][✔] Dinner with friends (at: Thu, Aug 20 2020 07:30 PM)\", task.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 31
    }
  },
  {
    "path": "src/test/java/duckie/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import duckie.exception.DuckieException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void displayList_noListException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        TaskList tL \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            tL.displayList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (DuckieException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            assertEquals(\"\\t\" + \"Quack. You have no tasks in the list currently.\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void deleteTask_task_taskListSizeNumber() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task todo \u003d new Todo(\"borrow books\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task todo2 \u003d new Todo(\"wash clothes\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.add(todo2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        TaskList tL \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tL.deleteTask(1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        assertEquals(1, tL.getTaskList().size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void deleteAllTasks_task_taskListSize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task todo \u003d new Todo(\"borrow books\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task todo2 \u003d new Todo(\"wash clothes\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.add(todo2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        TaskList tL \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tL.deleteAllTasks();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        assertEquals(0, tL.getTaskList().size());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void addTask_task_taskListSizeNumber() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task todo \u003d new Todo(\"borrow books\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task todo2 \u003d new Todo(\"wash clothes\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        TaskList tL \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tL.addTask(todo2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        assertEquals(2, tL.getTaskList().size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        assertEquals(1, tL.getIndex(todo2));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void getIndex_task_integerIndexNumber() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task todo \u003d new Todo(\"borrow books\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task todo2 \u003d new Todo(\"wash clothes\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        tasks.add(todo2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        TaskList tL \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        assertEquals(1, tL.getIndex(todo2));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 69
    }
  },
  {
    "path": "src/test/java/duckie/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "package duckie.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void todo_inputCommand_todoString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task task \u003d new Todo(\"borrow books\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        assertEquals(\"[T][✘] borrow books\", task.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void todoMarkDone_inputCommand_todoString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Task task \u003d new Todo(\"borrow books\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        assertEquals(\"[T][✔] borrow books\", task.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 20
    }
  },
  {
    "path": "text-ui-test/data/duckie.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "T | 0 | borrow books"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "E | 1 | Homecoming | Wed, Aug 05 2020 07:50 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "D | 0 | quiz | Mon, Aug 10 2020"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "delete all"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "hello"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "todo borrow books"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "event Homecoming /at 5 Aug 2020 07:50 PM"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "deadline quiz /by 10 Aug 2020"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\ngsiq\\OneDrive\\Desktop\\ip"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "javac -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\duckie\\*.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "java -classpath \"%MY_PATH%\\bin\" duckie.Duckie \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 7,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duckie.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "java -classpath ../bin Duckie \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 2,
      "-": 36
    }
  }
]
