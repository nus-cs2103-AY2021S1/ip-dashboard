[
  {
    "path": "sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "./src/main/java/Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": "./src/main/java/Task.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "./src/main/java/Deadline.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": "./src/main/java/Todo.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": "./src/main/java/Event.java"
      }
    ],
    "authorContributionMap": {
      "csiongn": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Attributes"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    protected LocalDate deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public Deadline(String description, LocalDate deadline) throws EmptyBodyException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // String Representation"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "csiongn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "csiongn": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Attributes"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private static final String NAME \u003d \"DUKE\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private static final String INTRODUCTION \u003d String.format("
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            \"Hello! I\u0027m %s\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    \"I was created for the module CS2103T\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    \"What can I do for you?\", NAME);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private static final String EXIT \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private static final String LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private static final Storage storage \u003d new Storage(\"./data/todo.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private static List\u003cTask\u003e lst;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Scanner"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private static final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Greeting"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private static void greeting() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        lst \u003d storage.read();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        System.out.println(wrapText(INTRODUCTION));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Wrap text in lines"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private static String wrapText(String text) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        return LINE + \"\\n    \" + text.replaceAll(\"\\n\", \"\\n    \") + \"\\n\" + LINE + \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Prints list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private static void printList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        int sizeOfList \u003d lst.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        sb.append(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        for (int i \u003d 0; i \u003c sizeOfList; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            int number \u003d i + 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            String text \u003d lst.get(i).toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            sb.append(String.format(\"\\n %s. %s\", number, text));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        System.out.println(wrapText(sb.toString()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private static void createNewTask(Task newTask) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        lst.add(newTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        int newSize \u003d lst.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        String todoText \u003d String.format(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                \" %s\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                \"Now you have %s tasks in the list\", newTask, newSize);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        System.out.println(wrapText(todoText));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Exit"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private static void exit() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        storage.save(lst);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        System.out.println(wrapText(EXIT + \"\\n File saved!\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        greeting();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                // Input Handling"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                String[] words \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                String firstWord \u003d words[0];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                String remaining \u003d words.length \u003e 1 ? words[1] : \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                switch (firstWord) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        exit();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        printList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    case \"delete\": {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        if (remaining.equals(\"\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            throw new EmptyBodyException(\"task number\", \"task\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(remaining);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            Task task \u003d lst.get(taskNumber - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            lst.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            String deleteText \u003d String.format(\"Okay. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                                    \" %s\", task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            System.out.println(wrapText(deleteText));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            throw new IndexOutOfBoundsDukeException(taskNumber, lst.size(), \"task\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        if (remaining.equals(\"\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            throw new EmptyBodyException(\"task number\", \"task\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(remaining);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            Task task \u003d lst.get(taskNumber - 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            String doneText \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                                    \" %s\", task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            System.out.println(wrapText(doneText));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            throw new IndexOutOfBoundsDukeException(taskNumber, lst.size(), \"task\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        Task newTodo \u003d new Todo(remaining);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        createNewTask(newTodo);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    case \"deadline\": {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        String[] text \u003d remaining.split(\" /by \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        String description \u003d text[0];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        if (text.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            throw new EmptyBodyException(\"deadline\", \"deadline\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            LocalDate deadline \u003d LocalDate.parse(text[1]);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            Task newDeadline \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            createNewTask(newDeadline);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            throw new UnknownInputException(text[1]);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    case \"event\": {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        String[] text \u003d remaining.split(\" /at \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        String description \u003d text[0];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        if (text.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                            throw new EmptyBodyException(\"date and time\", \"event\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        String dateTime \u003d text[1];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        Task newEvent \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        createNewTask(newEvent);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                        throw new UnknownInputException(input);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                System.out.println(wrapText(e.toString()));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "csiongn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "csiongn": 147
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public DukeException (String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        super(\":((( OOPS!!! \" + errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "csiongn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "csiongn": 7
    }
  },
  {
    "path": "src/main/java/EmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "public class EmptyBodyException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public EmptyBodyException(String field, String type) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        super(String.format(\"The %s of a %s cannot be empty.\", field, type));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "csiongn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "csiongn": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Attributes"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    protected String dateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public Event(String description, String dateTime) throws EmptyBodyException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // String Representation"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.dateTime + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "csiongn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "csiongn": 17
    }
  },
  {
    "path": "src/main/java/IndexOutOfBoundsDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "public class IndexOutOfBoundsDukeException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public IndexOutOfBoundsDukeException(int number, int maxSize, String thing) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        super(String.format(\"Cannot find %s %s with only %s %s\", thing, number, maxSize, thing));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "csiongn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "csiongn": 7
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "csiongn"
        },
        "content": " * Class to handle logic related to reading and writing of files to storage"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "csiongn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "csiongn"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Attributes"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     * Creates a storage object that reads and writes to a file at a specified filepath."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     * @param filePath file path of file to read and write to"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     * Checks that file we use to store data exists and creates the file if it does not."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public boolean checkOrCreate() throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        return file.getParentFile().mkdirs() \u0026\u0026 file.createNewFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     * Saves a list to the file. Creates the file if it does not exist"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     * @param lst list to save to the file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     * @param \u003cT\u003e type parameter of object inside list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public \u003cT\u003e void save(List\u003cT\u003e lst){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            checkOrCreate();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            FileOutputStream fileOutputStream \u003d new FileOutputStream(this.filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            objectOutputStream.writeObject(lst);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            objectOutputStream.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     * Reads from the file containing a list and returns the list. If file does not exist, returns an"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     * empty file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     * @param \u003cT\u003e type parameter of object inside the list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     * @return a list of objects from the file if file exists, otherwise an empty list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "csiongn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public \u003cT\u003e List\u003cT\u003e read() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            if (checkOrCreate()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                System.out.println(\"File does not exist, creating file\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                System.out.println(\"Todo file found, reading file\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                FileInputStream fileInputStream \u003d new FileInputStream(this.filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                List\u003cT\u003e lst \u003d (List\u003cT\u003e) objectInputStream.readObject();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "csiongn"
        },
        "content": "                return lst;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            System.out.println(\"Error reading file\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            return new ArrayList\u003c\u003e(); // Returns an empty list so that program can keep running"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "csiongn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "csiongn": 73
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Attributes"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public Task(String description) throws EmptyBodyException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "csiongn"
        },
        "content": "            throw new EmptyBodyException(\"description\", this.getClass().toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Methods"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // String Representation"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "csiongn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "csiongn": 33
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public Todo(String description) throws EmptyBodyException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // String Representation"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "csiongn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "csiongn": 14
    }
  },
  {
    "path": "src/main/java/UnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "public class UnknownInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    public UnknownInputException(String input) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": "        super(String.format(\"I\u0027m sorry, but I don\u0027t know what %s means :-(\", input));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "csiongn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "csiongn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "csiongn": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "csiongn"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "csiongn"
        },
        "content": "done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "csiongn"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "csiongn"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "csiongn"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "csiongn"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "csiongn"
        },
        "content": "HAHAHAHAHAHHA"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "csiongn"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "csiongn"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "csiongn"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "csiongn"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "csiongn"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "csiongn": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "csiongn"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "csiongn": 1
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "csiongn"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "csiongn"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "csiongn"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "csiongn"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "csiongn"
        },
        "content": "../src/main/java/Event.java"
      }
    ],
    "authorContributionMap": {
      "csiongn": 5
    }
  }
]
