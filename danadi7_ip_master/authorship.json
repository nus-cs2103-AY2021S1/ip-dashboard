[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.CommandParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/DukeDB.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private TaskManager tm;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            tm \u003d new TaskManager((storage.load()));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            tm \u003d new TaskManager();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ui.showWelcome();;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                Command c \u003d CommandParser.parse(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                c.execute(tm, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 47,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 7
    }
  },
  {
    "path": "src/main/java/duke/logic/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String[] extractedCommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        switch(extractedCommand[0]) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        case(\"bye\"):"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            return new ExitCommand(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        case(\"list\"):"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            return new ListCommand(command);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        case(\"done\"):"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            return new DoneCommand(command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        case(\"delete\"):"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        case(\"deadline\"):"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        case(\"event\"):"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        case(\"todo\"):"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            return new AddCommand(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Command not recognised!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 32
    }
  },
  {
    "path": "src/main/java/duke/logic/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public AddCommand(String command){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void execute(TaskManager tm, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (command.startsWith(\"deadline\")){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            if (command.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                throw new DukeException(\"Description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            String[] commandDetails \u003d command.substring(9).split(\" /by \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            if (commandDetails.length !\u003d 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                throw new DukeException(\"Deadline not properly formatted!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                LocalDate dlDate \u003d LocalDate.parse(commandDetails[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                Deadline deadline \u003d new Deadline(commandDetails[0], dlDate);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                tm.addTask(deadline);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                ui.showDetails(\"Task added: \" + deadline);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                throw new DukeException(\"Invalid DateTime format. Please use YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            if (command.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                throw new DukeException(\"Description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            String[] commandDetails \u003d command.substring(6).split(\" /at \", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            if (commandDetails.length !\u003d 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                throw new DukeException(\"Event not properly formatted!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                LocalDate eventDate \u003d LocalDate.parse(commandDetails[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                Event event \u003d new Event(commandDetails[0], eventDate);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                tm.addTask(event);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                ui.showDetails(\"Task added: \" + event);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                throw new DukeException(\"Invalid DateTime format. Please use YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                throw new DukeException(\"Description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            String commandDetails \u003d command.substring(5);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            ToDo todo \u003d new ToDo(commandDetails);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            tm.addTask(todo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            ui.showDetails(\"Task added: \" + todo);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Command not recognised!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 66
    }
  },
  {
    "path": "src/main/java/duke/logic/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public abstract void execute(TaskManager tm, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 20
    }
  },
  {
    "path": "src/main/java/duke/logic/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void execute(TaskManager tm, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String[] commandDetails \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (commandDetails.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Delete Index not provided!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            int delIndex \u003d Integer.parseInt(commandDetails[1]) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            Task delTask \u003d tm.getTask(delIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            tm.deleteTask(delIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            ui.showDetails(\"Task deleted: \" + delTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Index is not a number!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 30
    }
  },
  {
    "path": "src/main/java/duke/logic/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void execute(TaskManager tm, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String[] commandDetails \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (commandDetails.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Done Index not provided!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            int doneIndex \u003d Integer.parseInt(commandDetails[1]) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            Task doneTask \u003d tm.getTask(doneIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            tm.markTaskDone(doneIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            ui.showDetails(\"Task marked as done: \" + doneTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Index is not a number!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 30
    }
  },
  {
    "path": "src/main/java/duke/logic/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public ExitCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void execute(TaskManager tm, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String[] commandDetails \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (commandDetails.length !\u003d 1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Exit command should not include extra parameters!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tm.getTaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 37
    }
  },
  {
    "path": "src/main/java/duke/logic/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void execute(TaskManager tm, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String[] commandDetails \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (commandDetails.length !\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"List command should not include extra parameters!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tm.getTaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            s \u003d \"List is empty!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                s \u003d s + (i + 1) + \". \" + taskList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ui.showDetails(s);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 34
    }
  },
  {
    "path": "src/main/java/duke/model/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public TaskManager(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void addTask(Task task){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void markTaskDone(int index) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            Task completedTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            completedTask.markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Invalid index!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            Task toDeleteTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            taskList.remove(toDeleteTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Invalid index!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Task getTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            return taskList.get(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Invalid index!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 56
    }
  },
  {
    "path": "src/main/java/duke/model/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super (description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String formattedDate \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return String.format(\"D|%s|%s|%s\", super.isDone, super.description, this.by);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 29
    }
  },
  {
    "path": "src/main/java/duke/model/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String formattedDate \u003d at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return String.format(\"E|%s|%s|%s\", super.isDone, super.description, this.at);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 29
    }
  },
  {
    "path": "src/main/java/duke/model/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public abstract String toDataString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 35
    }
  },
  {
    "path": "src/main/java/duke/model/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return String.format(\"T|%s|%s\", super.isDone, super.description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 21
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private String saveFilePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Storage(String saveFilePath){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.saveFilePath \u003d saveFilePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        File saveFile \u003d new File(saveFilePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (!saveFile.exists()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            saveFile.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        FileWriter fw \u003d new FileWriter(saveFilePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            fw.write(task.toDataString() + \"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(saveFilePath));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            String[] taskLine \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            switch (taskLine[0]) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            case(\"T\"):"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                ToDo todo \u003d new ToDo(taskLine[2], Boolean.parseBoolean(taskLine[1]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                taskList.add(todo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            case(\"D\"):"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                LocalDate deadlineDate \u003d LocalDate.parse(taskLine[3]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                Deadline deadline \u003d new Deadline(taskLine[2], Boolean.parseBoolean(taskLine[1]), deadlineDate);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                taskList.add(deadline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            case(\"E\"):"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                LocalDate eventDate \u003d LocalDate.parse(taskLine[3]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                Event event \u003d new Event(taskLine[2], Boolean.parseBoolean(taskLine[1]), eventDate);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                taskList.add(event);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 60
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private final String WELCOME \u003d \"Hello. I am Claude! What may I do for you today?\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private final String GOODBYE \u003d \"Goodbye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private final String LINE \u003d \"______________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (sc.hasNext()){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            return sc.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(WELCOME);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(GOODBYE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void showDetails(String s) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void showError(Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(\"Failed to load from file. Initiating new instace.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 46
    }
  },
  {
    "path": "src/test/java/duke/logic/CommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class CommandParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void parse_ExitCommand() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String commandString \u003d \"bye\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Command c \u003d CommandParser.parse(commandString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertTrue(c instanceof ExitCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void parse_ListCommand() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String commandString \u003d \"list\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Command c \u003d CommandParser.parse(commandString);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertTrue(c instanceof ListCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void parse_DoneCommand() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String commandString \u003d \"done 1\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Command c \u003d CommandParser.parse(commandString);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertTrue(c instanceof DoneCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void parse_DeleteCommand() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String commandString \u003d \"delete 1\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Command c \u003d CommandParser.parse(commandString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertTrue(c instanceof DeleteCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void parse_addCommand() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String commandString1 \u003d \"deadline foo\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Command c1 \u003d CommandParser.parse(commandString1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertTrue(c1 instanceof AddCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String commandString2 \u003d \"event foo\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Command c2 \u003d CommandParser.parse(commandString1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertTrue(c2 instanceof AddCommand);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String commandString3 \u003d \"todo foo\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Command c3 \u003d CommandParser.parse(commandString1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertTrue(c3 instanceof AddCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 57
    }
  },
  {
    "path": "src/test/java/duke/model/TaskManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import duke.model.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class TaskManagerTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private TaskManager tm \u003d new TaskManager();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void addTask_newDeadline() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(0, tm.getTaskList().size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        LocalDate dlDate \u003d LocalDate.parse(\"2020-09-01\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test\", dlDate);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        tm.addTask(deadline);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(1, tm.getTaskList().size());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void addTask_newEvent() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(0, tm.getTaskList().size());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        LocalDate eventDate \u003d LocalDate.parse(\"2020-09-01\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Event event \u003d new Event(\"Test\", eventDate);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        tm.addTask(event);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(1, tm.getTaskList().size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void addTask_newTodo() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(0, tm.getTaskList().size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ToDo todo \u003d new ToDo(\"Test\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        tm.addTask(todo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(1, tm.getTaskList().size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void markTaskDone_ValidIndex() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(0, tm.getTaskList().size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ToDo todo \u003d new ToDo(\"Test\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        tm.addTask(todo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(1, tm.getTaskList().size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        tm.markTaskDone(0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(true, tm.getTask(0).isDone());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void markTaskDone_InvalidIndex_exceptionThrown(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(0, tm.getTaskList().size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ToDo todo \u003d new ToDo(\"Test\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        tm.addTask(todo);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(1, tm.getTaskList().size());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Exception exception1 \u003d assertThrows(DukeException.class, () -\u003e tm.markTaskDone(1));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Exception exception2 \u003d assertThrows(DukeException.class, () -\u003e tm.markTaskDone(-1));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(exception1.getMessage(), \"Invalid index!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(exception2.getMessage(), \"Invalid index!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void deleteTask_ValidIndex() throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(0, tm.getTaskList().size());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ToDo todo \u003d new ToDo(\"Test\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        tm.addTask(todo);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(1, tm.getTaskList().size());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        tm.deleteTask(0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(0, tm.getTaskList().size());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void deleteTask_InvalidIndex_exceptionThrown() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(0, tm.getTaskList().size());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ToDo todo \u003d new ToDo(\"Test\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        tm.addTask(todo);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(1, tm.getTaskList().size());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Exception exception1 \u003d assertThrows(DukeException.class, () -\u003e tm.deleteTask(1));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Exception exception2 \u003d assertThrows(DukeException.class, () -\u003e tm.deleteTask(-1));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(exception1.getMessage(), \"Invalid index!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        assertEquals(exception2.getMessage(), \"Invalid index!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 88
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": "event drink /at 5pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "deadline sleep /by 9pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "danadi7": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "danadi7": 1,
      "-": 20
    }
  }
]
