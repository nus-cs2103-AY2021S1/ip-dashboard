[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "T|0|nth|null|null"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": "D|0|nth then|null|null"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "E|0|this|2020-12-31|2021"
      }
    ],
    "authorContributionMap": {
      "raythx98": 3
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "T|0|this|2020-12-31|2021"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": "D|1|this|2020-12-30|1921"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "E|0|that|null|null"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "E|0|that|2020-11-29|2359"
      }
    ],
    "authorContributionMap": {
      "raythx98": 4
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Main driving force for the Duke application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks \u003d storage.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            boolean isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            while (!isExit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                isExit \u003d parser.parse(tasks, nextLine);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            // Change to DukeException"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.farewell();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 47,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Deals with making sense of user inputs."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Parses the user data by making processing input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param tasks List of tasks at the moment."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param nextLine String to be parsed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public boolean parse(TaskList tasks, String nextLine) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        switch (nextLine) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            System.out.println(\"Here yur tasks faggit: \\n\" + tasks.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                parseSplit(tasks, nextLine);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } catch (UnknownCommandException | EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(e.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private void parseSplit(TaskList tasks, String nextLine) throws EmptyDescriptionException, UnknownCommandException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] slashSplit \u003d nextLine.split(\"/\", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (slashSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String[] spaceSplitFront \u003d slashSplit[0].split(\" \", 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String[] spaceSplitBack \u003d slashSplit[1].split(\" \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            // todo \u003d spaceSplitFront[0], description \u003d spaceSplitFront[1], deadline \u003d spaceSplitBack[1]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            switch (spaceSplitFront[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                if (spaceSplitFront.length \u003c 2) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    throw new EmptyDescriptionException(\"Description empty la oi\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(tasks.addTask(Task.TaskType.TODOS, spaceSplitFront[1], spaceSplitBack[1]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                if (spaceSplitFront.length \u003c 2) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    throw new EmptyDescriptionException(\"Description empty la oi\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(tasks.addTask(Task.TaskType.DEADLINE, spaceSplitFront[1], spaceSplitBack[1]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                if (spaceSplitFront.length \u003c 2) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    throw new EmptyDescriptionException(\"Description empty la oi\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(tasks.addTask(Task.TaskType.EVENT, spaceSplitFront[1], spaceSplitBack[1]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new UnknownCommandException(\"Don\u0027t understand...\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (slashSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String[] spaceSplitFront \u003d slashSplit[0].split(\" \", 2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            // todo \u003d spaceSplitFront[0], description \u003d spaceSplitFront[1]"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            switch (spaceSplitFront[0]) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    if (spaceSplitFront.length \u003c 2) throw new EmptyDescriptionException(\"Description empty la oi\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    System.out.println(tasks.addTask(Task.TaskType.TODOS, spaceSplitFront[1]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    if (spaceSplitFront.length \u003c 2) throw new EmptyDescriptionException(\"Description empty la oi\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    System.out.println(tasks.addTask(Task.TaskType.DEADLINE, spaceSplitFront[1]));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    if (spaceSplitFront.length \u003c 2) throw new EmptyDescriptionException(\"Description empty la oi\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    System.out.println(tasks.addTask(Task.TaskType.EVENT, spaceSplitFront[1]));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    if (spaceSplitFront.length \u003c 2) throw new EmptyDescriptionException(\"Specify index la oi\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                        parseDone(tasks, spaceSplitFront[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                        System.out.println(e.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    if (spaceSplitFront.length \u003c 2) throw new EmptyDescriptionException(\"Specify index la oi\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                        parseDelete(tasks, spaceSplitFront[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                        System.out.println(e.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    if (spaceSplitFront.length \u003c 2) throw new EmptyDescriptionException(\"Specify key word la oi\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                        System.out.println(tasks.findTask(spaceSplitFront[1]));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                        System.out.println(e.toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    throw new UnknownCommandException(\"Don\u0027t understand...\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new Error();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private void parseDone(TaskList tasks, String str) throws InvalidIndexException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int num \u003d Integer.parseInt(str) - 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (num \u003c 0 || num \u003e tasks.getSize() - 1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new InvalidIndexException(\"Simi number lai de\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(\"okcan done:\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(tasks.getTask(Integer.parseInt(str) - 1).markAsDone());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            System.out.println(\"Input is not number ley...\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private void parseDelete(TaskList tasks, String str) throws InvalidIndexException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int num \u003d Integer.parseInt(str) - 1;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (num \u003c 0 || num \u003e tasks.getSize() - 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new InvalidIndexException(\"Simi number lai de\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(\"okcan done:\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(tasks.removeTask(Integer.parseInt(str) - 1));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            System.out.println(\"Input is not number ley...\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 142
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Deals with the manipulation of loading and saving data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public final static String TODO \u003d \"T\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public final static String DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public final static String EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (tasks.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                Writer.overwrite(filepath, tasks.getTask(0).toPrint());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                for (int i \u003d 1; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                Writer.writeOn(filepath, \"\\n\" + tasks.getTask(i).toPrint());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            File myObj \u003d new File(filepath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            Scanner myReader \u003d new Scanner(myObj);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                String[] dataSplit \u003d data.split(\"\\\\|\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                switch (dataSplit[0]) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    tasks.addTask(new ToDos(dataSplit[1], dataSplit[2], dataSplit[3], dataSplit[4]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    tasks.addTask(new Deadline(dataSplit[1], dataSplit[2], dataSplit[3], dataSplit[4]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    tasks.addTask(new Event(dataSplit[1], dataSplit[2], dataSplit[3], dataSplit[4]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            System.out.println(\"No current data exists\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 67
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Deals with manipulation on the list of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Removes a task from List of tasks based on the index."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param idx Index of task to be removed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return String which represents the task removed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String removeTask (int idx) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Task task \u003d taskList.get(idx);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        taskList.remove(idx);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Task getTask(int idx) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return taskList.get(idx);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Creates a task and adds it into the List of tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param deadline Deadline of task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return a String representation of the task added."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String addTask(Task.TaskType taskType, String description, String deadline) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case TODOS:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new ToDos(description.trim(), deadline);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new Deadline(description.trim(), deadline);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new Event(description.trim(), deadline);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return \"Got it, here yur task bij\\n\" + task.toString()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String addTask(Task.TaskType taskType, String description) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case TODOS:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new ToDos(description);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new Deadline(description);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new Event(description);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return \"Got it, here yur task bij\\n\" + task.toString()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Returns a list of all tasks at the moment."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return String which lists all tasks at the moment."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String findTask(String str) throws InvalidIndexException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        TaskList match \u003d new TaskList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        for (Task i: taskList) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String taskDescription \u003d i.getDescription().toLowerCase();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String toCompare \u003d str.toLowerCase();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (taskDescription.contains(toCompare)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                match.addTask(i);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (match.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new InvalidIndexException(\"No such tasks leh...\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return \"Got it, here yur task bij\\n\" + match.toString();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String string \u003d \"\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (getSize() \u003e\u003d 1) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            string \u003d \"1.\" + taskList.get(0).toString();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            for (int num \u003d 2; num \u003c\u003d getSize(); num++) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                string \u003d string + \"\\n\" + num + \".\" + taskList.get(num - 1).toString();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            string \u003d \"empty\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 125
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Deals with the user interface."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Prints a greeting message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String greeting \u003d \"Hello mah dud, itza handsome robo speakin\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"What duh hell du yu wan?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Prints a farewell message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void farewell() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String farewell \u003d \"Never come back,\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"dun wanna see yu ever agin\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.out.println(farewell);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "//    public String readCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "//        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "//        String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "//        sc.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "//        return nextLine;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Prints a horizontal line."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.out.println(\"________________________________________\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Prints the error message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param e String of error to be printed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void showError(String e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Prints the loading error message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param e String of loading error to be printed."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.out.println(\"Error when loading file...\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 57
    }
  },
  {
    "path": "src/main/java/duke/Writer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Writer {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static void overwrite(String filepath, String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            FileWriter writer \u003d new FileWriter(new File(filepath), false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            writer.write(input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            System.out.println(\"No such file exists \" + filepath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static void writeOn(String filepath, String input) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            FileWriter writer \u003d new FileWriter(new File(filepath), true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            writer.write(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            System.out.println(\"No such file exists \" + filepath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 33
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exceptions for all errors as a result of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of an empty description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public EmptyDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of an invalid index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public InvalidIndexException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of an unknown command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public UnknownCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a specific task which has a deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalDate date \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String by \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"D\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        date \u003d LocalDate.parse(bySplit[0]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (bySplit.length \u003e 1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.by \u003d bySplit[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"D\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Deadline(String done, String description, String date, String time) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"D\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (!date.equals(\"null\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.by \u003d time;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toPrint(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return super.toPrint() + \"|\" + date + \"|\" + by;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (by \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String now \u003d \"AM\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            LocalTime localTime \u003d LocalTime.parse(by, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int hour \u003d localTime.get(ChronoField.CLOCK_HOUR_OF_DAY);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int minute \u003d localTime.get(ChronoField.MINUTE_OF_HOUR);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (hour \u003e 12) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                now \u003d \"PM\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                hour -\u003d 12;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    + \", \" + hour + \":\" + minute + now + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 69
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a specific task which is an event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalDate date \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String at \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"E\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] bySplit \u003d at.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        date \u003d LocalDate.parse(bySplit[0]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (bySplit.length \u003e 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.at \u003d bySplit[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"E\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Event(String done, String description, String date, String time) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"E\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (!date.equals(\"null\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.at \u003d time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toPrint(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return super.toPrint() + \"|\" + date + \"|\" + at;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (at \u003d\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String now \u003d \"AM\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            LocalTime localTime \u003d LocalTime.parse(at, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int hour \u003d localTime.get(ChronoField.CLOCK_HOUR_OF_DAY);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int minute \u003d localTime.get(ChronoField.MINUTE_OF_HOUR);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (hour \u003e 12) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                now \u003d \"PM\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                hour -\u003d 12;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[E]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    + \", \" + hour + \":\" + minute + now + \")\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 70
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public enum TaskType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        TODOS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        EVENT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String tag \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalDate date \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String tick \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String cross \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return isDone ? tick : cross; "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public int getStatusBinary() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return isDone? 1 : 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Marks the task as done, and returns the String representation of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return a String representation of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toPrint() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tag + \"|\" + getStatusBinary() + \"|\" + getDescription();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 63
    }
  },
  {
    "path": "src/main/java/duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a specific task which is a to do."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalDate date \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String by \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public ToDos(String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"T\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        date \u003d LocalDate.parse(bySplit[0]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (bySplit.length \u003e 1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.by \u003d bySplit[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"T\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public ToDos(String done, String description, String date, String time) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"T\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (!date.equals(\"null\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.by \u003d time;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toPrint(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return super.toPrint() + \"|\" + date + \"|\" + by;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (by \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String now \u003d \"AM\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            LocalTime localTime \u003d LocalTime.parse(by, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int hour \u003d localTime.get(ChronoField.CLOCK_HOUR_OF_DAY);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int minute \u003d localTime.get(ChronoField.MINUTE_OF_HOUR);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (hour \u003e 12) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                now \u003d \"PM\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                hour -\u003d 12;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[T]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    + \", \" + hour + \":\" + minute + now + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 69
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void tearDown() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.setOut(standardOut);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void parse_glibberish_success() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        new Parser().parse(new TaskList(), \"asdfgh qwert\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d \"duke.exception.UnknownCommandException: Don\u0027t understand...\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d outputStreamCaptor.toString().trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void parse_byeEntry_success() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        boolean actualResult \u003d new Parser().parse(new TaskList(), \"bye\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertTrue(actualResult);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void parse_showEmptyList_success() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        new Parser().parse(new TaskList(), \"list\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d \"Here yur tasks faggit: \\n\" + \"empty\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d outputStreamCaptor.toString().trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 56
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void tearDown() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.setOut(standardOut);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void addTask_emptyList_success() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d new TaskList().addTask(Task.TaskType.TODOS, \"CS2103T Exams\", \"2020-12-31 2021\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d \"Got it, here yur task bij\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                \"[T][✘] CS2103T Exams (by: 2020-12-31 2021)\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                \"Now you have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void deleteTask_singleList_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks.addTask(Task.TaskType.TODOS, \"CS2103T Exams\", \"2020-12-31 2021\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d tasks.removeTask(0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d \"[T][✘] CS2103T Exams (by: 2020-12-31 2021)\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void getSize_emptyList_success() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "//        tasks.addTask(Task.TaskType.TODOS, \"CS2103T Exams\", \"2020-12-31 2021\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        int actualResult \u003d tasks.getSize();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        int expectedResult \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 66
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "done"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "todo something /by 1pm lol"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "event exciting!! /at in da fuTureZ!!"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "deadline homework /by idk whenz"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "event exciting!! yay"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "deadline homework /by still idk"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "todo even more homework omg"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "done this"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "raythx98": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "raythx98": 5,
      "-": 20
    }
  }
]
