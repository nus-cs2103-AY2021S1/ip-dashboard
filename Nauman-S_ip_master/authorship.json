[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public Deadline(String description, boolean isCompleted, String deadline) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        super(description,isCompleted);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.date \u003d parseDate(deadline);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.time \u003d parseTime(deadline);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String getTaskSymbol() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String storeFormat() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(\"%s %s %s %s\",this.getTaskSymbol(),this.isDone(),this.description,this.deadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(\"%s (by: %s %s)\",this.description,date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),time.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public LocalDate parseDate(String deadline) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "       return  LocalDate.parse(deadline.split(\"\\\\s+\")[0]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public LocalTime parseTime(String deadline) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return LocalTime.parse(deadline.split(\"\\\\s+\")[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 40
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public interface Printable{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String print();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        List\u003cTask\u003e tasks \u003d FileSaver.loadFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Printable greeting \u003d () -\u003e \"Hello! I\u0027m Duke \\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Printable goodbye \u003d () -\u003e \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        speak(greeting);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Printable input;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                input \u003d getUserInput(sc);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                String command \u003d input.print();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                if (command.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    FileSaver.writeToFile(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    speak(goodbye);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                } else if (command.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    listTasks(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                } else if (command.split(\"\\\\s+\")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    Task task \u003d tasks.get(Integer.parseInt(command.split(\"\\\\s+\")[1]) - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    task.setDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    speak(() -\u003e \"Nice! I\u0027ve marked this task as done:\\n[✓] \" + task.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                }else if (command.split(\"\\\\s+\")[0].equals(\"delete\")){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    if (command.split(\"\\\\s+\").length !\u003d 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        throw new IllegalUserInputException(\"PLease specify the correct argument number\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        int i \u003d Integer.parseInt(command.split(\"\\\\s+\")[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        Task.decrementTask();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        Task task \u003d tasks.get(i-1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        tasks.remove(i-1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        speak(() -\u003e String.format(\"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                                \"%s%s %s\\n\" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                                \"Now you have %d tasks in the list.\",task.getTaskSymbol(),task.getSymbol(),task.toString(),Task.remainingTasks()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        System.out.println(\"Please choose a valid task number to delete\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    storeInput(command, tasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            } catch (IllegalArgumentException | IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } while (true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static void speak(Printable printable) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        System.out.println(\"------------------------------------------------------\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        System.out.println(printable.print() + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        System.out.println(\"------------------------------------------------------\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static Printable getUserInput(Scanner sc) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return () -\u003e sc.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static void storeInput(String command, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String cmd1 \u003d command.split(\"\\\\s+\")[0];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String cmd2 ;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Task task \u003dnull;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (cmd1.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            cmd2 \u003d  command.substring(cmd1.length()+1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                task \u003d parseDeadline(cmd2);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }catch (Exception e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "               System.out.println( \"Please specify time in format YYYY-MM-DD hh:hh \\n for instance : 2019-10-15 18:00\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else if (cmd1.equals(\"todo\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            if (command.split(\"\\\\s+\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                throw new IllegalUserInputException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            cmd2 \u003d  command.substring(cmd1.length()+1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            task \u003d new Todo(cmd2,false);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else if (cmd1.equals(\"event\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            cmd2 \u003d  command.substring(cmd1.length()+1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            task \u003d parseEvent(cmd2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            throw new IllegalUserInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (task !\u003d null) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            String taskSymbol \u003d task.getTaskSymbol();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            String symbol \u003d task.getSymbol();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            String toString \u003d task.toString();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            Printable userReply \u003d () -\u003e String.format(\"Got it. i\u0027ve added this task:\\n %s%s %s\\n\" +"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    \"Now you have %d tasks in the list.\", taskSymbol, symbol, toString, Task.remainingTasks());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            speak(userReply);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static void listTasks (List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        for (i \u003d 0 ; i \u003c tasks.size() ; i++) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            if (i\u003d\u003dtasks.size()-1) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                sb.append(String.format(\"%d.%s %s\",i+1,task.getSymbol(),task));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                sb.append(String.format(\"%d.%s %s\\n\", i+1,task.getSymbol(), task));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Printable task \u003d () -\u003e sb.toString();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        speak(task);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     private static Deadline parseDeadline(String input) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String[] arr \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String description\u003d\"\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String deadline\u003d\"\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        boolean flag \u003d false;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        for (int i \u003d 0; i\u003carr.length;i++) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            if (arr[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                flag \u003d true;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            if (!flag) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                description +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                deadline +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return new Deadline (description.substring(0,description.length()-1),false,deadline.substring(0,deadline.length()-1));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     private static Event parseEvent (String input) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "         String[] arr \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "         String description\u003d\"\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "         String duration\u003d\"\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "         boolean flag \u003d false;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "         for (int i \u003d 0; i\u003carr.length;i++) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "             if (arr[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                 flag \u003d true;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                 continue;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "             }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "             if (!flag) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                 description +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "             } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                 duration +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "             }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "         }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "         return new Event (description.substring(0,description.length()-1),false,duration.substring(0,duration.length()-1));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 165,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public Event (String name,boolean isCompleted, String duration) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        super(name,isCompleted);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return this.duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String getTaskSymbol() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String storeFormat() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(\"%s %s %s %s\",this.getTaskSymbol(),this.isDone(),this.description,this.duration);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(\"%s (at: %s)\",this.description,this.duration);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 23
    }
  },
  {
    "path": "src/main/java/FileSaver.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class FileSaver {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static String  filePath \u003d \"Data\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static String writePath \u003d \"Data/Duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static void writeToFile(List\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        File f \u003d new File(writePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        FileWriter fw \u003d new FileWriter(writePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        fw.write(\"\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            fw.append(task.storeFormat() + \"\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static List\u003cTask\u003e loadFile() throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        File f \u003d new File(writePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                String taskString \u003d s.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                tasks.add(generateTask(taskString));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            System.out.println(\"Creating new folder\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            File f2 \u003d new  File(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            f2.mkdir();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static Task generateTask(String taskString) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String [] arr \u003d taskString.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        boolean isCompleted \u003d booleanToString(arr[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (arr[0].equals(\"[D]\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            task \u003d new Deadline(arr[2],isCompleted,arr[3] + \" \" + arr[4]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else if (arr[0].equals(\"[E]\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            task \u003d new Event(arr[2],isCompleted,arr[3]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else if (arr[0].equals(\"[T]\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            task \u003d new Todo(arr[2], isCompleted);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            System.out.println(\"This task cannot be read: \" + taskString);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static boolean booleanToString (String bool) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (bool.equals(\"false\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else if (bool.equals(\"true\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        System.out.println(\"Boolean could not be deciphered\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 66
    }
  },
  {
    "path": "src/main/java/IllegalUserInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class IllegalUserInputException extends IllegalArgumentException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public IllegalUserInputException (String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 11
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    protected static int total \u003d 0;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public Task(String name, boolean isCompleted) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.description \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.isDone \u003d isCompleted;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.total ++;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static int remainingTasks() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return Task.total;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (!this.isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            this.total--;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public abstract String getTaskSymbol();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public abstract String storeFormat();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static void decrementTask() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Task.total --;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 45
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public Todo(String name, boolean isCompleted) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        super(name,isCompleted);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String getTaskSymbol() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String storeFormat() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(\"%s %s %s\",this.getTaskSymbol(),this.isDone(),this.description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 1,
      "-": 20
    }
  }
]
