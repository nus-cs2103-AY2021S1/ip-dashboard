[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        return \"D \" + super.toSave() + \"/\" + by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Liu-2001": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public static String line \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public static String path \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            int location;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            String date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            LocalDate time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            String type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            int number \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            boolean isChanged \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            File file \u003d new File(path);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                Scanner reader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                while(reader.hasNextLine()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                    String line \u003d reader.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                    Task task;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                    number++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                    switch (line.charAt(0)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                        case \u0027T\u0027:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            task \u003d new Todo(line.substring(4));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            if(line.charAt(2) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                task.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            tasks.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                        case \u0027D\u0027:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            location \u003d line.indexOf(\"/\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            date \u003d line.substring(location + 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            time \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            description \u003d line.substring(4, location);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            task \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            if(line.charAt(2) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                task.markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            tasks.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                        case \u0027E\u0027:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            location \u003d line.indexOf(\"/\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            date \u003d line.substring(location + 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            time \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            description \u003d line.substring(4, location);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            task \u003d new Event(description, time);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            if(line.charAt(2) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                task.markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            tasks.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            printPart(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            type \u003d s.next();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            while(!type.equals(\"bye\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                    switch (type) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                        case \"list\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            for (int i \u003d 0; i \u003c number; i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                System.out.println(String.format(\"  %d. \", i + 1) + tasks.get(i).toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            description \u003d s.nextLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            if (!(description.length() \u003e 0)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                tasks.add(new Todo(description.substring(1)));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                printPart(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                        + \"  \" + tasks.get(number).toString()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                        + \"\\nNow you have \" + (number + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                number++;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                isChanged \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                        case \"deadline\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            description \u003d s.nextLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            if (!(description.length() \u003e 0)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                location \u003d description.indexOf(\"/\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                date \u003d description.substring(location + 4);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                time \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                description \u003d description.substring(1, location - 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                tasks.add(new Deadline(description, time));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                printPart(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                        + \"  \" + tasks.get(number).toString()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                        + \"\\nNow you have \" + (number + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                number++;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                isChanged \u003d true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                        case \"event\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            description \u003d s.nextLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            if (!(description.length() \u003e 0)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                throw new DukeException(\"\\u2639 OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                location \u003d description.indexOf(\"/\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                date \u003d description.substring(location + 4);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                time \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                description \u003d description.substring(1, location - 1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                tasks.add(new Event(description, time));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                printPart(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                        + \"  \" + tasks.get(number).toString()"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                        + \"\\nNow you have \" + (number + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                number++;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                isChanged \u003d true;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                        case \"done\":"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            description \u003d s.nextLine();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            if (!(description.length() \u003e 0)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                throw new DukeException(\"\\u2639 OOPS!!! The number to be marked done cannot be empty.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                int n \u003d Integer.parseInt(description.substring(1));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                tasks.get(n - 1).markAsDone();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                printPart(\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + tasks.get(n - 1).toString());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                isChanged \u003d true;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                        case \"delete\":"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            description \u003d s.nextLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            if (!(description.length() \u003e 0)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                throw new DukeException(\"\\u2639 OOPS!!! The number to be deleted cannot be empty.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                int selected \u003d Integer.parseInt(description.substring(1));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                printPart(\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                        + \"  \" + tasks.get(selected - 1).toString()"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                        + \"\\nNow you have \" + (number - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                tasks.remove(selected - 1);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                number--;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                                isChanged \u003d true;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                    printPart(e.getMessage());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                type \u003d s.next();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            if(isChanged) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                PrintWriter pw \u003d new PrintWriter(path);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                pw.close();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                PrintWriter writer \u003d new PrintWriter(path);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                for(int i \u003d 0; i \u003c number; i++) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                    writer.write(tasks.get(i).toSave() + \"\\n\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            printPart(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            System.out.println(\"Some error occurred.\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public static void printPart(String str) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Liu-2001": 189,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Liu-2001": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        return \"E \" + super.toSave() + \"/\" + at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Liu-2001": 24
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        return String.format(\"[%s] \", getStatusIcon()) + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        return isDone? \"1 \" : \"0 \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Liu-2001": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "        return \"T \" + super.toSave();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Liu-2001": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Liu-2001": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Liu-2001"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Liu-2001": 3,
      "-": 20
    }
  }
]
