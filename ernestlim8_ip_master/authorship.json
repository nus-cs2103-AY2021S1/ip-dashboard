[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 20,
      "-": 44
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * This file was generated by the Gradle \u0027init\u0027 task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * The settings file is used to specify which projects to include in your build."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Detailed information about configuring a multi-project build in Gradle can be found"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * in the user manual at https://docs.gradle.org/6.6/userguide/multi_project_builds.html"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "rootProject.name \u003d \u0027ip\u0027"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 10
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Class to initiate the Bye Command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(Command.CommandType.Bye);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return ui.showGoodbye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 22
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Parent Abstract Class to be inherited by actual children classes"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private CommandType type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Command(CommandType type) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Runs the command, modifying the contents of taskList, Ui or storage depending on the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * implementation of child class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskList ArrayList of Tasks Objects."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param ui       Object of the Ui class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param storage  Object of the Storage class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Exception that occurs while executing the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return this.type.equals(CommandType.Bye);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public enum CommandType {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Bye,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Todo,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Deadline,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Event,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Done,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Delete,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        List,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Find"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 43
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Class to intiate the Deadline Command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Constructor for DeadlineCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskName Name of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param deadline Deadline of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public DeadlineCommand(String taskName, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(CommandType.Deadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Runs the command to add a new Deadline Task into the TaskList"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskList ArrayList of Tasks Objects."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param ui       Object of the Ui class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param storage  Object of the Storage class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Exception that occurs while executing the command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Task deadlineTask \u003d new DeadlineTask(this.taskName, this.deadline);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        taskList.addTask(deadlineTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        assert taskList.getSize() \u003e 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return ui.showAdd(deadlineTask, taskList.getSize());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        DeadlineCommand that \u003d (DeadlineCommand) o;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return Objects.equals(taskName, that.taskName) \u0026\u0026 Objects.equals(deadline, that.deadline);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 59
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Class to initiate the Delete Command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Constructor for delete command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param index index of the task to delete."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(CommandType.Delete);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (index !\u003d 0 \u0026\u0026 index \u003c\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            Task task \u003d taskList.getTask(index - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            taskList.removeTask(index - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return ui.showDelete(task, taskList.getSize());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new InvalidInputException("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    \"Number provided is too small or too large, Please provide a valid task number\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 38
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Class to initiate the Done Command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Constructor of the Done Command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param index index of the task to be marked as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(CommandType.Done);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Runs the command to mark the selected Task as done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskList ArrayList of Tasks Objects."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param ui       Object of the Ui class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param storage  Object of the Storage class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Exception that occurs while executing the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (index !\u003d 0 \u0026\u0026 index \u003c\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            Task task \u003d taskList.getTask(index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return ui.showDone(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new InvalidInputException("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    \"Number provided is too small or too large, Please provide a valid task number\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 45
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Class to initiate the Event Command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private LocalDateTime timing;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Constructor for the event task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskName Name of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param timing   Time of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public EventCommand(String taskName, LocalDateTime timing) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(CommandType.Event);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Runs the command to add a new Event Task into the TaskList"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskList ArrayList of Tasks Objects."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param ui       Object of the Ui class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param storage  Object of the Storage class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Exception that occurs while executing the command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Task eventTask \u003d new EventTask(this.taskName, this.timing);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        taskList.addTask(eventTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return ui.showAdd(eventTask, taskList.getSize());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 46
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Class to initiate the Find Command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private String findString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Constructor for the find command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param findString string to find."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public FindCommand(String findString) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(CommandType.Find);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.findString \u003d findString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Runs the command to find Matching Tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskList ArrayList of Tasks Objects."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param ui       Object of the Ui class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param storage  Object of the Storage class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Exception that occurs while executing the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        TaskList filteredTaskList \u003d taskList.find(this.findString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return ui.displayMatchingTasks(filteredTaskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        FindCommand that \u003d (FindCommand) o;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return Objects.equals(findString, that.findString);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 51
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Class to initiate the List Command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Constructor for the list command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(Command.CommandType.List);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Runs the command to display the user\u0027s Tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskList ArrayList of Tasks Objects."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param ui       Object of the Ui class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param storage  Object of the Storage class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Exception that occurs while executing the command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return ui.displayTaskList(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 34
    }
  },
  {
    "path": "src/main/java/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.TodoTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Class to initiate the Todo Command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private String todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Command for creating Todos"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param todo Name of todo."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public TodoCommand(String todo) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(CommandType.Todo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.todo \u003d todo;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Runs the command to add a new Todo Task into the TaskList"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskList ArrayList of Tasks Objects."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param ui       Object of the Ui class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param storage  Object of the Storage class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Exception that occurs while executing the command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Task todoTask \u003d new TodoTask(this.todo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        taskList.addTask(todoTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return ui.showAdd(todoTask, taskList.getSize());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        TodoCommand that \u003d (TodoCommand) o;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return Objects.equals(todo, that.todo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 54
    }
  },
  {
    "path": "src/main/java/controller/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 61
    }
  },
  {
    "path": "src/main/java/controller/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().dukeWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().displayReminder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 35
    }
  },
  {
    "path": "src/main/java/controller/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Display the welcome message in the GUI"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void dukeWelcome() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\\n What can I do for you?\", dukeImage));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Displays reminder for deadline tasks that are upcoming in 3 days to user"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void displayReminder() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                DialogBox.getDukeDialog(duke.getReminderString(),dukeImage));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 69
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Duke is a chatbot that allows users to create, delete and complete tasks, which include todos,\\"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * events, and deadlines"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private Reminder reminder;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Constructor for the Duke class"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param filePath path of file to be imported"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        // Retrieve data from the file to the taskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        reminder \u003d new Reminder(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Gets the string representation of reminder"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return String containing deadline tasks that have deadlines within 3 days."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String getReminderString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return ui.displayReminder(reminder.getUpcomingTasks());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * This method runs the chatbot, accepting user input and adding it to a task list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                System.out.println(c.execute(taskList, ui, storage));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            Command c \u003d Parser.parse(input.trim());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            String s \u003d c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            System.out.println(s);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return s;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 87
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import controller.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 13
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.DeadlineCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.EventCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.TodoCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.InvalidDateException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Class that Parses the user input given to the chatbot"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Pattern todo \u003d Pattern.compile(\"todo (.+)\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Pattern deadline \u003d Pattern.compile(\"deadline (.+?) /by (.+)\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Pattern event \u003d Pattern.compile(\"event (.+?) /at (.+)\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Pattern done \u003d Pattern.compile(\"done ([0-9]+)\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Pattern delete \u003d Pattern.compile(\"delete ([0-9]+)\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Pattern datePattern \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            Pattern.compile(\"^([0-9]{1,2})[/-]([0-9]{1,2})[/-]([0-9]{4}) ([0-9]{4})$\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Pattern find \u003d Pattern.compile(\"find (.+)\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Static method that takes in a String and returns a Command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param str String to be parsed"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return Object of the Command Class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Any exceptions with parsing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public static Command parse(String str) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        switch (str.split(\" \")[0]) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return parseDoneCommand(str);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return parseDeleteCommand(str);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return parseTodoCommand(str);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return parseDeadlineCommand(str);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return parseEventCommand(str);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return parseFindCommand(str);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Parses the string str into a Find Command"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param str String to be parsed"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return Object of the Find Command Class."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws EmptyDescriptionException Exception thrown if str has no arguments."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Command parseFindCommand(String str) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher findMatcher \u003d find.matcher(str);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (findMatcher.find()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new FindCommand(findMatcher.group(1));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new EmptyDescriptionException(\"find\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Parses the string str into a Event Command"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param str String to be parsed"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return Object of the Event Command Class."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws EmptyDescriptionException Exception thrown if str has no arguments."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Command parseEventCommand(String str) throws InvalidDateException, EmptyDescriptionException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher eventMatcher \u003d event.matcher(str);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (eventMatcher.find()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            LocalDateTime timing \u003d Parser.parseDate(eventMatcher.group(2));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new EventCommand(eventMatcher.group(1), timing);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new EmptyDescriptionException(\"event\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Parses the string str into a Deadline Command"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param str String to be parsed"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return Object of the Deadline Command Class."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws EmptyDescriptionException Exception thrown if str has no arguments."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Command parseDeadlineCommand(String str) throws InvalidDateException, EmptyDescriptionException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher deadlineMatcher \u003d deadline.matcher(str);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (deadlineMatcher.find()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            LocalDateTime deadLine \u003d Parser.parseDate(deadlineMatcher.group(2));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new DeadlineCommand(deadlineMatcher.group(1), deadLine);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new EmptyDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Parses the string str into a Todo Command"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param str String to be parsed"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return Object of the Todo Command Class."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws EmptyDescriptionException Exception thrown if str has no arguments."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Command parseTodoCommand(String str) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher todoMatcher \u003d todo.matcher(str);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (todoMatcher.find()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            String todo \u003d todoMatcher.group(1);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new TodoCommand(todo);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new EmptyDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Parses the string str into a Delete Command"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param str String to be parsed"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return Object of the Delete Command Class."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws EmptyDescriptionException Exception thrown if str has no arguments."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Command parseDeleteCommand(String str) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher deleteMatcher \u003d delete.matcher(str);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (deleteMatcher.find()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            int taskNum \u003d Integer.parseInt(deleteMatcher.group(1));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new DeleteCommand(taskNum);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new EmptyDescriptionException(\"delete\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Parses the string str into a Done Command"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param str String to be parsed"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return Object of the Done Command Class."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws EmptyDescriptionException Exception thrown if str has no arguments."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private static Command parseDoneCommand(String str) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher doneMatcher \u003d done.matcher(str);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (doneMatcher.find()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            int taskNum \u003d Integer.parseInt(doneMatcher.group(1));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new DoneCommand(taskNum);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new EmptyDescriptionException(\"done\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Static method that takes in a string and converts it into a LocalDateTime object"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param dateString String representing a date in dd/MM/yyyy HHmm format"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return Object of the LocalDateTime class."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws InvalidDateException Exception when the format of the string is invalid."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public static LocalDateTime parseDate(String dateString) throws InvalidDateException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher dateMatcher \u003d datePattern.matcher(dateString);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            if (dateMatcher.find()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                int day \u003d Integer.parseInt(dateMatcher.group(1));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                int month \u003d Integer.parseInt(dateMatcher.group(2));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                int year \u003d Integer.parseInt(dateMatcher.group(3));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                int hour \u003d Integer.parseInt(dateMatcher.group(4).substring(0, 2));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                int minutes \u003d Integer.parseInt(dateMatcher.group(4).substring(2));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                return LocalDateTime.of(year, month, day, hour, minutes);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                throw new InvalidDateException();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new InvalidDateException();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 193
    }
  },
  {
    "path": "src/main/java/duke/Reminder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Reminder {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    LocalDateTime currentDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public Reminder(TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.currentDateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Returns a new TaskList containing deadline tasks that have not been completed and have deadlines within 3 days"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return Object of the TaskList class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public TaskList getUpcomingTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        TaskList upcomingTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            if (task.getTaskType() !\u003d Task.TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                // skip over"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            if (Duration.between(((DeadlineTask) task).getDeadline(), currentDateTime).toDays() \u003c 3"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    \u0026\u0026 task.getHasCompletedInt() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                upcomingTaskList.addTask(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return upcomingTaskList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 39
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeFileException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.TodoTask;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Storage Class which handles reading and writing tasks from txt file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Method that returns a List of Task objects read from a file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return List containing objects of Task type."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Exception when there is error in loading tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        File file \u003d readFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        assert file !\u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return parseFile(file);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Reads the file from the file at location filePath."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return File located at location filePath."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Exception when there are errors in file reading."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public File readFile() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            File data \u003d new File(filePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            data.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            data.createNewFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return data;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new DukeIoException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * ReadLine takes in a String and returns a Task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param line String containing information about a Task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return Task which corresponds to the String line."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Exception when there are errors in reading the line."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public Task readLine(String line) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Pattern todoPattern \u003d Pattern.compile(\"T \\\\| ([01]) \\\\| (.+)\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Pattern deadlinePattern \u003d Pattern.compile(\"D \\\\| ([01]) \\\\| (.+?) \\\\| (.+)\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Pattern eventPattern \u003d Pattern.compile(\"E \\\\| ([01]) \\\\| (.+?) \\\\| (.+)\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher todoMatcher \u003d todoPattern.matcher(line);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher deadlineMatcher \u003d deadlinePattern.matcher(line);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher eventMatcher \u003d eventPattern.matcher(line);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (todoMatcher.find()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new TodoTask(todoMatcher.group(2), Integer.parseInt(todoMatcher.group(1)));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else if (deadlineMatcher.find()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new DeadlineTask("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    deadlineMatcher.group(2),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    Integer.parseInt(deadlineMatcher.group(1)),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    LocalDateTime.parse(deadlineMatcher.group(3)));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else if (eventMatcher.find()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new EventTask("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    eventMatcher.group(2),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    Integer.parseInt(eventMatcher.group(1)),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    LocalDateTime.parse(eventMatcher.group(3)));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            // Formats do not match, input given is invalid"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Parses the contents of the file given into a list of tasks."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param file File that needs to parsed."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return ArrayList containing Task Objects."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Exceptions in parsing the file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public List\u003cTask\u003e parseFile(File file) throws DukeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        List\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            // T | 1 | read book"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                Task task \u003d readLine(line);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                if (task !\u003d null) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    results.add(task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return results;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new DukeFileException();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch (IOException e2) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new DukeIoException();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Saves the contents of the taskList into a txt file."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskList ArrayList containing tasks to be saved."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException Exceptions in saving tasks."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void saveTasks(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            File file \u003d readFile();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            assert file !\u003d null;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                writer.write(task.getFormattedString());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new DukeIoException();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 146
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Class responsible for adding and deletion of tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Removes task from Arraylist"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param index index of task to remove."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.taskList.remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return this.taskList.get(i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Returns a new TaskList containing matching tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param stringToFind String to match."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return Object of TaskList class."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public TaskList find(String stringToFind) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        List\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            if (task.getName().contains(stringToFind)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                findList.add(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return new TaskList(findList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 62
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Class that handles interactions with the user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private String welcomeMessage \u003d \"Hello! I\u0027m Duke\\n What can I do for you?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(this.line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String showGoodbye() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return \"Bye! Message me anytime!!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String showDone(Task task) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return String.join(\"\\n\", \"Nice! I\u0027ve marked this task as done: \", task.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String showAdd(Task task, int size) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return String.join(\"\\n\", \"Added task:\", task.toString(), showTaskQty(size));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String showTaskQty(int size) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return String.format(\"You have %s remaining tasks left, work on them soon!\", size);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String showDelete(Task task, int size) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return String.join(\"\\n\", \"Deleting task.Task: \", task.toString(), showTaskQty(size));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void showError(String errMsg) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(errMsg);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Returns a string displaying the list of tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskList Object of task list class."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return String containing information of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String displayTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        assert taskList !\u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        StringBuilder s \u003d new StringBuilder(\"Here are your current tasks:\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        addTasksToStringBuilder(taskList, s);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return s.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Returns a string displaying the reminder list of tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskList Object of task list class."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return String containing information of reminder tasks."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String displayReminder(TaskList taskList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        assert taskList !\u003d null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (taskList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            StringBuilder s \u003d new StringBuilder(\"Here are your upcoming tasks:\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            addTasksToStringBuilder(taskList, s);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return s.toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return \"You have no tasks that have deadlines coming soon!\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Adds the string representation of tasks in the taskList object to the string builder"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskList Object of the task list class."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param s        Stringbuilder object containing message to be returned to user."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private void addTasksToStringBuilder(TaskList taskList, StringBuilder s) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            s.append(i + 1).append(\".\").append(taskList.getTaskList().get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Uses the Java Scanner to read User Input and trims it"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return String containing the trimmed user input."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @throws DukeException When the user input given is invalid."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String readCommand() throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (line !\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return line.trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new DukeException(\"Please type in a command!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Function to display matching tasks"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param filteredTaskList TaskList containing already filtered task objects."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return String containing information of matching tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String displayMatchingTasks(TaskList filteredTaskList) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (filteredTaskList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            StringBuilder s \u003d new StringBuilder(\"Here are the matching tasks in your list\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            addTasksToStringBuilder(filteredTaskList, s);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return s.toString();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return \"You have no matching tasks!\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Method to print welcome Message"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(this.welcomeMessage);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 127
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Parent class for exceptions in Duke programme"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 10
    }
  },
  {
    "path": "src/main/java/exception/DukeFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Exception that is thrown when there is a problem with file"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DukeFileException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public DukeFileException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(\"Error occurred when reading the File\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 10
    }
  },
  {
    "path": "src/main/java/exception/DukeIoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Exception that is thrown when there is IO error"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DukeIoException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public DukeIoException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(\"IO Exception occurred\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 10
    }
  },
  {
    "path": "src/main/java/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Exception that is thrown when the user sends an empty description to a command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public EmptyDescriptionException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(String.format(\"Description of %s is empty, please try again.\", s));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 10
    }
  },
  {
    "path": "src/main/java/exception/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Exception that occurs when date is in an invalid format"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class InvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public InvalidDateException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(\"Date is given in the wrong format! Please try again!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 10
    }
  },
  {
    "path": "src/main/java/exception/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Exception that is thrown when the user enters an invalid command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(\"Input given is invalid! Please try again!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 14
    }
  },
  {
    "path": "src/main/java/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Default Constructor for Deadline Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param name     Name of Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param deadline Deadline of Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public DeadlineTask(String name, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(name, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Alternative Constructor for Deadline Task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param name         Name of Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param hasCompletedInt boolean to show if task has been completed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param deadline     Deadline of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public DeadlineTask(String name, int hasCompletedInt, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(name, TaskType.DEADLINE, hasCompletedInt);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public LocalDateTime getDeadline() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return \"[D]\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                + super.toString()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                + \" (by: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        DeadlineTask that \u003d (DeadlineTask) o;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return Objects.equals(deadline, that.deadline);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Formats task into a string for file saving"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return formatted string representing the task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String getFormattedString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                \"D | %s | %s | %s\\n\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                this.getHasCompletedInt(),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                this.getName(),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                this.getDeadline());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 70
    }
  },
  {
    "path": "src/main/java/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private LocalDateTime time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Default Constructor for Event Task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param name Name of Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param time Time of Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public EventTask(String name, LocalDateTime time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(name, TaskType.EVENT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Alternative Constructor for Event Task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param name            Name of Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param hasCompletedInt boolean to show if task is completed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param time            Time of Task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public EventTask(String name, int hasCompletedInt, LocalDateTime time) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(name, TaskType.EVENT, hasCompletedInt);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return \"[E]\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                + super.toString()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                + \" (at: \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                + this.time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Formats task into a string for file saving"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return formatted string representing the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String getFormattedString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                \"E | %s | %s | %s\\n\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                this.getHasCompletedInt(), this.getName(), this.getTime());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 55
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private int hasCompletedInt;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Default Constructor for Task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param name Name of Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public Task(String name, TaskType taskType) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.hasCompletedInt \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Alternative Constructor for Task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param name            Name of Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param taskType        Type of Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @param hasCompletedInt boolean to determine whether task is completed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public Task(String name, TaskType taskType, int hasCompletedInt) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.hasCompletedInt \u003d hasCompletedInt;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.hasCompletedInt \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public int getHasCompletedInt() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return hasCompletedInt;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return String.format(\"[%s] %s\", this.hasCompletedInt \u003d\u003d 1 ? \"✓\" : \"✗\", this.name);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public abstract String getFormattedString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public enum TaskType {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        TODO, EVENT, DEADLINE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 57
    }
  },
  {
    "path": "src/main/java/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public TodoTask(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(name, TaskType.TODO);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public TodoTask(String name, int hasCompletedInt) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(name, TaskType.TODO, hasCompletedInt);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        TodoTask that \u003d (TodoTask) o;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return Objects.equals(this.getName(), that.getName())"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                \u0026\u0026 Objects.equals(this.getHasCompletedInt(), that.getHasCompletedInt());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * Formats task into a string for file saving"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     * @return formatted string representing the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String getFormattedString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return String.format(\"T | %s | %s\\n\", this.getHasCompletedInt(), this.getName());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 40
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"controller.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.TodoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.InvalidDateException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void testDate1_validDate() throws InvalidDateException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(Parser.parseDate(\"12/12/2019 0910\"), LocalDateTime.of(2019, 12, 12, 9, 10));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void testDate2_validDate() throws InvalidDateException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(Parser.parseDate(\"2/5/2020 1700\"), LocalDateTime.of(2020, 5, 2, 17, 0));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void testDate_exceptionThrown() throws InvalidDateException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertThrows(InvalidDateException.class, () -\u003e {Parser.parseDate(\"2/14/2020 1700\");});"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void testParseCommand_validCommand() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(Parser.parse(\"todo Eat lunch\"), new TodoCommand(\"Eat lunch\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void testParseCommand2_validCommand() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Parser.parse(\"deadline finish assignment /by 12/12/2019 0910\"),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        new DeadlineCommand(\"finish assignment\", LocalDateTime.of(2019, 12, 12, 9, 10)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 41
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.TodoTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void testReadFile_validFile() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(new Storage(\"src/test/data/duke.txt\").readFile(), new File(\"src/test/data/duke.txt\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void testLoad_validArrayList() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    List\u003cTask\u003e arrayList \u003d new Storage(\"src/test/data/duke.txt\").load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(arrayList.size(), 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(arrayList.get(0), new TodoTask(\"Wash Clothes\", 1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  // Test data/duke.txt if it doesn\u0027t exist in test/data/duke.txt"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void testLoadDirectory_emptyFileDirectory_newArrayListCreated() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(new Storage(\"src/test/data/dukeEmpty.txt\").load(), new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void testReadLine_taskReadSuccessfully() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        new Storage(\"\").readLine(\"D | 0 | tasking | 2020-02-02T18:00\"),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        new DeadlineTask(\"tasking\", LocalDateTime.of(2020, 2, 2, 18, 0)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void testSaveTask_taskSavedCorrectly() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Storage testStorage \u003d new Storage(\"src/test/data/saveTask.txt\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    testStorage.load();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    taskList.addTask(new TodoTask(\"Wash Clothes\", 1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    taskList.addTask(new TodoTask(\"Do tutorial\", 0));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    testStorage.saveTasks(taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    List\u003cTask\u003e arrayList \u003d testStorage.load();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(arrayList.size(), 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(arrayList.get(0), new TodoTask(\"Wash Clothes\", 1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(arrayList.get(1), new TodoTask(\"Do tutorial\", 0));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 58
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 6,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/task.TodoTask.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/task.EventTask.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/task.DeadlineTask.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/task.Task.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/Bot.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/duke.Duke.java"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 6
    }
  }
]
