[
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Date time \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    SimpleDateFormat timeFormatter \u003d new SimpleDateFormat(\"h:mm a\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a deadline task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param description  Contents of the deadline task in the format \"deadline XXX /by yyyy-mm-dd HH:mm\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException  If format of date and/or time given is not yyyy-mm-dd HH:mm."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Deadline(String description) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        super(description.split(\"/by \")[0]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String[] dateAndTime \u003d description.split(\"/by \")[1].split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            this.date \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (dateAndTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                SimpleDateFormat parseFormat \u003d new SimpleDateFormat(\"hh:mm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                this.time \u003d parseFormat.parse(dateAndTime[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Please input a valid date and time in the format yyyy-mm-dd HH:MM\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns formatted date and time string of a deadline task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Formatted date and time string of the deadline task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String getDateAndTimeBracket() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (this.time \u003d\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return String.format(\"(by: %s)\", this.date.format(dateFormatter));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return String.format(\"(by: %s, %s)\", this.date.format(dateFormatter), timeFormatter.format(this.time));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns String representation of a deadline task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String representation of a deadline task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"[D][%s] %s %s\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                this.getStatusIcon(), this.description, this.getDateAndTimeBracket());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 59
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a Duke app."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a Duke app."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param filePath Location that tasks are to be stored in."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Duke(Path filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Runs the Duke app."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Ui.welcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            parser.parse(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            switch(parser.getSplitUserInput()[0].toLowerCase()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"dismiss\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    sc.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    Ui.dismiss();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"scroll\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    tasks.printAllTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"conquer\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    int conquerIndex \u003d tasks.conquerTask(parser.getSplitUserInput());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    storage.overwriteInFile(conquerIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    int deleteIndex \u003d tasks.deleteTask(parser.getSplitUserInput());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    storage.removeFromFile(deleteIndex);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"assist\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    Ui.assist();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    tasks.returnSearchedTask(parser.getSplitUserInput());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    Task t \u003d tasks.addTask(parser.getSanitisedUserInput());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    storage.writeToFile(t, parser.getSanitisedUserInput());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates and runs an instance of a Duke app."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param args "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        java.nio.file.Path path \u003d java.nio.file.Paths.get(workingDir, \"storage\", \"data.txt\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        new Duke(path).run();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 71
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a DukeException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a DukeException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param err Error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public DukeException(String err) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 15
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents an event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Date time \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    SimpleDateFormat timeFormatter \u003d new SimpleDateFormat(\"h:mm a\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a deadline task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param description  Contents of the event task in the format \"deadline XXX /by yyyy-mm-dd HH:mm\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException  If format of date and/or time given is not yyyy-mm-dd HH:mm."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Event(String description) throws DukeException{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        super(description.split(\"/on \")[0]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String[] dateAndTime \u003d description.split(\"/on \")[1].split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            this.date \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (dateAndTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                SimpleDateFormat parseFormat \u003d new SimpleDateFormat(\"hh:mm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                this.time \u003d parseFormat.parse(dateAndTime[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Please input a valid date and time in the format yyyy-mm-dd HH:MM\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns formatted date and time string of an event task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Formatted date and time string of the event task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String getDateAndTimeBracket() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (this.time \u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return String.format(\"(by: %s)\", this.date.format(dateFormatter));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return String.format(\"(by: %s, %s)\", this.date.format(dateFormatter), timeFormatter.format(this.time));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns String representation of an event task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String representation of an event task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"[E][%s] %s %s\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                this.getStatusIcon(), this.description, this.getDateAndTimeBracket());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 58
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a Parser that parses user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private String sanitisedUserInput \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private String[] splitUserInput \u003d new String[0];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a parser."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns String with trimmed leading white spaces."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param input String to be trimmed of leading white spaces."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String that has been trimmed of leading white spaces."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String sanitiseInput(String input) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return input.stripLeading();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Processes user input. "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param userInput String to be processed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void parse(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.splitUserInput \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.sanitisedUserInput \u003d userInput;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (this.splitUserInput[0].isBlank()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            this.sanitisedUserInput \u003d sanitiseInput(userInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            this.splitUserInput \u003d this.sanitisedUserInput.split(\" \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns user input String that has been trimmed of white spaces, if any."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Formatted String."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String getSanitisedUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.sanitisedUserInput;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns user input String array that has been split."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String array."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String[] getSplitUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.splitUserInput;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 54
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.nio.file.StandardCopyOption;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a Storage that stores tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private static int globalIndex \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a Storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param filePath Location where the Storage is initialised."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Storage(Path filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (!java.nio.file.Files.exists(filePath)) { "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                File newDir \u003d new File(\"storage\" + File.separator + \"data.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                newDir.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                newDir.createNewFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Copies stored tasks into a list of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return ArrayList of stored tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String filePath \u003d \"storage\" + File.separator + \"data.txt\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String currentLine;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            while ((currentLine \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                String task[] \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                if (task.length !\u003d 0 \u0026\u0026 !task[0].equals(\"\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    switch(task[1]) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        case \"T\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            ToDo todo \u003d new ToDo(task[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            if (Integer.parseInt(task[2]) \u003d\u003d 1) todo.markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            storedTasks.add(todo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        case \"D\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            Deadline deadline \u003d new Deadline(task[3]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            if (Integer.parseInt(task[2]) \u003d\u003d 1) deadline.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            storedTasks.add(deadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        case \"E\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            Event event \u003d new Event(task[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            if (Integer.parseInt(task[2]) \u003d\u003d 1) event.markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            storedTasks.add(event);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return storedTasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Writes a new task to file containing stored tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void writeToFile(Task t, String input) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String splitTask[] \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (t !\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String type \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            int done \u003d 0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                if (t instanceof ToDo) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    type \u003d \"T\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    type \u003d \"D\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    type \u003d \"E\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                if (t.isDone()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    done \u003d 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                FileWriter fw \u003d new FileWriter(\"storage\" + File.separator + \"data.txt\", true);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                fw.write(globalIndex + \"|\" + type + \"|\" + done + \"|\" + splitTask[1] + \"\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                globalIndex++;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Removes a specific task from file containing stored tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param taskIndex Number corresponding to the specific task to be removed."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void removeFromFile(int taskIndex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (taskIndex !\u003d -1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                int index \u003d 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                String tempFilePath \u003d \"storage\" + File.separator + \"temp.txt\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                String oldFilePath \u003d \"storage\" + File.separator + \"data.txt\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                File tempFile \u003d new File(tempFilePath);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                FileReader fr \u003d new FileReader(oldFilePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                String currentLine;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                String[] task;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                FileWriter fw \u003d new FileWriter(tempFile, true);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                while ((currentLine \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    task \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    if (Integer.parseInt(task[0]) !\u003d taskIndex) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        fw.write(index + \"|\" + task[1] + \"|\" + task[2] + \"|\" + task[3] + \"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        index++;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                globalIndex \u003d index;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                fr.close();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                Files.copy(Paths.get(tempFilePath), Paths.get(oldFilePath), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                Files.delete(Paths.get(tempFilePath));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception err) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(err);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Modifies a specific task in file containing stored tasks."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param taskIndex Number corresponding to the specific task to be modified."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void overwriteInFile(int taskIndex) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (taskIndex !\u003d -1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                String tempFilePath \u003d \"storage\" + File.separator + \"temp.txt\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                String oldFilePath \u003d \"storage\" + File.separator + \"data.txt\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                File tempFile \u003d new File(tempFilePath);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                FileReader fr \u003d new FileReader(oldFilePath);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                String currentLine;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                String[] task;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                FileWriter fw \u003d new FileWriter(tempFile, true);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                while ((currentLine \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    task \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    if (Integer.parseInt(task[0]) !\u003d taskIndex) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        fw.write(currentLine + \"\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        fw.write(taskIndex + \"|\" + task[1] + \"|\" + 1 + \"|\" + task[3] + \"\\n\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                fr.close();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                Files.copy(Paths.get(tempFilePath), Paths.get(oldFilePath), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                Files.delete(Paths.get(tempFilePath));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception err) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(err);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 174
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a Parser that parses user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param description Contents of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns a tick or a cross when the task is done or undone respectively."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return A tick or a cross."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns a tick or a cross when the task is done or undone respectively."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return A tick or a cross."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns String representation of a task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String representation of a task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 54
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a list of stored tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private ArrayList\u003cTask\u003e storedTasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param storedTasks ArrayList of stored tasks loaded from file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e storedTasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.storedTasks \u003d storedTasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Checks whether an empty input is given and throws a DukeException."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param input String user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException If input is empty."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void validateScannerInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (input.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Come again, Your Majesty?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Checks whether an empty task description is given and throws a DukeException."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param task String array of user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException If task description is empty."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void validateAdd(String[] task) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if ((task.length \u003d\u003d 1 || task[1].trim().length() \u003d\u003d 0) \u0026\u0026"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                (task[0].equalsIgnoreCase(\"todo\") ||"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        task[0].equalsIgnoreCase(\"event\") ||"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        task[0].equalsIgnoreCase(\"deadline\"))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Do give me more details about this \" + task[0] + \", Your Majesty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Checks whether correct slash command /by is given for a deadline task and /on for an event task. "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * DukeException is thrown if slash commands are incorrect."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param task String array of user input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException If slash commands are incorrect."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void validateSlashCommands(String[] task) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if(task[0].equalsIgnoreCase(\"deadline\") \u0026\u0026 task[1].split(\"/by \", 2).length \u003d\u003d 1){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Use /by for deadlines, Your Majesty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } else if (task[0].equalsIgnoreCase(\"event\") \u0026\u0026  task[1].split(\"/on \", 2).length \u003d\u003d 1){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Use /on for events, Your Majesty.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Checks whether a given index corresponds to an existing task and throws a DukeException."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param taskNumber String array of user input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException If index given does not correspond to an existing task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void validateIndex(int taskNumber) throws DukeException{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if(taskNumber \u003e storedTasks.size() || taskNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Your Majesty, there\u0027s no such agenda in my detailed records.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Checks whether a valid number is given in user input."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param command String array of user input."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException If no valid number is given in the user input."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void validateConquerDelete(String[] command) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Integer.parseInt(sanitiseInput(command[1]));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception err) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Please enter valid numbers after your command, Your Majesty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Removes leading white spaces in String input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param input String user input."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String that has been trimmed of leading white spaces."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String sanitiseInput(String input) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return input.stripLeading();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Prints all stored tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void printAllTasks() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Ui.printAllTasksUi(storedTasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates and adds an instance of a Task object to list of stored tasks."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param task String user input."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Task object that has been created."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Task addTask(String task) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Task toBeReturned \u003d null;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateScannerInput(task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String splitTask[] \u003d task.split(\" \", 2);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Task newTask \u003d null;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateAdd(splitTask);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateSlashCommands(splitTask);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            switch(splitTask[0].toLowerCase()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                newTask \u003d new ToDo(splitTask[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                newTask \u003d new Deadline(splitTask[1]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                newTask \u003d new Event(splitTask[1]);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                throw new DukeException(\"I\u0027m afraid I do not understand that command, Your Majesty.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (newTask !\u003d null) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                storedTasks.add(newTask);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                Ui.addedMessage(newTask, storedTasks.size());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            toBeReturned \u003d newTask;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Ui.dukeErrorMessage(err);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return toBeReturned;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Marks a specific task as done."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param command String array of user input."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Index of task that is to be marked as done."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public int conquerTask(String[] command) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        int indexToBeReturned \u003d -1;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateConquerDelete(command);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(sanitiseInput(command[1]));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateIndex(taskNumber);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            storedTasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            indexToBeReturned \u003d taskNumber;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Ui.conqueredMessage(storedTasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Ui.dukeErrorMessage(err);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return indexToBeReturned;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Deletes a specific task."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param command String array of user input."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Index of task that is to be deleted."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public int deleteTask(String[] command) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        int indexToBeReturned \u003d -1;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateConquerDelete(command);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(sanitiseInput(command[1]));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateIndex(taskNumber);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Task deletedTask \u003d storedTasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            storedTasks.remove(deletedTask);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            indexToBeReturned \u003d taskNumber;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Ui.deletedMessage(deletedTask, storedTasks.size());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Ui.dukeErrorMessage(err);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return indexToBeReturned;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns current list of stored tasks."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Current list of stored tasks."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public ArrayList\u003cTask\u003e getStoredTasks() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.storedTasks;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void returnSearchedTask(String[] input) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e relevantTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String searchWord \u003d input[1];"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        for (Task t : storedTasks) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (t.getDescription().contains(searchWord)) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                relevantTasks.add(t);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Ui.printRelevantTasksUi(relevantTasks);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 198
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents an event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a ToDo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param description  Contents of the todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns String representation of a todo task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String representation of a todo task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"[T][%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 24
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a Ui object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays welcome message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void welcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\n Always at your service, \\n\" + logo + \"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"Your Majesty, I am your loyal Duke.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"I offer a range of administrative services. Do type \u0027assist\u0027 to see the comprehensive list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays a dashed line break that is 32 dashes long."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void dashedLineBreak() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String dashedLine \u003d \"- \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(dashedLine.repeat(32));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays list of possible user commands."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void assist() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dashedLineBreak();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"Greetings, Your Majesty. \\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"Use any of the commands on the left to access my quality services:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\ttodo [TASK]: Adds a todo to your scroll\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tdeadline [TASK] /by [DATE AND/OR TIME]: Adds a deadline to your scroll\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tevent [TASK] /on [DATE AND/OR TIME]: Adds an event to your scroll\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tscroll: Displays your scroll - your list of tasks\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tconquer [NUMBER]: Marks the particular item on your scroll as DONE\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tdelete [NUMBER]: Deletes the particular item from your scroll\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tfind [KEYWORD]: Returns a list of relevant items on your scroll\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tdismiss: This will be my cue to leave.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"Now, how may I serve you?\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dashedLineBreak();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays goodbye message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void dismiss() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dashedLineBreak();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"Your wish is my command, Your Majesty. Till I see you again. \\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays error message."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param e DukeException."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void dukeErrorMessage(DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dashedLineBreak();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays marked task as done message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param t Task that has been marked as done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void conqueredMessage(Task t) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dashedLineBreak();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"As you wish, Your Majesty. I have marked this as conquered.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\t\" + t);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dashedLineBreak();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays deleted task message."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param t Task that has been deleted."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param size Size of current list of stored tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void deletedMessage(Task t, int size) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dashedLineBreak();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"As you wish, Your Majesty. I have removed this writing.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\t\" + t);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.printf(\"You have %s writing(s) on your scroll as of now. \\n\", size);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dashedLineBreak();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays added task message."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param t Task that has been added."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param size Size of current list of stored tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void addedMessage(Task t, int size) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dashedLineBreak();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"Your Majesty, I\u0027ve added the writing:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\t\" + t);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.printf(\"You have %s writing(s) on your scroll as of now. \\n\",size);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dashedLineBreak();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Prints all stored tasks."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param storedTasks List of stored tasks."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void printAllTasksUi(ArrayList\u003cTask\u003e storedTasks) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (storedTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(\"Your scroll is currently empty, Your Majesty.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            dashedLineBreak();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(\"Your current scroll, Your Majesty:\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            for (Task task : storedTasks) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.printf(\"\\t%s.%s\", storedTasks.indexOf(task) + 1, task);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dashedLineBreak();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void printRelevantTasksUi(ArrayList\u003cTask\u003e storedTasks) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (storedTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(\"There doesn\u0027t seem to be any relevant writings, Your Majesty.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            dashedLineBreak();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(\"Here are the relevant writings, Your Majesty:\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            for (Task task : storedTasks) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.printf(\"\\t%s.%s\", storedTasks.indexOf(task) + 1, task);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dashedLineBreak();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 149
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testStorageCreation() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        java.nio.file.Path path \u003d java.nio.file.Paths.get(workingDir, \"storage\", \"data.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Storage s \u003d new Storage(path);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assertEquals(true, Files.exists(path));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testWriteToFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            java.nio.file.Path path \u003d java.nio.file.Paths.get(workingDir, \"storage\", \"data.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Storage s \u003d new Storage(path);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            ToDo dummyToDo \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String dummyInput \u003d \"todo test\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            s.writeToFile(dummyToDo, dummyInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            FileReader fr \u003d new FileReader(\"storage\" + File.separator + \"data.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String lineToCheck \u003d br.readLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            assertEquals(\"1|T|0|test\", lineToCheck);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testLoadToArray() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            java.nio.file.Path path \u003d java.nio.file.Paths.get(workingDir, \"mockstorage\", \"mockdata.txt\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Storage s \u003d new Storage(path);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            ToDo dummyToDo \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            ArrayList\u003cTask\u003e loadedTasks \u003d s.load();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            assertEquals(dummyToDo.toString(), loadedTasks.get(0).toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void resetDir() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (java.nio.file.Files.exists(java.nio.file.Paths.get(workingDir, \"storage\", \"data.txt\"))) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                java.nio.file.Path pathToTxt \u003d java.nio.file.Paths.get(workingDir, \"storage\", \"data.txt\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                Files.delete(pathToTxt);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                java.nio.file.Path pathToDir \u003d java.nio.file.Paths.get(workingDir, \"storage\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                Files.delete(pathToDir);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String mockDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            java.nio.file.Path pathToMockTxt \u003d java.nio.file.Paths.get(workingDir, \"mockstorage\", \"mockdata.txt\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Files.delete(pathToMockTxt);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            java.nio.file.Path pathToMockDir \u003d java.nio.file.Paths.get(workingDir, \"mockstorage\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Files.delete(pathToMockDir);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            File newDir \u003d new File(\"mockstorage\" + File.separator + \"mockdata.txt\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            newDir.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            newDir.createNewFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"mockstorage\" + File.separator + \"mockdata.txt\", true);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fw.write(\"1|T|0|test\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 89
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testInitialisation() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        loadedList.add(new ToDo(\"test\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        TaskList list \u003d new TaskList(loadedList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assertEquals(1, list.getStoredTasks().size());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testAddTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        TaskList list \u003d new TaskList(loadedList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String input \u003d \"todo test\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ToDo dummyToDo \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        list.addTask(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assertEquals(dummyToDo.toString(), list.getStoredTasks().get(0).toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testConquerTask() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ToDo dummyToDo \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        loadedList.add(dummyToDo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        TaskList list \u003d new TaskList(loadedList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String input \u003d \"conquer 1\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        list.conquerTask(input.split(\" \", 2));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assertEquals(\"[T][✓] test\", list.getStoredTasks().get(0).toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testDeleteTask() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ToDo dummyToDo \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        loadedList.add(dummyToDo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        TaskList list \u003d new TaskList(loadedList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assertEquals(1, list.getStoredTasks().size());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String input \u003d \"delete 1\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        list.deleteTask(input.split(\" \", 2));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assertEquals(0, list.getStoredTasks().size());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 63
    }
  },
  {
    "path": "src/test/mockstorage/mockdata.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "1|T|0|test"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "assist"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "deadline return book /by Thursday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scROLL"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "event arts experience /at Friday 5-6pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "deadline code /for Monday"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "event hackathon /by Tuesday"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "deadline     "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "event    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer $$$"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "delete fbeg"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "delete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "delete "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "todo   "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "       "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "  todo "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "  todo return book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "  conquer   2"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "  delete  1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " scroll"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "dismiss"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 37
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 1,
      "-": 37
    }
  }
]
