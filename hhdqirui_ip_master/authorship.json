[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    toolVersion \u003d \u00278.36\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 16,
      "-": 45
    }
  },
  {
    "path": "data/main.java.duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "T|0|aslkfdj"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "T|0|alkdsj"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "T|0|laskjdfkjalg"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "T|0|abc"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "T|0|def"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 5
    }
  },
  {
    "path": "src/main/java/duke/AppParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class AppParser extends Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public AppUi appUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Constructs a AppParser object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @throws FileNotFoundException for handling file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public AppParser() throws FileNotFoundException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        appUi \u003d new AppUi();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        storage \u003d new Storage(\"data/main.java.duke.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Parses for the app"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param inputCommand user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param list user\u0027s TaskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return response for user input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @throws IOException for handling file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String appParse(String inputCommand, TaskList list) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] command \u003d inputCommand.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int ptr \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        // if the user input is empty, continue the loop"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (command.length \u003c\u003d 0 || inputCommand.equals(\"\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return appUi.getInputEmptyErrorMsg();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (command[ptr].equals(\"\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ptr++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (command[ptr].equals(\"bye\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            storage.writeFile(list);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return appUi.getByeMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"list\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return list.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"done\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(command[ptr + 1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Task t \u003d list.markTaskDone(taskNumber);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (t !\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return appUi.getMarkAsDoneMsg(t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return appUi.getTaskNumberExceedMsg(taskNumber, list.getSize());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                return appUi.getWrongFormatAfterDoneMsg();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"delete\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(command[ptr + 1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Task t \u003d list.delete(taskNumber);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (t \u003d\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return appUi.getTaskNumberExceedMsg(taskNumber, list.getSize());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return appUi.getDeleteMessage(t, list);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                return appUi.getWrongFormatAfterDeleteMsg();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"find\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (ptr + 1 \u003e\u003d command.length) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                return appUi.getWrongFindFormatMsg();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return appUi.getFindResult(Finder.appFind(list, command[ptr + 1]));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"todo\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ArrayList\u003cTodo\u003e newTodos \u003d Todo.of(inputCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (newTodos \u003d\u003d null) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                return appUi.getDescriptionEmptyMsg();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            for(Todo newTodo : newTodos){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                list.add(newTodo);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return appUi.getAfterAddMsgVarargs(TODO, list.getSize(), newTodos.toArray(new Task[newTodos.size()]));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            Deadline deadline \u003d Deadline.of(inputCommand);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (deadline \u003d\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                return appUi.getWrongDeadlineFormatMsg();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            list.add(deadline);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            String res \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (deadline.getDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                res +\u003d appUi.getWrongDateFormatMsg();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (deadline.getTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                res +\u003d appUi.getWrongTimeFormatMsg();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return res + appUi.getAfterAddMsg(deadline, DEADLINE, list.getSize());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"event\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            Event event \u003d Event.of(inputCommand);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (event \u003d\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                return appUi.getWrongEventFormatMsg();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            list.add(event);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            String res \u003d \"\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (event.getDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                res +\u003d appUi.getWrongDateFormatMsg();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (event.getTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                res +\u003d appUi.getWrongTimeFormatMsg();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return res + appUi.getAfterAddMsg(event, EVENT, list.getSize());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return appUi.getNoSuchCommandMsg();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 117
    }
  },
  {
    "path": "src/main/java/duke/AppUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class AppUi extends Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public AppUi(){}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the input empty error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the input empty error message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getInputEmptyErrorMsg(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"\\uD83D\\uDE43 OOPS!!! input cannot be empty.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the bye message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the bye message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getByeMessage(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the mark as done message"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param task the task to be marked as done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the mark as done message"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getMarkAsDoneMsg(Task task){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \" + task.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns message when task number exceed TaskList size"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param taskNumber the specified task number"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param listSize the size of the TaskList"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return message when task number exceed TaskList size"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getTaskNumberExceedMsg(int taskNumber, int listSize) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"no such task: task \" + taskNumber + \" as you only have \" + listSize + \" in total\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns wrong format after done message"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return wrong format after done message"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getWrongFormatAfterDoneMsg() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"\\uD83D\\uDE43 wrong input after the word \\\"done\\\"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns wrong format after the word \"delete\" in delete command message"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return wrong format after the word \"delete\" in delete command message"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getWrongFormatAfterDeleteMsg() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"\\uD83D\\uDE43 wrong input after the word \\\"delete\\\"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns delete message"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param task the Task to be deleted"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param list the TaskList object"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return delete message"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getDeleteMessage(Task task, TaskList list) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" + task.toString()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + String.format(\"\\nNow you have %d tasks in the list.\", list.getSize());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns get description empty message"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return get description empty message"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getDescriptionEmptyMsg() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"\\uD83D\\uDE43 OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns message after add task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param task the Task to be added"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param type the type of Task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param listSize the size of TaskList"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return message after add task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getAfterAddMsg(Task task, int type, int listSize) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (type \u003d\u003d TODO) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            Todo newTodo \u003d (Todo) task;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + newTodo.toString() + \"\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + String.format(\"Now you have %d tasks in the list.\", listSize);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (type \u003d\u003d DEADLINE) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            Deadline ddl \u003d (Deadline) task;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + ddl.toString() + \"\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + String.format(\"Now you have %d tasks in the list.\", listSize);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + event.toString() + \"\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + String.format(\"Now you have %d tasks in the list.\", listSize);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getAfterAddMsgVarargs(int type, int overallListSize, Task ... list){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String res \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c list.length; i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (type \u003d\u003d TODO) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Todo todo \u003d (Todo) list[i];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                res +\u003d (todo.toString() + \"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } else if (type \u003d\u003d DEADLINE) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Deadline ddl \u003d (Deadline) list[i];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                res +\u003d (ddl.toString() + \"\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Event event \u003d (Event) list[i];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                res +\u003d (event.toString() + \"\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return res + String.format(\"Now you have %d tasks in the list.\", overallListSize);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns wrong deadline format message"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return wrong deadline format message"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getWrongDeadlineFormatMsg() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"\\uD83D\\uDE43 OOPS!!! The description and time of a deadline cannot be empty.\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \" Or maybe you used \\\"at\\\" instead of \\\"by\\\"?\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns wrong event format message"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return wrong event format message"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getWrongEventFormatMsg() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"\\uD83D\\uDE43 OOPS!!! The description and time of a event cannot be empty.\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \" Or maybe you used \\\"by\\\" instead of \\\"at\\\"?\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns wrong date format message"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return wrong date format message"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getWrongDateFormatMsg() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"Wrong date input format. Correct format should be \\\"YYYY-MM-DD\\\"\\n\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns wrong time format message"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return wrong time format message"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getWrongTimeFormatMsg() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"Wrong time format. Correct format should be \\\"HH:MM\\\"\\n\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns no such command message"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return no such command message"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getNoSuchCommandMsg() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"\\uD83D\\uDE43 Sorry~ please specify whether this is a todo or a deadline or a event\\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"put the word \\\"todo\\\" or \\\"deadline\\\" or \\\"event\\\" in front of your description\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the Tasks of finding result for matching keyword"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param list the list oof Tasks that contains matching keyword"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the Tasks of finding result for matching keyword"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getFindResult(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        StringBuilder res \u003d new StringBuilder(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            res.append(String.format(\"%d. \", i + 1)).append(list.get(i).toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return res.toString();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the wrong find format error"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the wrong find format error"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getWrongFindFormatMsg() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"Wrong \\\"find\\\" command format.\\nCorrect is \\\"find {keyword}\\\" \""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"where {keyword} is the keyword you want to search\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the Duke logo"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the Duke logo"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getLogo(){"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"Hello from\\n\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \" ____        _        \\n\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 199
    }
  },
  {
    "path": "src/main/java/duke/Checker.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Checker {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a Checker object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Checker(){}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Loops through the task list and print the deadlines or events that are due or at today"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param list the list of Task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static void checkAndPrint(TaskList list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c list.getSize(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (list.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Deadline ddl \u003d (Deadline) list.get(i);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (ddl.getDate() !\u003d null \u0026\u0026 ddl.getDate().equals(LocalDate.now()) \u0026\u0026 !ddl.getIsDone()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"Deadline: (\" + ddl.getDescription() + \") is due today\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } else if (list.get(i) instanceof Event) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Event event \u003d (Event) list.get(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (event.getDate() !\u003d null \u0026\u0026 event.getDate().equals(LocalDate.now()) \u0026\u0026 !event.getIsDone()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"Event: (\" + event.getDescription() + \") is today\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 31
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Gets the description of the deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param s user input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the description of the deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getDescription(String s) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String firstWord \u003d \"deadline\", secondWord \u003d \"/by\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int start \u003d 0, len \u003d s.length();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (!s.substring(start, start + 8).equals(firstWord)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            start++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        start +\u003d 9;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (start \u003e\u003d len) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return s.substring(len);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int end \u003d start + 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (end + 3 \u003c len \u0026\u0026 !s.substring(end, end + 3).equals(secondWord)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            end++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (end + 3 \u003e\u003d len) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            end \u003d len + 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return s.substring(start, end - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Gets the time of the deadline"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param s user input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the time of the deadline"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getTime(String s) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d \"/by\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int i \u003d 0, len \u003d s.length();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (i + 3 \u003c len \u0026\u0026 !s.substring(i, i + 3).equals(word)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return i + 3 \u003d\u003d len ? \"\" : s.substring(i + 4);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Changes the date format in the user input"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the formatted date"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String changeDateFormat(String[] command) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d \"/by\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c command.length; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (command[i].equals(word)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (i + 1 \u003c command.length) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    command[i + 1] \u003d command[i + 1].replace(\u0027/\u0027, \u0027-\u0027);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return command[i + 1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Gets the time in user input"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the time in user input"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getLocalTime(String[] command) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d \"/by\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c command.length; i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (command[i].equals(word)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (i + 2 \u003c command.length) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return command[i + 2];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Create a Deadline object"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return a Deadline object"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static Deadline of(String input) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String by \u003d getTime(input), description \u003d getDescription(input);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] command \u003d input.split(\" \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int ptr \u003d 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (command[ptr].equals(\"\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ptr++;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (description.equals(\"\") || by.equals(\"\") || command[command.length - 1].equals(\"/by\") || ptr \u003d\u003d command.length - 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(changeDateFormat(command));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            deadline.setDate(date);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalTime time \u003d LocalTime.parse(getLocalTime(command));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            deadline.setTime(time);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Create a Deadline object"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param description description of the deadline"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param by by of the deadline"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param isDone whether the deadline is done"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return a Deadline object"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static Deadline of(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Deadline ddl \u003d new Deadline(description, by, isDone);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] dateAndTime \u003d by.replace(\u0027/\u0027, \u0027-\u0027).split(\" \");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalDate d \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ddl.setDate(d);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalTime t \u003d LocalTime.parse(dateAndTime[1]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ddl.setTime(t);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return ddl;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a Deadline object"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param description description of the deadline"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param by by of the deadline"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a Deadline object"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param description description of the deadline"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param by by of the deadline"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param isDone whether the deadline is done"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns by"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return by"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Sets the date of the deadline"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param date date to be set"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Sets the time of the deadline"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param time time to be set"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void setTime(LocalTime time) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the date"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the date"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the time"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the time"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns whether is done"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return whether is done"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Overrides the toString method"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the String"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + (date \u003d\u003d null ? by : (date.toString() + \" (\" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\"))"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + (time !\u003d null ? \" \" + time.toString() : \"\") + \")\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 224
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 81
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    enum TaskType {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        EVENT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private AppParser appParser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private boolean isTextFileExist;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/img1.jpg\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/img2.jpg\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Constructs a Duke object"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @throws FileNotFoundException fileNotFoundException"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Duke() throws FileNotFoundException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        storage \u003d new Storage(\"data/main.java.duke.txt\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        appParser \u003d new AppParser();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            tasks \u003d new TaskList(TaskList.readTextFile2List(storage.load()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            isTextFileExist \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            isTextFileExist \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Constructs a Duke object"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param filePath the file path"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @throws FileNotFoundException fileNotFoundException"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Duke(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            tasks \u003d new TaskList(TaskList.readTextFile2List(storage.load()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Overrides the start method"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param stage stage"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void start(Stage stage){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        });"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        });"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                DialogBox.getDukeDialog(new Label(AppUi.getLogo()"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        + (isTextFileExist ? \"\" : \"no ./data/main.java.duke.txt found\")), new ImageView(duke))"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        );"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @throws IOException for handling file"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        );"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Gets response for user input"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the response for user input"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @throws IOException for handling file"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getResponse(String input) throws IOException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return appParser.appParse(input, tasks);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Runs the Duke app"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @throws IOException exception for reading files"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String inputCommand;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int condition \u003d 1;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (condition \u003d\u003d 1) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            inputCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            condition \u003d parser.parse(inputCommand, tasks);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Checker.checkAndPrint(tasks);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Drives the Duke app"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param args parameter for main method"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @throws IOException exception for reading files"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        new Duke(\"data/main.java.duke.txt\").run();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 222,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Gets the description of the event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param s user input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the description of the event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getDescription(String s) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String firstWord \u003d \"event\", secondWord \u003d \"/at\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int start \u003d 0, len \u003d s.length();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (!s.substring(start, start + 5).equals(firstWord)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            start++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        start +\u003d 6;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (start \u003e\u003d len) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return s.substring(len);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int end \u003d start + 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (end + 3 \u003c len \u0026\u0026 !s.substring(end, end + 3).equals(secondWord)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            end++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (end + 3 \u003e\u003d len) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            end \u003d len + 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return s.substring(start, end - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Gets the time of the event"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param s user input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the time of the event"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getTime(String s) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d \"/at\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int i \u003d 0, len \u003d s.length();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (i + 3 \u003c len \u0026\u0026 !s.substring(i, i + 3).equals(word)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return i + 3 \u003d\u003d len ? \"\" : s.substring(i + 4);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Changes the date format in user input"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the formatted date"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String changeDateFormat(String[] command) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d \"/at\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c command.length; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (command[i].equals(word)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (i + 1 \u003c command.length) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    command[i + 1] \u003d command[i + 1].replace(\u0027/\u0027, \u0027-\u0027);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return command[i + 1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the Time in user input"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the Time in user input"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getLocalTime(String[] command) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d \"/at\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c command.length; i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (command[i].equals(word)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (i + 2 \u003c command.length) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return command[i + 2];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Creates a Event object"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return a Event object"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static Event of(String input) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String by \u003d getTime(input), description \u003d getDescription(input);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] command \u003d input.split(\" \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int ptr \u003d 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (command[ptr].equals(\"\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ptr++;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (description.equals(\"\") || by.equals(\"\") || command[command.length - 1].equals(\"/at\") || ptr \u003d\u003d command.length - 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Event event \u003d new Event(description, by);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(changeDateFormat(command));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            event.setDate(date);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalTime time \u003d LocalTime.parse(getLocalTime(command));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            event.setTime(time);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Create a Event object"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param description description of the event"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param at at of the event"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param isDone whether the event is done"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return a Event object"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static Event of(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Event event \u003d new Event(description, at, isDone);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] dateAndTime \u003d at.replace(\u0027/\u0027, \u0027-\u0027).split(\" \");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalDate d \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            event.setDate(d);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalTime t \u003d LocalTime.parse(dateAndTime[1]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            event.setTime(t);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a Event object"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param description description of the Event"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param at at of the Event"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a Event object"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param description description of the Event"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param at at of the Event"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param isDone whether the Event is done"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the at"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the at"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Sets the date of the event"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param date the date to be set"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Sets the time of the event"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param time the time to be set"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void setTime(LocalTime time) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the date"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the date"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the time"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the time"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns whether is done"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return whether is done"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Overrides the toString method"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the String"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + (date \u003d\u003d null ? at : (date.toString() + \" (\" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\"))"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + (time !\u003d null ? (\" \" + time.toString()) : \"\") + \")\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 224
    }
  },
  {
    "path": "src/main/java/duke/Finder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Finder {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a Finder object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Finder(){}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Finds and prints the Tasks that have matching keyword"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param list the Tasklist"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param keyword the keyword for searching"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static void find(TaskList list, String keyword) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c list.getSize(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (list.get(i) instanceof Todo) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Todo todo \u003d (Todo) list.get(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (todo.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    res.add(todo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } else if (list.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Deadline ddl \u003d (Deadline) list.get(i);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (ddl.getDescription().contains(keyword) || ddl.getBy().contains(keyword)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    res.add(ddl);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Event event \u003d (Event) list.get(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (event.getDescription().contains(keyword) || event.getAt().contains(keyword)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    res.add(event);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Ui.printFindResult(res);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Finds and prints the Tasks that have matching keyword for the app"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param list the Tasklist"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param keyword the keyword for searching"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return a list of matching tasks"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static ArrayList\u003cTask\u003e appFind(TaskList list, String keyword){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c list.getSize(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (list.get(i) instanceof Todo) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Todo todo \u003d (Todo) list.get(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (todo.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    res.add(todo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } else if (list.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Deadline ddl \u003d (Deadline) list.get(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (ddl.getDescription().contains(keyword) || ddl.getBy().contains(keyword)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    res.add(ddl);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Event event \u003d (Event) list.get(i);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (event.getDescription().contains(keyword) || event.getAt().contains(keyword)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    res.add(event);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 68
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Main() throws FileNotFoundException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 54
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static int CONTINUE \u003d 1, BYE \u003d 2;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static int TODO \u003d 0, DEADLINE \u003d 1, EVENT \u003d 2;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a Parser object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Parses the input command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param inputCommand the command inputed by user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param list the TaskList object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return an integer indicating whether to continue to run the app or stop the app"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public int parse(String inputCommand, TaskList list) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] command \u003d inputCommand.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int ptr \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        // if the user input is empty, continue the loop"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (command.length \u003c\u003d 0 || inputCommand.equals(\"\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ui.showInputEmtyError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return CONTINUE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (command[ptr].equals(\"\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ptr++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (command[ptr].equals(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ui.showByeMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return BYE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            list.printList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return CONTINUE;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"done\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(command[ptr + 1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Task t \u003d list.markTaskDone(taskNumber);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (t !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    ui.showTaskMarkAsDone(t);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    ui.showTaskNumberExceed(taskNumber, list.getSize());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                ui.wrongFormatAfterDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return CONTINUE;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"delete\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(command[ptr + 1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Task t \u003d list.delete(taskNumber);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (t \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    ui.showTaskNumberExceed(taskNumber, list.getSize());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    ui.showDeleteMessage(t, list);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                ui.wrongFormatAfterDelete();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return CONTINUE;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"find\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (ptr + 1 \u003e\u003d command.length) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                ui.wrongFindFormat();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                return CONTINUE;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            Finder.find(list, command[ptr + 1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return CONTINUE;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"todo\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ArrayList\u003cTodo\u003e newTodos \u003d Todo.of(inputCommand);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (newTodos \u003d\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                ui.descriptionEmpty();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                return CONTINUE;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            for(Todo newTodo : newTodos){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                list.add(newTodo);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ui.MessageAfterAddVarargs(TODO, list.getSize(), newTodos.toArray(new Task[newTodos.size()]));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return CONTINUE;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            Deadline deadline \u003d Deadline.of(inputCommand);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (deadline \u003d\u003d null) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                ui.wrongDeadlineFormat();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                return CONTINUE;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            list.add(deadline);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (deadline.getDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                ui.wrongDateFormat();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (deadline.getTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                ui.wrongTimeFormat();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ui.MessageAfterAdd(deadline, DEADLINE, list.getSize());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return CONTINUE;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (command[ptr].equals(\"event\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            Event event \u003d Event.of(inputCommand);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (event \u003d\u003d null) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                ui.wrongEventFormat();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                return CONTINUE;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            list.add(event);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (event.getDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                ui.wrongDateFormat();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (event.getTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                ui.wrongTimeFormat();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ui.MessageAfterAdd(event, EVENT, list.getSize());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return CONTINUE;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ui.noSuchCommand();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return CONTINUE;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 133
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    BufferedReader reader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    boolean fileExist \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a Storage object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param filePath the file path"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Storage(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        File outputFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (outputFile.exists()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            fileExist \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Writes the TaskList to a text file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param list the TaskList to be written to text file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param fileWriter the fileWriter to write the file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static void writeArrayList2file(TaskList list, FileWriter fileWriter) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            for (int i \u003d 0; i \u003c list.getSize(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if (list.get(i) instanceof Todo) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    Todo todo \u003d (Todo) list.get(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    fileWriter.write(\"T|\" + (todo.isDone ? \"1\" : \"0\") + \"|\" + todo.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                } else if (list.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    Deadline ddl \u003d (Deadline) list.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    fileWriter.write(\"D|\" + (ddl.isDone ? \"1\" : \"0\") + \"|\" + ddl.getDescription()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                            + \"|\" + ddl.getBy() + \"\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    Event event \u003d (Event) list.get(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    fileWriter.write(\"E|\" + (event.isDone ? \"1\" : \"0\") + \"|\" + event.getDescription()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                            + \"|\" + event.getAt() + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the BufferedReader for ./data/main.java.duke.txt"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the BufferedReader for ./data/main.java.duke.txt"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public BufferedReader load() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return reader;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns whether ./data/main.java.duke.txt exists"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return whether ./data/main.java.duke.txt exists"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public boolean isFileExist() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return fileExist;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Writes TaskList to text file"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param list the TaskList to be written into text file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void writeFile(TaskList list) throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (!fileExist) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            new File(\"./data\").mkdir();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(\"./data/main.java.duke.txt\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        writeArrayList2file(list, fileWriter);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 80
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    enum TaskType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        EVENT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Gets the description of the Task input by user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param s the input command by user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param type the type of Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the description of the Task input by user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getDescription(String s, TaskType type) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (type \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            int start \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            while (!s.substring(start, start + 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                start++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println(start + 4);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return s.substring(start + 4);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String firstWord \u003d type \u003d\u003d TaskType.EVENT ? \"event\" : \"deadline\", secondWord \u003d type \u003d\u003d TaskType.EVENT ? \"/at\" : \"/by\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int start \u003d 0, firstWordLen \u003d type \u003d\u003d TaskType.EVENT ? 5 : 8, len \u003d s.length();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (!s.substring(start, start + firstWordLen).equals(firstWord)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            start++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        start +\u003d (firstWordLen + 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (start \u003e\u003d len) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return s.substring(len);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int end \u003d start + 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (end + 3 \u003c len \u0026\u0026 !s.substring(end, end + 3).equals(secondWord)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            end++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (end + 3 \u003e\u003d len) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            end \u003d len + 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return s.substring(start, end - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Constructs a Task object"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param description the description of the Task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Constructs a Task object"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param description the description of the Task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param isDone whether the task is done"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the status icon of the Task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the status icon of the Task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Marks the Task as done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Returns the description of the Task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the description of the Task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Overrides the toString method"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the String"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 97
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a TaskList object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a TaskList object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param list an ArrayList of Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construction a TaskList object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param reader a BufferedReader to read the ./data/main.java.duke.txt"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public TaskList(BufferedReader reader) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (reader \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            list \u003d readTextFile2List(reader);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Reads all the Tasks in ./data/main.java.duke.txt and puts all the Tasks in an ArrayList"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param reader a BufferedReader for reading ./data/main.java.duke.txt"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return an ArrayList of all Tasks in ./data/main.java.duke.txt"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static ArrayList\u003cTask\u003e readTextFile2List(BufferedReader reader) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            String[] part \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (part[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                list.add(new Todo(part[2], part[1].equals(\"1\")));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } else if (part[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                list.add(Deadline.of(part[2], part[3], part[1].equals(\"1\")));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                list.add(Event.of(part[2], part[3], part[1].equals(\"1\")));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Gets to Task at the specified index"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param index the index of the Task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the Task at the specified index"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints all the Tasks in the TaskList object"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println((i + 1) + list.get(i).toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Marks the Task at specified index as done"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param index the index of the Task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the Task that is marked as done"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Task markTaskDone(int index) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (index \u003c list.size()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            list.get(index).markAsDone();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return list.get(index);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Gets the size of the TaskList"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the size of the TaskList"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Removes the Task at specified index"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param index the index of the Task"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the removed Task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (index \u003c list.size()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return list.remove(index);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Adds the Task to TaskList"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param task the Task to be added"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        StringBuilder res \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            res.append((i + 1)).append(\" \").append(list.get(i).toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return res.toString();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 130
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Gets the description of the Todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param s the todo input by user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the description of the Todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getDescription(String s) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int start \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while (!s.substring(start, start + 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            start++;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return s.substring(start + 5);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Create a Todo object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param input input by user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the Todo object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static ArrayList\u003cTodo\u003e of(String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String description \u003d getDescription(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] descriptions \u003d description.split(\",\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        ArrayList\u003cTodo\u003e res \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for(String des : descriptions){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            res.add(new Todo(des));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a Todo object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param description the description of the Todo"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a Todo object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param description the description of the Todo"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param isDone whether the todo is done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Todo(String description, boolean isDone){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Overrides the toString method"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @return the String"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 65
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static int TODO \u003d 0, DEADLINE \u003d 1, EVENT \u003d 2;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Construct a Ui object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Ui(){}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints the welcome message"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        // print greetings of chatbot"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"What can I do for you?\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints the load file error"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"no ./data/main.java.duke.txt found\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints the input empty error"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void showInputEmtyError() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"\\uD83D\\uDE43 OOPS!!! input cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints the bye message"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void showByeMessage() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"Bye. Hope to see you again soon!\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints Task mark as done"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param task the task to be marked as done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void showTaskMarkAsDone(Task task) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"[\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints error when task number exceed TaskList size"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param taskNumber the specified task number"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param listSize the size of the TaskList"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void showTaskNumberExceed(int taskNumber, int listSize) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"no such task: task \" + taskNumber + \" as you only have \" + listSize + \" in total\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints wrong format after the word \"done\" in done command"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void wrongFormatAfterDone() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"\\uD83D\\uDE43 wrong input after the word \\\"done\\\"\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints wrong format after the word \"delete\" in delete command"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void wrongFormatAfterDelete() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"\\uD83D\\uDE43 wrong input after the word \\\"delete\\\"\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints delete message"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param task the Task to be deleted"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param list the TaskList object"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void showDeleteMessage(Task task, TaskList list) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list.\", list.getSize()));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints description empty message"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void descriptionEmpty() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"\\uD83D\\uDE43 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints message after add task"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param task the Task to be added"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param type the type of Task"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param listSize the size of TaskList"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void MessageAfterAdd(Task task, int type, int listSize) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if (type \u003d\u003d TODO) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            Todo newTodo \u003d (Todo) task;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + newTodo.toString() + \"\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + String.format(\"Now you have %d tasks in the list.\", listSize)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else if (type \u003d\u003d DEADLINE) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            Deadline ddl \u003d (Deadline) task;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + ddl.toString() + \"\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + String.format(\"Now you have %d tasks in the list.\", listSize)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + event.toString() + \"\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + String.format(\"Now you have %d tasks in the list.\", listSize)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void MessageAfterAddVarargs(int type, int overallListSize, Task ... list){"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String res \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c list.length; i++) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if (type \u003d\u003d TODO) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Todo todo \u003d (Todo) list[i];"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                res +\u003d (todo.toString() + \"\\n\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } else if (type \u003d\u003d DEADLINE) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Deadline ddl \u003d (Deadline) list[i];"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                res +\u003d (ddl.toString() + \"\\n\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Event event \u003d (Event) list[i];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                res +\u003d (event.toString() + \"\\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(res + String.format(\"Now you have %d tasks in the list.\", overallListSize));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints wrong deadline format"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void wrongDeadlineFormat() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"\\uD83D\\uDE43 OOPS!!! The description and time of a deadline cannot be empty.\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \" Or maybe you used \\\"at\\\" instead of \\\"by\\\"?\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints wrong event format"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void wrongEventFormat() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"\\uD83D\\uDE43 OOPS!!! The description and time of a event cannot be empty.\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \" Or maybe you used \\\"by\\\" instead of \\\"at\\\"?\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints wrong date format"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void wrongDateFormat() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"Wrong date input format. Correct format should be \\\"YYYY-MM-DD\\\"\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints wrong time format"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void wrongTimeFormat() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"Wrong time format. Correct format should be \\\"HH:MM\\\"\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints no such command message"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void noSuchCommand() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"\\uD83D\\uDE43 Sorry~ please specify whether this is a todo or a deadline or a event\\n\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                + \"put the word \\\"todo\\\" or \\\"deadline\\\" or \\\"event\\\" in front of your description\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints the Tasks of finding result for matching keyword"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * @param list the list oof Tasks that contains matching keyword"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static void printFindResult(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println(String.format(\"%d. \", i + 1) + list.get(i).toString());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     * Prints the wrong find format error"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void wrongFindFormat() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"Wrong \\\"find\\\" command format.\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"Correct is \\\"find {keyword}\\\" where {keyword} is the keyword you want to search\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 217
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package test.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import main.java.duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void getDescriptionTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        assertEquals(Deadline.getDescription(\"deadline abcd /by 1111-11-11 11:11\"), \"abcd\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void getTimeTest(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        assertEquals(Deadline.getTime(\"deadline abcd /by 1111-11-11 11:11\"), \"1111-11-11 11:11\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void changeDateFormatTest(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] s \u003d {\"/by\", \"1111/11/11\"};"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        assertEquals(Deadline.changeDateFormat(s), \"1111-11-11\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 23
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package test.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import org.junit.jupiter.api.DynamicTest;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void dt(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 13
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package test.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import main.java.duke.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void getDescriptionTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        assertEquals(Event.getDescription(\"event abcd /at 1111-11-11 11:11\"), \"abcd\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void getTimeTest(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        assertEquals(Event.getTime(\"event abcd /at 1111-11-11 11:11\"), \"1111-11-11 11:11\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void changeDateFormatTest(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] s \u003d {\"/at\", \"1111/11/11\"};"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        assertEquals(Event.changeDateFormat(s), \"1111-11-11\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 23
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package test.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void getSizeTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        assertEquals(new TaskList().getSize(), 0);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 12
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package test.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import main.java.duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void getDescriptionTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        assertEquals(new Task(\"abc\").getDescription(), \"abc\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 12
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "package test.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import main.java.duke.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void getDescriptionTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        assertEquals(Todo.getDescription(\"todo abcd\"), \"abcd\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "todo abc"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "event def /at 123"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "deadline ghi /by 456"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "deadline jkl /by 789"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 1,
      "-": 37
    }
  }
]
