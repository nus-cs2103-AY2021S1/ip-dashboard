[
  {
    "path": "src/main/java/Commands/AddInput.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Exceptions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Storage.StorageCommands;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class AddInput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void add_input() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        while(scanner.hasNext()){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                //splitting into list for easier comparison"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                String[] inputList \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                // case where input is bye, and a case where the inputList is of length 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                if(Parser.isBye(inputList[0].trim().toLowerCase())){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    Parser.byeGreetings();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    StorageCommands.saveTasks();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                // Case where input is list, to show the list of tasks, and case where the inputList is of length 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                if(Parser.isList(inputList[0].trim().toLowerCase()) \u0026\u0026 inputList.length \u003e 1){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    throw new IncompleteCommandException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                if(Parser.isList(inputList[0].trim().toLowerCase())) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    StringBuffer result \u003d new StringBuffer();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    //to add in the starting line of the section"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    result.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    for (int i \u003d 0; i \u003c TaskList.getSize(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        // getting the current task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        Task currentTask \u003d TaskList.getTask(i);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        // adding the current task into the tasklist"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        result.append((i + 1) + \". \" + currentTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    Parser.lineFormatter(result.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                //case where the command is incomplete, in the cases of done, todo, event, deadline and delete"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                else if(inputList.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    throw new IncompleteCommandException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                // case where the input is done"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                else if(Parser.isComplete(inputList[0].trim().toLowerCase()) \u0026\u0026 Parser.isNum(inputList[1])){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    int currentIndex \u003d Integer.parseInt(inputList[1]) - 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    if(currentIndex + 1\u003e TaskList.getSize() || currentIndex + 1 \u003c\u003d 0){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        throw new DoneException(currentIndex, TaskList.getSize());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        Task task \u003d TaskList.getTask(currentIndex);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        // to check if the task is already done"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        if(task.getStatus()){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            throw new TaskAlreadyDoneException(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "//                            lineFormatter(\"This task is already done!\\n\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "//                                    task.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            // if task is not done"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            TaskList.getTask(currentIndex).markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            Parser.taskDone(TaskList.getTask(currentIndex));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                } else if(Parser.isDelete(inputList[0].trim().toLowerCase()) \u0026\u0026 Parser.isNum(inputList[1])) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    int currentIndex \u003d Integer.parseInt(inputList[1]) - 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    if (currentIndex + 1 \u003e TaskList.getSize() || currentIndex + 1 \u003c\u003d 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        throw new DeleteException(currentIndex, TaskList.getSize());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        Task deletedTask \u003d TaskList.removeTask(currentIndex);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        Parser.taskDeleted(deletedTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    AddToList.added_to_List(input);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            } catch (DukeException e){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                Parser.lineFormatter(e.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 90
    }
  },
  {
    "path": "src/main/java/Commands/AddToList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Exceptions.DeadlineException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Exceptions.EventException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Tasks.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class AddToList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // method that adds tasks into the list of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void added_to_List(String printable) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Task task \u003d new Task(\"Do something\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] nameList \u003d printable.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if(Parser.isDeadline(nameList[0].trim().toLowerCase())){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            String[] task_deadline \u003d nameList[1].trim().split(\"/by\", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if(task_deadline.length !\u003d 2){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                throw new DeadlineException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            // check for date time format"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                task \u003d new Deadline(task_deadline[0].trim(), task_deadline[1].trim());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                Parser.newTaskItem(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            } catch (Exception e){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                throw new DeadlineException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } else if(Parser.isEvent(nameList[0].trim().toLowerCase())){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            String[] task_event \u003d nameList[1].trim().split(\"/at\", 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if(task_event.length !\u003d 2){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                throw new EventException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            // check for date time format"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                task \u003d new Event(task_event[0].trim(), task_event[1].trim());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                Parser.newTaskItem(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            } catch (Exception e){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                throw new EventException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } else if(Parser.isToDo(nameList[0].toLowerCase())){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            task \u003d new ToDo(nameList[1].trim());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            Parser.newTaskItem(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            Parser.lineFormatter(\"Please enter an appropriate command!!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        TaskList.addTask(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 57
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Commands.AddInput;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Storage.StorageCommands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Parser.lineFormatter(\"Hello!!!! I\u0027m Duke\\nWhat can I do for you?!?!?!\" );"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        StorageCommands.loadTasks();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        AddInput.add_input();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "LimZeWeiDennis": 12
    }
  },
  {
    "path": "src/main/java/Exceptions/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for wrong deadline format"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DeadlineException extends DukeException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DeadlineException (){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"Please key in the deadline in the following format:\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"\\\u0027deadline task name /at date\\\u0027 \\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"With the date in the following format :\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"YYYY-MM-DD HHMM OR YYYY-MM-DD\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 16
    }
  },
  {
    "path": "src/main/java/Exceptions/DeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for wrong delete command format"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DeleteException extends DukeException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DeleteException(int currentTask, int totalTask){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"You do not have \" + (currentTask + 1) + \" tasks!\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                + \"Choose a number less than equals to \" + totalTask + \"!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 15
    }
  },
  {
    "path": "src/main/java/Exceptions/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for wrong done command format"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DoneException extends DukeException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DoneException(int currentTask, int totalTask){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"You do not have \" + (currentTask + 1) + \" tasks!\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                + \"Choose a number less than equals to \" + totalTask + \"!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 15
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Base Exception to extend from"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Please use the appropriate commands\" ;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 12
    }
  },
  {
    "path": "src/main/java/Exceptions/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for wrong event command format"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class EventException extends DukeException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public EventException(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"Please key in the event in the following format:\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"\\\u0027event task name /at date\\\u0027 \\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"With the date in the following format :\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"YYYY-MM-DD HHMM OR YYYY-MM-DD\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 14
    }
  },
  {
    "path": "src/main/java/Exceptions/IncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for incomplete/ inappropriate command given"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class IncompleteCommandException extends DukeException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public IncompleteCommandException(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"Please enter an appropriate command!\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 13
    }
  },
  {
    "path": "src/main/java/Exceptions/TaskAlreadyDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception to check if task is already done"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class TaskAlreadyDoneException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public TaskAlreadyDoneException(Task task){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"This task is already done!\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                task.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 17
    }
  },
  {
    "path": "src/main/java/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String longLine \u003d \"________________________________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String bye_key \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String list_key \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String done_key \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String todo_key \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String deadline_key \u003d \"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String event_key \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String delete_key \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // check for bye command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isBye(String checker) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(bye_key);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // check for list command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isList(String checker) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(list_key);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // check for done command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isComplete(String checker) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(done_key);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // check for todo command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isToDo(String checker) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(todo_key);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // check for deadline command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isDeadline(String checker) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(deadline_key);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // check for event command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isEvent(String checker) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(event_key);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // check for delete command"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isDelete(String checker) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(delete_key);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //method to segment every String that is being fed into this method"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void lineFormatter (String printable){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        System.out.println(longLine);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        System.out.println(printable);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        System.out.println(longLine);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // standardised goodbye greeting"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void byeGreetings () {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(\"Bye! Hope to see you soon again?!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //method to mark tasks as done"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void taskDone(Task task) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(\"Nice! This task is getting done!!\\n\" + \"[\" + task.getStatusIcon() + \"] \" + task.getTask());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //method to mark tasks as deleted"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void taskDeleted(Task task) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(\"The following Tasks.Task is removed from the TaskList.TaskList!!\\n\" + \"[\" + task.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                + task.getTask() + \"\\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"You have \" + TaskList.getSize() + \" tasks left!\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        );"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // method to check for int in String"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isNum(String num){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            int check \u003d Integer.parseInt(num);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //method for formatting inputs into the taskList"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void newTaskItem (Task task){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(\"Now you have a new task! :\\n\" + task.toString() +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"\\nYou currently have \" + TaskList.getSize() + \" events in your list\\n\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"Type \\\u0027list\\\u0027 to check your Tasklist\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 93
    }
  },
  {
    "path": "src/main/java/Storage/StorageCommands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Tasks.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class StorageCommands {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // method to update and save the txt file with the taskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void saveTasks(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String directory \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Path path \u003d  Paths.get(directory, \"data\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            // Check if the file path exists, if not, create a new directory"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if(!Files.exists(path)){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                Files.createDirectories(path);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            Path filePath \u003d Paths.get(directory,\"data\",\"taskList.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            File taskFile \u003d filePath.toFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            // Check if the file exists, if not, create a new file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if(!taskFile.exists()){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                taskFile.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(taskFile);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            for (int i \u003d 0; i \u003c TaskList.getSize(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                bufferedWriter.write(TaskList.getTask(i).getOriginal());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                bufferedWriter.write(\"~\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                if(TaskList.getTask(i).getStatus()){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    bufferedWriter.write(\"1\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                } else{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    bufferedWriter.write(\"0\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                bufferedWriter.write(\"++\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            //System.out.println(SAVED);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // method to load the existing file and update the taskList"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void loadTasks() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String directory \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Path filePath \u003d Paths.get(directory, \"data\", \"taskList.txt\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if(filePath.toFile().exists()){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                BufferedReader reader \u003d Files.newBufferedReader(filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                String data \u003d reader.readLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                if(data !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    String[] tasks \u003d data.split(\"\\\\+\\\\+\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.length; i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        //split the individual tasks"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        String[] doneList \u003d tasks[i].split(\"~\", 2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        String[] nameList\u003d doneList[0].split(\" \", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        if (Parser.isDeadline(nameList[0].trim().toLowerCase())){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            String[] task_deadline \u003d nameList[1].trim().split(\"/by\", 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            Task newTask \u003d new Deadline(task_deadline[0].trim(),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                                    task_deadline[1].trim(), checkDone(doneList[1]));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            TaskList.addTask(newTask);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        } else if (Parser.isEvent(nameList[0].trim().toLowerCase())) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            String[] task_event \u003d nameList[1].trim().split(\"/at\", 2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            Task newTask \u003d new Event(task_event[0].trim(), task_event[1].trim(),checkDone(doneList[1]));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            TaskList.addTask(newTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        } else if (Parser.isToDo(nameList[0].toLowerCase())) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            Task newTask \u003d new ToDo(nameList[1].trim(), checkDone(doneList[1]));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            TaskList.addTask(newTask);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            } catch (IOException e){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            File createFile \u003d new File(\"/data/duke.txt\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // check if the task was done before"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static boolean checkDone (String checker){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(\"1\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 104
    }
  },
  {
    "path": "src/main/java/TaskList/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // add tasks to taskList"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void addTask(Task task){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // return length of taskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static Integer getSize(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //return task from taskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static Task getTask(int i){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //remove task from taskList and return the deleted Task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static Task removeTask(int i){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Task deletedTask \u003d taskList.remove(i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 31
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Deadline(String description, String by, boolean isDone){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getOriginal() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"deadline \" + getTask() + \" /by \" + getDate();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private String getDeadlineDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] dateList \u003d this.by.split(\" \",2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        LocalDate deadlineDate \u003d LocalDate.parse(dateList[0]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        DateTimeFormatter FormatDate \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if(dateList.length \u003e 1){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            String deadlineTime \u003d dateList[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return deadlineDate.format(FormatDate) + \" \" + deadlineTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return deadlineDate.format(FormatDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDeadlineDate() + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 47
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Event(String description, String at, boolean isDone){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getOriginal() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"event \" + getTask() + \" /at \" + getTime();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private String getEventDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] dateList \u003d this.at.split(\" \",2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        LocalDate eventDate \u003d LocalDate.parse(dateList[0]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        DateTimeFormatter FormatDate \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if(dateList.length \u003e 1){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            String eventTime \u003d dateList[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return eventDate.format(FormatDate) + \" \" + eventTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return eventDate.format(FormatDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getEventDate() + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 51
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "//Adapted from CS2103T website\u0027s Tasks.Task class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Task (String description){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Task (String description, boolean isDone){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public boolean getStatus(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getOriginal(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"task \" + getTask();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getTask();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 40
    }
  },
  {
    "path": "src/main/java/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public ToDo(String description, boolean isDone){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getOriginal(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"todo \" + getTask();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"[T]\" + super.toString() ;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "todo Read a book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "deadline Finish ES2660 Essay /by Tuesday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "event Dinner at Grandma\u0027s /at Monday 6PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "deadline CS2103T iP"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "event CS2103T Tutorial"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "list 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "LimZeWeiDennis": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    echo \"** BUILD FAILURE **\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 35,
      "LimZeWeiDennis": 7
    }
  }
]
