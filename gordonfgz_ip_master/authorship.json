[
  {
    "path": "Data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "T | 1 | breakfree"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "T | 0 | breakfree"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "D | 0 | homework | 2019-08-02"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "D | 0 | homework | 2019-08-03"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 4
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 16,
      "-": 45
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a task with a deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param by is the due-date of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param isDone is whether or not the task is done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param by is the due-date of the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Gives the String representation of the Task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Checks if two Deadlines are equal"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a boolean"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (this \u003d\u003d object) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (object instanceof Deadline) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Deadline otherDeadline \u003d (Deadline) object;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.description.equals(otherDeadline.description)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    \u0026\u0026 this.isDone \u003d\u003d otherDeadline.isDone"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    \u0026\u0026 this.by.equals(otherDeadline.by);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 63
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 44
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Main body of application Duke"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    // javafx"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Initialises the application"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.storage \u003d new Storage(\"Data.txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.parser \u003d new Parser(storage, ui, tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.storage.init();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        storage.importSavedDataToList(tasks.get());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Sends the user input to the parser for processing"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the String input from the user"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void processInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.parser.processInput(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Label userText \u003d new Label(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        String output \u003d null;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            output \u003d this.parser.processInput(input);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Label dukeText \u003d new Label(getResponse(output));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            );"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            // clears input box"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            userInput.setText(\"\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"Duke: \" + input;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.start();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        });"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 161,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 3
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public EmptyDescriptionException(String type) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Gives the String representation of the Exception"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"______________________________________________________\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \" OOPS!!! The description of a \" + type + \" cannot be empty.\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"______________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 20
    }
  },
  {
    "path": "src/main/java/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Gives the String representation of the Exception"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"______________________________________________________\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \" OOPS!!! Your list is currently empty!\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"______________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 15
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a task with a specific time"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param at is the time that the task is happening at"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param isDone is whether or not the task is done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param at is the time that the task is happening at"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Gives the String representation of the Task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Checks if two Events are equal"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a boolean"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (this \u003d\u003d object) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (object instanceof Event) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Event otherEvent \u003d (Event) object;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.description.equals(otherEvent.description)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    \u0026\u0026 this.isDone \u003d\u003d otherEvent.isDone"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    \u0026\u0026 this.at.equals(otherEvent.at);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 59
    }
  },
  {
    "path": "src/main/java/InputNotRecognisedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class InputNotRecognisedException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Gives the String representation of the Exception"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"______________________________________________________\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"______________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 15
    }
  },
  {
    "path": "src/main/java/InvalidListIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class InvalidListIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Gives the String representation of the Exception"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"______________________________________________________\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \" OOPS!!! The index you\u0027ve chosen is invalid\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"______________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 15
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a Parser"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Deals with making sense of the user command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param storage is the storage that stores the data file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param ui is the user interface used with duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param list is the TaskList that will be updated"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Parser(Storage storage, Ui ui, TaskList list) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.tasks \u003d list;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Processes the user\u0027s inputs"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the user\u0027s input in String form"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String processInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int stringLength \u003d input.length();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.provideList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.markAsDone(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.newTaskEntry(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.end();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.delete(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.find(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.equals(\"remove duplicates\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.removeDupes();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return new InputNotRecognisedException().toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Compares two tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a boolean denoting if they are equal"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public boolean areEqualTasks(Task t1, Task t2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (t1 instanceof Todo \u0026\u0026 t2 instanceof Todo) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Todo thisTask \u003d (Todo) t1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Todo otherTask \u003d (Todo) t2;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return t1.equals(t2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (t1 instanceof Deadline \u0026\u0026 t2 instanceof Deadline) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Deadline thisTask \u003d (Deadline) t1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Deadline otherTask \u003d (Deadline) t2;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return t1.equals(t2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (t1 instanceof Event \u0026\u0026 t2 instanceof Event) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Event thisTask \u003d (Event) t1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Event otherTask \u003d (Event) t2;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return t1.equals(t2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Finds and remove duplicated Tasks"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String message"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String removeDupes() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        boolean needsUpdate \u003d false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.length() - 1; i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task focalTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            for (int j \u003d 0; j \u003c tasks.length(); j++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (j !\u003d i) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    Task otherTask \u003d tasks.get(j);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    if (areEqualTasks(focalTask, otherTask)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                        needsUpdate \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                        tasks.remove(otherTask);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (needsUpdate) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.storage.saveListToData(tasks.get());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.ui.removedDupes();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.ui.noDupes();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Finds and prints out Tasks with the keywords provided by the user"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input the user\u0027s input in String form"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String Message"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String find(String input) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int stringLength \u003d input.length();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.length(); i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            System.out.println(currentTask);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            if (currentTask.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                temp.add(currentTask);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        for (int i \u003d 0; i \u003c temp.size(); i++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task task \u003d temp.get(i);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String stringedIndex \u003d Integer.toString(temp.indexOf(task) + 1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String outputLine \u003d stringedIndex + \". \" + task;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            output \u003d output + outputLine + \"\\n\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return ui.LINE + \"\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                        + ui.findMsg() + \"\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                        + output"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                        + ui.LINE;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Prints out the TaskList"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String Message"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String provideList() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        String items \u003d \"\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.length(); i++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String stringedIndex \u003d Integer.toString(tasks.getIndex(task) + 1);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String outputLine \u003d stringedIndex + \". \" + task;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            items \u003d items + outputLine + \"\\n\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        storage.saveListToData(tasks.get());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return ui.lines() + \"\\n\" + ui.listMsg() + \"\\n\" + items + ui.lines();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Marks a Task on the TaskList as done"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the user\u0027s input in String form"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String Message"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String markAsDone(String input) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int stringLength \u003d input.length();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        String stringIndex \u003d input.substring(5, input.length());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int index \u003d Integer.parseInt(stringIndex);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Task chosen \u003d this.tasks.get(index - 1);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        chosen.finish();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        storage.saveListToData(this.tasks.get());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return ui.markAsDoneMsg(chosen);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Checks the type of Task the user is trying to create"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the User\u0027s input in String form"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws WrongFormatException"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String Message"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String newTaskEntry(String input) throws EmptyDescriptionException, WrongFormatException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int stringLength \u003d input.length();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.createAndAddTodo(input);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.createAndAddDeadline(input);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.createAndAddEvent(input);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Creates and adds a Task with type \"Todo\" to the TaskList"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the description of the task as given by user"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws WrongFormatException"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String Message"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String createAndAddTodo(String input) throws EmptyDescriptionException, WrongFormatException {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int stringLength \u003d input.length();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (input.length() \u003c 5 || input.substring(5).replaceAll(\"\\\\s\", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return new EmptyDescriptionException(\"todo\").toString();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (!Character.toString(input.charAt(4)).equals(\" \")) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return new WrongFormatException(\"todo\").toString();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task task \u003d new Todo(input.substring(5, input.length()));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.addTaskToTasklist(task);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Creates and adds a Task with type \"Deadline\" to the TaskList"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the description of the task as given by user"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws WrongFormatException"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String Message"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String createAndAddDeadline(String input) throws EmptyDescriptionException, WrongFormatException {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int stringLength \u003d input.length();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (input.length() \u003c 9 || input.substring(8).replaceAll(\"\\\\s\", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            throw new EmptyDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.contains(\"/by\")"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                \u0026\u0026 Character.toString(input.charAt(8)).equals(\" \")"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                \u0026\u0026 Character.toString(input.charAt(input.indexOf(\"/\") + 3)).equals(\" \")"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                \u0026\u0026 Character.toString(input.charAt(input.indexOf(\"/\") - 1)).equals(\" \")) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String desc \u003d input.substring(9, input.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String by \u003d input.substring(input.indexOf(\"/\") + 4, input.length());"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            if (by.matches(\".*[a-zA-Z]+.*\")) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                return new WrongFormatException(\"deadline\").toString();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task task \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.addTaskToTasklist(task);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return new WrongFormatException(\"deadline\").toString();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Adds a Task to the TaskList"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param task is the Task to be added to the TaskList"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws WrongFormatException"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String Message"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String addTaskToTasklist(Task task) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int listCount \u003d this.tasks.length();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        storage.saveListToData(this.tasks.get());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return ui.addTaskToTasklistMsg(task, listCount);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Creates and adds a Task with type \"Event\" to the TaskList"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the description of the task as given by user"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws WrongFormatException"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String Message"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String createAndAddEvent(String input) throws EmptyDescriptionException, WrongFormatException {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int stringLength \u003d input.length();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (input.length() \u003c 6 || input.substring(5).replaceAll(\"\\\\s\", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            throw new EmptyDescriptionException(\"event\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.contains(\"/at\")"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                \u0026\u0026 Character.toString(input.charAt(5)).equals(\" \")"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                \u0026\u0026 Character.toString(input.charAt(input.indexOf(\"/\") + 3)).equals(\" \")"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                \u0026\u0026 Character.toString(input.charAt(input.indexOf(\"/\") - 1)).equals(\" \")) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String desc \u003d input.substring(6, input.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String at \u003d input.substring(input.indexOf(\"/\") + 4, input.length());"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task task \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.addTaskToTasklist(task);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return new WrongFormatException(\"event\").toString();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Exit sequence of the Application"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String Message"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String end() {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        storage.saveListToData(this.tasks.get());"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return ui.farewell();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Deletes a Task in the TaskList based on user input"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the position of the Task to be deleted"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws EmptyListException"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws InvalidListIndexException"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String Message"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String delete(String input) throws EmptyListException, InvalidListIndexException {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int stringLength \u003d input.length();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        String stringIndex \u003d input.substring(7, input.length());"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (input.matches(\".*[a-zA-Z]+.*\")) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return new InvalidListIndexException().toString();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            int index \u003d Integer.parseInt(stringIndex);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            if (this.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                return new EmptyListException().toString();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } else if (index \u003e 0 \u0026\u0026 index \u003c\u003d this.tasks.length()) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                Task chosen \u003d this.tasks.get(index - 1);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                this.tasks.remove(chosen);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                int listLength \u003d this.tasks.length();"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                storage.saveListToData(this.tasks.get());"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                return ui.returnDeleteMsg(listLength, chosen);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                return new InvalidListIndexException().toString();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 324
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a Storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String fileName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param name is the filename that data is going to be stored in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Storage(String name) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.fileName \u003d name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Initialises the file for data to be stored in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void init() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Class myClass \u003d getClass();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        URL url \u003d myClass.getResource(\"Data.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (url \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            File file \u003d new File(\"Data.txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Imports the data from the data file into a list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param list is the list that the data is going to be stored in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void importSavedDataToList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        BufferedReader objReader \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String strCurrentLine;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            objReader \u003d new BufferedReader(new FileReader(\"Data.txt\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            while ((strCurrentLine \u003d objReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                String taskIcon \u003d Character.toString(strCurrentLine.charAt(0));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                String doneIcon \u003d Character.toString(strCurrentLine.charAt(4));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                boolean isDone \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (doneIcon.equals(\"1\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (taskIcon.equals(\"T\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    String description \u003d strCurrentLine.substring(8);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    Todo task \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                } else if (taskIcon.equals(\"D\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    int indexOfLastDivider \u003d strCurrentLine.lastIndexOf(\"|\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    String description \u003d strCurrentLine.substring(8, indexOfLastDivider - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    String by \u003d strCurrentLine.substring(indexOfLastDivider + 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    Deadline task \u003d new Deadline(description, isDone, date);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                } else if (taskIcon.equals(\"E\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    int indexOfLastDivider \u003d strCurrentLine.lastIndexOf(\"|\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    String description \u003d strCurrentLine.substring(8, indexOfLastDivider - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    String at \u003d strCurrentLine.substring(indexOfLastDivider + 2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    Event task \u003d new Event(description, isDone, at);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    System.out.println(\"Invalid first Character\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (objReader !\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    objReader.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                ex.printStackTrace();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Clears all data in the data file"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void clearData() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        PrintWriter writer \u003d null;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            writer \u003d new PrintWriter(\"Data.txt\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        writer.print(\"\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Uploads data from the list onto the data file"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param list is the list that the data is going to be uploaded from"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void saveListToData(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.clearData();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String input \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (task.isDone) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    input \u003d \"T | 1 | \" + task.description;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    input \u003d \"T | 0 | \" + task.description;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (deadline.isDone) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    input \u003d \"D | 1 | \" + deadline.description + \" | \" + deadline.by;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    input \u003d \"D | 0 | \" + deadline.description + \" | \" + deadline.by;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (event.isDone) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    input \u003d \"E | 1 | \" + event.description + \" | \" + event.at;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    input \u003d \"E | 0 | \" + event.description + \" | \" + event.at;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                FileWriter writer \u003d new FileWriter(\"Data.txt\", true);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                bufferedWriter.write(input);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                bufferedWriter.close();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 152
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a backbone of a Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Every Task has a String to store its description"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Every Task has a boolean to denote if it is done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Used when a Task is created for the first time"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the Customer associated with this event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Used to create a Task with the option to mark its done state"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the Customer associated with this event"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param isDone is a boolean that denotes if a Task is done or not"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the description"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Shows if a Task is done or not"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Marks a Task as done"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void finish() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the presentation of a Task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 68
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a list that stores Tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Adds a Task into the TaskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param task is the task to be added"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void add(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the total number of Tasks in the TaskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected int length() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the Task at a specific index"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param index is the index of the Task to be retrieved"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return the Task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected Task get(int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.list.get(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Provides the actual list that is storing the Tasks"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return the list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected ArrayList\u003cTask\u003e get() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the index of a specific Task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param task is the Task of the index to be retrieved"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return the index as an int"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected int getIndex(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.list.indexOf(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Checks if the TaskList is empty"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return true if the TaskList is empty"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected boolean isEmpty() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.list.isEmpty();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Removes a specific Task from the TaskList"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param task is the Task to be removed"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void remove(Task task) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.list.remove(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 80
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param isDone is whether or not the task is done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Gives the String representation of the Task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Checks if two Todos are equal"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a boolean"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (this \u003d\u003d object) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (object instanceof Todo) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Todo otherTodo \u003d (Todo) object;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return this.description.equals(otherTodo.description)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                        \u0026\u0026 this.isDone \u003d\u003d otherTodo.isDone;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 53
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a User Interface"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Deals with interactions with the user"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected static final String LINE \u003d \"______________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the farewell message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String farewell() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.LINE + \"\\n\" + \"Bye. Hope to see you again soon!\" + \"\\n\" + this.LINE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns a line in String form"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return String of lines"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String lines() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.LINE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the message when TaskList is shown in String form"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String listMsg() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the message when a Task is marked as done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String markAsDoneMsg(Task chosen) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.LINE + \"\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"Nice! I\u0027ve marked this task as done: \" + \"\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + chosen + \"\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + this.LINE;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Prints out the message when a Task is deleted"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String returnDeleteMsg(int i, Task chosen) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.LINE + \"\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                            + \" Noted. I\u0027ve removed this task: \" + \"\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                            + chosen + \"\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                            + \" Now you have \" + i + \" tasks in the list.\" + \"\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                            + this.LINE;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the message when a Task is added to the TaskList"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return String message"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String addTaskToTasklistMsg(Task task, int i) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.LINE + \"\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \" Got it. I\u0027ve added this task: \" + \"\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"  \" + task + \"\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \" Now you have \" + i + \" tasks in the list.\" + \"\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + this.LINE;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the message when results are found in String form"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String findMsg() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \" Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the message when dupes are found and removed"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String removedDupes() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.LINE + \"\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \" All duplicates have been removed.\" + \"\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + this.LINE;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the message when there are no dupes"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String noDupes() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.LINE + \"\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \" No dupes were found.\" + \"\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + this.LINE;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 104
    }
  },
  {
    "path": "src/main/java/WrongFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class WrongFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public WrongFormatException(String type) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Gives the String representation of the Exception"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return \"______________________________________________________\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \" OOPS!!! Proper input format required! Proper format: todo{space}{description}\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"______________________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return \"______________________________________________________\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \" OOPS!!! Proper input format required!\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \" Proper format: deadline{space}{description}{space}/by{space}{YYYY-MM-DD} .\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"______________________________________________________\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return \"______________________________________________________\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \" OOPS!!! Proper input format required!\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \" Proper format: deadline{space}{description}{space}/at{space}{time-slot}.\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"______________________________________________________\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return \"No such Task type\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 38
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public void lengthTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Todo todo \u003d new Todo(\"Run\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Return book\", LocalDate.parse(\"2019-08-02\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Event event \u003d new Event(\"project meeting\", \"tuesday morning\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(todo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(deadline);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assertEquals(list.length(), 3);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public void indexTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Todo todo \u003d new Todo(\"Run\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Return book\", LocalDate.parse(\"2019-08-02\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Event event \u003d new Event(\"project meeting\", \"tuesday morning\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(todo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(deadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assertEquals(list.getIndex(deadline), 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public void removeTest() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Todo todo \u003d new Todo(\"Run\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Return book\", LocalDate.parse(\"2019-08-02\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Event event \u003d new Event(\"project meeting\", \"tuesday morning\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(todo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(deadline);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.remove(deadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assertEquals(list.length(), 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 46
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 1,
      "-": 20
    }
  }
]
