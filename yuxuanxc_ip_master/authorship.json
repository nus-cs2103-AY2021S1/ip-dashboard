[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Deadline(String name, LocalDate by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public static void start() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public static void reply(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (input.trim().equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                System.out.println(\"There are no tasks in your list\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                for (int i \u003d 1; i \u003c list.size() + 1; i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                    System.out.println(i + \". \" + list.get(i - 1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else if (input.startsWith(\"done \") || input.equals(\"done\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                markAsDone(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                System.out.println(\"Please provide a valid task number to mark as done\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } catch (IndexOutOfBoundsException error) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                System.out.println(\"This task is not in your list\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else if (input.startsWith(\"delete \") || input.equals(\"delete\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                deleteTask(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                System.out.println(\"Please provide a valid task number to delete\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } catch (IndexOutOfBoundsException error) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                System.out.println(\"This task is not in your list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                addTask(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public static void addTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (input.startsWith(\"todo \") || input.equals(\"todo\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (input.length() \u003c 6 || input.substring(5).trim().isEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String name \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            task \u003d new ToDo(name);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else if (input.startsWith(\"deadline \") || input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (input.length() \u003c 10 || input.substring(9).trim().isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String details \u003d input.substring(9).trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String[] split \u003d details.split(\"/by \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"Please use the format: deadline (name) /by (when)\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String name \u003d split[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            LocalDate by \u003d LocalDate.parse(split[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            task \u003d new Deadline(name, by);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else if (input.startsWith(\"event \") || input.equals(\"event\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (input.length() \u003c 7 || input.substring(6).trim().isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String details \u003d input.substring(6).trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String[] split \u003d details.split(\"/at \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"Please use the format: event (name) /at (what time)\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String name \u003d split[0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            LocalDate duration \u003d LocalDate.parse(split[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            task \u003d new Event(name, duration);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"I\u0027m sorry, but I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (list.size() \u003e 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"Now you have \" + list.size() + \" tasks in your list\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"Now you have \" + list.size() + \" task in your list\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public static void markAsDone(String input) throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (input.length() \u003c 6 || input.substring(5).trim().isEmpty()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            throw new DukeException(\"Which task do you want to mark as done?\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String item \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        int index \u003d Integer.parseInt(item) - 1;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        list.get(index).done();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(list.get(index));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public static void deleteTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (input.length() \u003c 8 || input.substring(7).trim().isEmpty()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            throw new DukeException(\"Which task do you want to delete?\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String item \u003d input.substring(7).trim();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        int index \u003d Integer.parseInt(item) - 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        Task deletedTask \u003d list.get(index);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(deletedTask);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"You now have \" + list.size() + \" tasks in your list\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            reply(input);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 133,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    protected LocalDate duration;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Event(String name, LocalDate duration) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return \"[E]\" + super.toString() +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                \" (at: \" + duration.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 17
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    protected final String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return \"[\\u2713] \" + this.name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return \"[\\u2718] \" + this.name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 1,
      "-": 20
    }
  }
]
