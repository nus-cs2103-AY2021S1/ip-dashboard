[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import exceptions.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import storage.ArrayListToTextConverter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import storage.TextToArrayListConverter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import timeformatter.TimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String logo \u003d \"Duke Melvin\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + \"\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        List\u003cTask\u003e ls \u003d TextToArrayListConverter.readFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String line \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        while (!line.equals(\"bye\") \u0026\u0026 in.hasNextLine()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            String firstArg \u003d line.split(\" \")[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                switch (line) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        ArrayListToTextConverter.convertArrayListToText(ls);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        for (int x \u003d 0; x \u003c ls.size(); x++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                            System.out.println(x + 1 + \":\" + ls.get(x).toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        switch (firstArg) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                            case \"done\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                String[] doneCommandArray \u003d line.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                if (doneCommandArray.length \u003c 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    throw new InvalidDoneCommandException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    int itemToBeMarkedAsDone \u003d Integer.parseInt(doneCommandArray[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    if (itemToBeMarkedAsDone \u003e ls.size() || itemToBeMarkedAsDone \u003c\u003d 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                        throw new InvalidDoneCommandException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                        ls.get(itemToBeMarkedAsDone - 1).markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                        ArrayListToTextConverter.convertArrayListToText(ls);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                            case \"delete\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                String[] deleteCommandArray \u003d line.split(\" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                if (deleteCommandArray.length \u003c 2) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    throw new InvalidDeleteCommandException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    int itemToBeDeleted \u003d Integer.parseInt(deleteCommandArray[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    if (itemToBeDeleted \u003e ls.size() || itemToBeDeleted \u003c\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                        throw new InvalidDeleteCommandException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                        Task item \u003d ls.get(itemToBeDeleted - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                        ls.remove(itemToBeDeleted - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                        System.out.println(item.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                        System.out.format(\"Now you have %d tasks in the list\\n\", ls.size());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                        ArrayListToTextConverter.convertArrayListToText(ls);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                            case \"todo\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                if (line.trim().length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    throw new EmptyToDoException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    String todoString \u003d line.substring(5);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    ToDo todo \u003d new ToDo(todoString);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    ls.add(todo);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    System.out.println(todo.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    System.out.format(\"Now you have %d tasks in the list\\n\", ls.size());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    ArrayListToTextConverter.convertArrayListToText(ls);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                            case \"deadline\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                String [] deadlineArr \u003d line.split(\"/\",2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                String by \u003d deadlineArr[1].substring(deadlineArr[1].indexOf(\"by\") + 3);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                String deadlineString \u003d deadlineArr[0].substring(9);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                LocalDate localDeadlineDate \u003d TimeFormatter.localDate(by);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                Deadline deadline \u003d new Deadline(deadlineString, localDeadlineDate);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                ls.add(deadline);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                System.out.println(deadline.toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                System.out.format(\"Now you have %d tasks in the list\\n\", ls.size());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                ArrayListToTextConverter.convertArrayListToText(ls);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                            case \"event\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                String[] eventArr \u003dline.split(\"/\",2);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                String at \u003d eventArr[1].substring(eventArr[1].indexOf(\"at\") + 3);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                String eventString \u003d eventArr[0].substring(6);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                LocalDate localEventDate \u003d TimeFormatter.localDate(at);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                Event event \u003d new Event(eventString, localEventDate);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                ls.add(event);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                System.out.println(event.toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                System.out.format(\"Now you have %d tasks in the list\\n\", ls.size());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                ArrayListToTextConverter.convertArrayListToText(ls);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                            default:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            } catch (DukeException exception) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            } catch (Exception exception) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "moyj01": 136,
      "-": 5
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 7
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class EmptyToDoException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public EmptyToDoException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 7
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class InvalidCommandException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 7
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidDeleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class InvalidDeleteCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public InvalidDeleteCommandException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"☹ OOPS!!! Please mark a valid item for deletion\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 8
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidDoneCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class InvalidDoneCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public InvalidDoneCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"☹ OOPS!!! Please mark a valid item as done\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 7
    }
  },
  {
    "path": "src/main/java/storage/ArrayListToTextConverter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class ArrayListToTextConverter {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static void convertArrayListToText(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            FileOutputStream writeData \u003d new FileOutputStream(\"./taskdata.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            writeStream.writeObject(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            writeStream.flush();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            writeStream.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 24
    }
  },
  {
    "path": "src/main/java/storage/TextToArrayListConverter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class TextToArrayListConverter {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static List\u003cTask\u003e readFile() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            FileInputStream readData \u003d new FileInputStream(\"./taskdata.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            ObjectInputStream readStream \u003d new ObjectInputStream(readData);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d (ArrayList\u003cTask\u003e) readStream.readObject();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            readStream.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 31
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import timeformatter.TimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"[D]\" + getStatusIcon() + super.toString() + \"(by: \" + TimeFormatter.prettyDate(by) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 20
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import timeformatter.TimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"[E]\" + getStatusIcon() + super.toString() + \"(at: \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                + TimeFormatter.prettyDate(at) + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "moyj01": 22
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return (isDone ? \"[\\u2713] \" : \"[\\u2718] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + \"[\\u2713]\" + this.description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 31
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"[T]\" + getStatusIcon() + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 15
    }
  },
  {
    "path": "src/main/java/timeformatter/TimeFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package timeformatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class TimeFormatter {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static LocalDate localDate(String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String date \u003d by.trim().replaceAll(\"/\", \"-\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return localDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static String prettyDate(LocalDate localDate) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return localDate.getDayOfWeek() + \",\" +localDate.getMonth().name().substring(0, 3) +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                \" \" + localDate.getDayOfMonth() + \" \" + localDate.getYear();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "moyj01": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "moyj01": 2,
      "-": 20
    }
  }
]
