[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.UnsupportedEncodingException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        // Initialise booleans and scanners"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        boolean quitProgram \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Scanner inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        PrintStream out;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            out \u003d new PrintStream(System.out, true, \"UTF-8\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } catch (UnsupportedEncodingException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            out \u003d new PrintStream(System.out, true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        // Initialise Task List"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(\"Hello, my name is\\n\" + logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        while (!quitProgram) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            // blocks program until input is received"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            String newInput \u003d inputScanner.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            // then prints the input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            //trim the input to remove leading and ending whitespace"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            newInput \u003d newInput.trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                if (newInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    quitProgram \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                } else if (newInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    out.println(taskList.getAllTasksAsString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                } else if (newInput.indexOf(\"done\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    if (newInput.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        throw new DukeException(\"OOPS!!! Please specify a task to mark as complete.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        int taskIndex \u003d Integer.parseInt(newInput.substring(5));    // this is not corrected for 0 index"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        Task completedTask \u003d taskList.getTask(taskIndex);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        completedTask.markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        out.println(completedTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                } else if (newInput.indexOf(\"delete\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    if (newInput.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        throw new DukeException(\" OOPS!!! Please specify a task to delete.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            int taskIndex \u003d Integer.parseInt(newInput.substring(7));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            Task removedTask \u003d taskList.getTask(taskIndex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            taskList.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            out.println(removedTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            out.println(\"Now you have \" + taskList.numTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            throw new DukeException(\" OOPS!!! Please specify a valid task to delete.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    // use indexOf() method to find substring"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    Task newTask \u003d new Task(\"\");    // this is to make the compiler happy"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    if (newInput.indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        if (newInput.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            throw new DukeException(\" OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            int indexOfAtKeyword \u003d newInput.indexOf(\" /at \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            if (indexOfAtKeyword \u003d\u003d -1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                                throw new DukeException(\" OOPS!!! Please specify the event time.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                                String eventDesc \u003d newInput.substring(6, indexOfAtKeyword);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                                String eventTime \u003d newInput.substring(indexOfAtKeyword + 5);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                                newTask \u003d new Event(eventDesc, eventTime);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                                taskList.addTask(newTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } else if (newInput.indexOf(\"deadline\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        if (newInput.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            throw new DukeException(\" OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            int indexOfByKeyword \u003d newInput.indexOf(\" /by \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            if (indexOfByKeyword \u003d\u003d -1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                                throw new DukeException(\" OOPS!!! Please specify the deadline time.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                                String deadlineDesc \u003d newInput.substring(9, indexOfByKeyword);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                                String deadlineTime \u003d newInput.substring(indexOfByKeyword + 5);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                                newTask \u003d new Deadline(deadlineDesc, deadlineTime);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                                taskList.addTask(newTask);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } else if (newInput.indexOf(\"todo\") \u003d\u003d 0){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        if (newInput.length() \u003c\u003d 4 || newInput.substring(5).trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            throw new DukeException(\" OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            newTask \u003d new Todo(newInput.substring(5));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        throw new DukeException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    out.println(newTask);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    out.println(\"Now you have \" + taskList.numTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                out.println(e.getMessage());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        // quit"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        inputScanner.close();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(\"See you space cowboy!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 123,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected String timeOfEvent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Event(String description, String timeOfEvent) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.timeOfEvent \u003d timeOfEvent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timeOfEvent + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 22
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        // index is bounded from 0 to len - 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return taskList.get(index - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public int numTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String getAllTasksAsString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String output \u003d \"Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            output \u003d output + ((i + 1) + \". \" + taskList.get(i)) + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void displayTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            System.out.println((i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 41
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "blah"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " delete "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "done "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " done "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "lalala"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 25
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 1,
      "-": 37
    }
  }
]
