[
  {
    "path": "src/main/java/CommonString.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "// Enum class to denote commonly used, constant String values in Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public enum CommonString {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    LINE(\"____________________________________________________________\"), // Single Line for divider"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    LOGO(\" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final String value;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    CommonString(String value) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 21
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class DeadlineTask extends DukeTask {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final String datetime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public DeadlineTask(String description, String datetime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return datetime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return \"[D]\" + super.toString() + String.format(\" (by: %s)\",datetime);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // PRIVATE ENUMS:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Contain texts that are for various purposes explained below"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Abstracted from static constants to make them easy to maintain"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Instruction Guides split up the various parts of the \"help\" function guide"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Splitting them up into parts makes it easier to edit according to the specific guide in the future"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private enum InstructionGuide {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // For formatting purposes, except for the last guide, the guides must end with a guideBreaker"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // It splits them into paragraphs"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        LevelInformation(\"* Level 6: Allowing Delete. Follow the Task Input Instructions for more\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"* Do try to avoid ambiguous inputs, \" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"such as [keywords] + [random gibberish] as I cannot recognise them!\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"\\tI\u0027m not very smart (yet) :(\", false),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        TaskInput(\" todo [Task Description] - Inputs a TODO DukeTask\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" deadline [Task Description] /by [Date] - Inputs a DEADLINE DukeTask, along with INDICATOR /by\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" event [Task Description] /at [Date] - Inputs an EVENT DukeTask, along with INDICATOR /at\", false),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        AvailableInstruction(\" help - Display Available Instructions\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" bye - Terminate Duke\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" list - Display current DukeTasks\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" done [Task Number] - Complete the specified task number (Specify in numeric format!) Eg: \\\"done 3\\\"\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" delete [Task Number] - Deletes the task number (Specify in numeric format!) Eg: \\\"delete 3\\\"\", true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        private final static String guideBreaker \u003d \"\\n\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        private final String instruction;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        private final boolean last;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        InstructionGuide(String instruction, boolean last) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            this.last \u003d last;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            return instruction + (last ? \"\" : guideBreaker);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // User Interaction Text"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private enum UserInteractionText {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        INTRODUCTION(CommonString.LINE + \"\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"Hello! I am Duke, your Personal Assistant!\\n\" + // START OF INTRODUCTIONS"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"What can I do for you today?\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"Type \\\"help\\\" to see the available instructions!\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                CommonString.LINE), // END OF INTRODUCTIONS)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        INSTRUCTIONS(\"How to use Duke:\\n\" + // Guide to Duke"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                InstructionGuide.LevelInformation +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"TASK INPUT INSTRUCTIONS:\\n\" + // Task Input Instructions"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                InstructionGuide.TaskInput +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"AVAILABLE INSTRUCTIONS:\\n\" + // Available Instructions"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                InstructionGuide.AvailableInstruction), // END OF INSTRUCTIONS)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        OUTRO(\"Goodbye. Hope to see you soon!\\n\" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "              CommonString.LOGO + CommonString.LINE)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        private final String value;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        UserInteractionText(String value) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            this.value \u003d value;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            return value;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // INSTRUCTIONS and related CONSTANTS"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Kept as Strings because of certain constants (indicators) that are related to certain instructions"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Convenient to use - final keeps them as constant values"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String HELP \u003d \"help\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String BY_INDICATOR \u003d \"/by\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String AT_INDICATOR \u003d \"/at\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String UNKNOWN \u003d \"unknown\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // MAIN FUNCTION"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // Initialisation of Duke"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println(UserInteractionText.INTRODUCTION);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // Execute Duke"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        invokeDuke();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // OUTRO"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println(UserInteractionText.OUTRO);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // HEAVY LIFTING LOGIC FOR DUKE BOT"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static void invokeDuke() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // Setup"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        ArrayList\u003cDukeTask\u003e inputList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // User Instructions with internal error handling"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // With errors, the instructionLoop should still continue to run hence try-catch statements"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // are to be handled the loop"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        instructionLoop: while (sc.hasNextLine()) { // labelling of while-loop"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            // Instruction Setup - split by whitespace to check"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            String instruction \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            String[] instructionArray \u003d instruction.split(\" \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            int instrLen \u003d instructionArray.length;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            String indicator \u003d instruction.split(\" \")[0]; // indicates if instruction or not"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                switch (indicator) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    case BYE:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        if (instrLen \u003d\u003d 1) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            break instructionLoop;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            throw new InvalidInstructionException(BYE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    case HELP:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        if (instrLen \u003d\u003d 1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            System.out.println(UserInteractionText.INSTRUCTIONS);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            throw new InvalidInstructionException(HELP);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    case LIST:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        if (instrLen \u003d\u003d 1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            System.out.println(\"Your DukeTasks:\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            if (inputList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                System.out.println(\"You have no DukeTasks!\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                for (int i \u003d 0; i \u003c inputList.size(); i++) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                    System.out.println((i + 1) + \". \" + inputList.get(i));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                System.out.println(getTaskStatus(inputList));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            throw new InvalidInstructionException(LIST);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        if (instrLen \u003d\u003d 2) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            if (isNumeric(instruction.split(\" \")[1])) { // second word in instruction is an integer"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                int idx \u003d Integer.parseInt(instruction.split(\" \")[1]) - 1; // get index in list"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                if (idx \u003c 0 || idx \u003e\u003d inputList.size()) { // check if loc is an existing DukeTask inside the array inputList"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                    throw new InvalidInstructionException(DONE + \": Invalid Task Number\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                } else if (inputList.get(idx).getDoneStatus()) { // check if inputList[loc] is already completed"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                    throw new InvalidInstructionException(DONE + \": Task is already done!\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                    System.out.println(\"Alright! I\u0027ll mark this task as done!\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                    inputList.get(idx).markAsDone();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                    System.out.println(inputList.get(idx));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                    System.out.println(getTaskStatus(inputList));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        } // if len !\u003d 2 or the input is not an integer"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        throw new InvalidInstructionException(DONE);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        if (instrLen \u003d\u003d 2) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            if (isNumeric(instruction.split(\" \")[1])) { // second word in instruction is an integer"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                int idx \u003d Integer.parseInt(instruction.split(\" \")[1]) - 1; // get index in list"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                if (idx \u003c 0 || idx \u003e\u003d inputList.size()) { // check if loc is an existing DukeTask inside the array inputList"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                    throw new InvalidInstructionException(DELETE + \": Invalid Task Number\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                    System.out.println(\"Alright! I\u0027ll delete this task!\\n\" + \"Take note that this is irreversible!\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                    System.out.println(inputList.remove(idx));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                    System.out.println(getTaskSize(inputList));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        } // if len !\u003d 2 or the input is not an integer"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        throw new InvalidInstructionException(DELETE);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        if (instrLen \u003d\u003d 1) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            throw new MissingFieldException(TODO + \": Description\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            TodoTask todotask \u003d new TodoTask(mergeArray(instructionArray, 1, instrLen));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            inputList.add(todotask);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            System.out.println(\"Task Added: \" + todotask.toString());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            System.out.println(getTaskSize(inputList));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        int byIndex \u003d findIndex(instructionArray, BY_INDICATOR);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        if (byIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            throw new InvalidFormatException(DEADLINE);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            String deadlineDesc \u003d mergeArray(instructionArray, 1, byIndex);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            String deadlineDatetime \u003d mergeArray(instructionArray, byIndex + 1, instrLen);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            if (deadlineDesc.equals(\"\")) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                throw new MissingFieldException(DEADLINE + \": Description\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            } else if (deadlineDatetime.equals(\"\")) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                throw new MissingFieldException(DEADLINE + \": Date and Time\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                DeadlineTask deadlinetask \u003d new DeadlineTask(deadlineDesc, deadlineDatetime);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                inputList.add(deadlinetask);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                System.out.println(\"Task Added: \" + deadlinetask.toString());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                System.out.println(getTaskSize(inputList));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        int atIndex \u003d findIndex(instructionArray, AT_INDICATOR);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        if (atIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            throw new InvalidFormatException(EVENT);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            String eventDesc \u003d mergeArray(instructionArray, 1, atIndex);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            String eventDatetime \u003d mergeArray(instructionArray, atIndex + 1, instrLen);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            if (eventDesc.equals(\"\")) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                throw new MissingFieldException(EVENT + \": Description\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            } else if (eventDatetime.equals(\"\")) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                throw new MissingFieldException(EVENT + \": Date and Time\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                EventTask eventTask \u003d new EventTask(eventDesc, eventDatetime);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                inputList.add(eventTask);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                System.out.println(\"Task Added: \" + eventTask.toString());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                System.out.println(getTaskSize(inputList));"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        throw new InvalidInstructionException(UNKNOWN);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            } catch (InvalidInstructionException | InvalidFormatException | MissingFieldException exception) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                System.out.println(exception);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            System.out.println(CommonString.LINE);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // Cleaning up before terminating invokeDuke()"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // EXTRA FUNCTIONS FOR ASSISTANCE"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // checks if the input string can be parsed into an Integer or not"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static boolean isNumeric (String instruction) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            Integer.parseInt(instruction);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Merges the String array into one string, from index start, until (not including) index end"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static String mergeArray(String[] array, int start, int end) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        for (int i \u003d start; i \u003c end; i++) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            output.append(array[i]).append(\" \");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return output.toString().trim();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static int findIndex(String[] array, String regex) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        for (int i \u003d 0; i \u003c array.length; i++) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            if (array[i].equals(regex)) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static String getTaskStatus(ArrayList\u003cDukeTask\u003e tasks) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        int done \u003d 0;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        int notDone \u003d 0;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        for (DukeTask task : tasks) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            if (task.getDoneStatus()) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                done++;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                notDone++;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return String.format(\"You now have %d %s done, and %d %s not done\","
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                done, done \u003d\u003d 1 ? \"task\" : \"tasks\", notDone, notDone \u003d\u003d 1 ? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static String getTaskSize(ArrayList\u003cDukeTask\u003e tasks) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return String.format(\"You now have %d %s\", tasks.size(), tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "Vielheim": 291
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final String exceptionType;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final String additionalInfo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public DukeException(String message, String exceptionType, String additionalInfo) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.additionalInfo \u003d additionalInfo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return \"Exception: \" + this.exceptionType +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"\\n\\t\" + getMessage() +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"\\n\\t\" + additionalInfo +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"\\n\\tSee \\\"help\\\" for more\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 18
    }
  },
  {
    "path": "src/main/java/DukeTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public abstract class DukeTask {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public DukeTask(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 30
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class EventTask extends DukeTask {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final String datetime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public EventTask(String description, String datetime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return datetime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return \"[E]\" + super.toString() + String.format(\" (at: %s)\",datetime);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 17
    }
  },
  {
    "path": "src/main/java/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class InvalidFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public InvalidFormatException(String instructionFormat) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(\"Please use the correct format for your instructions!\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                InvalidFormatException.class.getName(), \"Format - \" + instructionFormat);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 7
    }
  },
  {
    "path": "src/main/java/InvalidInstructionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class InvalidInstructionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public InvalidInstructionException(String instructionType) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(\"Please key in a valid instruction!\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                InvalidInstructionException.class.getName(), \"Source - \" + instructionType);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 7
    }
  },
  {
    "path": "src/main/java/MissingFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class MissingFieldException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public MissingFieldException(String missingFields) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(\"Please key in the missing fields\", MissingFieldException.class.getName(), \"Fields Missing - \" + missingFields);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 6
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class TodoTask extends DukeTask {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "help"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "todo homework"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by Saturday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline /by Saturday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2100 Lab /at Monday 2pm-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2100 Lab /at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event /at Monday 2pm-4pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline GER1000 assignment /at Tomorrow"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS1010X /by Saturday"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done 1000"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "delete"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "delete all my stuff"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "delete 1000"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "todo newHomework"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event dinner /at 9March2021"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "help me"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list all"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done all my homework"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "bye bye"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 39
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "Vielheim": 2
    }
  }
]
