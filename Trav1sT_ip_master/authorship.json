[
  {
    "path": "assets/userData.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "T | 0 | NAME"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "E | 1 | runnning | tonight la si"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "D | 0 | gymming | tmr la si"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "E | 0 | ad | fasf"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "D | 0 | fasdfas | fafa"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "T | 0 | fasdfasf"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "E | 0 | asdf | 12345"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 7
    }
  },
  {
    "path": "src/main/java/Bot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "public class Bot {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    final String FILE_PATH \u003d \"./assets/userData.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public Bot(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "     * Start the bot\u0027s interaction with user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            loadFileContents(FILE_PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            System.out.println(responseWrapper(\"IO Exception\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    scanner.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    String farewell \u003d responseWrapper(\"Have a good day, mate!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    System.out.println(farewell);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                String response \u003d parseUserInput(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                System.out.println(response);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            } catch (InvalidCommandException | InvalidInputException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                System.out.println(responseWrapper(e.getMessage()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private void saveUserData(String FILE_PATH) throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            fw.write(task.toFileFormat());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private Task lineToObj(String line) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        String[] words \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        char firstChar \u003d line.charAt(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        switch (firstChar) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                int len \u003d words[3].length();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                return new Deadline(words[2], words[3].toString().substring(0,len - 1), words[1].equals(\"1\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                int len2 \u003d words[3].length();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                return new Event(words[2], words[3].toString().substring(0, len2 - 1), words[1].equals(\"1\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                return new Todo(words[2], words[1].equals(\"1\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private void loadFileContents(String FILE_PATH) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        File dir \u003d new File(f.toPath().getParent().toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        if(!dir.exists()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            String response \u003d \"Hey, you new user eh? I\u0027ve got your profile created. No worries.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            System.out.println(responseWrapper(response));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        String content \u003d Files.readString(Paths.get(FILE_PATH), StandardCharsets.US_ASCII);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        String[] items \u003d content.split(\"\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        for (String item : items) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            this.taskList.add(lineToObj(item));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private void greet() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        String greeting \u003d String.format(\"Good day, I\u0027m %s. What can I do for you?\", name);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        System.out.println(responseWrapper(greeting));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private String responseWrapper(String str) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        final String TEXT_LINE \u003d \"________________________________________________________________\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        return TEXT_LINE + \"\\n    \" + str + \"\\n\" + TEXT_LINE;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private String parseUserInput(String input) throws InvalidCommandException,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            InvalidInputException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            return responseWrapper(\"Please input something\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            Command cmd \u003d Command.valueOf(words[0].toUpperCase());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            switch (cmd) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    return cmdList();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    return cmdTodo(words);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    return cmdDeadline(words);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    return cmdEvent(words);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    return cmdDone(words);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    return cmdDelete(words);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    return \"Valid cmd given however it is not supported yet\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            throw new InvalidCommandException(\"What\u0027s that again? I can\u0027t understand.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            throw new InvalidInputException(e.getMessage());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private String cmdTodo(String[] words) throws InvalidInputException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            StringBuilder name \u003d new StringBuilder();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                name.append(words[i]);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                if (i !\u003d words.length - 1) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    name.append(\" \");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            if (name.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                throw new InvalidInputException(\"Sorry, do what? Please give me a valid input. Thank you.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            Todo newTodo \u003d new Todo(name.toString());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            this.taskList.add(newTodo);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            saveUserData(FILE_PATH);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            return responseWrapper(\"Got it. I\u0027ve added this task:\\n    \" +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    newTodo + \"\\n    \" +"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            throw new InvalidInputException(\"Sorry, do what? Please give me a valid input. Thank you.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private String cmdDeadline(String[] words) throws InvalidInputException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            StringBuilder name \u003d new StringBuilder();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            StringBuilder deadline \u003d new StringBuilder();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            Boolean deadlineWords \u003d false;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                if (words[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    name.deleteCharAt(name.length() - 1);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    deadlineWords \u003d true;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                if (deadlineWords) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    deadline.append(words[i]);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    deadline.append(\" \");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    name.append(words[i]);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    name.append(\" \");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            if (name.length() \u003d\u003d 0 || deadline.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                throw new InvalidInputException(\"Sorry, do what? Please give me a valid input. Thank you.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            deadline.deleteCharAt(deadline.length() - 1);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            Deadline newTask \u003d new Deadline(name.toString(), deadline.toString());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            this.taskList.add(newTask);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            saveUserData(FILE_PATH);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            return responseWrapper(\"Got it. I\u0027ve added this task:\\n    \" +"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    newTask + \"\\n    \" +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            throw new InvalidInputException(\"Sorry, do what? Please give me a valid input. Thank you.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private String cmdEvent(String[] words) throws InvalidInputException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            StringBuilder name \u003d new StringBuilder();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            StringBuilder deadline \u003d new StringBuilder();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            Boolean deadlineWords \u003d false;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                if (words[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    name.deleteCharAt(name.length() - 1);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    deadlineWords \u003d true;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                if (deadlineWords) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    deadline.append(words[i]);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    deadline.append(\" \");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    name.append(words[i]);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    name.append(\" \");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            if (name.length() \u003d\u003d 0 || deadline.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                throw new InvalidInputException(\"Sorry, do what? Please give me a valid input. Thank you.\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            deadline.deleteCharAt(deadline.length() - 1);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            Event newTask \u003d new Event(name.toString(), deadline.toString());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            this.taskList.add(newTask);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            saveUserData(FILE_PATH);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            return responseWrapper(\"Got it. I\u0027ve added this task:\\n    \" +"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    newTask + \"\\n    \" +"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            throw new InvalidInputException(\"Sorry, do what? Please give me a valid input. Thank you.\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private String cmdList() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        StringBuilder string \u003d new StringBuilder(\"Here are the tasks in your list:\\n    \");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        for (Task item : taskList) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            string.append(index).append(\".\").append(item).append(\"\\n    \");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            return responseWrapper(\"Nothing in the list\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        string.delete(string.length() - 5, string.length());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        return responseWrapper(string.toString());"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private String cmdDone(String[] words) throws InvalidInputException {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            if (words.length !\u003d 2) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                return responseWrapper(\"Please input 1 argument.\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            Task task \u003d this.taskList.get(Integer.parseInt(words[1]) - 1);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            saveUserData(FILE_PATH);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            return responseWrapper(\"Nice! I\u0027ve marked this task as done: \\n    \" +"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    task + \"\\n\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            throw new InvalidInputException(\"Sorry, do what? Please give me a valid input. Thank you.\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private String cmdDelete(String[] words) throws InvalidInputException {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            if (words.length !\u003d 2) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                throw new InvalidInputException(\"Sorry, do what? Please give me a valid input. Thank you.\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            Task task \u003d this.taskList.get(Integer.parseInt(words[1]) - 1);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            this.taskList.remove(Integer.parseInt(words[1]) - 1);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            saveUserData(FILE_PATH);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            return responseWrapper(\"Noted. I\u0027ve removed this task: \\n    \" +"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    task + \"\\n    \" +"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                    \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "            throw new InvalidInputException(\"Sorry, do what? Please give me a valid input. Thank you.\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 266
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    LIST, DONE, TODO, DEADLINE, EVENT, DELETE,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public Deadline(String name, String deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        this.deadline \u003d LocalDateTime.parse(deadline, formatter);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public Deadline(String name, String deadline, boolean done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        this.deadline \u003d LocalDateTime.parse(deadline, formatter);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        return \"D\" + \" | \" + super.toFileFormat() + \" | \" + this.deadline + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 29
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    private LocalDateTime timePeriod;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public Event(String name, String timePeriod) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        this.timePeriod \u003d LocalDateTime.parse(timePeriod, formatter);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public Event(String name, String timePeriod, boolean done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        this.timePeriod \u003d LocalDateTime.parse(timePeriod, formatter);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        return \"E\" + \" | \" + super.toFileFormat() + \" | \" + this.timePeriod + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "                timePeriod.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 29
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 5
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 5
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        Bot bot \u003d new Bot(\"Straw Bot\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        bot.init();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 6
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public Task(String name, boolean done) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public void markAsUndone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        String isDone \u003d done ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        return isDone + \" | \" + name ;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        String symbol \u003d this.done ? \"✓\" : \"✘\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        return \"[\" + symbol + \"] \" + this.name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 33
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public Todo(String name, boolean done) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        return \"T\" + \" | \" + super.toFileFormat() + \"\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "todo task1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "todo task1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "todo task1 2 3 4"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "wrong command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "event event1 /at I dunno what time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "event event2 /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "event event3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "deadline dl1 /by I dunno what time"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "deadline dl2 /by"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "deadline dl3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "done 12"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "done 12 2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "delete 12"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 21
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Main.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Main.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": "java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Trav1sT"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Trav1sT": 4,
      "-": 33
    }
  }
]
