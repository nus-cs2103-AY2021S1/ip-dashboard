[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "\t"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\ttestImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 17,
      "-": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a chatbot that takes in and executes commands from the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param filepath directory and name of the file to save the user\u0027s tasks to"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    Duke(String filepath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.taskList \u003d this.storage.readTasks();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this(\"/data/taskList.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Starts the chatbot so that it takes in commands from the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.ui.showMessage(Message.getWelcome());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                Command command \u003d Parser.parse(this.ui.readCommand());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                if (command !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    Message message \u003d command.execute(this.taskList, this.storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    this.ui.showMessage(message);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    isExit \u003d command.isDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                this.ui.showMessage(new Message(e.getMessage()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            if (command !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                Message message \u003d command.execute(this.taskList, this.storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                if (command.isDone()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                response \u003d message.getText();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 69
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents an \u003ccode\u003eException\u003c/code\u003e that occurs when Duke is running."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        runCli(args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static void runCli(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static void runGui(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.scene.layout.BorderPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            BorderPane borderPane \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Scene scene \u003d new Scene(borderPane);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(new Duke());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.scene.layout.BorderPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class MainWindow extends BorderPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private Label welcomeLabel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        welcomeLabel.setText(Message.getWelcome().getText());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        welcomeLabel.setFont(new Font(\"Courier New\", 12));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void handleUserInput() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            if (!input.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                        getInputLabel(input),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                        getResponseLabel(input));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private Label getInputLabel(String text) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private Label getResponseLabel(String text) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String response \u003d duke.getResponse(text);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        Label textToAdd \u003d new Label(response);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 61
    }
  },
  {
    "path": "src/main/java/seedu/duke/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String[] message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message(String[] message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.message \u003d new String[]{message};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static Message getWelcome() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return new Message(new String[]{\"Hello from\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            \" ____        _        \","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            \"|  _ \\\\ _   _| | _____ \","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            \"| | | | | | | |/ / _ \\\\\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            \"| |_| | |_| |   \u003c  __/\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            \"|____/ \\\\__,_|_|\\\\_\\\\___|\"});"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static Message getGoodbye() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return new Message(\"Have a nice day.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static Message getTaskAdded(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return new Message(\"Task added: \" + task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static Message getTaskDone(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return new Message(\"Task marked as done: \" + task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static Message getTaskDeleted(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return new Message(\"Task deleted: \" + task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String getText() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        for (String line : message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            result.append(line).append(\"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void forEach(Consumer\u003c? super String\u003e consumer) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        for (String line : message) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            consumer.accept(line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 56
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Responsible for the parsing of the user\u0027s inputs."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Parses an input from the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param command the input to be parsed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @return a \u003ccode\u003eCommand\u003c/code\u003e that can be executed"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @throws DukeException if the given input is not supported by Duke"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String[] inputArray \u003d command.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        switch (inputArray[0]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new ToDoCommand(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new DeadlineCommand(command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new EventCommand(command);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new DoneCommand(inputArray);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new DeleteCommand(inputArray);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new ListCommand(inputArray);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new FindCommand(command);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"I\u0027m not sure what you\u0027re talking about.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 49
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a file on which the user\u0027s tasks are stored."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param filepath directory and name of the file to save the user\u0027s tasks to"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @throws DukeException if there is a problem when creating a new file on the user\u0027s system"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    Storage(String filepath) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        int i \u003d filepath.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (i !\u003d -1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            String directory \u003d filepath.substring(0, i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            new File(directory).mkdirs();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.file \u003d new File(filepath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.file.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Problem reading file.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Loads tasks from a file into the \u003ccode\u003eTaskList\u003c/code\u003e object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @return a list of tasks previously saved by the user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public TaskList readTasks() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Scanner scanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                taskList.add(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            System.out.println(\"Problem reading file.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Writes the list of tasks into a file from the start."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param taskList the user\u0027s current list of tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void writeToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(this.filepath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            taskList.forEach(task -\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    fileWriter.write(task.print() + System.lineSeparator());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            });"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Appends a task to the back of a file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param task the new task to be saved"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void appendToFile(Task task) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(this.filepath, true);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            fileWriter.write(task.print() + System.lineSeparator());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 95
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a list of \u003ccode\u003eTask\u003c/code\u003es in a fixed order."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Adds a new task to this task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Adds a new task to this task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param task the string representation of the task in a file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void add(String task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        // for reading from file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String[] input \u003d task.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        boolean isDone \u003d input[1].equals(\"1\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        switch (input[0]) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Event event \u003d new Event(input[2], isDone, LocalDate.parse(input[3]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.tasks.add(event);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            ToDo todo \u003d new ToDo(input[2], isDone);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.tasks.add(todo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Deadline deadline \u003d new Deadline(input[2], isDone, LocalDate.parse(input[3]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.tasks.add(deadline);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Marks a task in the list as completed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param position the position of the task in the list (starting from 1)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @return the task that was marked as done"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @throws DukeException if there is no task at the given position"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Task markAsDone(int position) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (position \u003c\u003d 0 || position \u003e this.tasks.size()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Invalid task.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return this.tasks.get(position - 1).markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Deletes a task in the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param position the position of the task in the list (starting from 1)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @return the task that was deleted"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @throws DukeException if there is no task at the given position"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Task delete(int position) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (position \u003c\u003d 0 || position \u003e this.tasks.size()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Invalid task.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return this.tasks.remove(position - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Prints out all the tasks in this list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message showList() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (this.tasks.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new Message(\"No tasks added.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            String[] response \u003d new String[this.tasks.size()];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            int position \u003d 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                response[position - 1] \u003d position + \". \" + task;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                position++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new Message(response);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Prints out tasks that take place or are due by a certain date."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param date the date entered by the user"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message showList(LocalDate date) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (this.tasks.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new Message(\"No tasks added.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            int totalPosition \u003d 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            boolean hasTask \u003d false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                if ((task instanceof Event || task instanceof Deadline)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                        \u0026\u0026 task.getDate().equals(date)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    response.add(totalPosition + \". \" + task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    hasTask \u003d true;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                totalPosition++;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            if (!hasTask) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                return new Message(\"No tasks found.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new Message(response.toArray(new String[0]));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message find(String keyword) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (this.tasks.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new Message(\"No tasks added.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            int totalPosition \u003d 1;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            boolean hasTask \u003d false;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                if (task.containsKeyword(keyword)) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    response.add(totalPosition + \". \" + task);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    hasTask \u003d true;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                totalPosition++;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            if (!hasTask) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                return new Message(\"No tasks found.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new Message(response.toArray(new String[0]));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Iterates through the \u003ccode\u003eTask\u003c/code\u003es in this list."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param consumer the action to be executed on each \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void forEach(Consumer\u003c? super Task\u003e consumer) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.tasks.forEach(consumer);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 162
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a group of methods that deal with interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private static final String horizontalLine \u003d \"      \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private static final String indentation \u003d \"      \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Takes in one line of input from the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @return the user\u0027s input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @throws DukeException if there is no more input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    String readCommand() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (this.scanner.hasNext()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"No next line\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Prints out an message to the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param message the message to be printed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showMessage(Message message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        message.forEach(line -\u003e System.out.println(indentation + line));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e telling Duke to stop running."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return Message.getGoodbye();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a command entered by the user for Duke to execute."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param taskList a list of the user\u0027s tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param storage  Deals with the saving of the user\u0027s tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @throws DukeException if there is a problem when managing the taskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    Message execute(TaskList taskList, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Determines if this \u003ccode\u003eCommand\u003c/code\u003e causes Duke to stop running."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @return whether or not this command terminates the program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    boolean isDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e telling Duke to create a new \u003ccode\u003eDeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class DeadlineCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public DeadlineCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        Deadline deadline \u003d Deadline.of(this.command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        storage.appendToFile(deadline);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return Message.getTaskAdded(deadline);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e telling Duke to delete a certain \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String[] command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public DeleteCommand(String[] command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length !\u003d 2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Task task \u003d taskList.delete(Integer.parseInt(command[1]));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return Message.getTaskDeleted(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e telling Duke to mark a certain \u003ccode\u003eTask\u003c/code\u003e as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String[] command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public DoneCommand(String[] command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length !\u003d 2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Task task \u003d taskList.markAsDone(Integer.parseInt(command[1]));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return Message.getTaskDone(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e telling Duke to create a new \u003ccode\u003eEvent\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class EventCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public EventCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        Event event \u003d Event.of(this.command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        storage.appendToFile(event);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return Message.getTaskAdded(event);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Find cannot be empty.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String keyword \u003d command.substring(5);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return taskList.find(keyword);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e telling Duke to list \u003ccode\u003eTask\u003c/code\u003es."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String[] command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public ListCommand(String[] command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return taskList.showList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else if (command.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(command[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                return taskList.showList(date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                throw new DukeException(\"Please provide date in yyyy-mm-dd format.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e telling Duke to create a new \u003ccode\u003eToDo\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class ToDoCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public ToDoCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Message execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        ToDo toDo \u003d ToDo.of(this.command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        taskList.add(toDo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        storage.appendToFile(toDo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return Message.getTaskAdded(toDo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e that has to be done by certain date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private LocalDate deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Deadline(String title, LocalDate deadline) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Deadline(String title, boolean isDone, LocalDate deadline) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title, isDone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static Deadline of(String command) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Deadline cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String[] split \u003d command.substring(9).split(\"\\\\s+/by\\\\s+\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new Deadline(split[0], LocalDate.parse(split[1]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Please provide date in yyyy-mm-dd format.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String date \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"D | \" + super.print() + \" | \" + this.deadline;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 53
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e that takes place on a certain date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private LocalDate duration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Event(String title, LocalDate duration) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Event(String title, boolean isDone, LocalDate duration) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title, isDone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static Event of(String command) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Event cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String[] split \u003d command.substring(6).split(\"\\\\s+/at\\\\s+\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new Event(split[0], LocalDate.parse(split[1]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Please provide date in yyyy-mm-dd format.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return this.duration;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String date \u003d this.duration.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"E | \" + super.print() + \" | \" + this.duration;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 53
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a task added by the user, which may be done or not done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param title the content of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Task(String title) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param title  the content of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @param isDone whether or not the task is marked as completed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Task(String title, boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @return the task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @throws DukeException if the task is already completed"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Task markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Already marked as done.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String status \u003d this.isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"[\" + status + \"] \" + this.title;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Returns a string representation of the task to be used in saving the task to a file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @return string representation of the task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String status \u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return status + \" | \" + this.title;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * Returns the date by or at which this task takes place, if any."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     * @return a date"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ysr25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public abstract LocalDate getDate();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return this.title.contains(keyword);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 75
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e with no additional details."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public ToDo(String title) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public ToDo(String title, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static ToDo of(String command) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"ToDo cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String content \u003d command.substring(5);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return new ToDo(content);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"T | \" + super.print();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 39
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "\u003cBorderPane xmlns:fx\u003d\"http://javafx.com/fxml\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            fx:controller\u003d\"seedu.duke.MainWindow\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    \u003ccenter\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" vbarPolicy\u003d\"ALWAYS\" hbarPolicy\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                \u003cLabel fx:id\u003d\"welcomeLabel\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    \u003c/center\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    \u003cbottom\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    \u003c/bottom\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "\u003c/BorderPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ysr25": 23
    }
  },
  {
    "path": "src/test/java/seedu/duke/MessageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class MessageTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void welcomeTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String actual \u003d Message.getWelcome().getText();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String expected \u003d \"Hello from\\n\" + logo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String actual \u003d Message.getGoodbye().getText();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String expected \u003d \"Have a nice day.\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 27
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    void listCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        assertDoesNotThrow(() -\u003e Parser.parse(\"list\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    void markTaskAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        Task task \u003d new ToDo(\"hi\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        assertDoesNotThrow(() -\u003e task.markAsDone());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String expected \u003d \"[T][\\u2713] hi\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        assertEquals(expected, task.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "hello :)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "todo buy textbook"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "deadline CS2103T project /by 2020-08-30"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "event CS2100 lecture /at tue 4-6pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "done a"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "list 2020-08-30"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "list 2020-08-29"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ysr25": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\seedu\\duke\\Duke.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "java -classpath ..\\bin seedu.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ysr25": 3,
      "-": 19
    }
  }
]
