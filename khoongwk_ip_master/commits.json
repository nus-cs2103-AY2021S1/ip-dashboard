{
  "authorDailyContributionsMap": {
    "khoongwk": [
      {
        "date": "2020-08-16",
        "commitResults": [
          {
            "hash": "86fbf9a519cf63a27d77d47f8eb6a286fddb7b95",
            "messageTitle": "Completed Increment Level-1 for greeting and echoing of commands. Option to exit using the command \u0027bye\u0027.",
            "messageBody": "",
            "tags": [
              "Level-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 34,
                "deletions": 6
              }
            }
          },
          {
            "hash": "483fde44467d8c19f27c29d3387013f3b52c979b",
            "messageTitle": "Completed increment level 2 with ability to store entries temporarily and list them out with the \u0027list\u0027 command. Any other input besides \u0027bye\u0027 would be treated as an entry to store.",
            "messageBody": "",
            "tags": [
              "Level-2"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 35,
                "deletions": 9
              }
            }
          },
          {
            "hash": "3e6c755abf7d05d4a2dda4eb442988853b3c867c",
            "messageTitle": "Completed increment level 3 with ability to mark a task as done.",
            "messageBody": "",
            "tags": [
              "Level-3"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 51,
                "deletions": 6
              }
            }
          },
          {
            "hash": "4aacd1ab4a2239cdd49c3af2665b7d01fe934af7",
            "messageTitle": "Completed Level 4 with tasks event, deadline, and todo. More input checking to verify command is valid.",
            "messageBody": "",
            "tags": [
              "Level-4"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 145,
                "deletions": 25
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-17",
        "commitResults": [
          {
            "hash": "56259abb3f7ef57ed48cf8fb9a40cd0719620478",
            "messageTitle": "Completed level 5: Changed Input.txt and expected.txt",
            "messageBody": "",
            "tags": [
              "A-TextUiTesting"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 7,
                "deletions": 0
              },
              "java": {
                "insertions": 1,
                "deletions": 1
              },
              "bat": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "abd909dba1a0da5bde6fb1437f572b51b1fa64d7",
            "messageTitle": "Level 5: Incorporated DukeException for error handling.",
            "messageBody": "",
            "tags": [
              "Level-5"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 26,
                "deletions": 16
              }
            }
          },
          {
            "hash": "dfb4709a90e6526fb1547cc4dd11cf0d9aa03a69",
            "messageTitle": "Completed Level 6: Delete Function",
            "messageBody": "",
            "tags": [
              "Level-6"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 0
              },
              "java": {
                "insertions": 35,
                "deletions": 9
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-26",
        "commitResults": [
          {
            "hash": "7e79d758b3016c56e74edfc90a2fafaa87b61511",
            "messageTitle": "Add Enums for Commands",
            "messageBody": "If-Else Control flow and the substring() is used to determine the user\u0027s\ninput i.e \u0027bye\u0027, \u0027done\u0027, \u0027todo\u0027, etc.\n\nHowever, this approach is messy and is not very readable.\n\nLet\u0027s use Enums and switch-case statements to improve the code\u0027s readability.\n",
            "tags": [
              "A-Enums"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 0,
                "deletions": 0
              },
              "java": {
                "insertions": 168,
                "deletions": 74
              },
              "bat": {
                "insertions": 7,
                "deletions": 0
              }
            }
          },
          {
            "hash": "3fbc05bed8ebb5437b7ec47ccac6138ebdeb3775",
            "messageTitle": "Add Save feature for Level 7",
            "messageBody": "Tasks which are stored in the list while the program is run\nis not saved and stored when the user exits the program.\n\nEnabling a save function would improve the usability of this\nprogram as tasks which were entered previously can be\nremembered.\n\nLet\u0027s providing a saving function which stores the Task list into\na text file when the user exits and retrieves this list when the\nprogram is started up again.\n",
            "tags": [
              "Level-7"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 4,
                "deletions": 3
              },
              "java": {
                "insertions": 113,
                "deletions": 11
              },
              "bat": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "ea8ab16a5abe9029b15cb0ab1f6cd2fd36bc560b",
            "messageTitle": "Fix issue with text file saving.",
            "messageBody": "Working directory is different when building and running Duke in the IntelliJ IDE\ncompared to when running runtest.bat.\n\nModifications have to be made to the filepath specified depending on which\nis the working directory.\n\nLet\u0027s use a conditional expression to set the correct file path depending on what\nwas the original working directory.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 0,
                "deletions": 0
              },
              "java": {
                "insertions": 14,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-27",
        "commitResults": [
          {
            "hash": "bc5f963ea5f1b3623b3c5666a885a20a6eb187a1",
            "messageTitle": "Add Date Time Formatting for user input",
            "messageBody": "Date and Time of events and deadlines can take any format.\n\nIf Duke can understand certain formats of date and time input,\nit can parse the String input to make it look more readable and\naesthetically pleasing.\n\nTo improve the user experience, let\u0027s enable Duke to process\nspecific time and date formats such as \"dd/MM/yyyy HHmm\" and\nformat it into a more pleasing look, such as \"JULY 4 2021\".\n",
            "tags": [
              "Level-8"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 0
              },
              "java": {
                "insertions": 83,
                "deletions": 3
              }
            }
          },
          {
            "hash": "defe452b7af229498061ee34794ee5a810c55a69",
            "messageTitle": "Edit Text files for text-ui-test and other minor edits",
            "messageBody": "Expected text file has changed due to new Save feature.\n\nReplacing expected text would lead to a match between actual and expected text.\n\nLet\u0027s make minor edits to text files as well as the main Duke code to clean up.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 5,
                "deletions": 1
              },
              "java": {
                "insertions": 0,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-30",
        "commitResults": [
          {
            "hash": "a5a07a01983c77289be1cac9bd9103e93fdf7695",
            "messageTitle": "Add More Classes for OOP",
            "messageBody": "Currently, the logic for Duke is all within the Duke class.\n\nHowever, this design is bloated and should be compartmentalized\nfurther using more OOP.\n\nLet\u0027s introduce new classes such as Storage, TaskList, and Ui to\nimprove the structure of Duke and decentralize the logic to each\nseperate component.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 184,
                "deletions": 133
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-31",
        "commitResults": [
          {
            "hash": "7c44a6c3656b03723aa5d4711c8591efe9b14e7a",
            "messageTitle": "Fix OOP Extensions",
            "messageBody": "More Classes have been added to decentralise the logic,\nsuch as the Storage, Parser, and Ui Class.\n\nHowever, the classes were not feature complete, especially\nthe Ui Class.\n\nLet\u0027s complete these classes, revamp the logic in the main\nDuke class to use these classes, and test it out with text-ui-test.\n",
            "tags": [
              "A-MoreOOP"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 3
              },
              "java": {
                "insertions": 252,
                "deletions": 207
              }
            }
          },
          {
            "hash": "2f2a6fa77aa8b008ff1d85de78f4edcc49768377",
            "messageTitle": "Package Classes into Duke and Task Packages",
            "messageBody": "The numerous classes in the java directory has become\nmessy as the number of classes increased.\n\nTo improve the organization of the code base, packaging ought\nto be done.\n\nLet\u0027s package the classes into two main packages - task for the\nTask Classes and duke for all the other classes. More packages\nwill be created in the future if complexity increases. Access modifiers\nhave been made package-private in the duke class for tighter\nsecurity.\n\nFurthermore, minor edits to the code have been made such as\nimproved exception handling, and fully delegating console output\nto the Ui class.\n",
            "tags": [
              "A-Packages"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 116,
                "deletions": 90
              },
              "sh": {
                "insertions": 2,
                "deletions": 2
              },
              "md": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "2d3cc38a7748ee8322ac7d240dc44763ac9f39e1",
            "messageTitle": "Add JUnit Tests",
            "messageBody": "Duke currently has no unit tests and relies on text-ui-test\nto verify that the program works fine.\n\nAdding unit tests using JUnit would improve overall code\nquality by ensuring that methods in the different Duke\nclasses return the same output or throw the same exception.\n\nLet\u0027s introduce a few JUnit test classes to test the funcionality\nof the individual classes. More test classes could be included,\nbut the tests for Parser, Storage, and Task should be\nsufficient for this current stage.\n",
            "tags": [
              "A-JUnit"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 8,
                "deletions": 0
              },
              "java": {
                "insertions": 138,
                "deletions": 1
              }
            }
          },
          {
            "hash": "677477388dcf87add67af9a684301d07973ae580",
            "messageTitle": "Edit Ui Introduction Text",
            "messageBody": "Ui shows commands available like event, todo,\ndeadline, list.\n\nHowever, it missed other commands such as\ndelete, done, and bye.\n\nLet\u0027s add the missing commands into the\nintroductory message.\n",
            "tags": [
              "A-Jar"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 5,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-01",
        "commitResults": [
          {
            "hash": "174b08abdd0c15003e6cf1910e793b591f13f998",
            "messageTitle": "Add Find Command (Level 9)",
            "messageBody": "Find Command skeleton has been part of Duke so far\nbut the logic has not been incorporated and tested.\n\nFind command is useful for users to search any tasks\nby their keyword(s).\n\nTo improve the usability of this program, let\u0027s provide\nthe logic of the find command, including testing via\ntext-ui-test.\n",
            "tags": [
              "Level-9"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 0
              },
              "java": {
                "insertions": 36,
                "deletions": 4
              },
              "bat": {
                "insertions": 3,
                "deletions": 2
              }
            }
          },
          {
            "hash": "97737292c860bc62125144b7fdbce6ac2bc8f8f7",
            "messageTitle": "Edit code to match coding standard",
            "messageBody": "Methods, variables have been aptly named according\nto se-edu Java conventions.\n\nHowever, there are sections where noise can be\neliminated by removing \u0027this\u0027 where it is unnecessary.\n\nLet\u0027s refine the code base by removing the \u0027this\u0027 keyword\nwhere it is unnecessary and make other edits where\\\nappropriate to meet the coding standard.\n",
            "tags": [
              "A-CodingStandard"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 15,
                "deletions": 15
              }
            }
          },
          {
            "hash": "4acfcf0fac2f257cfd767154772f84f527a8f5b0",
            "messageTitle": "Add Javadoc for all classes",
            "messageBody": "Documentation of Classes and their methods\nis important for projects where other developers\nhave to read code from other authors.\n\nHowever, there is currently a lack of javadoc\ndocumentation in this Duke project.\n\nThus, let\u0027s add javadoc documentation to all\nclasses and non-private methods where possible.\n",
            "tags": [
              "A-JavaDoc"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 286,
                "deletions": 130
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-04",
        "commitResults": [
          {
            "hash": "28f7116526ff03ab0d8c68f7521fd253ea7efea5",
            "messageTitle": "Add Gradle Support and Checkstyle",
            "messageBody": "Gradle was not activated as well as checkstyle.\n\nTo automate future builds and improve the code quality,\nlet\u0027s enable Gradle and the checkstyle plugin.\n",
            "tags": [
              "A-Gradle",
              "A-Checkstyle"
            ],
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 2,
                "deletions": 2
              },
              "txt": {
                "insertions": 1,
                "deletions": 2
              },
              "java": {
                "insertions": 114,
                "deletions": 71
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "khoongwk": {
      "java": 1049,
      "md": 2,
      "fxml": 0,
      "sh": 2,
      "bat": 10,
      "gradle": 2,
      "txt": 24
    }
  },
  "authorContributionVariance": {
    "khoongwk": 45721.61
  },
  "authorDisplayNameMap": {
    "khoongwk": "CS2103T-W13-3 KHOO.. KIT"
  }
}
