[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "todo read book"
      }
    ],
    "authorContributionMap": {
      "Persdre": 1
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Deadline Class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final LocalDate deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Deadline constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param description Description of Deadline task without dates"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param deadline Deadline LocalDate object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param isDone Completion status of Deadline task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Deadline(String description, LocalDate deadline, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Returns descriptions of a Deadline task with icons."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return descriptions of a Deadline task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + this.deadline.format(formatter) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 34
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Duke main class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        FileLoader.readSavedFile(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                \"I\u0027m DukeForQ, your chatbot! You can enter everything you want to enter. If you want to exit, enter \u0027bye\u0027!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (s.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                FileLoader.saveToFile(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                System.out.println(\"Bye, hope to see you again!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (s.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    int index \u003d Integer.parseInt(s.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(\"Nice, I have marked this task as done: \" + \"\\n\" + tasks.get(index).toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        throw new EmptyDoneException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    } catch (EmptyDoneException e1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        // TODO Auto-generated catch block"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        e1.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    // System.out.println(\"oops, the description of done can\u0027t be empty!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        throw new InvalidNumberException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    } catch (InvalidNumberException e1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        // TODO Auto-generated catch block"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        e1.printStackTrace();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    // System.out.println(\"You entered an invalid index!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } // if starts with done, mark this task as done then print it."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (s.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    int index \u003d Integer.parseInt(s.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    Task t \u003d tasks.get(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    tasks.removeTask(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(\"Nice, I have removed this task: \" + \"\\n\" + t.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    // System.out.println(\"oops, the description of delete can\u0027t be empty!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        throw new EmptyDeleteException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    } catch (EmptyDeleteException e1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        // TODO Auto-generated catch block"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        e1.printStackTrace();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(\"You entered an invalid index!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } // if starts with delete, delete the referred task by the index."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (s.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    Todo t \u003d new Todo(s.substring(5), false);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    tasks.addTask(t);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \" + \"\\n\" + t.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    // System.out.println(\"oops, the description of todo can\u0027t be empty!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        throw new EmptyTodoException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    } catch (EmptyTodoException e1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        // TODO Auto-generated catch block"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        e1.printStackTrace();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    // System.out.println(\"oops, the description of todo can\u0027t be empty!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        throw new EmptyTodoException();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    } catch (EmptyTodoException e1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        // TODO Auto-generated catch block"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        e1.printStackTrace();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } // if starts with todo, the string after todo should be in the task."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (s.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String[] divide \u003d s.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String description \u003d divide[0];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String ddl \u003d divide[1];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    LocalDate deadline \u003d LocalDate.parse(divide[1], formatter); // parse deadline"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    Deadline d \u003d new Deadline(description, deadline, false);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    tasks.addTask(d);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \" + \"\\n\" + d.toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        throw new EmptyDeadLineException();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    } catch (EmptyDeadLineException e1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        e1.printStackTrace();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        throw new EmptyDeadLineException();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    } catch (EmptyDeadLineException e1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        e1.printStackTrace();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } // if starts with deadline, first split the string, then description should be"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            // the first string, ddl should be the last string."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (s.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String[] divide \u003d s.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String description \u003d divide[0];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String time \u003d divide[1];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    Event e \u003d new Event(description, time);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    tasks.addTask(e);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \" + \"\\n\" + e.toString());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        throw new EmptyEventException();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    } catch (EmptyEventException e1) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        e1.printStackTrace();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        throw new EmptyEventException();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    } catch (EmptyEventException e1) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        e1.printStackTrace();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } // if starts with event, first split the string, then description should be the"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            // first string, actual time should be the last string."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if(s.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String info \u003d s.substring(5);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    TaskList findResult \u003d new TaskList();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    for(int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        if(tasks.get(i).getDescription().contains(info)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                            findResult.addTask(tasks.get(i));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    for (int i \u003d 1; i \u003c\u003d findResult.size(); i++) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                        System.out.println(i + \".\" + findResult.get(i - 1).toString());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(\"Sorry, you should enter information agter find!\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (s.equals(\"list\")) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    System.out.println(i + \".\" + tasks.get(i - 1).toString());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                // System.out.println(new InvalidCommandException().toString());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    // TODO Auto-generated catch block"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "Persdre": 198
    }
  },
  {
    "path": "src/main/java/duke/EmptyDeadLineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyDeadLineException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * EmptyDeadLineException constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyDeadLineException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Returns error message when occurs empty deadline exception."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 25
    }
  },
  {
    "path": "src/main/java/duke/EmptyDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyDeleteException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! The description of a delete cannot be empty.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * EmptyDeleteException constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyDeleteException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 19
    }
  },
  {
    "path": "src/main/java/duke/EmptyDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyDoneException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! The description of a done cannot be empty. \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyDoneException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 18
    }
  },
  {
    "path": "src/main/java/duke/EmptyEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyEventException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! The description of a event cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyEventException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 19
    }
  },
  {
    "path": "src/main/java/duke/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyTodoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyTodoException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 19
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 15
    }
  },
  {
    "path": "src/main/java/duke/FileLoader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class FileLoader {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final String directoryPath \u003d \"data\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public static void readSavedFile(TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            File directory \u003d new File(directoryPath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                System.out.println(\"There is not such a directory, created one for you!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                directory.mkdir();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (f.createNewFile()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                System.out.println(\"Can\u0027t find the file. You can add a file on your own.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String[] store \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    tasks.getTasks().add(new Task(store[1]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                System.out.println(\"All the data has been loaded!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public static void saveToFile(TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String[] store \u003d task.toString().split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                writer.write(store[0] + \" \" + store[1] + \" \" + store[2] + System.lineSeparator());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 52
    }
  },
  {
    "path": "src/main/java/duke/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! It seems the command you entered is invalid!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 20
    }
  },
  {
    "path": "src/main/java/duke/InvalidNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class InvalidNumberException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! It seems the number you entered is invalid!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public InvalidNumberException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 18
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 5
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 5
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 33
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * TaskList constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * TaskList constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param list contents of the TaskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Returns TaskList\u0027s size."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return this TaskList\u0027s size."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 48
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 13
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 5
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Persdre": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "Persdre": 1
    }
  }
]
