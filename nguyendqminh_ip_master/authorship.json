[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String bye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    System.out.println(bye);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        System.out.printf(\"%d. %s\\n\", i + 1, tasks.get(i));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! Task index not found.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    int index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! Task index not found.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! Task index not found.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    int index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! Task index not found.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    tasks.remove(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    Task newTask \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        if (input.length() \u003c 5) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                            throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        String description \u003d input.substring(5);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        newTask \u003d new Todo(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        if (input.length() \u003c 9) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                            throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        String rest \u003d input.substring(9);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        int by_position \u003d rest.indexOf(\"/by \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        if (by_position \u003d\u003d -1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                            throw new DukeException(\"\\u2639 OOPS!!! Deadline time specification not found.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        String description \u003d rest.substring(0, by_position - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        String by \u003d rest.substring(by_position + 4);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                            throw new DukeException(\"\\u2639 OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        String rest \u003d input.substring(6);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        int at_position \u003d rest.indexOf(\"/at \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        if (at_position \u003d\u003d -1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                            throw new DukeException(\"\\u2639 OOPS!!! Event time specification not found.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        String description \u003d rest.substring(0, at_position - 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        String at \u003d rest.substring(at_position + 4);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (newTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    tasks.add(newTask);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    System.out.println(newTask);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    System.out.printf(\"Now you have %d tasks in the list\\n\", tasks.size());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            } catch(DukeException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            };"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "nguyendqminh": 89
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), this.at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public boolean markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 28
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "todo cs2103 project 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "nguyendqminh": 1
    }
  }
]
