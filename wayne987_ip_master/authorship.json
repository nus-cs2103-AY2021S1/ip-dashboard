[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "wayne987": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        attributes("
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u0027Main-Class\u0027: \u0027Launcher\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        )"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "wayne987": 24
    }
  },
  {
    "path": "data/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "T | 0 | eat book  "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "E | 0 | drink book | 2020-09-18 "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "D | 0 | sell book | 2019-10-29 "
      }
    ],
    "authorContributionMap": {
      "wayne987": 3
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 duke.command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "@rem Get duke.command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "@rem Slurp the duke.command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "@rem Setup the duke.command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 99,
      "wayne987": 4
    }
  },
  {
    "path": "src/Test/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Deadline_Wrong_Format1_exceptionThrown() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Deadline.create(\"deadline read book 2019/12/02 18:00\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"Please include \u0027/by\u0027 in front of the deadline\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Deadline_Wrong_Format2_exceptionThrown() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Deadline.create(\"deadline read book /by 02/12/2019 18:00\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"please enter a valid yyyy-mm-dd format\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Deadline_Wrong_Format3_exceptionThrown() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Deadline.create(\"deadline read book /by 2019/12/02 1800\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"please enter a valid HH:MM format\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Deadline_Wrong_Format4_exceptionThrown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Deadline.create(\"deadline read book /at 2019/12/02 18:00\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"Please include \u0027/by\u0027 in front of the deadline\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Event_Wrong_Format1_exceptionThrown() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Event.create(\"event read book 2019/12/02 18:00\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"Please include \u0027/at\u0027 in front of the event time period\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Event_Wrong_Format2_exceptionThrown() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Event.create(\"event read book /at 02/12/2019 18:00\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"please enter a valid yyyy-mm-dd format\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Event_Wrong_Format3_exceptionThrown() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Event.create(\"event read book /at 2019/12/02 1800\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"please enter a valid HH:MM format\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Event_Wrong_Format4_exceptionThrown() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Event.create(\"event read book /by 2019/12/02 1800\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"Please include \u0027/at\u0027 in front of the event time period\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 78
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.SnapshotParameters;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.image.WritableImage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.paint.Paint;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.text.FontWeight;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final double LENGTH \u003d 50.0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        dialog.setFont(Font.font(\"Arial\", FontWeight.BOLD, 8));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        dialog.setTextFill(Paint.valueOf(\"orange\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        displayPicture.setFitWidth(LENGTH);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        displayPicture.setFitHeight(LENGTH);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        circleClip(displayPicture);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private void circleClip(ImageView imageView){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Circle circle \u003d new Circle(LENGTH /2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        circle.setCenterY(imageView.getY() + LENGTH/2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        circle.setCenterX(imageView.getX() + LENGTH/2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        imageView.setClip(circle);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        SnapshotParameters parameters \u003d new SnapshotParameters();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        parameters.setFill(Color.TRANSPARENT);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        WritableImage image \u003d imageView.snapshot(parameters, null);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        imageView.setClip(null);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        imageView.setEffect(new DropShadow(20, Color.HOTPINK));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        imageView.setImage(image);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 87
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.paint.Paint;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            ap.setId(\"pane\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            stage.setTitle(\"DukeHub\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        duke.stop();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 42
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.layout.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        DialogBox userDialog \u003d DialogBox.getUserDialog(userInput.getText(), userImage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        userDialog.setBorder(new Border(new BorderStroke(Color.ORANGERED,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                                         BorderStrokeStyle.SOLID,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                                         new CornerRadii(20.0),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                                         BorderWidths.DEFAULT)));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(duke.getResponse(userInput.getText()), dukeImage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        dukeDialog.setBorder(new Border(new BorderStroke(Color.ALICEBLUE,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                                         BorderStrokeStyle.SOLID,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                                         new CornerRadii(20.0),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                                         BorderWidths.DEFAULT)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                userDialog,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                dukeDialog"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 58
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.utility.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.utility.Statistic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.utility.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.utility.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** duke.task.TaskList class that stores and deals with the tasks **/"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** duke.utility.Parser class that parse and deal with the commands given **/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** duke.utility.Storage class that handles loads and saves the duke.task from/to hard drive **/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** UI class that is responsible for the interaction with the user **/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Statistic statistic;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *Class constructor"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        statistic \u003d new Statistic();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        taskList \u003d new TaskList(statistic);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        parser \u003d new Parser(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            storage \u003d new Storage(taskList, statistic);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Initiate the stop to the program"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Save the stored tasks into the hard drive"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            storage.saveTaskFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            ui.showSavingError();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return parser.parseCommand(splitCommand(input));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String[] splitCommand(String input){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 61
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 8
    }
  },
  {
    "path": "src/main/java/duke/command/Bye.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Bye extends Instruction {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Bye(TaskList taskList, String taskDescription) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskList, taskDescription);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        taskList.setTaskListNotUpdating();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return \"Bye, Have a Great Time!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 17
    }
  },
  {
    "path": "src/main/java/duke/command/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    LIST, FIND, BYE, TODO, DEADLINE, EVENT, DELETE, DONE, STATISTIC, UNKNOWN"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 5
    }
  },
  {
    "path": "src/main/java/duke/command/Delete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Delete extends Instruction {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Delete(TaskList taskList, String taskDescription) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskList, taskDescription);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int index \u003d Integer.parseInt(taskDescription) - 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.deleteTask(index);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 17
    }
  },
  {
    "path": "src/main/java/duke/command/Done.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Done extends Instruction {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Done(TaskList taskList, String taskDescription) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskList, taskDescription);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int index \u003d Integer.parseInt(taskDescription) - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.doneTask(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 18
    }
  },
  {
    "path": "src/main/java/duke/command/Find.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Find extends Instruction{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Find(TaskList taskList, String taskDescription) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskList, taskDescription);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.findTask(taskDescription);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 16
    }
  },
  {
    "path": "src/main/java/duke/command/IDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class IDeadline extends Instruction{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public IDeadline(TaskList taskList, String taskDescription) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskList, taskDescription);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Task newTask \u003d Deadline.create(taskDescription);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.addTask(newTask, true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 19
    }
  },
  {
    "path": "src/main/java/duke/command/IEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class IEvent extends Instruction{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public IEvent(TaskList taskList, String taskDescription) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskList, taskDescription);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Task newTask \u003d Event.create(taskDescription);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.addTask(newTask, true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 20
    }
  },
  {
    "path": "src/main/java/duke/command/IStatistic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class IStatistic extends Instruction{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public IStatistic(TaskList taskList, String taskDescription) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskList, taskDescription);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.getStatistic();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 15
    }
  },
  {
    "path": "src/main/java/duke/command/ITodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class ITodo extends Instruction{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public ITodo(TaskList taskList, String taskDescription) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskList, taskDescription);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Task newTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.addTask(newTask, true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 19
    }
  },
  {
    "path": "src/main/java/duke/command/Instruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public abstract class Instruction{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    String taskDescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Instruction(TaskList taskList, String taskDescription){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.listTask();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 19
    }
  },
  {
    "path": "src/main/java/duke/command/List.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class List extends Instruction {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public List(TaskList taskList, String taskDescription) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskList, taskDescription);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.listTask();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Date of the duke.task **/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected LocalDate byDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Time of the duke.task **/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected LocalTime byTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Deadline(String taskName, String taskDateTime) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.tag \u003d \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        parseTime(taskDateTime.trim().replace(\"/\", \"-\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Creates duke.task.Deadline duke.task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param taskDescription description of the duke.task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return duke.task.Deadline duke.task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @throws DukeException if the format of the duke.task description is wrong"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static Deadline create(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!taskDescription.contains(\"/by\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"Please include \u0027/by\u0027 in front of the deadline\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String[] nameTimePair \u003d taskDescription.split(\" /by\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String taskName \u003d nameTimePair[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String taskDateTime \u003d nameTimePair[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new Deadline(taskName, taskDateTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static Deadline create(String taskName, String taskTime) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new Deadline(taskName, taskTime);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Converts string date/time in LocalDate and LocalTime"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Stores them into the LocalDate and LocalTime variable"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param taskDateTime the string representation of the time and date"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @throws DukeException if the format of the duke.task date/time is wrong"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private void parseTime(String taskDateTime) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String[] dateTime \u003d taskDateTime.replace(\"/\", \"-\").split(\" \", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.byDate \u003d LocalDate.parse(dateTime[0]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"please enter a valid yyyy-mm-dd format\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (dateTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                this.byTime \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"please enter a valid HH:MM format\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *  * return the summarised form of the duke.task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return String format of the summarised details of the duke.task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String symbol \u003d isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (byTime !\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"[%s][%s] %s (by: %s %s)\\n\", tag, symbol, taskName,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")), byTime.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"[%s][%s] %s (by: %s)\\n\", tag, symbol, taskName,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * return the summarised form of the duke.task in the format to be saved"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return String format of the summarised details of the duke.task to be saved"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String safeFileFormat() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (byTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"%s | %d | %s | %s \\n\", tag, done, taskName, byDate.toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"%s | %d | %s | %s %s \\n\", tag, done, taskName, byDate.toString(), byTime.toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 98
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Date of the duke.task **/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected LocalDate atDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Time of the duke.task **/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected LocalTime atTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Event(String taskName, String taskDateTime) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.tag \u003d \"E\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        parseTime(taskDateTime.trim().replace(\"/\", \"-\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Creates duke.task.Event duke.task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param taskDescription description of the duke.task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return duke.task.Event duke.task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @throws DukeException if the format of the duke.task description is wrong"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static Event create(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!taskDescription.contains(\"/at\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"Please include \u0027/at\u0027 in front of the event time period\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String[] nameTimePair \u003d taskDescription.split(\" /at\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String taskName \u003d nameTimePair[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String taskTime \u003d nameTimePair[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new Event(taskName, taskTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static Event create(String taskName, String taskTime) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new Event(taskName, taskTime);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Converts string date/time in LocalDate and LocalTime"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Stores them into the LocalDate and LocalTime variable"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param taskDateTime the string representation of the time and date"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @throws DukeException if the format of the duke.task date/time is wrong"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private void parseTime(String taskDateTime) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assert taskDateTime !\u003d null : \"taskDateTime cannot be empty\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String[] dateTime \u003d taskDateTime.replace(\"/\", \"-\").split(\" \", 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.atDate \u003d LocalDate.parse(dateTime[0]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"please enter a valid yyyy-mm-dd format\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (dateTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                this.atTime \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"please enter a valid HH:MM format\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * return the summarised form of the duke.task"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return String format of the summarised details of the duke.task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String symbol \u003d isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (atTime !\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"[%s][%s] %s (at: %s %s)\\n\", tag, symbol, taskName,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")), atTime.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"[%s][%s] %s (at: %s)\\n\", tag, symbol, taskName,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * return the summarised form of the duke.task in the format to be saved"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return String format of the summarised details of the duke.task to be saved"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String safeFileFormat() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (atTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"%s | %d | %s | %s \\n\", tag, done, taskName, atDate.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"%s | %d | %s | %s %s \\n\", tag, done, taskName, atDate.toString(), atTime.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 107
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Alphabet tag for the respective duke.task **/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Boolean variable to check if the duke.task is completed **/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Name of the duke.task **/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *Class constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Mark the duke.task as completed"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String getTaskName(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Prints add duke.task message for the current duke.task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String printAddTask() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this duke:\\n  %s\", this.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Prints delete duke.task message for the current duke.task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String printDeleteTask() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return String.format(\"Noted. I\u0027ve removed this duke:\\n %s\", this.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * get the string format of the stored duke.task in the hard drive"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return String of the stored duke.task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String safeFileFormat() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Check if input description is the same as duke.task description"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return Boolean on whether the description matches"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean fitsTask(String description) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskName.contains(description);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 71
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.utility.Statistic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** ArrayList used store tasks **/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** boolean value to check if there is any more updates to the tasks by the user **/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private boolean isUpdating \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Statistic statistic;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *Class constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public TaskList(Statistic statistic) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.statistic \u003d statistic;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Set the indexed duke.task as completed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param index index The index of the duke.task in the taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @throws DukeException  If the index is not within the range of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String doneTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (index \u003c 0 || index \u003e taskList.size() - 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"please give a correct duke.task index\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Task doneTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if(doneTask.isDone){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"This duke.task has already been completed idiot\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        doneTask.complete();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        statistic.addCompletedTask(doneTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String output \u003d \"Nice! I\u0027ve marked this duke.task as done:\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        output +\u003d String.format(\"  %s\\n\", doneTask.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * List and prints all the duke.task in taskList"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String listTask() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        StringBuilder outputString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            outputString.append(String.format(\"%d. %s\\n\", i + 1, taskList.get(i).toString()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(outputString);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return outputString.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Add duke.task into the taskList"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param newTask The duke.task to be added into taskList"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param print If true, prints out the details of the duke.task being added into the list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String addTask(Task newTask, Boolean print) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String outputString \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (print) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            outputString +\u003d newTask.printAddTask();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            outputString +\u003d printNumberOfTask(taskList.size());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return outputString;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Find and print out duke.task that matches to the description"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param description of the duke.task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String findTask(String description) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        ArrayList\u003cTask\u003e taskMatchingDescription \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        StringBuilder outputString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (task.fitsTask(description)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                taskMatchingDescription.add(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        for (int i \u003d 0; i \u003c taskMatchingDescription.size(); i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            outputString.append(String.format(\"%d. %s\\n\", i + 1, taskMatchingDescription.get(i).toString()));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return outputString.toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * return the size of the taskList"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return size of the taskList"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * set isUpdating to false"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setTaskListNotUpdating() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.isUpdating \u003d false;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * get the corresponding duke.task from taskList"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param index The index of the duke.task in the taskList"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return The duke.task with the corresponding index from the taskList"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * delete the duke.task with the corresponding index in taskList"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param index The index of the duke.task in the taskList"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @throws DukeException  If the index is not within the range of tasks."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String outputString \u003d \"\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(index);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (index \u003c -2 || index \u003e taskList.size() - 1) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"please give a correct task index\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if( index \u003d\u003d -2){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            removeAll();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return \"removed all content bitch\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            outputString +\u003d taskList.get(index).printDeleteTask() + \"\\n\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            taskList.remove(index);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            outputString +\u003d printNumberOfTask(taskList.size());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return outputString;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String getStatistic(){"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return statistic.getStatisticSummary();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void removeAll(){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        while(!taskList.isEmpty()){"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            taskList.remove(0);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * prints the update for the number of tasks in the list"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param i The number of tasks in the list"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    static String printNumberOfTask(int i) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return String.format(\"Now you have %d tasks in the list.\", i);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 168
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *Class constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.tag \u003d \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String symbol \u003d isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return String.format(\"[%s][%s] %s\\n\", tag, symbol, taskName);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String safeFileFormat() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return String.format(\"%s | %d | %s \\n\", tag, done, taskName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 24
    }
  },
  {
    "path": "src/main/java/duke/utility/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** duke.task.TaskList class that stores and deals with the tasks **/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *Class constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Parser(TaskList taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Parse the inputs and carry out the respective commands"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param inputs the array of duke.command and taskDescription obtain from user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String parseCommand(String[] inputs) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assert inputs !\u003d null : \"inputs cannot be empty\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Commands command \u003d getCommand(inputs[0]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String taskDescription \u003d getTaskDescription(inputs,command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            case STATISTIC: {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                return new IStatistic(taskList, taskDescription).execute();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            case DONE: {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                return new Done(taskList, taskDescription).execute();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            case LIST: {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                return new List(taskList, taskDescription).execute();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            case BYE: {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                return new Bye(taskList, taskDescription).execute();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            case FIND: {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                return new Find(taskList, taskDescription).execute();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            case TODO: {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                return new ITodo(taskList, taskDescription).execute();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            case DEADLINE: {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                return new IDeadline(taskList, taskDescription).execute();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            case EVENT: {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                return new IEvent(taskList, taskDescription).execute();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            case DELETE: {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                return new Delete(taskList, taskDescription).execute();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new DukeException(\"smlj??????\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * convert string duke.command into enum Command"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param commandInput duke.command from the user"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Commands getCommand(String commandInput) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assert commandInput !\u003d null : \"commandInput cannot be null\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Commands command;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            command \u003d Commands.valueOf(commandInput.toUpperCase());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            command \u003d Commands.UNKNOWN;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String getTaskDescription(String[] inputs, Commands command) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (inputs.length \u003e 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            taskDescription \u003d inputs[1];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else if (inputs[0].equals(\"todo\") || inputs[0].equals(\"deadline\") || inputs[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(String.format(\"The description of %s cannot be empty\", command.toString()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 98
    }
  },
  {
    "path": "src/main/java/duke/utility/Statistic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.temporal.IsoFields;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Statistic {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private HashMap\u003cInteger,ArrayList\u003cString\u003e\u003e weeksInYear;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Statistic(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        weeksInYear \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void addCompletedTask(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LocalDate now \u003d LocalDate.now();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int weekNum \u003d now.get(IsoFields.WEEK_OF_WEEK_BASED_YEAR);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String taskDescription \u003d task.getTaskName();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        weeksInYear.computeIfAbsent(weekNum, k -\u003e new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        weeksInYear.get(weekNum).add(taskDescription);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void addPastTask(String taskName, int weekNum) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assert weekNum \u003e\u003d 0 : \"file format is wrong\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LocalDate now \u003d LocalDate.now();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        weeksInYear.computeIfAbsent(weekNum, k -\u003e new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        weeksInYear.get(weekNum).add(taskName);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String getStatisticSummary(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LocalDate now \u003d LocalDate.now();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int weekNum \u003d now.get(IsoFields.WEEK_OF_WEEK_BASED_YEAR);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if(weeksInYear.containsKey(weekNum-1)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            ArrayList\u003cString\u003e week \u003d weeksInYear.get(weekNum - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            int numOfTask \u003d week.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            StringBuilder output \u003d new StringBuilder(String.format(\"task completed last week: %d\\n\", numOfTask));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            for (String task : week) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                output.append(task).append(\"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return output.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return \"no task done past week\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String safeFileFormat(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        StringBuilder saveFormat \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        for(int i\u003d0;i\u003c54;i++){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if(weeksInYear.containsKey(i)){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                StringBuilder temp \u003d new StringBuilder(String.format(\"#D#%d\\n\", i));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                for(String task : weeksInYear.get(i)){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    temp.append(String.format(\"%s\\n\", task));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                saveFormat.append(temp);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return saveFormat.toString();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void test(){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        for(int i\u003d0;i\u003c60;i++){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if(weeksInYear.containsKey(i)){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                System.out.println(i+\"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                for(String task : weeksInYear.get(i)){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    System.out.println(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wayne987": 79
    }
  },
  {
    "path": "src/main/java/duke/utility/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** duke.task.TaskList class that stores and deals with the tasks **/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Statistic statistic;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Path to where the file is stored **/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Path storageTaskPath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Path storageStatisticPath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *Class constructor"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @throws DukeException If the file is unable to be opened"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Storage(TaskList taskList, Statistic statistic) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.statistic \u003d statistic;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        storageTaskPath \u003d Paths.get(\".\", \"data\", \"test.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        storageStatisticPath \u003d Paths.get(\".\",\"data\",\"statistic.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        getPath(\"test.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        getPath(\"statistic.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        loadTaskFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        loadStatisticFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private void getPath(String fileName){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Path path \u003d Paths.get(\".\", \"data\", fileName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Path parentPath \u003d path.getParent();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Files.createDirectories(parentPath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                Files.createFile(path);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            System.out.println(\"unable to read file \" + e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Open and read the stored tasks from the hard drive"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * add the stored tasks to taskList"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @throws DukeException If the file is unable to be opened"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private void loadTaskFile() throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            BufferedReader bf \u003d new BufferedReader(new FileReader(storageTaskPath.toString()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String task \u003d bf.readLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String[] inputs;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            while (task !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                inputs \u003d task.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                String taskType \u003d inputs[0];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    case \"T\": {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        newTask \u003d new Todo(inputs[2]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    case \"D\": {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        newTask \u003d Deadline.create(inputs[2], inputs[3]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    case \"E\": {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        newTask \u003d Event.create(inputs[2], inputs[3]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    default: {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        throw new DukeException(\"smlj??????\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    if (inputs[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        newTask.complete();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    taskList.addTask(newTask, false);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    task \u003d bf.readLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"unable to load file\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private void loadStatisticFile() throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            BufferedReader bf \u003d new BufferedReader(new FileReader(storageStatisticPath.toString()));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String task \u003d bf.readLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String[] inputs;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            int weekNum \u003d -1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            while (task !\u003d null) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                inputs \u003d task.split(\"#D#\", 2);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                if (inputs.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    weekNum \u003d Integer.parseInt(inputs[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    statistic.addPastTask(inputs[0], weekNum);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                task \u003d bf.readLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch(IOException e){"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"unable to open file\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Write the stored tasks in taskList into a file stored in the hard drive"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @throws DukeException If the tasks are unable to be saved into the file"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void saveTaskFile() throws DukeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            FileWriter fwTask \u003d new FileWriter(storageTaskPath.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                fwTask.write(taskList.getTask(i).safeFileFormat());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            fwTask.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            FileWriter fwStatistic \u003d new FileWriter(storageStatisticPath.toString());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            fwStatistic.write(statistic.safeFileFormat());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            fwStatistic.close();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"unable to save file\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 147
    }
  },
  {
    "path": "src/main/java/duke/utility/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Scanner object used to receive inputs from the user **/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Line separator to beautify duke bot **/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private String line \u003d \"____________________________\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        + \"____________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Logo for duke bot **/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private String logo \u003d \"****** ****** ****** ******\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        + \"   *   *      *      *\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        + \"   *   ****** ****** ******\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        + \"*  *   *      *      *\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        + \"***    ****** *      *\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *Class constructor"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Prints loading error message"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(\"******LOADING ERROR******\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Prints saving error message"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void showSavingError() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(\"******SAVING ERROR******\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Prints line separator"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Prints Logo"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Prints the start of the program"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void printStarting() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(\"My name is\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(\"What do you want?\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Reads the in all the inputs"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Splits the inputs into duke.command, duke.task description and if there is Time/Date for the duke.task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return An array of strings containing the duke.command, duke.task description and if there is Time/Date for the duke.task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String[] readCommand() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return sc.nextLine().trim().split(\" \", 2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 76
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         spacing\u003d\"20\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         xmlns:fx\u003d\"http://javafx.com/fxml/\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c/fx:root\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wayne987": 18
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#ff7c7c\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"600\" prefWidth\u003d\"388\" spacing\u003d\"10\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "              style\u003d\" -fx-background-image: url(\u0027/images/background.jpg\u0027)\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wayne987": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deadline cook book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deadline cook book Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "event cook book /at Monday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "event cook book Monday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wayne987": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "wayne987": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "if ! javac -cp /Users/chanwawai\\ 1/ip/src -Xlint:none -d ../bin /Users/chanwawai\\ 1/ip/src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 31,
      "wayne987": 3
    }
  }
]
