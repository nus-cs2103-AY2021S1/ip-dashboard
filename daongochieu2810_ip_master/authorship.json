[
  {
    "path": "data/save_file.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "todo asdas 0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "todo read book 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "todo shower 0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline ip /by 2020-08-12 1200   0"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.commands.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private int getNumTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.tasks.getTaskList().size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Distributes each command based on its type, then return a string that will be shown to the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param commandType"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param tokens"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return message to user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    protected String furtherProcessing(Commands commandType, String[] tokens, boolean isLoaded) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Task parsedTask \u003d new Task(\"\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if(commandType \u003d\u003d Commands.DEADLINE || commandType \u003d\u003d Commands.EVENT || commandType \u003d\u003d Commands.TODO) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            parsedTask \u003d parser.parseCommand(commandType, tokens, isLoaded, getNumTasks());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else if(commandType \u003d\u003d Commands.DELETE) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            int markNumber \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            storage.saveTasks(this.tasks.getTaskList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String result \u003d tasks.deleteTask(markNumber, getNumTasks());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            storage.saveTasks(this.tasks.getTaskList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else if(commandType \u003d\u003d Commands.DONE) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            int markNumber \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String result \u003d tasks.doneTask(markNumber);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            storage.saveTasks(this.tasks.getTaskList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }  else if(commandType \u003d\u003d Commands.LIST) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String[] extractedData \u003d parser.extractData(isLoaded, tokens);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String content \u003d extractedData[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            DateTimeHelper dtHelper \u003d DateTimeHelper.processDateTime(content);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if (dtHelper !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                LocalDate deadline \u003d dtHelper.getDate();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                return tasks.filteredTaskList(deadline);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                throw new DukeException(\"Wrong format\\n    Your date and time(optional) should be in this format:\\n      yyyy-mm-dd HHmm\\n    e.g: 2019-10-15 1800 or 2019-10-15\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else if(commandType \u003d\u003d Commands.FIND) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return tasks.findTasks(tokens);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        else if(commandType \u003d\u003d Commands.BYE || commandType \u003d\u003d Commands.HELP) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeException(\"Wrong format of command \" + \"\u0027\" + commandType.getAction() + \"\u0027\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if(!parsedTask.getContent().equals(\"\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.tasks.addTask(parsedTask);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        storage.saveTasks(this.tasks.getTaskList());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return parsedTask.getUiOutput();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Strips trailing whitespaces and tokenizes each command before further processing"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return message to user"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    protected String processedCommand(String command, boolean isLoaded) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        command \u003d command.strip();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if(command.equals(\"\")) return \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] tokens \u003d command.split(\" \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return furtherProcessing(Commands.valueOf(tokens[0].toUpperCase()), tokens, isLoaded);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeException(\"OOPS!!! CAN YOU PLEASE TYPE SOMETHING MEANINGFUL?\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Reads input and return output to the user"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    protected void run() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Ui.printDialog(\"Hello! I\u0027m the Riddler. Type \u0027help\u0027 if you know nothing HAHAHA\\n    Your tasks will be saved at /data\\n    What can WE do for you?\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        ArrayList\u003cString\u003e savedTasks \u003d storage.loadSavedTasks();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if(savedTasks.size() \u003e 0 \u0026\u0026 savedTasks.get(0).equals(\"000\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Ui.printDialog(\"This is the first time you use Duke!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                for(String task : savedTasks) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    processedCommand(task, true);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                Ui.printDialog(\"Something wrong happened while loading saved tasks\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String content \u003d sc.nextLine();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            content \u003d content.strip();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if(content.equals(Commands.BYE.getAction())) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                Ui.printDialog(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                break;//exit the program"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if(content.equals(Commands.HELP.getAction())) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                String res \u003d \"\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                for(Commands command: Commands.values()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    res +\u003d command.getAction() + \": \" + command.getDescription();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    res +\u003d \"\\n    \";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                Ui.printDialog(res);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            else if(content.equals(Commands.LIST.getAction())) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                Ui.printStoredTasks(this.tasks.getTaskList());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    String result \u003d processedCommand(content, false);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    if (!result.equals(\"\")) Ui.printDialog(result);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    Ui.printDialog(e.getMessage());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Duke dk \u003d new Duke(\"data/save_file.txt\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        dk.run();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 152,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/commands/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    LIST(\"list\", \"List all tasks, pass date if you want to list specific deadlines/events e.g list \"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    BYE(\"bye\", \"Exit the program\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    DONE(\"done\", \"Mark a duke.task as done e.g done 1 \u003d duke.task 1 is done\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    DEADLINE(\"deadline\", \"Add a deadline with date and time(optional) e.g deadline buy smth /by 2020-12-20 1800\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    EVENT(\"event\", \"Add an event with date and time(optional) e.g event buy smth /at 2020-12-20 1800\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    TODO(\"todo\", \"Add a todo\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    DELETE(\"delete\", \"Delete a duke.task\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    HELP(\"help\", \"For dummies, like YOU\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    FIND(\"find\", \"Find tasks with keywords e.g find book\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String action;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getAction() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.action;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getDescription() { return this.description; }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Commands(String action, String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.action \u003d action;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 24
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.commands.Commands;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static Todo stringToTodo(String content, boolean isLoaded, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Todo todoTask \u003d new Todo(content);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if(isLoaded \u0026\u0026 isDone) todoTask.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return todoTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static Deadline stringToDeadline(String content, LocalDate deadline, String exactTime, String deadlineStr, boolean isLoaded, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Deadline deadlineTask \u003d new Deadline(content, deadline, exactTime, deadlineStr);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if(isLoaded \u0026\u0026 isDone) deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return deadlineTask;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static Event stringToEvent(String content, LocalDate deadline, String exactTime, String deadlineStr, Boolean isLoaded, Boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Event eventTask \u003d new Event(content, deadline, exactTime, deadlineStr);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if(isLoaded \u0026\u0026 isDone) eventTask.markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return eventTask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Extracts content and deadline from tokens"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param tokens"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return content and deadline as strings"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String[] extractData(boolean isLoaded, String[] tokens) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String deadlineStr \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        int tokens_limit \u003d isLoaded ? tokens.length - 1 : tokens.length; //saved items has a final token which decides its completion status"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 1;i \u003c tokens_limit; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if(tokens[i].length() \u003d\u003d 0) continue;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if(tokens[i].charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                for(int j \u003d i + 1; j \u003c tokens_limit;j++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    deadlineStr +\u003d tokens[j] + \" \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            content +\u003d tokens[i] + \" \";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return new String[]{content, deadlineStr};"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Parses task strings"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param commandType"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param tokens"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param numTasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return parsed tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeInvalidArgumentException"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Task parseCommand(Commands commandType, String[] tokens, boolean isLoaded, int numTasks) throws DukeException, DukeInvalidArgumentException{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String result_prefix \u003d \"Got it. I\u0027ve added this task:\\n      \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String result_subfix \u003d \"Now you have \" + (numTasks + 1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] extractedData \u003d extractData(isLoaded, tokens);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String content \u003d extractedData[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String deadlineStr \u003d extractedData[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        boolean isDone \u003d tokens[tokens.length - 1].equals(\"1\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        LocalDate deadline \u003d LocalDate.now();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String exactTime \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        //Error handling"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if(deadlineStr.equals(\"\") \u0026\u0026 (commandType \u003d\u003d Commands.DEADLINE || commandType \u003d\u003d Commands.EVENT))"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeInvalidArgumentException(\"NOT ENOUGH INFORMATION!!!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if(commandType \u003d\u003d Commands.DEADLINE || commandType \u003d\u003d Commands.EVENT) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            DateTimeHelper dtHelper \u003d DateTimeHelper.processDateTime(deadlineStr);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if (dtHelper !\u003d null) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                deadline \u003d dtHelper.getDate();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                String resTime \u003d dtHelper.processTimeStr();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                if (resTime.equals(\"success\")) exactTime \u003d dtHelper.getTime();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                throw new DukeException(\"Wrong format\\n    Your date and time(optional) should be in this format:\\n      yyyy-mm-dd HHmm\\n    e.g: 2019-10-15 1800 or 2019-10-15\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        content \u003d content.strip();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if(content.equals(\"\")) throw new DukeException(\"Description cannot be empty PLEASE!!!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            case DEADLINE: {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                Deadline task \u003d stringToDeadline(content, deadline, exactTime, deadlineStr, isLoaded, isDone);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                task.setUiOutput(result_prefix + task.returnStringForm() + \"\\n    \" + result_subfix);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            case EVENT: {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                Event task \u003d stringToEvent(content, deadline, exactTime, deadlineStr, isLoaded, isDone);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                task.setUiOutput(result_prefix + task.returnStringForm() + \"\\n    \" + result_subfix);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                Todo task \u003d stringToTodo(content, isLoaded, isDone);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                task.setUiOutput(result_prefix + task.returnStringForm() + \"\\n    \" + result_subfix);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 108
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.storage.LoadData;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.storage.SaveData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public ArrayList\u003cString\u003e loadSavedTasks() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return LoadData.getSavedTasks(path);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        SaveData.saveData(path,data);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 19
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void addTaskStr(String task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Task newTask \u003d new Task(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Marks task as done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param markNumber"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return status string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeInvalidArgumentException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String doneTask(int markNumber) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Task marked \u003d taskList.get(markNumber - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            marked.markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"Nice! I\u0027ve marked this task as done:\\n      \" + marked.returnStringForm();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeInvalidArgumentException(\"Invalid number\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Deletes task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param markNumber"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param numTasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return status string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeInvalidArgumentException"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String deleteTask(int markNumber, int numTasks) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Task marked \u003d taskList.get(markNumber - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.taskList.remove(markNumber - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"Noted. I\u0027ve removed this task:\\n      \" + marked.returnStringForm() + \"\\n    Now you have \" + numTasks + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeInvalidArgumentException(\"Invalid number\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Filters tasks based on deadline"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param deadline"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return message to user"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String filteredTaskList(LocalDate deadline) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String res \u003d \"Here are the matching tasks in your list:\\n    \";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 0;i \u003c taskList.size();i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if(task instanceof Deadline) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                if(((Deadline)task).getDeadline().compareTo(deadline) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    res +\u003d ((i + 1) + \".\" + task.returnStringForm());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    if (i \u003c taskList.size() - 1) res +\u003d \"\\n    \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } else if(task instanceof Event) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                if(((Event)task).getTime().compareTo(deadline) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    res +\u003d ((i + 1) + \".\" + task.returnStringForm());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    if (i \u003c taskList.size() - 1) res +\u003d \"\\n    \";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Filters tasks based on keywords"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param tokens"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return matched tasks"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String findTasks(String[] tokens) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String keyword \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        int numMatch \u003d 0;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String res \u003d \"Here are the matching tasks in your list:\\n    \";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 1;i \u003c tokens.length;i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            keyword +\u003d tokens[i];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 0;i \u003c taskList.size();i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if(task.getContent().contains(keyword)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                numMatch++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                res +\u003d ((i + 1) + \".\" + task.returnStringForm());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                if (i \u003c taskList.size() - 1) res +\u003d \"\\n    \";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if(numMatch \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"Nothing matches. Watchout for typos\\n\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 109
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static void printDialog(String content) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        System.out.println(\"    ----------------------------------------\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        System.out.println(\"    \" + content + \"\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        System.out.println(\"    ----------------------------------------\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Prints all tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param taskStorage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static void printStoredTasks(ArrayList\u003cTask\u003e taskStorage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String result \u003d \"Here are the tasks in your list:\\n    \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 0; i \u003c taskStorage.size(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            result +\u003d ((i + 1) + \".\" + taskStorage.get(i).returnStringForm());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if(i \u003c taskStorage.size() - 1) result +\u003d \"\\n    \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        printDialog(result);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class DukeInvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public DukeInvalidArgumentException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 7
    }
  },
  {
    "path": "src/main/java/duke/helper/DateTimeHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class DateTimeHelper {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private LocalDate fullDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String fullTime \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String dateStr \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String timeStr \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public DateTimeHelper(String deadline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.dateTime \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Format time as ab:cd pm/am"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return time"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String processTimeStr() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            int time \u003d Integer.parseInt(timeStr);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            int hours \u003d (time / 100) % 12;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            int minutes \u003d time % 100;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String identifier \u003d time / 100 \u003e 12 ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if (time / 100 \u003d\u003d 12) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                hours \u003d 12;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                identifier \u003d \"pm\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            else if (time / 100 \u003d\u003d 24)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                identifier \u003d \"am\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String paddingForHour \u003d hours \u003c 10 ? \"0\" : \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String paddingForMinute \u003d minutes \u003c 10 ? \"0\" : \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.fullTime \u003d paddingForHour + hours + \":\" + paddingForMinute + minutes + identifier;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"success\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Parse date string"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return date"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String processDateStr() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.fullDate \u003d LocalDate.parse(dateStr);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"success\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Obtains date and time strings from tokens"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return status message"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String processInput() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String[] tokens \u003d this.dateTime.split(\" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            for (String token : tokens) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                if (!token.equals(\"\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    if (dateStr.equals(\"\")) dateStr \u003d token;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                        timeStr \u003d token;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"success\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Format date"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return string representation of date"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static String getStringRep(LocalDate date) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.fullDate;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        //return date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM)) + \" \" + fullTime;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Processes input"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return DateTimeHelper object"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static DateTimeHelper processDateTime(String input) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        DateTimeHelper dtHelper \u003d new DateTimeHelper(input.strip());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String result \u003d dtHelper.processInput();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String resDate \u003d dtHelper.processDateStr();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (!result.equals(\"error\") \u0026\u0026 !resDate.equals(\"error\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return dtHelper;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.fullTime;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 112
    }
  },
  {
    "path": "src/main/java/duke/storage/LoadData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class LoadData {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Loads saved tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param path"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return commands"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static ArrayList\u003cString\u003e getSavedTasks(String path) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        ArrayList\u003cString\u003e savedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            File savedFile \u003d new File(path);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Scanner scanner \u003d new Scanner(savedFile);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                String taskData \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                //System.out.println(taskData);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                savedTasks.add(taskData);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            savedTasks.add(\"000\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            //e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return savedTasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 30
    }
  },
  {
    "path": "src/main/java/duke/storage/SaveData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class SaveData {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Converts saved tasks to string commands"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private static String taskToCommand(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String commands \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(Task task : tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String command \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String status \u003d task.getStatus() ? \" 1\" : \" 0\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if(task instanceof Deadline) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                command \u003d \"deadline \" + task.getContent() + \" /by \" + ((Deadline)task).getDeadlineStr();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } else if(task instanceof Event) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                command \u003d \"event \" + task.getContent() + \" /at \" + ((Event)task).getDealineStr();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } else if(task instanceof Todo) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                command \u003d \"todo \" + task.getContent();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            commands +\u003d command + status + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return commands;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Saves current tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param path"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param data"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static void saveData(String path, ArrayList\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        //System.out.println(\"hello\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            File file \u003d new File(path);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if(!file.exists()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String commands \u003d taskToCommand(data);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            //System.out.println(duke.commands);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            writer.write(commands);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 58
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private LocalDate deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String exactTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String deadlineStr;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Deadline(String content, LocalDate deadline, String exactTime, String deadlineStr) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.exactTime \u003d exactTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.deadlineStr \u003d deadlineStr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public LocalDate getDeadline() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getDeadlineStr() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.deadlineStr;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String returnStringForm() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return \"[D]\" + super.returnStringForm() + \"( by: \" + DateTimeHelper.getStringRep(this.deadline) + \" \" + this.exactTime + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String exactTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String deadlineStr;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Event(String content, LocalDate time, String exactTime, String deadlineStr) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.exactTime \u003d exactTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.deadlineStr \u003d deadlineStr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getDealineStr() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.deadlineStr;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String returnStringForm() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return \"[E]\" + super.returnStringForm() + \"( at: \" + DateTimeHelper.getStringRep(time) + \" \" + this.exactTime + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String uiOutput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Task(String content) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void setUiOutput(String uiOutput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.uiOutput \u003d uiOutput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getUiOutput() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.uiOutput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public boolean getStatus() { return this.isDone; }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getContent() { return this.content; }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String returnStringForm() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return \"[\" + getStatusIcon() +\"] \" + this.content;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Todo(String content) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String returnStringForm() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return \"[T]\" + super.returnStringForm();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 12
    }
  },
  {
    "path": "src/test/java/duke/dukehelper/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.commands.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    class Params {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Commands commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] tokens;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        boolean isLoaded;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        int numTasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Params(Commands commandType, String[] tokens, boolean isLoaded, int numTasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.tokens \u003d tokens;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.isLoaded \u003d isLoaded;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.numTasks \u003d numTasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void parseCommand_listOfDeadlines_correctParsing() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Params[] listOfDeadlines \u003d new Params[]{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                new Params(Commands.DEADLINE, new String[]{\"deadline\",\"someContent\",\"/by\",\"2020-12-12\", \"1900\"},false, 5),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                new Params(Commands.DEADLINE, new String[]{\"deadline\",\"someContent\",\"/by\",\"2000-10-09\", \"2400\"},false, 5),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                new Params(Commands.DEADLINE, new String[]{\"deadline\",\"someContent\",\"/by\",\"1926-09-02\", \"0000\"},false, 5),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                new Params(Commands.DEADLINE, new String[]{\"deadline\",\"someContent\",\"/by\",\"2008-04-11\", \"1600\"},false, 5),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                new Params(Commands.DEADLINE, new String[]{\"deadline\",\"someContent\",\"/by\",\"1020-07-07\", \"0800\"},false, 5)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Parser parse \u003d new Parser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 0;i \u003c listOfDeadlines.length;i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Params params \u003d listOfDeadlines[i];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            LocalDate expectedDate \u003d LocalDate.parse(params.tokens[3]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Task result \u003d parse.parseCommand(params.commandType, params.tokens, params.isLoaded, params.numTasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            assertEquals(expectedDate.toString(), ((Deadline)result).getDeadline().toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            assertEquals(params.tokens[1], result.getContent());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 45
    }
  },
  {
    "path": "src/test/java/duke/helper/DateTimeHelperTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class DateTimeHelperTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void processTimeStr_listOfTimeStr_correctConversion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] listOfTests \u003d new String[]{\"2020-12-20 1900\", \"2021-11-30 2400\",\"2000-01-01 2400\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                ,\"1999-11-20 1300\",\"1000-05-20 1000\",\"2000-12-20 1100\"};"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] expectedResults \u003d new String[]{\"07:00pm\", \"00:00am\", \"00:00am\" ,\"01:00pm\", \"10:00am\", \"11:00am\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 0;i \u003c listOfTests.length;i++) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            DateTimeHelper dateTimeHelper \u003d new DateTimeHelper(listOfTests[i]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            dateTimeHelper.processInput();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            dateTimeHelper.processTimeStr();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            assertEquals(dateTimeHelper.getTime(), expectedResults[i]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void processDateStr_invalidInput_errorMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] listOfTests \u003d new String[]{\"2020-14-20 1900\", \"2021-20-30 2400\",\"2000-45-01 2400\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                ,\"1999-20-20 1300\",\"1000-20-20 1000\",\"3000-34-20 1100\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 0;i \u003c listOfTests.length;i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            DateTimeHelper dateTimeHelper \u003d new DateTimeHelper(listOfTests[i]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            dateTimeHelper.processInput();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            assertEquals(dateTimeHelper.processDateStr(), \"error\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 29
    }
  },
  {
    "path": "text-ui-test/data/save_file.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline go eat /by 2020-10-20   2400  1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "event huhuh /at        1999-12-01   1200  1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "todo huhuhuhuhu 0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline study /by   1000-01-20  0500  0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05  0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05  0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05  0"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05  0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05  0"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline             go eat              /by 2020-10-20   2400"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "event huhuh     /at        1999-12-01   1200"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "todo        huhuhuhuhu"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "return something duh"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "masaka  hahahha kqjdnska"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline study /by   1000-01-20  0500"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "list 1000-01-20"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "list 2020-12-05"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 18
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "dir /s /B ..\\src\\main\\java\\duke\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 2,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 1,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\commands\\Commands.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\dukehelper\\Parser.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\dukehelper\\Storage.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\dukehelper\\TaskList.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\dukehelper\\Ui.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\exception\\DukeException.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\exception\\DukeInvalidArgumentException.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\helper\\DateTimeHelper.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\storage\\LoadData.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\storage\\SaveData.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\task\\Deadline.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\task\\Event.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\task\\Task.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\task\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 15
    }
  }
]
