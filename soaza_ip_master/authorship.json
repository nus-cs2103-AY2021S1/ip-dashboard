[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "### To-Do List "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "This application features a fully-functional to-do list that assists the user with storing their tasks, and allow them to delete it after they have completed."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "### `todo` - creates a to-do task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "This command creates a to-do task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "` todo borrow book`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "` Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "       [T][DONE] borrow book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "soaza": 10,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public LocalDate deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Deadline(String task, boolean complete,LocalDate deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(task, complete);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String stringify(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "        if(this.complete \u003d\u003d true) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[D][✓] \" + this.task +\"(by:\" +this.deadline+\")\" ;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[D][✗] \" + this.task +\"(by:\" +this.deadline+\")\" ;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "        ArrayList\u003cTask\u003e arrList\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "        readTasks(arrList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "        String greeting \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "soaza"
        },
        "content": "                \"Hello! I\u0027m Duke. What can I do for you?\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "soaza"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "soaza"
        },
        "content": "        String userinput \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "soaza"
        },
        "content": "        while(!userinput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "soaza"
        },
        "content": "            System.out.println(\"Input:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "soaza"
        },
        "content": "            userinput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "soaza"
        },
        "content": "            //if done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "soaza"
        },
        "content": "            if (userinput.contains(\"done\")){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "soaza"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    if (userinput.length() \u003c 6) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(userinput.substring(5)) - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    if (taskNumber \u003e\u003d arrList.size()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        throw new DukeArrayException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    Task taskCompleted \u003d arrList.get(taskNumber);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    taskCompleted.complete \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \"[✓] \" + taskCompleted.task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }catch(DukeArrayException e){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    System.out.println(\"Number cannot be longer than list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }catch(DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    System.out.println(\"Must include number after \u0027done\u0027.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } else if (userinput.equals(\"list\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    for (int i \u003d 0; i \u003c arrList.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        System.out.println((i+1)+\".\"+arrList.get(i).stringify());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    //add todo"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }else if(userinput.contains(\"delete\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "soaza"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    if (userinput.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(userinput.substring(7)) - 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    if (taskNumber \u003e arrList.size()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        throw new DukeArrayException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    Task taskDeleted \u003d arrList.get(taskNumber);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    arrList.remove(taskNumber);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    System.out.println(\"I have removed the task:\\n\" + taskDeleted.stringify() + \"\\n\" + \"Now you have \" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            arrList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "soaza"
        },
        "content": "                } catch (DukeArrayException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    System.out.println(\"Number cannot be longer than the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "soaza"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    System.out.println(\"Must include number after \u0027delete\u0027\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "soaza"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    System.out.println(\"Must include number after \u0027delete\u0027\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } else if(userinput.contains(\"todo\")){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        if (userinput.length() \u003c 5) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            throw new DukeException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        String description \u003d userinput.substring(5);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        toDo task \u003d new toDo(description, false);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        arrList.add(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        String reply \u003d \"I have added this task:\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "soaza"
        },
        "content": "                                + task.stringify() + \"\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "soaza"
        },
        "content": "                                + \"Now you have \" + arrList.size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        System.out.println(reply);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }catch(DukeException e){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        System.out.println(\"Must include description for todo\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "soaza"
        },
        "content": "                //add deadline"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "soaza"
        },
        "content": "                else if(userinput.contains(\"deadline\")){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        if (!userinput.contains(\"/by\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            throw new DukeException();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            int index \u003d userinput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            String deadlineDateString \u003d userinput.substring(index + 4);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            System.out.println(deadlineDateString);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            LocalDate deadlineDate \u003d LocalDate.parse(deadlineDateString);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            Deadline deadline \u003d new Deadline(userinput.substring(9, index), false, deadlineDate);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            arrList.add(deadline);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            String reply \u003d \"I have added this task:\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "soaza"
        },
        "content": "                                    + deadline.stringify() + \"\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "soaza"
        },
        "content": "                                    + \"Now you have \" + arrList.size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            System.out.println(reply);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }catch(DateTimeParseException e){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        System.out.println(\"Please input date in the format: YYYY-MM-DD\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }catch(DukeException e){"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        System.out.println(\"deadline must include \u0027/by\u0027\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "soaza"
        },
        "content": "                //add event"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "soaza"
        },
        "content": "                else if(userinput.contains(\"event\")){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        if (!userinput.contains(\"/at\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            throw new DukeException();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            int index \u003d userinput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            String eventDateString \u003d userinput.substring(index + 4);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            LocalDate eventDate \u003d LocalDate.parse(eventDateString);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            Event event \u003d new Event(userinput.substring(6, index), false, eventDate);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            arrList.add(event);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            String reply \u003d \"I have added this task:\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "soaza"
        },
        "content": "                                    + event.stringify() + \"\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "soaza"
        },
        "content": "                                    + \"Now you have \" + arrList.size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            System.out.println(reply);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }catch(DateTimeParseException e){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        System.out.println(\"Please input date in the format: YYYY-MM-DD\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }catch(DukeException e){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        System.out.println(\"event must include \u0027/at\u0027\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "soaza"
        },
        "content": "                else if(!userinput.contains(\"bye\")){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    System.out.println(\"Please input:\\n\"+"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            \"1)list - to access the list\\n\" +"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            \"2)todo - to create a todo task\\n\" +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            \"3)deadline - to create a deadline\\n\" +"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            \"4)event - to schedule an event\\n\" +"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            \"5)done - to mark tasks as done\\n\" +"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "soaza"
        },
        "content": "                            \"6)delete - to delete tasks from the list\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "soaza"
        },
        "content": "        saveTasks(arrList);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "soaza"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public static void readTasks(ArrayList\u003cTask\u003e arr){"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "soaza"
        },
        "content": "        BufferedReader objReader \u003d null;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "soaza"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "soaza"
        },
        "content": "            String strCurrentLine;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "soaza"
        },
        "content": "            objReader \u003d new BufferedReader(new FileReader(\"duke.txt\"));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "soaza"
        },
        "content": "            while ((strCurrentLine \u003d objReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "soaza"
        },
        "content": "                String taskType \u003d strCurrentLine.substring(1,2);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "soaza"
        },
        "content": "                boolean taskCompletion \u003d strCurrentLine.contains(\"✗\")?false:true;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "soaza"
        },
        "content": "                String taskDetails \u003d taskCompletion"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        ? strCurrentLine.substring(strCurrentLine.indexOf(\"✓\")+3)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        : strCurrentLine.substring(strCurrentLine.indexOf(\"✗\")+3);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "soaza"
        },
        "content": "                switch (taskType){"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        arr.add(new toDo(taskDetails,taskCompletion));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        String deadlineString \u003d taskDetails.substring(0,taskDetails.indexOf(\"(\"));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        String taskDeadlineString \u003d taskDetails.substring(taskDetails.indexOf(\"by:\")+3,taskDetails.indexOf(\")\"));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        LocalDate taskDeadline \u003d LocalDate.parse(taskDeadlineString);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        arr.add(new Deadline(deadlineString,taskCompletion,taskDeadline));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        String eventString \u003d taskDetails.substring(0,taskDetails.indexOf(\"(\"));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        String eventDateString \u003d taskDetails.substring(taskDetails.indexOf(\"at:\")+3,taskDetails.indexOf(\")\"));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        LocalDate eventDate \u003d LocalDate.parse(eventDateString);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        arr.add(new Event(eventString,taskCompletion,eventDate));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "soaza"
        },
        "content": "//            e.printStackTrace();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "soaza"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "soaza"
        },
        "content": "                if (objReader !\u003d null)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    objReader.close();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "soaza"
        },
        "content": "                ex.printStackTrace();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public static void saveTasks(ArrayList\u003cTask\u003e arr){"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "soaza"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "soaza"
        },
        "content": "            // Creates a FileWriter"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "soaza"
        },
        "content": "            FileWriter file \u003d new FileWriter(\"duke.txt\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "soaza"
        },
        "content": "            // Creates a BufferedWriter"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "soaza"
        },
        "content": "            BufferedWriter output \u003d new BufferedWriter(file);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "soaza"
        },
        "content": "            // Writes the string to the file"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "soaza"
        },
        "content": "            for(int i \u003d 0 ; i \u003c arr.size() ; i ++ ) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "soaza"
        },
        "content": "                output.write(arr.get(i).stringify()+\"\\n\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "soaza"
        },
        "content": "            // Closes the writer"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "soaza"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "soaza"
        },
        "content": "            e.getStackTrace();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 220,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeArrayException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class DukeArrayException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public DukeArrayException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 6
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public DukeException(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Event extends Deadline{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Event(String task, boolean complete,LocalDate date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(task, complete,date);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String stringify(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "        if(this.complete \u003d\u003d true) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[E][✓] \" + this.task + \"(at:\" +this.deadline+\")\" ;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[E][✗] \" + this.task + \"(at:\" +this.deadline+\")\" ;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 21
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public boolean complete;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Task(String task, boolean complete){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.complete \u003d complete;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String stringify(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "        if(this.complete \u003d\u003d true) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[T][✓] \" + this.task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[T][✗] \" + this.task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 18
    }
  },
  {
    "path": "src/main/java/toDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class toDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public toDo(String task, boolean complete) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(task, complete);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String stringify(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "        if(this.complete \u003d\u003d true) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[T][✓] \" + this.task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[T][✗] \" + this.task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": "todo slap ppl"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "deadline homework"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "deadline homework /by Tuesday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "event concert"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "event concert /at Wimbley Place,Tuesday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "random string"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "soaza": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "soaza": 1,
      "-": 37
    }
  }
]
