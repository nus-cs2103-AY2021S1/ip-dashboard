[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryanlimjr": 11
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    private final String border \u003d \"----------------------------------------------------------------------------\\n\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    private boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    private final TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    enum commands {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        BYE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        DONE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        DELETE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        LIST,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        EVENT,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                  \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        String greeting \u003d \"Sorry :( Duke is getting some upgrades at the moment.\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                + \"This is Tron, temporarily standing in for Duke, how may I assist you ?\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        System.out.println(this.border + greeting + this.border);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void printFarewell() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        String farewell \u003d \"Adios, pleasure to serve you!\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        System.out.println(this.border + farewell + this.border);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void printTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        System.out.println(this.border + taskList.toString() + this.border);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void printDoneTask(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        System.out.println(this.border"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + \"Making great progress master.\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + this.border"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void printAddedNewTask(Task task, int noTask) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        System.out.println(this.border"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + \"Yes master. I\u0027ve added the task to the list: \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + \"You now have \" + noTask + \" task in the list master.\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + this.border"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void printDeleteTask(Task task, int noTask) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        System.out.println(this.border"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                + \"Yes master. I\u0027ve deleted the task from the list: \\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                + \"You now have \" + noTask + \" task in the list master.\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                + this.border"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void noIndexKeyedError() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            this.border"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + \"Master please enter a task number so that I know which to handle.\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + this.border"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void printIndexSizeMismatchError() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            this.border"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + \"Master that is not a valid task number.\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + this.border"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void printNoUndoneTaskError() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            this.border"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + \"Master there is no task that is undone.\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + this.border"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void printIncompleteCommandError(String command) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            this.border"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + \"Master there is no description for \" + command + \" !\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + this.border"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void printUnrecognizableCommandError() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            this.border"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + \"I am sorry master but I do not understand that command.\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + this.border"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void printNoTaskToDeleteError() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            this.border"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + \"I am sorry master but the task list is empty.\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            + this.border"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void doneHandler(String parameters) throws DukeExceptions.NoUndoneTaskException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        if (!this.taskList.isEmpty() || this.taskList.allDone()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            int index \u003d Integer.parseInt(parameters.strip()) - 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            this.taskList.completeTask(index);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            this.printDoneTask(this.taskList.getTask(index));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            throw new DukeExceptions.NoUndoneTaskException();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void addTaskHadler(String command, String parameters) throws DukeExceptions.IncompleteCommandException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        if (!parameters.isBlank()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            Task newTask \u003d this.taskList.addTask(command, parameters);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            this.printAddedNewTask(newTask, this.taskList.getNoTask());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            throw new DukeExceptions.IncompleteCommandException(command);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void deleteTaskHandler(String parameters) throws  DukeExceptions.NoTaskToDeleteException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        if (!this.taskList.isEmpty()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            int index \u003d Integer.parseInt(parameters.strip()) - 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            Task task \u003d this.taskList.deleteTask(index);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            this.printDeleteTask(task, this.taskList.getNoTask());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            throw new DukeExceptions.NoTaskToDeleteException();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public boolean isRunning() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        return this.isRunning;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void run(commands command, String parameters) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        if (command \u003d\u003d commands.BYE) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            this.isRunning \u003d false;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        } else if (command \u003d\u003d commands.LIST) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            this.printTaskList(this.taskList);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        } else if (command \u003d\u003d commands.DONE) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                this.doneHandler(parameters);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            } catch (DukeExceptions.NoUndoneTaskException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                this.printNoUndoneTaskError();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                this.printIndexSizeMismatchError();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                this.noIndexKeyedError();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        } else if (command \u003d\u003d commands.EVENT || command \u003d\u003d commands.TODO || command \u003d\u003d commands.DEADLINE) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                this.addTaskHadler(command.toString().toLowerCase(), parameters);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            } catch (DukeExceptions.IncompleteCommandException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                this.printIncompleteCommandError(command.toString().toLowerCase());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        } else if (command \u003d\u003d commands.DELETE){"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                this.deleteTaskHandler(parameters);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            } catch (DukeExceptions.NoTaskToDeleteException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                this.printNoTaskToDeleteError();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                this.printIndexSizeMismatchError();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                this.noIndexKeyedError();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        duke.printGreeting();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in); //scans for input"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        String parameters;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        while (duke.isRunning()){"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            command \u003d sc.next().toUpperCase();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            parameters \u003d sc.nextLine().toLowerCase();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                duke.run(Duke.commands.valueOf(command), parameters);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                duke.printUnrecognizableCommandError();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        duke.printFarewell();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryanlimjr": 191,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "public class DukeExceptions {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public static class IncompleteCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        public IncompleteCommandException(String commandName) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            super(commandName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            return \"Master the description of \" + super.getMessage() + \" cannot be empty!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public static class NoUndoneTaskException extends Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        public NoUndoneTaskException() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            return \"Master the list is empty\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public static class NoTaskToDeleteException extends Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        public NoTaskToDeleteException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            return \"Master the list is empty\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryanlimjr": 32
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryanlimjr": 10
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    enum Status {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        COMPLETED,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        INCOMPLETE"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    Status status \u003d Status.INCOMPLETE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        this.status \u003d Status.INCOMPLETE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        this.status \u003d Status.COMPLETED;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public boolean isDone() { return this.status \u003d\u003d Status.COMPLETED; }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        return (this.status \u003d\u003d Status.COMPLETED ? \"[\\u2718]\" : \"[\\u2713]\") + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryanlimjr": 26
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public Task addTask(String taskType, String taskDescription) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            newTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        } else if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            newTask \u003d new Event(taskDescription);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            newTask \u003d new Deadline(taskDescription);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public void completeTask(int index){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "         this.taskList.get(index).markDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        Task task \u003d this.taskList.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        this.taskList.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public int getNoTask() { return  this.taskList.size(); }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public boolean isEmpty() { return this.taskList.isEmpty();}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public boolean allDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            if (!task.isDone()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        if (this.taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            output \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            for (int i \u003d 1; i \u003c this.taskList.size() + 1; i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "                output +\u003d String.valueOf(i) + \". \" + this.taskList.get(i - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryanlimjr": 56
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryanlimjr": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "event return book (due: 6th June)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ryanlimjr": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryanlimjr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ryanlimjr": 3,
      "-": 19
    }
  }
]
