[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "//    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "//checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "//    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "//}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 41,
      "UncleGrandpa925": 20
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * Represent a deadline event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private final LocalDate deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    Deadline(String desc, String deadline) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        this.deadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @return the representation of the event when written to disk"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    protected String toDisk() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return String.format(\"deadline\\n%s\\n%d\\n%s\", desc, (isDone ? 1 : 0), deadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 31
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/*input"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "bye"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "*/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * The main driver of the program"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * The entry point to the program"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public Duke(String filename) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        if (filename.isEmpty()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            taskList \u003d new TaskList(filename);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Ui.init();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Ui.greet();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        parser \u003d new Parser(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return parser.run(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "UncleGrandpa925": 29
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * Represent an event with the time it takes place"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private final LocalDate happenAt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private LocalDate endAt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @param desc     description for Event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @param happenAt the time for the Event to take place"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public Event(String desc, String happenAt) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        this.happenAt \u003d LocalDate.parse(happenAt);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public Event(String desc, String happenAt, String endAt) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        this.happenAt \u003d LocalDate.parse(happenAt);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        this.endAt \u003d LocalDate.parse(endAt);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        if (endAt \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + happenAt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return \"[E]\" + super.toString() + \" (between: \" + happenAt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                + \" and \" + endAt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @return the representation of the event when written to disk"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    protected String toDisk() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        if (endAt \u003d\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            return String.format(\"event\\n%s\\n%d\\n%s\", desc, (isDone ? 1 : 0), happenAt);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return String.format(\"event\\n%s\\n%d\\n%s\\n%s\", desc, (isDone ? 1 : 0), happenAt, endAt);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 49
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * Driver class to run the main method."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * Runs Duke chat-bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * It first initialises by reading a saved list of tasks in data/tasks.txt."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @param args Main method arguments."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 18
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private final Duke duke \u003d new Duke(\"data.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 50
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * Handle user input and control the program\u0027s logic"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    Parser(TaskList taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * start reading in users\u0027 input and parse them, then return the response"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @return program response to users\u0027 input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    String run(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                Ui.exit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                taskList.list();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                taskList.markDone(command.substring(5));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            } else if (command.startsWith(\"deadline\") || command.startsWith(\"event\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                    || command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                taskList.addTask(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                taskList.delete(command.substring(7));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                taskList.find(command.substring(5));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                throw new IllegalArgumentException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            Ui.printException(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            Ui.printException(new IllegalArgumentException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                    + \" :-(\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return Ui.getResponse();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 45
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * handle loading files and saving program\u0027s data to disk"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private final List\u003cString\u003e inputData;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * Storage constructor, use to pass in the data filename"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * If the file doesn\u0027t exist, create it"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @param filename the name of the data file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public Storage(String filename) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        assert (!filename.isEmpty());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            file \u003d new File(filename);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            if (file.createNewFile()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                System.out.println(\"File created: \" + file.getName());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            System.out.println(\"An error occurred when interacting with file.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        inputData \u003d readFileToLines();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * load the saved list of tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @return the data of the file provided in the constructor"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static List\u003cTask\u003e parseFromString(List\u003cString\u003e extData) throws IllegalStateException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Queue\u003cString\u003e data \u003d new LinkedList\u003c\u003e(extData);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        while (!data.isEmpty()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            String type \u003d data.poll();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            String desc \u003d data.poll();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            int status \u003d Integer.parseInt(data.poll());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                tasks.add(new Todo(desc));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                String by \u003d data.poll();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                tasks.add(new Deadline(desc, by));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                String at \u003d data.poll();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                if (!data.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                    Event event \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                        event \u003d new Event(desc, at, data.peek());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                    if (event !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                        data.poll();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                tasks.add(new Event(desc, at));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                throw new IllegalStateException(\"The data file is corrupted\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            if (status \u003d\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                tasks.get(tasks.size() - 1).setDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private List\u003cString\u003e readFileToLines() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        List\u003cString\u003e dataToReturn \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                dataToReturn.add(sc.nextLine());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            assert (false); // not possible since if file hasn\u0027t existed, it will be created in the constructor"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return dataToReturn;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return parseFromString(inputData);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * save the current list of tasks to disk"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @param lst list of all tasks"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public void write(List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            for (Task task : lst) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                writer.write(task.toDisk() + \"\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            System.out.println(\"An error occurred when write to file\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 118
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * An abstract class to be inherited by more specific type of event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * Constructor for Task, to be called only by subclasses"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @param desc description for the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    protected Task(String desc) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * use to mark this task as done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        char sign \u003d (isDone ? \u0027✓\u0027 : \u0027✗\u0027);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return String.format(\"[%c] %s\", sign, desc);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * abstract method to be overridden by child classes."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @return the representation of the event when written to disk"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    protected abstract String toDisk();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 39
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * Manage list of all tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private final Optional\u003cStorage\u003e storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * Constructor for TaskList, do storage initialization"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public TaskList(String filename) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        storage \u003d Optional.of(new Storage(filename));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        tasks \u003d storage.get().load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * Special constructor for TaskList with no storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * Used for testing only"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        storage \u003d Optional.empty();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private void saveToDisk() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        if (storage.isEmpty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        storage.get().write(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private void addTodo(String desc) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        desc \u003d desc.trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        if (desc.isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            throw new IllegalArgumentException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        tasks.add(new Todo(desc));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private void addDeadline(String desc) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        desc \u003d desc.trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        if (desc.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            throw new IllegalArgumentException(\"☹ OOPS!!! Missing arguments for deadline task\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        String newDesc \u003d desc.substring(0, desc.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        String time \u003d desc.substring(desc.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        tasks.add(new Deadline(newDesc, time));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private void addEvent(String event) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        event \u003d event.trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        if (event.isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            throw new IllegalArgumentException(\"☹ OOPS!!! Missing arguments for event task\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        if (event.contains(\"/between\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            String[] elements \u003d event.split(\"/between\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            String[] times \u003d elements[1].split(\"and\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            String newDesc \u003d elements[0].trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            String happenAt \u003d times[0].trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            String endAt \u003d times[1].trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            tasks.add(new Event(newDesc, happenAt, endAt));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            String newDesc \u003d event.substring(0, event.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            String time \u003d event.substring(event.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            tasks.add(new Event(newDesc, time));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * Add an task to the task list"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * The method will classify the type of the task and call the corresponding method"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @param command raw string contains the detail of the task to be added"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public void addTask(String command) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            addTodo(command.substring(4));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            addDeadline(command.substring(8));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            addEvent(command.substring(5));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Ui.addTask(tasks);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        saveToDisk();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * mark a task as done"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @param command raw String contains the task id to mark as done"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public void markDone(String command) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        int num \u003d Integer.parseInt(command) - 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        tasks.get(num).setDone();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Ui.markDone(tasks.get(num));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        saveToDisk();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * delete a task from the list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @param command raw String contains the task id to delete from the list"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public void delete(String command) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        int num \u003d Integer.parseInt(command) - 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Task cur \u003d tasks.remove(num);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Ui.delete(cur, tasks);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        saveToDisk();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * list all tasks in the list"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public void find(String pattern) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            if (task.desc.contains(pattern)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                foundTasks.add(task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Ui.find(foundTasks);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * list all tasks in the list"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Ui.list(tasks);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 136
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * Represent an todo with no deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public Todo(String desc, String rawStartAt, String rawEndAt) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @return the representation of the event when written to disk"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public String toDisk() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return String.format(\"todo\\n%s\\n%d\", desc, (isDone ? 1 : 0));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 28
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * Control all jobs related to the User Interface"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " * the class has methods to greet users \u0026 print feedback for users\u0027 input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private static StringBuilder response;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * print greeting content"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private static void println(Object message) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        response.append(message.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        response.append(\"\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * print the feedback after adding a task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static void addTask(List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(lst.get(lst.size() - 1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(String.format(\"Now you have %d tasks in the list.%n\", lst.size()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * print the feedback after marking a task as done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static void markDone(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * print the feedback after deleting a task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static void delete(Task task, List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(String.format(\"Now you have %d tasks in the list.%n\", lst.size()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * print the list of all tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static void list(List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        for (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            println((i + 1) + \".\" + lst.get(i));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * print the exit message"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * initiate the class"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static void init() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        response \u003d new StringBuilder();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * print the error when users\u0027 input are invalid"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @param e the exception to be printed"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static void printException(IllegalArgumentException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(e.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * print the find result"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     * @param foundTasks list of tasks matches the find pattern"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static void find(List\u003cTask\u003e foundTasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            println((i + 1) + \".\" + foundTasks.get(i));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    public static String getResponse() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        String responseToReturn \u003d response.toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        response \u003d new StringBuilder();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return responseToReturn;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 107
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "         maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/8.0.171\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 24
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Deadline e \u003d new Deadline(\"sample\", \"2020-10-20\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        assertEquals(e.toString(), \"[D][✗] sample (by: Oct 20 2020)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 15
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    void testToString1() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Event e \u003d new Event(\"sample\", \"2020-10-20\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        assertEquals(e.toString(), \"[E][✗] sample (at: Oct 20 2020)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    void testToString2() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Event e \u003d new Event(\"sample\", \"2020-10-20\", \"2020-10-30\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        assertEquals(e.toString(), \"[E][✗] sample (between: Oct 20 2020 and Oct 30 2020)\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 22
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    static void initAll() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Ui.init();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    void init() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        parser \u003d new Parser(new TaskList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    void testRunDeadline1() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        parser.run(\"deadline return book /by 2019-10-15\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    void testRunEvent1() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        parser.run(\"event return book /at 2019-10-15\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    void testRunEvent2() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        System.out.println(parser.run(\"event return book /between 2019-10-15 and 2019-10-16\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    void testRunTodo1() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        parser.run(\"todo return book\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    static String readFile(String filename) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        ClassLoader classLoader \u003d ParserTest.class.getClassLoader();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        return Files.readString(Path.of(classLoader.getResource(\"file/\" + filename).getFile()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    void testRunAll1() throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        String input \u003d ParserTest.readFile(\"input1.txt\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        String[] lineInput \u003d input.split(\"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        String expectedOutput \u003d ParserTest.readFile(\"output1.txt\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        for (String line : lineInput) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "            output.append(parser.run(line));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Assertions.assertEquals(expectedOutput, output.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 61
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        Todo todo \u003d new Todo(\"todo\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        System.out.println(todo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "        assertEquals(todo.toString(), \"[T][✗] todo\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 14
    }
  },
  {
    "path": "src/test/resources/file/input1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "deadline sample /by 2019-10-15"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "event sample /between 2019-10-15 and 2019-10-16"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "deadline sample /at 2019-10-15"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "todo sample"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 6
    }
  },
  {
    "path": "src/test/resources/file/output1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "[D][✗] sample (by: Oct 15 2019)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "[E][✗] sample (between: Oct 15 2019 and Oct 16 2019)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "[D][✗] sample (by: Oct 15 2019)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "[T][✗] sample"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "UncleGrandpa925": 14
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UncleGrandpa925"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "UncleGrandpa925": 1
    }
  }
]
