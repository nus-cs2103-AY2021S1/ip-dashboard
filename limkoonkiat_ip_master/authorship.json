[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    VIEW(\"view\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    Command(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 16
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public LocalDate getBy() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static void initialize() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        File dir \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        dir.mkdir();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        File file \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    switch (task.charAt(1)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    case \u0027T\u0027:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        Todo todo \u003d new Todo(task.substring(5));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        tasks.add(todo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    case \u0027D\u0027:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        String[] splitDeadline \u003d task.split(\" \\\\(by: \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        Deadline deadline \u003d new Deadline(splitDeadline[0].substring(5),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                                splitDeadline[1].substring(0, splitDeadline[1].lastIndexOf(\u0027)\u0027)));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        tasks.add(deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    case \u0027E\u0027:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        String[] splitEvent \u003d task.split(\" \\\\(at: \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        Event event \u003d new Event(splitEvent[0].substring(5),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                                splitEvent[1].substring(0, splitEvent[1].lastIndexOf(\u0027)\u0027)));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static void saveTasks() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            FileWriter writer \u003d new FileWriter(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                writer.write(task + \"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static void printResponse(String response) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static void printAddTask(Task task) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(\"Got it. I\u0027ve added this task: \\n\\t\" + task + \"\\n\" + getNumberOfTasks());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static void printDeleteTask(Task task) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(\"Noted. I\u0027ve removed this task: \\n\\t\" + task + \"\\n\" + getNumberOfTasks());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static void printDoneTask(Task task) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static void printList() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String numberedList \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            numberedList +\u003d \"\\n\\t\" + (i + 1) + \".\" + tasks.get(i);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(numberedList);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static String getNumberOfTasks() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        int numberOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        if (numberOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            return String.format(\"Now you have %d task in the list.\", numberOfTasks);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            return String.format(\"Now you have %d tasks in the list.\", numberOfTasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static Command interpretCommand(String string) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            return Command.valueOf(string.toUpperCase());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (IllegalArgumentException ex) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static void handleUserInputs() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            String userInput \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            String[] splitInput \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                Command command \u003d interpretCommand(splitInput[0]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    printList();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    saveTasks();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    printResponse(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(splitInput[1]);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        tasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        printDoneTask(tasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    } catch (NullPointerException | NumberFormatException"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                            | IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The task number is not valid.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    saveTasks();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(splitInput[1]);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        Task removedTask \u003d tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        printDeleteTask(removedTask);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    } catch (NullPointerException | NumberFormatException"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                            | IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The task number is not valid.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    saveTasks();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        tasks.add(new Todo(splitInput[1]));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    printAddTask(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    saveTasks();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        String[] splitDescription \u003d splitInput[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        tasks.add(new Deadline(splitDescription[0], LocalDate.parse(splitDescription[1])));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description or date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The date does not look right.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    printAddTask(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    saveTasks();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        String[] splitDescription \u003d splitInput[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        tasks.add(new Event(splitDescription[0], LocalDate.parse(splitDescription[1])));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description or date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The date does not look right.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    printAddTask(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    saveTasks();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case VIEW:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        LocalDate date \u003d LocalDate.parse(splitInput[1]);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        String numberedList \u003d \"Here are the tasks on this date:\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                            if ((task instanceof Deadline \u0026\u0026 ((Deadline) task).getBy().equals(date))"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                                    || task instanceof Event \u0026\u0026 ((Event) task).getAt().equals(date)) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                                numberedList +\u003d \"\\n\\t\" + (i + 1) + \".\" + tasks.get(i);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        printResponse(numberedList);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    } catch (NullPointerException | IndexOutOfBoundsException"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                            | DateTimeParseException ex) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The date is not valid.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        handleUserInputs();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 205,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public LocalDate getAt() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 21
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "deadline /by "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "deadline test /by"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "event /at "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "event test /at"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "done      "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "done qqqq"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "done 80"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "delete        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "delete 45"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 25
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "limkoonkiat": 2
    }
  }
]
