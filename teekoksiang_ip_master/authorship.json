[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "E | 1 | cluster dinner | Sep 09, 7:30pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "D | 1 | 2105 assignment | Sat, 2359"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 2
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String done \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"D | \" + done + \" | \" + super.description + \" | \" +  by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String formattedDate \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static final String GREET_MESSAGE \u003d \"Hello! I\u0027m AiBot :)\\n\\tEnter the command you would like to do\\n\\tEnter \u0027bye\u0027 to exit\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static final String EXIT_MESSAGE \u003d \"Bye. See you again soon!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static final String DIVIDER \u003d \"\\n\\t-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static final String FILE_DIR \u003d System.getProperty(\"user.dir\") + \"/data/\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static final String FILE_PATH \u003d FILE_DIR + \"duke.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static void printResponse(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        System.out.println(DIVIDER.concat(\"\\t\".concat(message.concat(\"\\n\"))).concat(DIVIDER));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static String combineWords(List\u003cString\u003e words) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        for (int i \u003d 0; i \u003c words.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                message.append(words.get(i));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                message.append((\" \".concat(words.get(i))));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static void addTaskFromCommand(String command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            List\u003cString\u003e words \u003d Arrays.asList(command.split(\" \"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String taskType \u003d words.get(0);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (taskType.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                if (words.size() \u003c\u003d 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                    throw new IllegalArgumentException(\":( Oops!!! The description of a Todo task cannot be empty. :-(\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                String taskDescription \u003d combineWords(words.subList(1, words.size()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                task \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            } else if (taskType.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                int index \u003d words.indexOf(\"/by\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                if (words.size() \u003c\u003d 1 || index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                    throw new IllegalArgumentException(\":( Oops!!! The description of a Deadline task cannot be empty. :-(\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                if (index \u003d\u003d -1 || words.size() - index \u003c\u003d 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                    throw new IllegalArgumentException(\":( Oops!!! Please type \\\"deadline [task description] /by [yyyy-mm-dd]\\\" to add a Deadline task\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                String taskDescription \u003d combineWords(words.subList(1, index));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                String by \u003d combineWords(words.subList(index + 1, words.size()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                if (!by.matches(\"([12]\\\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01]))\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                    throw new IllegalArgumentException(\":( Oops!!! Please type \\\"deadline [task description] /by [yyyy-mm-dd]\\\" to add a Deadline task\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                task \u003d new Deadline(taskDescription, by);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            } else if (taskType.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                int index \u003d words.indexOf(\"/at\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                if (words.size() \u003c\u003d 1 || index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                    throw new IllegalArgumentException(\":( Oops!!! The description of a Event task cannot be empty. :-(\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                if (index \u003d\u003d -1 || words.size() - index \u003c\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                    throw new IllegalArgumentException(\":( Oops!!! Please type \\\"event [task description] /at [event time] \\\" to add a Event task\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                String taskDescription \u003d combineWords(words.subList(1, index));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                String at \u003d combineWords(words.subList(index + 1, words.size()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                task \u003d new Event(taskDescription, at);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                throw new IllegalArgumentException(\":( Oops!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\\tCommands: list | done | delete | todo | deadline | event\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String message \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            message +\u003d \"\\n\\t\\t\".concat(task.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            message +\u003d String.format(\"\\n\\tNow you have %d tasks in the list.\", taskList.size());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            printResponse(message);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } catch (IllegalArgumentException illegalArgumentException) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            printResponse(illegalArgumentException.getLocalizedMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static void addTaskFromLine(String line) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        List\u003cString\u003e words \u003d Arrays.asList(line.split(\" \\\\| \"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (words.get(0).equals(\"T\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            task \u003d new Todo(words.get(2));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else if (words.get(0).equals(\"D\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            task \u003d new Deadline(words.get(2), words.get(3));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            task \u003d new Event(words.get(2), words.get(3));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (words.get(1).equals(\"1\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static void listTasks() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            printResponse(\"No task added yet...\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        StringBuilder taskMessage \u003d new StringBuilder();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskMessage.append(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String task \u003d String.format(\"\\n\\t%d.%s\", (i + 1), taskList.get(i));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            taskMessage.append(task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        printResponse(taskMessage.toString());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static int extractTaskNumber(String command) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        List\u003cString\u003e words \u003d Arrays.asList(command.split(\" \"));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (words.size() !\u003d 2) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            throw new IllegalArgumentException(\"Please type \\\"[action] [task number]\\\"\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            // convert the task number into int"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(words.get(1));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return taskNumber;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static void doneTask(String command) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            int taskNumber \u003d extractTaskNumber(command);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (taskNumber \u003e taskList.size() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                throw new IllegalArgumentException(\"The task number is not found\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            taskList.get(taskNumber - 1).markDone();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String response \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            response +\u003d String.format(\"\\n\\t\\t\".concat(taskList.get(taskNumber - 1).toString()));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            printResponse(response);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } catch (IllegalArgumentException illegalArgumentException) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (illegalArgumentException instanceof NumberFormatException) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                printResponse(\"Please type \\\"done [task number]\\\" to mark task as done\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                printResponse(illegalArgumentException.getLocalizedMessage());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static void deleteTask(String command) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            int taskNumber \u003d extractTaskNumber(command);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (taskNumber \u003e taskList.size() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                throw new IllegalArgumentException(\"The task number is not found\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String response \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            response +\u003d String.format(\"\\n\\t\\t\".concat(taskList.get(taskNumber - 1).toString()));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            response +\u003d String.format(\"\\n\\tNow you have %d tasks in the list.\", taskList.size());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            printResponse(response);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } catch (IllegalArgumentException illegalArgumentException) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (illegalArgumentException instanceof NumberFormatException) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                printResponse(\"Please type \\\"[action] [task number]\\\"\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                printResponse(illegalArgumentException.getLocalizedMessage());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static void listenCommand() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        while (!command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (command.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                listTasks();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                doneTask(command);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                writeFile();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                deleteTask(command);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                writeFile();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                addTaskFromCommand(command);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                writeFile();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static void readFile() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            File fileDir \u003d new File(FILE_DIR);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            // if directory not exists, create file"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (!fileDir.exists()) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                fileDir.mkdir();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            // if file not exists, create file"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String currentLine;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            while ((currentLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                addTaskFromLine(currentLine);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            System.out.println(String.format(\"IOException: %s\", ioException.getLocalizedMessage()));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static void writeFile() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String taskInfo \u003d task.toFileString() + \"\\n\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            stringBuilder.append(taskInfo);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            writer.write(stringBuilder.toString());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            System.out.println(\"IOException: \" + ioException.getLocalizedMessage());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        readFile();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        printResponse(GREET_MESSAGE);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        listenCommand();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        printResponse(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 222,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String done \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"E | \" + done + \" | \" + super.description + \" | \" +  at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 20
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"To be overridden\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String done \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"T | \" + done + \" | \" + super.description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 1,
      "-": 37
    }
  }
]
