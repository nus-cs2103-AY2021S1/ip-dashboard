[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    //implementation \u0027org.junit.jupiter:junit-jupiter\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    //implementation \u0027org.junit.jupiter:junit-jupiter\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "aidoxe-123": 23
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Duke is a **desktop app for keeping track of tasks, optimized for use via a Command Lind Interface (CLI)**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "while still having the benefits of Graphical User Interface (GUI). If you can type fast, Duke can get help you managing your task list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "faster than traditional GUI apps"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### Basic CRUD"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Duke allows you to **Create, Read, Update, and Delete** your tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### Three types of tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Tasks stored in Duke are categorized into 3 types `todo`, `deadline`, and `event`:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* *Todo*: tasks that do not have any timestamp attached to it"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* *Deadline*: tasks that due on a specific timestamp"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* *Event*: tasks that occur between 2 timestamp "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### Clone task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Duke allows you to clone your task in another position"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### Find task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You can find tasks by date, by keyword, and by status (done or not done)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### Undo your mistake easily"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Duke can help you quickly recover from your mistakes"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### Local storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Duke store your data locally so they will not be lost between uses"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### `hello` - Start the bot"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "If the program is sleeping, type `hello` to wake it up."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Command:** `hello`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### `bye` - Make the bot into sleep mode"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "If the program is working, type `bye` to exit the program."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "When the program is sleeping, any input command except `hello` will be responded "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "with the `zzz...I\u0027m sleeping` message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Command:** `bye`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e**_NOTE:_**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e`bye` only put the chat bot into sleep mode, not closing the chat window. "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eYou have to manually close the window by using `close` command "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eor press the X button on the top right corner"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### `close` - Close the GUI"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You can use `close` to close the GUI"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Command:** `close`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### `todo` - Add a todo task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You can use `todo` to add a todo task to your list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Command:** `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage:**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`todo buy food for the whole week` "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```markdown"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "[T] [X] buy food for the whole week"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You have 1 task(s) in your list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e **_NOTE:_**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eThe number of tasks in the expected outcome depends on your actual task list  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### `deadline` - Add a deadline task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You can use `deadline` to add a deadline task to your list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Command:** `deadline \u003cdescription\u003e /by \u003ctime\u003e`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e **_NOTE:_** "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eThe time can only be parsed if it follows some specific format "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e(as specified in `Appendix -\u003e Parsing date`)."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eOtherwise, the time will be stored as a string without parsing."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage 1 (correct time format):**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`deadline CS2100 assignment 1 /by 29/8/2020`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome 1:**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```markdown"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "[D] [X] CS2100 assignment 1 (by: 29 Aug 2020)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You have 1 task(s) in your list"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage 2 (incorrect time format):**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`deadline CS2100 assignment 1 /by next thursday`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome 2:**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "[D] [X] CS2100 assignment 1 (by: next thursday)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You have 1 task(s) in your list"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e **_NOTE:_** "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eThe number of tasks in the expected outcome depends on your actual task list  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### `event` - Add an event task"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You can use `event` to add a event task "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "to your list"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Command:** `event \u003cdescription\u003e /at \u003ctime\u003e`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e **_NOTE:_** "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eThe time can only be parsed if it follows this format"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e`START_DATE to END_DATE` where **both** `START_DATE` and `END_DATE` must follow"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003esome specific format (as specified in `Appendix -\u003e Parsing date`), "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eand `END_DATE` must happen from `START_DATE` onwards."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eOtherwise, the time will be stored as a string without parsing"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage 1 (correct time format):**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`event Summer Internship /at 20/4/2020 to 2/9/2020`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome 1:**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "[E] [X] Summer Internship (at: from 20 Apr 2020 to 2 Sep 2020)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You have 1 task(s) in your list"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage 2 (incorrect time format):**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`event Summer Internship /at 20/4/2020 to end of april`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome 2:**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "[E] [X] Summer Internship (at: from 20/4/2020 to end of april)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You have 1 task(s) in your list"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e **_NOTE:_** The number of tasks in the expected outcome depends on your actual task list  "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### `list` - Show the tasks in your list"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You can use `list` to show the tasks in your list"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Command:** `list`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage:**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Here are the task(s) in your list:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "1. [T] [X] buy food for the whole week"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "2. [D] [X] CS2100 assignment 1 (by: 29 Aug 2020)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "3. [E] [X] Summer Internship (at: from 20 Apr 2020 to 2 Sep 2020)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You can use `done` to mark the task at that position as done"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Command:** `done \u003cindex\u003e`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Assume that you have `[T] [X] buy food for the whole week` as the 3rd task in your list"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```markdown"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```markdown"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Good job bud! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "[T] [✔] buy food for the whole week"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e**_NOTE:_** "
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eYou will still receive the above message no matter the task is marked as done before or not"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e**_NOTE:_**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eThe `\u003cindex\u003e` must be between 1 and the number of tasks in your list"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### `delete` - Delete a task"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You can use `delete` to delete the task at that position from your list"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Command:** `delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage:**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Assume that you are having 5 tasks in your class and having `[T] [X] buy food for the whole week` as the 3rd task in your list."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected of outcome:**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```markdown"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Noted. I\u0027ve deleted this task:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "[T] [X] buy food for the whole week"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You have 4 task(s) in your list"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e**_NOTE:_**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eThe `\u003cindex\u003e` must be between 1 and the number of tasks in your list"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### `find` - Find task base on keywords"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You can use `find` to find all the task that contain all of the keyword(s)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Command:** `find \u003ckeyword_1\u003e \u003ckeyword_2\u003e ... \u003ckeyword_n\u003e`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e**_NOTE:_** "
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eIf the keyword is in some specific date format "
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e(as specified in `Appendix -\u003e Parsing date`), the program will also find for deadlines that due on that day"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eor events that occur on that day"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage 1:**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`find 20/4/2020`"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome 1:**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```markdown"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Here are the matching task(s) in your list:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "1. [T] [X] Buy birthday present for 20/4/2020"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "2. [D] [X] Submit homework (by: 20 Apr 2020)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "3. [E] [X] Hackathon (/at from 15 Apr 2020 to 30 Apr 2020)"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e**_NOTE:_** "
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eIf the keyword is `done`, the program will also find tasks that are done."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eIf the keyword is `not_done`, the program will also find tasks that are not done yet."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage 2:**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`find done`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome 2:**"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```markdown"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Here are the matching task(s) in your list:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "1. [T] [X] add feature: marking all the tasks as undone"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "2. [D] [✔] Submit homework (by: 20 Apr 2020)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "3. [E] [✔] Hackathon (/at from 15 Apr 2020 to 30 Apr 2020)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### `clone` - Clone the task"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You can use `clone` to clone the task in your task list"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Command:**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`clone \u003csource_index\u003e \u003cdestination_index\u003e` to clone the task at the source position to the destination position"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`clone \u003csource_index\u003e` to clone the task at the source position to the position below it"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Assume that you are having the following tasks in your list:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "1. [T] [X] buy food for the whole week"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "2. [D] [X] Submit homework (by: 20 Apr 2020)"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage 1:**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`clone 1`"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```markdown"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "I have cloned this task:"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "[T] [X] buy food for the whole week"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "_Your list after cloning:_"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "_1. [T] [X] buy food for the whole week_"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "_2. [T] [X] buy food for the whole week_"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "_3. [D] [X] Submit homework (by: 20 Apr 2020)_"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage 2:**"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`clone 1 3`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome 2:**"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```markdown"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "I have cloned this task:"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "[T] [X] buy food for the whole week"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "_Your list after cloning:_"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "_1. [T] [X] buy food for the whole week_"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "_2. [D] [X] Submit homework (by: 20 Apr 2020)_"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "_3. [T] [X] buy food for the whole week_"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e**_NOTE:_**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eThe `\u003csource_index\u003e` must be between 1 and the number of tasks in your list. "
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eThe `\u003cdestination_index\u003e` must be between 1 and (the number of tasks in your list plus 1)"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e**_NOTE:_** "
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eAfter cloning, the cloned task and the task that has been cloned will be treated as 2 separate task"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e(i.e Changes in one task do not affect the other)"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### `update` - Update the task"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "You can use `update` to update part of the task at a specified position\u0027s detail"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "without rewriting the whole task"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Command:**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "*For Todo task*: `update \u003cindex\u003e /description \u003cnew_description\u003e`"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "*For Deadline or Event task*: `update \u003cindex\u003e /description \u003cnew_description\u003e /time \u003cnew_time\u003e`"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e**_NOTE:_** The value of `\u003cindex\u003e` must be between 1 and the number of tasks in the list"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e**_NOTE:_** For Deadline or Event task, you can omit either `/description \u003cnew_description\u003e` or `/time \u003cnew_description\u003e`, but not both"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003e**_NOTE:_**"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eFor `\u003cnew_time\u003e` to be parsed to date, it must follow the time requirement of deadline or event"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003eaccording to the type of the task"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage 1:**"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Assume that this is the 3rd task in your list: `[T] [X] buy food for the whole week`"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`update 3 /description buy food for monday only`"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome 1:**"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```markdown"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "The task at position 3 has been updated to this:"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "[T] [X] buy food for the whole monday only"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Example of usage 2:**"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "Assume that this is the 4th task in your list: `[D] [X] CS2100 assignment 1 (by: 29 Aug 2020)`"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "`update 4 /time 2020/08/30`"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "**Expected outcome 2:**"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```markdown"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "The task at position 4 has been updated to this:"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "[D] [X] CS2100 assignment 1 (by: 30 Aug 2020)"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "```"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "## Appendix"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "### Parsing date"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "These are the date formats supported by Duke from highest parsing priority to lowest parsing priority"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* yyyy-MM-dd"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* yyyy-M-dd"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* yyyy-M-d"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* dd-MM-yyyy"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* dd-M-yyyy"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* d-M-yyyy"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* yyyy/MM/dd"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* dd/MM/yyyy"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* dd/M/yyyy"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "* d/M/yyyy"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "aidoxe-123": 362
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Main class, responsible for running the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private boolean isRunning;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * The type of the response message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public enum ResponseType {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        MESSAGE,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        ERROR"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eDuke\u003c/code\u003e object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param filePath The path of the data file that this object interacts with"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        isRunning \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            ui.showFileLoadingError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Generate the response for the GUI"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param fullCommand The input command of the user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return A response of the program"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Pair\u003cString, ResponseType\u003e getResponse(String fullCommand) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Command command \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (command.isStart()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                isRunning \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (!isRunning) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                return new Pair\u003c\u003e(\"I\u0027m sleeping...zzz\", ResponseType.MESSAGE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (command.isExit()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                isRunning \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            response \u003d command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return new Pair\u003c\u003e(response, ResponseType.MESSAGE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            response \u003d ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return new Pair\u003c\u003e(response, ResponseType.ERROR);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Store data into the data file"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Called when the program is closed"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void cleanUp() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            storage.write(tasks);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            System.out.println(\"Cannot write file\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 80,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 13
    }
  },
  {
    "path": "src/main/java/duke/command/CloneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class CloneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"clone\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private int sourceIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private int destinationIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eCloneCommand\u003c/code\u003e object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param string The source and destination position of the cloned task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws InvalidIndexException If cannot parse the String to 1 or 2 indices"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public CloneCommand(String string) throws InvalidIndexException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String[] splitInput \u003d string.trim().split(\"\\\\s+\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert splitInput.length \u003e 0 : \"split input can have length 0\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitInput.length \u003e 2) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                sourceIndex \u003d Integer.parseInt(splitInput[0]) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                destinationIndex \u003d sourceIndex;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new InvalidIndexException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitInput.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                sourceIndex \u003d Integer.parseInt(splitInput[0]) - 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                destinationIndex \u003d Integer.parseInt(splitInput[1]) - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new InvalidIndexException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert tasks !\u003d null : \"tasklist object cannot be null\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert ui !\u003d null : \"ui object cannot be null\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Task sourceTask \u003d tasks.get(sourceIndex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Task clonedTask \u003d sourceTask.clone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks.add(destinationIndex, clonedTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return ui.showCloneSuccess(sourceTask);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 60
    }
  },
  {
    "path": "src/main/java/duke/command/CloseCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class CloseCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"close\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public CloseCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.exit(0); // close the program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 19
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handling commands"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Created when the command does not belong to any other types of command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Command() {}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Returns whether this command terminates the program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An indicator that helps the program know when to stop (default is keep running)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean isStart() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws DukeException When facing errors parsing or running the program"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert ui !\u003d null : \"ui object cannot be null\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        throw new DukeException(ui.showUnrecognizedCommandMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handling commands starting with \u003ccode\u003edeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DeadlineCommand extends TaskCreationCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String TIME_SPECIFIER \u003d \"/by\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eDeadlineCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param time The time by which the task is due"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public DeadlineCommand(String description, String time) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a new \u003ccode\u003eDeadline\u003c/code\u003e task and add pass it to \u003ccode\u003eTaskCreationCommand\u003c/code\u003e\u0027s execute method"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * to add the task to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert tasks !\u003d null : \"tasklist object cannot be null\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert ui !\u003d null : \"ui object cannot be null\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert storage !\u003d null : \"storage object cannot be null\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task task \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return super.execute(task, ui, tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 44
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handling commands starting with \u003ccode\u003edelete\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eDeleteCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param string The position of the task being deleted"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws InvalidIndexException If cannot parse the string into integer"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public DeleteCommand(String string) throws InvalidIndexException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            index \u003d Integer.parseInt(string) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Deletes the task in the specified position."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws InvalidIndexException If that position is out of the range of the \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert tasks !\u003d null : \"tasklist object cannot be null\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert ui !\u003d null : \"ui object cannot be null\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return ui.showDeleteTask(tasks.remove(index), tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handling commands stating with \u003ccode\u003edone\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eDoneCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param string The position of the task being marked as done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws InvalidIndexException If cannot parse the string into integer"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public DoneCommand(String string) throws InvalidIndexException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            index \u003d Integer.parseInt(string) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Marks the task in the specified position as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws InvalidIndexException If that position is out of the range of the \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert tasks !\u003d null : \"tasklist object cannot be null\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert ui !\u003d null : \"ui object cannot be null\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks.markAsDone(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return ui.showMarkAsDoneTask(tasks.get(index));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 47
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handling commands starting with \u003ccode\u003eevent\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class EventCommand extends TaskCreationCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String TIME_SPECIFIER \u003d \"/at\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates an \u003ccode\u003eEventCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param time The time by which the task happens"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public EventCommand(String description, String time) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a new \u003ccode\u003eEvent\u003c/code\u003e task and add pass it to \u003ccode\u003eTaskCreationCommand\u003c/code\u003e\u0027s execute method"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * to add the task to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert tasks !\u003d null : \"tasklist object cannot be null\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert ui !\u003d null : \"ui object cannot be null\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task task \u003d new Event(description, time);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return super.execute(task, ui, tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 43
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handing commands starting with \u003ccode\u003ebye\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates an \u003ccode\u003eExitCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Stops the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An indicator that helps the program know when to stop"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Copies tasks from temporary TaskList to local storage, then say goodbye."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert tasks !\u003d null : \"tasklist object cannot be null\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert ui !\u003d null : \"ui object cannot be null\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert storage !\u003d null : \"storage object cannot be null\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return ui.showGoodbye();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 43
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.parser.DateParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handing commands starting with \u003ccode\u003efind\u003c/code\u003e."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String DONE_KEYWORD \u003d \"done\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String NOT_DONE_KEYWORD \u003d \"not_done\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String[] keywords;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eFindCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param keywords The searching keywords"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public FindCommand(String... keywords) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Finds all the tasks that happen or due on that day or containing the keyword(s),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * and pass them to the \u003ccode\u003eUi\u003c/code\u003e to print them out."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert tasks !\u003d null : \"tasklist object cannot be null\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert ui !\u003d null : \"ui object cannot be null\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        TaskList filteredTasks \u003d tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        for (String keyword : keywords) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Optional\u003cLocalDate\u003e optDate \u003d DateParser.parse(keyword);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (optDate.isPresent()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                LocalDate date \u003d optDate.get();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                filteredTasks \u003d tasks.filter((task) -\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    boolean isDeadlineAndDueOnDate \u003d task instanceof Deadline \u0026\u0026 ((Deadline) task).isDueOn(date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    boolean isEventAndOccurOnDate \u003d task instanceof Event \u0026\u0026 ((Event) task).isOccurringOn(date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    boolean containKeyword \u003d task.toString().toLowerCase().contains(keyword.toLowerCase());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    return isDeadlineAndDueOnDate || isEventAndOccurOnDate || containKeyword;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                });"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } else if (keyword.equals(DONE_KEYWORD) || keyword.equals(NOT_DONE_KEYWORD)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                filteredTasks \u003d tasks.filter(task -\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    boolean isDone \u003d task.isDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    boolean containKeyword \u003d task.toString().toLowerCase().contains(keyword.toLowerCase());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    return (keyword.equals(DONE_KEYWORD) ? isDone : !isDone) || containKeyword;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                filteredTasks \u003d tasks.filter((task) -\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                        task.toString().toLowerCase().contains(keyword.toLowerCase()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return ui.showFindResult(filteredTasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 67
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handing commands starting with \u003ccode\u003elist\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eListCommand\u003c/code\u003e object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Passes all the tasks to the \u003ccode\u003eUi\u003c/code\u003e to print them out."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert tasks !\u003d null : \"tasklist object cannot be null\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert ui !\u003d null : \"ui object cannot be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return ui.showTasks(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 32
    }
  },
  {
    "path": "src/main/java/duke/command/StartCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class StartCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"hello\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public StartCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean isStart() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 23
    }
  },
  {
    "path": "src/main/java/duke/command/TaskCreationCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Helps handle commands that include adding tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "abstract class TaskCreationCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Adds the \u003ccode\u003eTask\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e, then pass on to the ui to print them out."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks a list to which the \u003ccode\u003eask\u003c/code\u003e will be added"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(Task task, Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return ui.showAddSuccessful(task, tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 21
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handing commands starting with \u003ccode\u003etodo\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class ToDoCommand extends TaskCreationCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eToDoCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public ToDoCommand(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a new \u003ccode\u003eToDo\u003c/code\u003e task and add pass it to \u003ccode\u003eTaskCreationCommand\u003c/code\u003e\u0027s execute method"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * to add the task to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert tasks !\u003d null : \"tasklist object cannot be null\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert ui !\u003d null : \"ui object cannot be null\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return super.execute(task, ui, tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 39
    }
  },
  {
    "path": "src/main/java/duke/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"undo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public UndoCommand() { }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Undo the previous action that changes the array list (done, add, delete)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return A message noticing that the undo process is successful"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert tasks !\u003d null : \"task list object cannot be null\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert ui !\u003d null : \"ui object cannot be null\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean canUndo \u003d tasks.undo();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return canUndo ? ui.showUndoSuccessfulMsg(tasks) : ui.showUnableToUndoMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 24
    }
  },
  {
    "path": "src/main/java/duke/command/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String COMMAND \u003d \"update\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String DESCRIPTION_SPECIFIER \u003d \"description\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static final String TIME_SPECIFIER \u003d \"time\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String[] changes;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    // cannot have \u003ccode\u003e /\u003ccode\u003e in the command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Create an updateCommand"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param stringOfChanges List of updates"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public UpdateCommand(int index, String stringOfChanges) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        changes \u003d (\" \" + stringOfChanges.trim()).split(\" /\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private boolean checkValidation() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String[] specifiers \u003d {DESCRIPTION_SPECIFIER, TIME_SPECIFIER};"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        int[] appearanceTimes \u003d {0, 0};"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        for (String change : changes) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (change.equals(\"\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            boolean hasSpecifier \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            for (int i \u003d 0; i \u003c specifiers.length; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String specifier \u003d specifiers[i];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (change.indexOf(specifier) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    hasSpecifier \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    appearanceTimes[i]++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (appearanceTimes[i] \u003e 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (!hasSpecifier) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Change the task\u0027s info if applicable"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return A message noticing that the task has been updated"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws DukeException If some specifier cannot be identified"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (!checkValidation()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new DukeException(\"Invalid specifier\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Task newTask \u003d tasks.get(index).clone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            for (String change : changes) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                handleDescriptionChange(newTask, change);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                handleTimeChange(newTask, change);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks.set(index, newTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return ui.showUpdateComplete(index + 1, newTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @SuppressWarnings(\"checkstyle:SeparatorWrap\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private void handleTimeChange(Task newTask, String change) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (change.indexOf(TIME_SPECIFIER) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (!(newTask instanceof Deadline || newTask instanceof Event)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new DukeException(\"Invalid specifier\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String newTime \u003d change.substring(TIME_SPECIFIER.length()).trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (newTime.equals(\"\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new DukeException(\"new time cannot be empty\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (newTask instanceof Deadline) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                //CHECKSTYLE:OFF: SeparatorWrap"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                ((Deadline) newTask).setTime(newTime);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                //CHECKSTYLE:ON: SeparatorWrap"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (newTask instanceof Event) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                //CHECKSTYLE:OFF: SeparatorWrap"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                ((Event) newTask).setTime(newTime);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                //CHECKSTYLE:ON: SeparatorWrap"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private void handleDescriptionChange(Task newTask, String change) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (change.indexOf(DESCRIPTION_SPECIFIER) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String newDescription \u003d change.substring(DESCRIPTION_SPECIFIER.length()).trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (newDescription.equals(\"\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new DukeException(\"new description cannot be empty\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            newTask.setDescription(newDescription);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 117
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Throws when there is any unexpected behavior in the execution of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eDukeException\u003c/code\u003e object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param message The message of the description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InadequateCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Throws when a command that create task is input but missing some supporting info"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class InadequateCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String typeOfTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String[] missingSections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates an \u003ccode\u003eInadequateCommandException\u003c/code\u003e object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param typeOfTask The type of the task intended to create (\u003ccode\u003eTodo\u003c/code\u003e, \u003ccode\u003eDeadline\u003c/code\u003e,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     *                   or \u003ccode\u003eEvent\u003c/code\u003e)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param missingSections The missing information sections in the input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public InadequateCommandException(String typeOfTask, String... missingSections) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.typeOfTask \u003d typeOfTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.missingSections \u003d missingSections;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Returns the message of the exception"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The message describing the missing sections."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String listing \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        for (int i \u003d 0; i \u003c missingSections.length - 1; i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            listing +\u003d missingSections[i] + \", \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        listing +\u003d missingSections[missingSections.length - 1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"OOPS, the \" + listing + \" of a \" + typeOfTask + \" cannot be empty\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 35
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Throws when the date is in incorrect format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class InvalidDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String INCORRECT_DATE_MSG \u003d \"Sorry, I cannot understand the date, \""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            + \"try to format it in the format: yyyy-MM-dd\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates an \u003ccode\u003eInvalidDateFormatException\u003c/code\u003e object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public InvalidDateFormatException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(INCORRECT_DATE_MSG);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Throws when the index is not an integer, smaller than 0 or larger than the size of the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates an \u003ccode\u003eInvalidIndexException\u003c/code\u003e object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public InvalidIndexException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(\"Invalid index\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 13
    }
  },
  {
    "path": "src/main/java/duke/parser/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Parses a date string to a \u003ccode\u003eLocalDate\u003c/code\u003e object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Parses a date string to a \u003ccode\u003eLocalDate\u003c/code\u003e object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param dateStr The string representing the date"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An \u003ccode\u003eOptional\u003c/code\u003e of \u003ccode\u003eLocalDate\u003c/code\u003e parsed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static Optional\u003cLocalDate\u003e parse(String dateStr) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String[] formats \u003d {\"yyyy-MM-dd\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                            \"yyyy-M-dd\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                            \"yyyy-M-d\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                            \"dd-MM-yyyy\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                            \"dd-M-yyyy\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                            \"d-M-yyyy\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                            \"yyyy/MM/dd\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                            \"dd/MM/yyyy\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                            \"dd/M/yyyy\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                            \"d/M/yyyy\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        for (String format : formats) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(format));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                return Optional.of(date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                // exception is thrown means that cannot parse date in that format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                // if cannot parse date in any format, simply return an empty optional"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 40
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.CloneCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.CloseCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.StartCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.UndoCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.UpdateCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.InadequateCommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Parses the input from the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Parses the input from the user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param fullCommand The input from the user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return A \u003ccode\u003eCommand\u003c/code\u003e object that can later be executed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws DukeException If the parsing process faces any problem"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String[] splitInput \u003d fullCommand.trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean hasNoFollowUp \u003d splitInput.length \u003d\u003d 1 || splitInput.equals(\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: hello"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean hasStartSpecifier \u003d splitInput[0].equals(StartCommand.COMMAND);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isStartCommand \u003d hasStartSpecifier \u0026\u0026 hasNoFollowUp;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: bye"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean hasExitSpecifier \u003d splitInput[0].equals(ExitCommand.COMMAND);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isExitCommand \u003d hasExitSpecifier \u0026\u0026 hasNoFollowUp;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean hasListSpecifier \u003d splitInput[0].equals(ListCommand.COMMAND);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isListCommand \u003d hasListSpecifier \u0026\u0026 hasNoFollowUp;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: delete [index]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isDeleteCommand \u003d splitInput[0].equals(DeleteCommand.COMMAND);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: done [index]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isDoneCommand \u003d splitInput[0].equals(DoneCommand.COMMAND);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        //command: find [keyword(s)]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isFindCommand \u003d splitInput[0].equals(FindCommand.COMMAND);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: todo [description]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isTodoCommand \u003d splitInput[0].equals(ToDoCommand.COMMAND);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: deadline [description] /by [time]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // or: event [description] /at [time]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isDeadlineCommand \u003d splitInput[0].equals(DeadlineCommand.COMMAND);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isEventCommand \u003d splitInput[0].equals(EventCommand.COMMAND);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: undo"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean hasUndoSpecifier \u003d splitInput[0].equals(UndoCommand.COMMAND);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isUndoCommand \u003d hasUndoSpecifier \u0026\u0026 hasNoFollowUp;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: clone [source index] or clone [source index] [destination index]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isCloneCommand \u003d splitInput[0].equals(CloneCommand.COMMAND);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: update [index] \u003coptional\u003e/description [description] \u003coptional\u003e/time [time]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isUpdateCommand \u003d splitInput[0].equals(UpdateCommand.COMMAND);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: close"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean hasCloseSpecifier \u003d splitInput[0].equals(CloseCommand.COMMAND);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isCloseCommand \u003d hasCloseSpecifier \u0026\u0026 hasNoFollowUp;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (isStartCommand) { // command: hello"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return createStartCommand();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (isExitCommand) { // command: bye"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return createExitCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (isListCommand) { // command : list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return createListCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (isDeleteCommand) { // command: delete"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return createDeleteCommand(splitInput);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (isDoneCommand) { // command: done [index]"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return createDoneCommand(splitInput);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (isFindCommand) { //command: find [keyword(s)]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return createFindCommand(splitInput);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (isTodoCommand) { // command: todo [description]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return createTodoCommand(splitInput);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (isDeadlineCommand || isEventCommand) { // command: deadline [description] /by [time]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            // or: event [description] /at [time]"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return createDeadlineOrEventCommand(splitInput);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (isUndoCommand) { // command: undo"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return createUndoCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (isCloneCommand) { // command: clone [source index] or clone [source index] [destination index]"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return createCloneCommand(splitInput);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (isUpdateCommand) { // command: update [index] (/description [description]) (/time [time])"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return createUpdateCommand(splitInput);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (isCloseCommand) { // command: close"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return createCloseCommand();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else { // unrecognised command"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return new Command();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static Command createCloseCommand() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new CloseCommand();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static Command createUpdateCommand(String[] splitInput) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert splitInput.length \u003e\u003d 0 \u0026\u0026 splitInput.length \u003c\u003d 2 : \"size of an array can be lesser than 0\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new DukeException(\"Missing index and specifier(s)\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String[] splitInfo \u003d splitInput[1].trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitInfo.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new DukeException(\"Missing specifier(s)\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            int index \u003d Integer.parseInt(splitInfo[0]) - 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return new UpdateCommand(index, splitInfo[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static Command createUndoCommand() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new UndoCommand();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static Command createStartCommand() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new StartCommand();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static Command createDeadlineOrEventCommand(String[] splitInput) throws InadequateCommandException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String timeSpecifier;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isDeadline;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitInput[0].equals(DeadlineCommand.COMMAND)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            type \u003d \"deadline\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            timeSpecifier \u003d DeadlineCommand.TIME_SPECIFIER;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            isDeadline \u003d true;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            type \u003d \"event\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            timeSpecifier \u003d EventCommand.TIME_SPECIFIER;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            isDeadline \u003d false;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InadequateCommandException(type, \"description\", \"time\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String content \u003d splitInput[1];"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String[] split2Test \u003d content.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            int timeIdx \u003d content.indexOf(\" \" + timeSpecifier);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (split2Test.length \u003d\u003d 0 || ("
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    split2Test.length \u003d\u003d 1"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                            \u0026\u0026 (split2Test[0].equals(timeSpecifier) || split2Test[0].equals(\"\"))"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    )"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            ) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String[] missing \u003d {\"description\", \"time\"};"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new InadequateCommandException(type, missing);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (timeIdx \u003d\u003d 0 || content.indexOf(timeSpecifier) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new InadequateCommandException(type, \"description\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (timeIdx \u003d\u003d -1 || timeIdx + 5 \u003e\u003d content.length()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new InadequateCommandException(type, \"time\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String description \u003d content.substring(0, timeIdx).trim();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String time \u003d content.substring(timeIdx + 5).trim();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (time.split(\"\\\\s+\").length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new InadequateCommandException(type, \"time\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            // return"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (isDeadline) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                return new DeadlineCommand(description, time);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                return new EventCommand(description, time);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static Command createTodoCommand(String[] splitInput) throws InadequateCommandException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitInput.length \u003d\u003d 1 || splitInput[1].equals(\"\")) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InadequateCommandException(\"todo\", \"description\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new ToDoCommand(splitInput[1]);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static Command createFindCommand(String[] splitInput) throws DukeException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new DukeException(\"Missing keyword\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new FindCommand(splitInput[1].split(\"\\\\s+\"));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static Command createDoneCommand(String[] splitInput) throws InvalidIndexException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new DoneCommand(splitInput[1]);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static Command createDeleteCommand(String[] splitInput) throws InvalidIndexException {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new DeleteCommand(splitInput[1]);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static Command createListCommand() {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static Command createExitCommand() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static Command createCloneCommand(String[] splitInput) throws InvalidIndexException {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new CloneCommand(splitInput[1]);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 222
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Retrieves data from the database and write new data to it."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creats a new \u003ccode\u003eStorage\u003c/code\u003e object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param filePath The path of the file that this object interacts with"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert filePath !\u003d null : \"file path cannot be null\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Read the data from the file at the file path."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An \u003ccode\u003eArrayList\u003c/code\u003e containing the \u003ccode\u003eTask\u003c/code\u003es in the database"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws DukeException If there is any unexpected error in the loading process"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert filePath !\u003d null : \"file path cannot be null\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            readFile(file, tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                createFile(file);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } catch (IOException e1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new DukeException(\"Cannot read file\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private void createFile(File file) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String directoryPath \u003d filePath.substring(0, filePath.length() - 8);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        File directory \u003d new File(directoryPath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private void readFile(File file, ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String nextTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String[] splitted \u003d nextTask.split(\"\\\\s+\", 3);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String type \u003d splitted[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            boolean isDone \u003d splitted[1].equals(\"D\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String description \u003d splitted[2];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                newTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                int timeIdx \u003d splitted[2].indexOf(\" /time\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String description \u003d splitted[2].substring(0, timeIdx);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String time \u003d splitted[2].substring(timeIdx + 7);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    newTask \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    newTask \u003d new Event(description, time);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                newTask.markAsDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Writes the data to the file at the file path."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks The data to be written"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void write(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert tasks !\u003d null : \"task list cannot be null\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert filePath !\u003d null : \"file path cannot be null\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            clearOldData(f);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            writeFile(tasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new DukeException(\"Cannot write file\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private void clearOldData(File file) throws IOException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            file.delete();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private void writeFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String type;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String time;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String status;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            description \u003d task.getDescription();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            status \u003d task.isDone() ? \"D\" : \"ND\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            time \u003d task.getTime().equals(\"\") ? \"\" : \"/time \" + task.getTime();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                type \u003d \"T\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                type \u003d \"D\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                type \u003d \"E\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String dataPresentation \u003d type + \" \" + status + \" \" + description + \" \" + time + \"\\n\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            fw.write(dataPresentation);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 140
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.parser.DateParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Represents a deadline task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String dueTimeStr;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private LocalDate dueTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private boolean isInDateFormat;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Create a \u003ccode\u003eDeadline\u003c/code\u003e object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param dueTime The time at which the task is due."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Deadline(String description, String dueTime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        parseDueTime(dueTime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private void parseDueTime(String dueTime) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert dueTime !\u003d null : \"due time cannot be null\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.dueTimeStr \u003d dueTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Optional\u003cLocalDate\u003e optDate \u003d DateParser.parse(dueTime);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (optDate.isPresent()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            this.dueTime \u003d optDate.get();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            isInDateFormat \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            isInDateFormat \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Represents the type of this task through an icon."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An icon"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Converts the task to string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The string representation of this task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return getTypeIcon() + \" \" + super.getStatusIcon() + \" \" + super.description + \" (by: \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + (isInDateFormat"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                        ? dueTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                        : dueTimeStr)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Checks whether this task is due on a specified day."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param cmpDate A date that is being queried"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return True if this task is due on that day, false otherwise"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean isDueOn(LocalDate cmpDate) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert cmpDate !\u003d null : \"compared date cannot be null\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (!isInDateFormat) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return cmpDate.isEqual(dueTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void setTime(String newDueTimeStr) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        parseDueTime(newDueTimeStr);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Gets the time that this task is due."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The time string input by the user"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return dueTimeStr;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Task clone() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task clonedTask \u003d new Deadline(super.description, dueTimeStr);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return this.isDone ? clonedTask.markAsDone() : clonedTask;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 92
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.parser.DateParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Represents an event task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private LocalDate startTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private LocalDate endTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private boolean isInDateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates an \u003ccode\u003eEvent\u003c/code\u003e object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param eventTime The duration which the event happens"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        parseEventTime(eventTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private void parseEventTime(String eventTime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert eventTime !\u003d null : \"event time cannot be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        isInDateFormat \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        int idx \u003d eventTime.indexOf(\" to \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (idx !\u003d -1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Optional\u003cLocalDate\u003e optStart \u003d DateParser.parse(eventTime.substring(0, idx).trim());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Optional\u003cLocalDate\u003e optEnd \u003d DateParser.parse(eventTime.substring(idx + 4).trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (optStart.isPresent() \u0026\u0026 optEnd.isPresent()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                startTime \u003d optStart.get();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                endTime \u003d optEnd.get();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (endTime.compareTo(startTime) \u003e\u003d 0) { // if end happens after start"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    isInDateFormat \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Represents the type of this task through an icon."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An icon"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Converts the task to string."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The string representation of this task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return getTypeIcon() + \" \" + super.getStatusIcon() + \" \" + super.description + \" (at: \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + (isInDateFormat"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    ? \"from \" + startTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                        + \" to \" + endTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    : eventTime)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Checks whether this task is occurring on a specified day."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param cmpDate A date that is being queried"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return True if this task occurs on that day, false otherwise"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean isOccurringOn(LocalDate cmpDate) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert cmpDate !\u003d null : \"compared date cannot be null\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (!isInDateFormat) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return cmpDate.compareTo(startTime) \u003e 0 \u0026\u0026 cmpDate.compareTo(endTime) \u003c 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void setTime(String newEventTime) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        parseEventTime(newEventTime);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Gets the time that this task is due."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The time string input by the user"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Task clone() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task clonedTask \u003d new Event(super.description, eventTime);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return this.isDone ? clonedTask.markAsDone() : clonedTask;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 100
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Represents the task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert description !\u003d null : \"description cannot be null\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return A new task that has been marked as done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    Task markAsUndone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Represents the done status of the task through icon."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An icon"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"]\"; //return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        //return \"[\" + (isDone ? \"Done\" : \"Not done\") + \"]\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Notifies whether this task is done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return True if this task is done, False otherwise"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Gets the description of this task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The description of this task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Changes the description of the task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param newDescription The new description"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void setDescription(String newDescription) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.description \u003d newDescription;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Gets the time which this task happens."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An empty String if the task is of type Todo, else return the time string input by the user"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Represents the type of this task through an icon."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An icon"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public abstract String getTypeIcon();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Clones this task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return A new task that contain the same information as this task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public abstract Task clone();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Converts the task to string."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The string representation of this task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 93
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Keeps track of the tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String ADD_KEY \u003d \"add\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String REMOVE_KEY \u003d \"remove\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String DONE_KEY \u003d \"done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String UPDATE_KEY \u003d \"update\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private ArrayList\u003cPair\u003cString, Pair\u003cTask, Integer\u003e\u003e\u003e prevCommands; // \u003ccommand, \u003ctask, index\u003e\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a task list with elements."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks Elements of the task list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public TaskList(Collection\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        prevCommands \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a task list with no elements."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task The task to be added"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.add(tasks.size(), task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Adds a task to the specified position in the task list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param index The position where the task will be added"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task The task to be added"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void add(int index, Task task) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert task !\u003d null : \"task cannot be null\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        tasks.add(index, task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Pair\u003cTask, Integer\u003e infoPair \u003d new Pair\u003c\u003e(null, index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        prevCommands.add(new Pair\u003c\u003e(ADD_KEY, infoPair));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void set(int index, Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert task !\u003d null : \"task cannot be null\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Pair\u003cTask, Integer\u003e infoPair \u003d new Pair\u003c\u003e(tasks.get(index), index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        prevCommands.add(new Pair\u003c\u003e(UPDATE_KEY, infoPair));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        tasks.set(index, task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Removes the task at the specified position and returns it."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param index The position of the task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The removed task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"index out of bound\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Pair\u003cTask, Integer\u003e infoPair \u003d new Pair\u003c\u003e(tasks.get(index), index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        prevCommands.add(new Pair\u003c\u003e(REMOVE_KEY, infoPair));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Gets the task at the specified position without removing it."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param index The position of the task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The task at that position"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"index out of bound\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Marks the task at the specified position as done."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param index The position of the task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"index out of bound\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        tasks.set(index, tasks.get(index).markAsDone());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Pair\u003cTask, Integer\u003e infoPair \u003d new Pair\u003c\u003e(null, index);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        prevCommands.add(new Pair\u003c\u003e(DONE_KEY, infoPair));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The size of the task list"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Undo the latest change to the Task List"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return true if able to undo, false otherwise"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean undo() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (prevCommands.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Pair\u003cString, Pair\u003cTask, Integer\u003e\u003e prevCommand \u003d prevCommands.remove(prevCommands.size() - 1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String key \u003d prevCommand.getKey();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Pair\u003cTask, Integer\u003e info \u003d prevCommand.getValue();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (key.equals(ADD_KEY)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            assert info.getValue() !\u003d null : \"undo error, cannot store index\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            int index \u003d info.getValue();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks.remove(index);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (key.equals(REMOVE_KEY)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            assert info.getKey() !\u003d null : \"undo error, cannot store task\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            assert info.getValue() !\u003d null : \"undo error, cannot store index\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            int index \u003d info.getValue();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Task task \u003d info.getKey();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks.add(index, task);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (key.equals(DONE_KEY)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            assert info.getValue() !\u003d null : \"undo error, cannot store index\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            int index \u003d info.getValue();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks.set(index, tasks.get(index).markAsUndone());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else if (key.equals(UPDATE_KEY)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            assert info.getKey() !\u003d null : \"undo error, cannot store task\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            assert info.getValue() !\u003d null : \"undo error, cannot store index\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            int index \u003d info.getValue();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Task task \u003d info.getKey();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks.set(index, task);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            System.out.println(\"error in undoing\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Converts the task list to string."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The string representation of the task list"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            str +\u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        str +\u003d tasks.size() + \". \" + tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Selects tasks that matches the predicate."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param predicate The condition that the selected tasks have to fulfill"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return A new \u003ccode\u003eTaskList\u003c/code\u003e of the selected tasks"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public TaskList filter(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assert predicate !\u003d null : \"predicate cannot be null\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        List\u003cTask\u003e filteredTask \u003d tasks.stream().filter(predicate).collect(Collectors.toList());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new TaskList(filteredTask);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 170
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Represents a todo task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Create a \u003ccode\u003eToDo\u003c/code\u003e object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Represents the type of this task through an icon."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An icon"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Converts the task to string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The string representation of this task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return getTypeIcon() + \" \" + super.getStatusIcon() + \" \" + super.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Task clone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task clonedTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return this.isDone ? clonedTask.markAsDone() : clonedTask;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 38
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private DialogBox(String text, Image img, boolean isError) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.setSpacing(10);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.getStylesheets().add("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Objects.requireNonNull(this.getClass().getClassLoader().getResource(\"style/DialogBox.css\")).toString()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        dialog.setFont(new Font(\"Courier New\", 13));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Circle clip \u003d new Circle(displayPicture.getX() + 15, displayPicture.getY() + 15, 15);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (isError) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            dialog.setTextFill(Color.RED);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new DialogBox(text, img, false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img, boolean isError) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        var db \u003d new DialogBox(text, img, isError);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 76
    }
  },
  {
    "path": "src/main/java/duke/ui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private final String filePath \u003d System.getProperty(\"user.dir\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            + (System.getProperty(\"user.dir\").endsWith(\"text-ui-test\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            ? \"/test_data/duke.txt\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            : \"/data/duke.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Duke duke \u003d new Duke(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            scene.getStylesheets()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    .add(this.getClass().getClassLoader().getResource(\"style/MainWindow.css\").toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            stage.getIcons().add("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    new Image(this.getClass().getClassLoader().getResource(\"images/crm.png\").toString())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void stop() throws Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        duke.cleanUp();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 47
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private ImageView sendImage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    // Icons made by \u003ca href\u003d\"http://www.freepik.com/\" title\u003d\"Freepik\"\u003eFreepik\u003c/a\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    // from \u003ca href\u003d\"https://www.flaticon.com/\" title\u003d\"Flaticon\"\u003e www.flaticon.com\u003c/a\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/engineer.jpg\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/crm.jpg\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    // Icons made by \u003ca href\u003d\"https://www.flaticon.com/authors/freepik\" title\u003d\"Freepik\"\u003eFreepik\u003c/a\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    // from \u003ca href\u003d\"https://www.flaticon.com/\" title\u003d\"Flaticon\"\u003e www.flaticon.com\u003c/a\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Image sendIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/send.png\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Initialize the scene"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        sendImage.setImage(sendIcon);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                DialogBox.getDukeDialog(new Ui().showWelcome(), dukeImage, false)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Pair\u003cString, Duke.ResponseType\u003e responsePair \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String response \u003d responsePair.getKey();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Duke.ResponseType type \u003d responsePair.getValue();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage, type \u003d\u003d Duke.ResponseType.ERROR)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        );"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 73
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Interacts with the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static String horizontalLine \u003d \"_______________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Prints the welcome message"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String greeting \u003d \"Hello human, I\u0027m Duke the supporting chatbot\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"What can I do for you?\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return logo + \"\\n\" + horizontalLine + \"\\n\" + greeting;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Shows the items in the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks The list of items to be shown"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String lazyHumanBash \u003d \"You have nothing in your list. Find something to do you human!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String showTasksMsg \u003d \"Here are the task(s) in your list:\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return lazyHumanBash;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return showTasksMsg + \"\\n\" + tasks.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Notifies the user that the file cannot be loaded."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showFileLoadingError() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(\"Data cannot be loaded\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Prints out any error message that passed in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param errorMessage The error message to be printed"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showError(String errorMessage) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Says goodbye to the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showGoodbye() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"Bye human. See you again soon!\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Prints out the number of item in the task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks The task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String taskReport(TaskList tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"You have \" + tasks.size() + \" task(s) in your list\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Notifies the user after successfully deleting a task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task The deleted task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks The remaining task list"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showDeleteTask(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"Noted. I\u0027ve deleted this task:\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + taskReport(tasks);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Notifies the user after successfully marking a task as done."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task The task being marked as done"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showMarkAsDoneTask(Task task) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"Good job bud! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + task.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Notifies the user whenever the system cannot understand the input command."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showUnrecognizedCommandMessage() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"I don\u0027t understand a single word you say, human!\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"Speak robot language pls\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Notifies the user after successfully add a task into a task list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task The added task"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks The task list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showAddSuccessful(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + taskReport(tasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Show the user the result of a find command."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks The list of tasks that fulfill the requirement"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The message  results"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showFindResult(TaskList tasks) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return \"Sorry, I cannot find anything from your list that matches your keyword(s)\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"Here are the matching task(s) in your list: \\n\" + tasks.toString();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Show this message when undoing a command successfully"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks the new task list after undoing the command"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The message noticing that the user has successfully undo a command"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showUndoSuccessfulMsg(TaskList tasks) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"You have undone successfully. Here is your current list:\\n\" + tasks.toString();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Show this message when cannot undo anymore"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The message noticing that the user cannot undo anymore"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showUnableToUndoMessage() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"You cannot undo anymore.\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Show this message when a task is cloned"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task The cloned task"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The message noticing that the task has been cloned"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showCloneSuccess(Task task) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"I have cloned this task:\\n\" + task.toString();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Show this message after updating a task"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param index The positon of the updated task"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task The updated version of the task"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The message noticing that the task has been updated"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String showUpdateComplete(int index, Task task) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"The task at position \" + index + \" has been updated to this:\\n\" + task.toString();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 156
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003cjavafx.scene.layout.AnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            \u003cgraphic\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \u003cImageView fx:id\u003d\"sendImage\" fitHeight\u003d\"28.0\" fitWidth\u003d\"33.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            \u003c/graphic\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "\u003c/javafx.scene.layout.AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 24
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 13
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void undoneDeadlineToString_taskDescription_stringPresentation() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task test \u003d new Deadline(\"test task\", \"5 o\u0027clock\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"[D] [\" + CROSS_ICON + \"] test task (by: 5 o\u0027clock)\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d test.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void doneTaskToString_taskDescription_stringPresentation() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task test \u003d new Deadline(\"test task\", \"5 o\u0027clock\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"[D] [\" + TICK_ICON + \"] test task (by: 5 o\u0027clock)\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d test.markAsDone().toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void doneTaskToString_validDateInput1_stringPresentation() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task test \u003d new Deadline(\"test task\", \"20/04/2019\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"[D] [\" + CROSS_ICON + \"] test task (by: 20 Apr 2019)\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d test.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void doneTaskToString_validDateInput2_stringPresentation() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task test \u003d new Deadline(\"test task\", \"20/4/2019\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"[D] [\" + CROSS_ICON + \"] test task (by: 20 Apr 2019)\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d test.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 42
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void undoneTaskToString_taskDescription_stringPresentation() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task test \u003d new ToDo(\"test task\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"[T] [\" + CROSS_ICON + \"] test task\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d test.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void doneTaskToString_taskDescription_stringPresentation() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task test \u003d new ToDo(\"test task\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"[T] [\" + TICK_ICON + \"] test task\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d test.markAsDone().toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 26
    }
  },
  {
    "path": "src/test/java/duke/ui/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @SuppressWarnings(\"checkstyle:Regexp\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Task[] tasks \u003d {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        new ToDo(\"read book\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        new Deadline(\"submit project\", \"20/4/2019\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        new Event(\"shoppee\", \"12/4/2019 to 02/9/2019\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    };"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private ArrayList\u003cTask\u003e testSample \u003d new ArrayList\u003c\u003e(Arrays.asList(tasks));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    // @author aidoxe-123"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    // As reference from https://github.com/nus-cs2103-AY2021S1/forum/issues/65"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    // Reused from https://www.baeldung.com/java-testing-system-out-println with minor modifications"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void tearDown() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.setOut(standardOut);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showTasks_threeTypesOfTasks_success() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d new Ui().showTasks(new TaskList(testSample));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"Here are the task(s) in your list:\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"1. [T] [\" + CROSS_ICON + \"] read book\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"2. [D] [\" + CROSS_ICON + \"] submit project (by: 20 Apr 2019)\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"3. [E] [\" + CROSS_ICON + \"] shoppee (at: from 12 Apr 2019 to 2 Sep 2019)\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        //assertEquals(expected.replaceAll(\"\\\\p{Cntrl}\", \" \"),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        //        actual.replaceAll(\"\\\\p{Cntrl}\", \" \"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Assertions.assertEquals(expected, actual);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 58,
      "-": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "deadline book /by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "deadline book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "deadline /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event project meeting /at"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event project /at"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event /at Mon 2-4pm"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "done something else"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "delete something else"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 24
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "REM delete the old data"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "del .\\test_data\\duke.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "aidoxe-123": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "# delete data from previous run"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "if [ -e \"./test_data/duke.txt\" ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    rm ./test_data/duke.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "if"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    javac -cp ../src/main/java -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "  )"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "aidoxe-123": 14
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/Command.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/DeadlineCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/DeleteCommand.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/DoneCommand.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/EventCommand.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/ExitCommand.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/FindCommand.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/ListCommand.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/TaskCreationCommand.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/ToDoCommand.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/exception/DukeException.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/exception/InadequateCommandException.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/exception/InvalidDateFormatException.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/exception/InvalidIndexException.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/parser/DateParser.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/parser/Parser.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/storage/Storage.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/task/Deadline.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/task/Event.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/task/Task.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/task/TaskList.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/task/ToDo.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/ui/Ui.java"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 24
    }
  },
  {
    "path": "text-ui-test/test_data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "T D borrow book "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "E ND project meeting /time Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 2
    }
  }
]
