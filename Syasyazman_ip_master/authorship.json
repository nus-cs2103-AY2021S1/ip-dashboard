[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    enableAssertions \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "Syasyazman": 16
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003cD\u003e / [✘] / sleep  / 7pm"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 1
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 60
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Main class for Duke"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private GuiUi guiui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    // images of users"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private final Image dekuDuke \u003d new Image(this.getClass().getResourceAsStream(\"/images/deku.jpg\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private final Image bakugoUser \u003d new Image(this.getClass().getResourceAsStream(\"/images/bakugo.jpg\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.guiui \u003d new GuiUi();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (storage.hasFile()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                this.tasks \u003d new TaskList(storage.loadDataFromFile(this.ui));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"file does not exist\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            this.ui.showFileLoadingError();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            this.tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.guiui \u003d new GuiUi();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (storage.hasFile()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                this.tasks \u003d new TaskList(storage.loadDataFromFile(this.ui));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"file does not exist\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            this.ui.showFileLoadingError();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            this.tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        // introduce duke"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.ui.introDuke();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String input \u003d this.ui.getInput();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        // checks for next line of input"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        while (input !\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                if (c !\u003d null) { // input is valid"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    if (c instanceof ExitCommand) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        c.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        break; // terminate program"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        c.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        input \u003d this.ui.getInput();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    input \u003d this.ui.getInput();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    throw new DukeException(\"invalid input\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                this.ui.showInvalidInputError();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        // Step 1. setting up required components"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        // Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        //Step 3. Formatting the window to look as expected"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        stage.setTitle(\"Deku\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        // call introduction of duke"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        introDeku();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        //Step 4. Add functionality to handle user input."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        });"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        });"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Introduces Deku when Gui application launches"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void introDeku() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        dialogContainer.getChildren()"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                .add(DialogBox.getDukeDialog(guiui.printIntro(), dekuDuke));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        assert input !\u003d null;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String response \u003d getResponse(input);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                DialogBox.getUserDialog(input, bakugoUser),"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                DialogBox.getDukeDialog(response, dekuDuke)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        );"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Responses to user"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        if (c !\u003d null) { // input is valid"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (c instanceof ExitCommand) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                return c.guiExecute(this.tasks, this.guiui, this.storage);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                return c.guiExecute(this.tasks, this.guiui, this.storage);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return  guiui.showInvalidInput();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Duke deku \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        deku.run();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "Syasyazman": 233
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import duke.GuiUi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private final Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private final Image dekuDuke \u003d new Image(this.getClass().getResourceAsStream(\"/images/deku.jpg\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private GuiUi guiui \u003d new GuiUi();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().getContainer().getChildren()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    .add(DialogBox.getDukeDialog(guiui.printIntro(), dekuDuke));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 37
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private final Image bakugoUser \u003d new Image(this.getClass().getResourceAsStream(\"/images/bakugo.jpg\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private final Image dekuDuke \u003d new Image(this.getClass().getResourceAsStream(\"/images/deku.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public VBox getContainer() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return dialogContainer;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                DialogBox.getUserDialog(input, bakugoUser),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                DialogBox.getDukeDialog(response, dekuDuke)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 55
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Abstract class for all commands made by Parser"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {};"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String guiExecute(TaskList tasks, GuiUi guiui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    };"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 13
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Handles information regarding Deadline tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public Deadline(String item, String sign, String deadline, LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        super(item, sign);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * returns deadline of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return deadline of task in String"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return date !\u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                ? this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                : this.deadline;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 29
    }
  },
  {
    "path": "src/main/java/duke/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Command that handles instantiation of Deadline tasks in TaskList"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public DeadlineCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Creates a task of deadline type and adds it to task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ui a Ui that interacts with user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (input.contains(\" \") \u0026\u0026 input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String[] inputArr \u003d input.split(\"/by \", 2); // split to get deadline of task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String item \u003d inputArr[0].split(\" \", 2)[1]; // get item and remove \"deadline\" from string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                LocalDate date \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    date \u003d ui.convertToLocalDate(inputArr[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // intentionally empty"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // to catch unsuccessful date conversion"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // actual date will be given when creating task to compensate for it"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Task task \u003d new Deadline(item, \"D\", inputArr[1], date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // add item to list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                tasks.addToList(task); // add to-do task to ls"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // print confirmation of adding task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                ui.confirmAddTask(task, tasks.getIndex());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else { // if format of deadline task is wrong"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"invalid input: \" + input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            ui.showInvalidDeadlineFormatError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Creates a task of deadline type and adds it to task list. Then returns response to user"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param guiui a GuiUi that interacts with user"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a message response to user in String"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String guiExecute(TaskList tasks, GuiUi guiui, Storage storage) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (input.contains(\" \") \u0026\u0026 input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String[] inputArr \u003d input.split(\"/by \", 2); // split to get deadline of task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String item \u003d inputArr[0].split(\" \", 2)[1]; // get item and remove \"deadline\" from string"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                LocalDate date \u003d null;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    date \u003d guiui.convertToLocalDate(inputArr[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // intentionally empty"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // to catch unsuccessful date conversion"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // actual date will be given when creating task to compensate for it"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Task task \u003d new Deadline(item, \"D\", inputArr[1], date);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // add item to list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                tasks.addToList(task); // add to-do task to ls"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // print confirmation of adding task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                return guiui.confirmAddToTaskList(task, tasks.getIndex());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else { // if format of deadline task is wrong"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"invalid input: \" + input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return guiui.showInvalidDeadlineFormat();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 93
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Command that handles deletion of tasks in TaskList"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Deletes task from task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ui a Ui that interacts with user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (input.contains(\" \") \u0026\u0026 parseInt(input.split(\" \", 2)[1]) \u003c\u003d tasks.getIndex() \u0026\u0026"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    parseInt(input.split(\" \", 2)[1]) \u003e 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                tasks.deleteTask(parseInt(input.split(\" \", 2)[1]) - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"invalid input: \" + input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            ui.showInvalidDeleteTaskError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Deletes task from task list. Then returns response to user"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param guiui a GuiUi that interacts with user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a message response to user in String"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String guiExecute(TaskList tasks, GuiUi guiui, Storage storage) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (input.contains(\" \") \u0026\u0026 parseInt(input.split(\" \", 2)[1]) \u003c\u003d tasks.getIndex() \u0026\u0026"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    parseInt(input.split(\" \", 2)[1]) \u003e 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                tasks.deleteTask(parseInt(input.split(\" \", 2)[1]) - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                return \"Successfully deleted!!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"invalid input: \" + input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return guiui.showInvalidDeleteTask();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 58
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Command that handles completion of tasks in TaskList"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public DoneCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Marks a task as completed and reflects it in the task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ui a Ui that interacts with user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (input.contains(\" \") \u0026\u0026 parseInt(input.split(\" \", 2)[1]) \u003c\u003d tasks.getIndex() \u0026\u0026"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    parseInt(input.split(\" \", 2)[1]) \u003e 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                int indexOfTask \u003d parseInt(input.split(\" \", 2)[1]) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                tasks.markDone(indexOfTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                ui.printMarkDone(indexOfTask, tasks.getls());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"invalid input: \" + input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            ui.showInvalidTaskNumberError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Marks a task as completed and reflects it in the task list. Then returns response to user"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param guiui a GuiUi that interacts with user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a message response to user in String"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String guiExecute(TaskList tasks, GuiUi guiui, Storage storage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (input.contains(\" \") \u0026\u0026 parseInt(input.split(\" \", 2)[1]) \u003c\u003d tasks.getIndex() \u0026\u0026"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    parseInt(input.split(\" \", 2)[1]) \u003e 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                int indexOfTask \u003d parseInt(input.split(\" \", 2)[1]) - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                tasks.markDone(indexOfTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                return guiui.printDone(indexOfTask, tasks.getls());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"invalid input: \" + input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return guiui.showInvalidTaskNumber();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 62
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Exception that handles errors from Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 11
    }
  },
  {
    "path": "src/main/java/duke/EditDateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Command that handles editing of task dates in task list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class EditDateCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public EditDateCommand(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Updates the date of task in task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ui a Ui that interacts with user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String[] inputArr \u003d input.split(\" \", 3);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                int indexOfTask \u003d parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                if (indexOfTask \u003c tasks.getIndex() \u0026\u0026 indexOfTask \u003e 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    LocalDate date \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        date \u003d ui.convertToLocalDate(inputArr[2]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        // intentionally empty"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        // to catch unsuccessful date conversion"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        // actual date will be given when creating task to compensate for it"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    Task task \u003d tasks.getTaskByIndex(indexOfTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    tasks.deleteTask(indexOfTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    String taskType \u003d task.getSign();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        case \"\u003cT\u003e\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            ui.showInvalidTaskTypeEditError();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        case \"\u003cD\u003e\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            Deadline newTaskD \u003d new Deadline(task.getItem(), \"D\", inputArr[2], date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            tasks.addToList(newTaskD);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            assert taskType.equals(\"\u003cE\u003e\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            Event newTaskE \u003d new Event(task.getItem(), \"D\", inputArr[2], date);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            tasks.addToList(newTaskE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"invalid input: \" + input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            ui.showInvalidEditDateOfTaskError();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Updates the date of task in task list. Then returns response to user"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param guiui a GuiUi that interacts with user"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a message response to user in String"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String guiExecute(TaskList tasks, GuiUi guiui, Storage storage) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String[] inputArr \u003d input.split(\" \", 3);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                int indexOfTask \u003d parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                if (indexOfTask \u003c tasks.getIndex() \u0026\u0026 indexOfTask \u003e 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    LocalDate date \u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        date \u003d guiui.convertToLocalDate(inputArr[2]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        // intentionally empty"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        // to catch unsuccessful date conversion"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        // actual date will be given when creating task to compensate for it"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    Task task \u003d tasks.getTaskByIndex(indexOfTask - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    String taskType \u003d task.getSign();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        case \"\u003cT\u003e\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            return guiui.showInvalidTaskTypeEdit();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        case \"\u003cD\u003e\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            tasks.deleteTask(indexOfTask - 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            Deadline newTaskD \u003d new Deadline(task.getItem(), \"D\", inputArr[2], date);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            tasks.addToList(newTaskD);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            return \"Successfully updated !!\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            assert taskType.equals(\"\u003cE\u003e\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            tasks.deleteTask(indexOfTask - 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            Event newTaskE \u003d new Event(task.getItem(), \"D\", inputArr[2], date);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            tasks.addToList(newTaskE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                            return \"Successfully updated !!\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    return guiui.showInvalidIndexOfEditTask();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"invalid input: \" + input);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return guiui.showInvalidEditDateOfTask();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 121
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Handles information regarding Event tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public Event(String item, String sign, String time, LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        super(item, sign);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Returns deadline of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return deadline of task in String"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return this.date !\u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                ? this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                : this.time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 29
    }
  },
  {
    "path": "src/main/java/duke/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Command that handles instantiation of Event tasks in TaskList"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public EventCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Creates a task of event type and adds it to task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ui a Ui that interacts with user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (input.contains(\" \") \u0026\u0026 input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String[] inputArr \u003d input.split(\"/at \", 2); // split to get time of task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String item \u003d inputArr[0].split(\" \", 2)[1]; // get item and remove \"deadline\" from string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                LocalDate date \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    date \u003d ui.convertToLocalDate(inputArr[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // intentionally empty"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // to catch unsuccessful date conversion"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // actual date will be given when creating task to compensate for it"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Task task \u003d new Event(item, \"E\", inputArr[1], date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // add item to list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                tasks.addToList(task); // add to-do task to ls"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // print confirmation of adding task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                ui.confirmAddTask(task, tasks.getIndex());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else { // if format of event task is wrong"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"invalid input: \" + input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            ui.showInvalidEventFormatError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Creates a task of event type and adds it to task list. Then returns response to user"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param guiui a GuiUi that interacts with user"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a message response to user in String"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String guiExecute(TaskList tasks, GuiUi guiui, Storage storage) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (input.contains(\" \") \u0026\u0026 input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String[] inputArr \u003d input.split(\"/at \", 2); // split to get time of task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String item \u003d inputArr[0].split(\" \", 2)[1]; // get item and remove \"deadline\" from string"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                LocalDate date \u003d null;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    date \u003d guiui.convertToLocalDate(inputArr[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // intentionally empty"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // to catch unsuccessful date conversion"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // actual date will be given when creating task to compensate for it"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Task task \u003d new Event(item, \"E\", inputArr[1], date);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // add item to list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                tasks.addToList(task); // add to-do tassk to ls"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // print confirmation of adding task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                return guiui.confirmAddToTaskList(task, tasks.getIndex());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else { // if format of event task is wrong"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"invalid input: \" + input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return guiui.showInvalidEventFormat();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 93
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Command that handles termination of Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Stores task list in hard disk and prints exit for Duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ui a Ui that interacts with user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            ui.sayBye();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            ui.showUnsuccessfulFileWriteError();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Stores task list in hard disk and prints exit for Duke. Then returns response to user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param guiui a GuiUi that interacts with user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a message response to user in String"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String guiExecute(TaskList tasks, GuiUi guiui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return guiui.printBye();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return guiui.showUnsuccessfulFileWrite();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 44
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Command that handles searching of keywords in task list of TaskList"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Searches the task list to find tasks that contains the keyword"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ui a Ui that interacts with user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        List\u003cTask\u003e ls \u003d tasks.getls();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        List\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "       // adds tasks which contains user input as substring"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        for (Task task : ls) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (task.getItem().contains(this.input)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                assert task !\u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                output.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        if (!output.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            ui.showSearchResults(output);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            ui.showEmptySearchResults();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Searches the task list to find tasks that contains the keyword. Then returns response to user"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param guiui a GuiUi that interacts with user"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a message response to user in String"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String guiExecute(TaskList tasks, GuiUi guiui, Storage storage) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        List\u003cTask\u003e ls \u003d tasks.getls();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        List\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        // adds tasks which contains user input as substring"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        for (Task task : ls) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (task.getItem().contains(this.input)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                output.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        if (!output.isEmpty()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return guiui.showSearch(output);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return guiui.showEmptySearch();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 69
    }
  },
  {
    "path": "src/main/java/duke/GuiUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Handles input from user interactions for GUI"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class GuiUi {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public GuiUi() { }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * returns introduction message from deku"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return introduction message in String"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String printIntro() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"Hiii I\u0027m Deku (\u003d^.^\u003d) How are you doing today ?\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"Is there anything I can help you with ?\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * returns exit message for deku"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return exit message in String"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String printBye() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"oh man ... bye ~~ o.o\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Provides user with task list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param index an integer representing length of task list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ls a List containing user\u0027s tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String getTaskList(int index, List\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String results \u003d \"Here\u0027s your amazing task list : \\n\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        for (int i \u003d 0; i \u003c index; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Task task \u003d ls.get(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String item \u003d task.getItem();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String status \u003d task.getStatus();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String taskType \u003d task.getSign();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (task instanceof Todo) { // if task is to-do"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                results +\u003d String.valueOf(num) + \". \" + taskType + \" \" + status + \" \" + item + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else if (task instanceof Deadline) { // if task is deadline"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Deadline actualTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                results +\u003d String.valueOf(num) + \". \" + taskType + \" \" +  status + \" \" + item +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        \" -\u003e by : \" + actualTask.getDeadline() + \"\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else { // if task type if event"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Event actualTask \u003d (Event) task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                results +\u003d String.valueOf(num) + \". \" + taskType + \" \" + status + \" \" + item +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        \" -\u003e at : \" + actualTask.getTime() + \"\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Provides user with confirmation of task completion"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param index an integer representing completed task\u0027s number"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ls a List containing user\u0027s tasks"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String printDone(int index, List\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Task task \u003d ls.get(index);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String item \u003d task.getItem();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String status \u003d task.getStatus();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String taskType \u003d task.getSign();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        int num \u003d index + 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Yayyyy !! Letsgedditt\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        if (task instanceof Todo) { // if task is to-do"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return \"Yayyyy !! Letsgedditt\\n\\n\" +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    num + \". \" + taskType + \" \" + status + \" \" + item;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else if (task instanceof Deadline) { // if task is deadline"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Deadline actualTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return \"Yayyyy !! Letsgedditt\\n\" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    num + \". \" + taskType + \" \" +  status + \" \" + item + \" -\u003e by : \" + actualTask.getDeadline();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else { // if task is event"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Event actualTask \u003d (Event) task;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return \"Yayyyy !! Letsgedditt\\n\" +"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    num + \". \" + taskType + \" \" + status + \" \" + item + \" -\u003e at : \" + actualTask.getTime();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Prints the task that has just been added to task list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param task user\u0027s task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param index an integer representing number of total tasks"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String confirmAddToTaskList(Task task, int index) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String item \u003d task.getItem();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String status \u003d task.getStatus();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String taskType \u003d task.getSign();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        if (task instanceof Todo) { // if task is to-do"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return \"Okie ! I\u0027ve added this task for you : \\n\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    taskType + \" \" + status + \" \" + item + \"\\n\\n\" +"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    \"You have a total of \" + index + \" task(s) in your list !\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else if (task instanceof Deadline) { // if task is deadline"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Deadline actualTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return \"Okie ! I\u0027ve added this task for you : \\n\" +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    taskType + \" \" +  status + \" \" + item + \" -\u003e by : \" + actualTask.getDeadline() + \"\\n\" +"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    \"You have a total of \" + index + \" task(s) in your list !\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else { // if task is event"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Event actualTask \u003d (Event) task;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return \"Okie ! I\u0027ve added this task for you : \\n\" +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    taskType + \" \" + status + \" \" + item + \" -\u003e at : \" + actualTask.getTime() + \"\\n\" +"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    \"You have a total of \" + index + \" task(s) in your list !\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Returns date in local date format"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param strDate a String of date given by user input"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a date in local date format"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public LocalDate convertToLocalDate(String strDate) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        List\u003cString\u003e dateFormats \u003d Arrays.asList(\"yyyy-MM-dd HH:mm\", \"yyyy-MM-dd\", \"yyyy-M-d\", \"yyyy-M-dd\","
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"yyyy-MM-d\", \"yyyy/MM/dd\", \"yyyy/M/d\", \"yyyy/M/dd\", \"yyyy/MM/d\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        // loop through each possible format and check if strDate can be parsed"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        for(String format: dateFormats){"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                return LocalDate.parse(strDate, formatter);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // intentionally empty"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // to catch unsuccessful date parsing"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        throw new IllegalArgumentException(\"Invalid input for date. Given \u0027\"+strDate+\"\u0027, \" +"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"expecting format yyyy-MM-dd HH:mm:ss.SSS or yyyy-MM-dd.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * returns list of task that matches search"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ls a list of tasks from TaskList"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a string of tasks"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showSearch(List\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String results \u003d \"Here\u0027s your search result(s) :\\n\\n\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        for (int i \u003d 0; i \u003c ls.size(); i++) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Task task \u003d ls.get(i);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String item \u003d task.getItem();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String status \u003d task.getStatus();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String taskType \u003d task.getSign();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (task instanceof Todo) { // if task is to-do"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                results +\u003d String.valueOf(num) + \". \" + taskType + \" \" + status + \" \" + item + \"\\n\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else if (task instanceof Deadline) { // if task is deadline"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Deadline actualTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                results +\u003d  String.valueOf(num) + \". \" + taskType + \" \" +  status + \" \" + item +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        \" -\u003e by : \" + actualTask.getDeadline() + \"\\n\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else { // if task type if event"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Event actualTask \u003d (Event) task;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                results +\u003d String.valueOf(num) + \". \" + taskType + \" \" + status + \" \" + item +"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        \" -\u003e at : \" + actualTask.getTime() + \"\\n\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showEmptySearch() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"Sorry there are no results that match your search :((\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showFileLoading() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"File cannot be loaded !!\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showInvalidInput() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"Sorry i don\u0027t mean to be offensive but i don\u0027t get what you\u0027re saying :(\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showInvalidEventFormat() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"Oh no !! Your format should be \\\"event ____ /at ____\\\"\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showInvalidDeadlineFormat() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"Oh no !! Your format should be \\\"deadline ____ /by ____\\\"\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showInvalidTodoFormat() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"Oh no !! I think you forgot to add your todo description :O\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showInvalidTaskNumber() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"Oops ... you should provide a valid task number to complete ~\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showInvalidDeleteTask() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"Oops ... you should provide a valid task number to delete ~\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showUnsuccessfulFileWrite() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"Unsuccessful file writing :(\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showInvalidEditDateOfTask() {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"Oh no !! Your format should be \\\"edit (task no.) (new date)\\\"\";"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showInvalidTaskTypeEdit() {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"Im so sorry but I only edit dates of deadlines or events !\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String showInvalidIndexOfEditTask() {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return \"Oops ... you should provide a valid task number to edit ~\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 234
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Command that handles retrieval of task list in TaskList"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Retrieves task list for user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ui a Ui that interacts with user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        List\u003cTask\u003e taskLs \u003d tasks.getls();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        int index \u003d tasks.getIndex();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        ui.getList(index, taskLs);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Retrieves task list for user. Then returns response to user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param guiui a GuiUi that interacts with user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a message response to user in String"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String guiExecute(TaskList tasks, GuiUi guiui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        List\u003cTask\u003e taskLs \u003d tasks.getls();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        int index \u003d tasks.getIndex();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return guiui.getTaskList(index, taskLs);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 38
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Handles and makes sense of user input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Makes sense of user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param input a String that represents user\u0027s input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return user\u0027s input as a specific command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        if (input.equals(\"bye\")) { // if user wants to exit task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else if (input.equals(\"list\")) { // if user calls for list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else { // if user wants to complete a task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            switch (inputArr[0]) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                case \"done\": // if task type is to-do"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    assert inputArr[0].equals(\"done\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    return new DoneCommand(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                case \"todo\": // if task type is deadline"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    assert inputArr[0].equals(\"todo\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    return new TodoCommand(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                case \"deadline\": // if task type is deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    assert inputArr[0].equals(\"deadline\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    return new DeadlineCommand(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                case \"event\":  // if task type is event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    assert inputArr[0].equals(\"event\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                case \"delete\": // if user wants to delete a task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    assert inputArr[0].equals(\"delete\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    return new DeleteCommand(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                case \"find\": // if user wants to search a keyword"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    assert inputArr[0].equals(\"find\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    return new FindCommand(inputArr[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                case \"edit\": // if user wants to edit a task\u0027s date"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    assert inputArr[0].equals(\"edit\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    return new EditDateCommand(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                default: // if input is not a task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 49
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Handles storage of tasks in a hard disk file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.file \u003d new File(filepath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * checks if hard disk file directory exists"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return whether the hard disk file exists"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public boolean hasFile() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"Desktop\", \"CS2103\", \"Projects\", \"iP\", \"data\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"src.main.java.duke.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return java.nio.file.Files.exists(path);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Writes task to hard disk file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param writer a FileWriter to write content into hard disk file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ls a List that contains task list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void addTasksToFile(FileWriter writer, List\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (writer !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                for (Task task : ls) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // get details about task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    String item \u003d task.getItem();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    String status \u003d task.getStatus();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    String taskType \u003d task.getSign();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // check task type"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    if (task instanceof Todo) { // if task is to-do"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        writer.write(taskType + \" / \" + status + \" / \" + item + \"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    } else if (task instanceof Deadline) { // if task is deadline"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        Deadline actualTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        writer.write(taskType + \" / \" +  status + \" / \" + item + \" / \" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                                actualTask.getDeadline() + \"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    } else { // if task is event"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        Event actualTask \u003d (Event) task;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        writer.write(taskType + \" / \" + status + \" / \" + item + \" / \" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                                actualTask.getTime() + \"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new IOException(\"invalid writer\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            System.out.println(\"An error occurred: invalid writer\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Retrieves hard disk file\u0027s data into a task list"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ui a Ui that interacts with user"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a list of tasks to be added to task list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public List\u003cTask\u003e loadDataFromFile(Ui ui) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Scanner sc \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        List\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (this.file !\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    String[] inputArr \u003d line.split(\" / \", 3);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    String taskType \u003d inputArr[0];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    String status \u003d inputArr[1];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    String restOfTaskInfo \u003d inputArr[2];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    Task newTask \u003d createTask(taskType, status, restOfTaskInfo, ui);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    ls.add(newTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new FileNotFoundException(\"File not found\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            System.out.println(\"File not found!!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return ls;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Returns a task based on specific task type"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param taskType type of task that is to be created"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param status completion status of task"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param restOfTaskInfo remaining task information"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ui deals with interaction with user"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a task object"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public Task createTask(String taskType, String status, String restOfTaskInfo, Ui ui) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            case \"\u003cT\u003e\": // if task is a to-do"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Task taskTD \u003d new Todo(restOfTaskInfo, \"T\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                if (status.equals(\"[\\u2713]\")) { // task is done"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    taskTD.markAsDone();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                return taskTD;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            case \"\u003cD\u003e\": // if task is a deadline"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String[] taskArrD \u003d restOfTaskInfo.split(\" / \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String itemD \u003d taskArrD[0];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String deadlineD \u003d taskArrD[1];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                LocalDate dateD \u003d null;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    dateD \u003d ui.convertToLocalDate(deadlineD);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // intentionally empty"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // to catch unsuccessful date conversion"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // actual date will be given when creating task to compensate for it"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Task taskD \u003d new Deadline(itemD, \"D\",  deadlineD, dateD);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                if (status.equals(\"[\\u2713]\")) { // task is done"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    taskD.markAsDone();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                return taskD;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            default: // if task is an event"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String[] taskArrE \u003d restOfTaskInfo.split(\" / \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String itemE \u003d taskArrE[0];"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String deadlineE \u003d taskArrE[1];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                LocalDate dateE \u003d null;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    dateE \u003d ui.convertToLocalDate(deadlineE);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // intentionally empty"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // to catch unsuccessful date conversion"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    // actual date will be given when creating task to compensate for it"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Task taskE \u003d new Event(itemE, \"E\", deadlineE, dateE);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                if (status.equals(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    taskE.markAsDone();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                return taskE;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Adds tasks to hard disk file"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void writeToFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.addTasksToFile(writer, tasks.getls());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    // returns hard disk file"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public File getFile() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return this.file;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 189
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Stores information of tasks created by user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected String item;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected String sign;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public Task(String item, String sign) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.sign \u003d \"\u003c\" + sign + \"\u003e\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * marks task as completed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * returns task item"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return item of task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String getItem() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return this.item;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * returns status of task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return status of task in String"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return this.isCompleted ? \"[\\u2713]\" : \"[\\u2718]\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * returns sign of task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return sign of task in String"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String getSign() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return this.sign;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 50
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Handles operations regarding user task list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected List\u003cTask\u003e ls;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public TaskList(List\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.ls \u003d ls;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.index \u003d ls.size();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * returns length of task list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return integer index of last item in task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return this.index;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * returns task list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public List\u003cTask\u003e getls() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return this.ls;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Adds task to task list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param task a Task that is to be added into task list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void addToList(Task task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.ls.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.index++; // increment index"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Marks task as completed in task list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param index an integer that represents the task number"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.ls.get(index).markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Deletes task in the task list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param index an integer that represents the task number"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Task task \u003d this.ls.get(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String item \u003d task.getItem();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String status \u003d task.getStatus();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String taskType \u003d task.getSign();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        int num \u003d index + 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        // remove task from array"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.ls.remove(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.index--;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"I\u0027ve removed this task for you : \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        if (task instanceof Todo) { // if task is to-do"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            System.out.println(num + \". \" + taskType + \" \" + status + \" \" + item + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else if (task instanceof Deadline) { // if task is deadline"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Deadline actualTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            System.out.println(taskType + \" \" +  status + \" \" + item + \" -\u003e by : \" + actualTask.getDeadline() + \"\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else { // if task is event"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Event actualTask \u003d (Event) task;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            System.out.println(taskType + \" \" + status + \" \" + item + \" -\u003e at : \" + actualTask.getTime() + \"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"You now have \" + this.index + \" task(s) in your list !\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public Task getTaskByIndex(int indexOfTask) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        // todo : assert that index of task is in range"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        return this.ls.get(indexOfTask);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 91
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Handles information regarding To-do tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public Todo(String item, String sign) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        super(item, sign);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 12
    }
  },
  {
    "path": "src/main/java/duke/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Command that handles instantiation of To-do tasks in TaskList"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public TodoCommand(String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Creates a task of command type and adds it to task list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ui a Ui that interacts with user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String[] arr \u003d input.split(\" \", 2); // split input to get task item"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Task task \u003d new Todo(arr[1], \"T\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // add item to list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                tasks.addToList(task); // add to-do task to ls"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // print confirmation of adding task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                ui.confirmAddTask(task, tasks.getIndex());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"invalid input: \" + input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            ui.showInvalidTodoFormatError();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Creates a task of command type and adds it to task list. Then returns a response to user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param tasks a TaskList that contains a list of tasks"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param guiui a GuiUi that interacts with user"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param storage a Storage that deals with hard disk file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a message response to user in String"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String guiExecute(TaskList tasks, GuiUi guiui, Storage storage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                String[] arr \u003d input.split(\" \", 2); // split input to get task item"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Task task \u003d new Todo(arr[1], \"T\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // add item to list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                tasks.addToList(task); // add to-do task to ls"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // print confirmation of adding task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                return guiui.confirmAddToTaskList(task, tasks.getIndex());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                throw new DukeException(\"invalid input: \" + input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return guiui.showInvalidTodoFormat();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 69
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " * Handles input from user interactions"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    protected Scanner sc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    // prints introduction of klaun"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void introDuke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String logo \u003d \"     .\\\"\\\".    .\\\"\\\",\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"     |  |   /  /\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"     |  |  /  /\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"     |  | /  /\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"     |  |/  ;-._\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"     }  ` _/  / ;\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"     |  /` ) /  /\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"     | /  /_/\\\\_/\\\\\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"     |/  /      |\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"     (  \u0027 \\\\ \u0027-  |\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"      \\\\    `.  /\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"       |      |\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"       |      |\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"HIIIIII\\n\" + logo + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"I\u0027m Deku (\u003d^.^\u003d) How are you doing today ?\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Is there anything I can help you with ?\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"\u003c------------------------------------------------------------\u003e\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * prints exit message for deku"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void sayBye() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"oh man ... bye ~~ o.o \\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * returns next line of user input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return input of user in String"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        if (this.sc.hasNextLine()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return this.sc.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Provides user with task list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param index an integer representing length of task list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ls a List containing user\u0027s tasks"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void getList(int index, List\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"##############################################################\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Here\u0027s your amazing task list :\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        for (int i \u003d 0; i \u003c index; i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Task task \u003d ls.get(i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String item \u003d task.getItem();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String status \u003d task.getStatus();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String taskType \u003d task.getSign();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (task instanceof Todo) { // if task is to-do"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                System.out.println(num + \". \" + taskType + \" \" + status + \" \" + item);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else if (task instanceof Deadline) { // if task is deadline"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Deadline actualTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                System.out.println(num + \". \" + taskType + \" \" +  status + \" \" + item + \" -\u003e by : \" + actualTask.getDeadline());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else { // if task type if event"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Event actualTask \u003d (Event) task;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                System.out.println(num + \". \" + taskType + \" \" + status + \" \" + item + \" -\u003e at : \" + actualTask.getTime());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"##############################################################\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Provides user with confirmation of task completion"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param index an integer representing completed task\u0027s number"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ls a List containing user\u0027s tasks"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void printMarkDone(int index, List\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Task task \u003d ls.get(index);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String item \u003d task.getItem();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String status \u003d task.getStatus();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String taskType \u003d task.getSign();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        int num \u003d index + 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Yayyyy !! Letsgedditt\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        if (task instanceof Todo) { // if task is to-do"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            System.out.println(num + \". \" + taskType + \" \" + status + \" \" + item + \"\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else if (task instanceof Deadline) { // if task is deadline"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Deadline actualTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            System.out.println(num + \". \" + taskType + \" \" +  status + \" \" + item + \" -\u003e by : \" +"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    actualTask.getDeadline() + \"\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else { // if task is event"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Event actualTask \u003d (Event) task;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            System.out.println(num + \". \" + taskType + \" \" + status + \" \" + item + \" -\u003e at : \" +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                    actualTask.getTime() + \"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Prints the task that has just been added to task list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param task user\u0027s task"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param index an integer representing number of total tasks"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void confirmAddTask(Task task, int index) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String item \u003d task.getItem();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String status \u003d task.getStatus();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        String taskType \u003d task.getSign();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\\n\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Okie ! I\u0027ve added this task for you : \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        if (task instanceof Todo) { // if task is to-do"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            System.out.println(taskType + \" \" + status + \" \" + item + \"\\n\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else if (task instanceof Deadline) { // if task is deadline"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Deadline actualTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            System.out.println(taskType + \" \" +  status + \" \" + item + \" -\u003e by : \" + actualTask.getDeadline() + \"\\n\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        } else { // if task is event"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Event actualTask \u003d (Event) task;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            System.out.println(taskType + \" \" + status + \" \" + item + \" -\u003e at : \" + actualTask.getTime() + \"\\n\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"You have a total of \" + index + \" task(s) in your list !\\n\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * Returns date in local date format"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param strDate a String of date given by user input"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @return a date in local date format"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public LocalDate convertToLocalDate(String strDate) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        List\u003cString\u003e dateFormats \u003d Arrays.asList(\"yyyy-MM-dd HH:mm\", \"yyyy-MM-dd\", \"yyyy-M-d\", \"yyyy-M-dd\","
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"yyyy-MM-d\", \"yyyy/MM/dd\", \"yyyy/M/d\", \"yyyy/M/dd\", \"yyyy/MM/d\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        // loop through each possible format and check if strDate can be parsed"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        for(String format: dateFormats){"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                return LocalDate.parse(strDate, formatter);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // intentionally empty"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                // to catch unsuccessful date parsing"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        throw new IllegalArgumentException(\"Invalid input for date. Given \u0027\"+strDate+\"\u0027, \" +"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \"expecting format yyyy-MM-dd HH:mm:ss.SSS or yyyy-MM-dd.\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * prints list of task that matches search"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     * @param ls a list of tasks from TaskList"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void showSearchResults(List\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"##############################################################\\n\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Here\u0027s your search result(s) :\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        for (int i \u003d 0; i \u003c ls.size(); i++) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            Task task \u003d ls.get(i);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String item \u003d task.getItem();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String status \u003d task.getStatus();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            String taskType \u003d task.getSign();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            if (task instanceof Todo) { // if task is to-do"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                System.out.println(num + \". \" + taskType + \" \" + status + \" \" + item);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else if (task instanceof Deadline) { // if task is deadline"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Deadline actualTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                System.out.println(num + \". \" + taskType + \" \" +  status + \" \" + item + \" -\u003e by : \" +"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        actualTask.getDeadline());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            } else { // if task type if event"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                Event actualTask \u003d (Event) task;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                System.out.println(num + \". \" + taskType + \" \" + status + \" \" + item + \" -\u003e at : \" +"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                        actualTask.getTime());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\" \");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"##############################################################\\n\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void showEmptySearchResults() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"##############################################################\\n\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Sorry there are no results that match your search :((\\n\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"##############################################################\\n\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void showFileLoadingError() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"File cannot be loaded !! \\n\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void showInvalidInputError() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"invalid input :(\\n\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void showInvalidEventFormatError() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Oh no !! Your format should be \\\"event ____ /at ____\\\" \\n\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void showInvalidDeadlineFormatError() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Oh no !! Your format should be \\\"deadline ____ /by ____\\\" \\n\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void showInvalidTodoFormatError() {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Oh no !! I think you forgot to add your todo description :O\\n\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void showInvalidTaskNumberError() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Oops ... you should provide a valid task number to complete ~ \\n\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void showInvalidDeleteTaskError() {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Oops ... you should provide a valid task number to delete ~ \\n\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void showUnsuccessfulFileWriteError() {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Unsuccessful file writing :( \\n\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void showInvalidEditDateOfTaskError() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Oh no !! Your format should be \\\"edit (task no.) (new date)\\\" \\n\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void showInvalidTaskTypeEditError() {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"Im so sorry but I only edit dates of deadlines or events !\\n\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        System.out.println(\"??????????????????????????????????????????????????????????????\\n\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 277
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-radius: 7; -fx-border-radius: 7; -fx-background-color: #d19179;\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"7.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"7.0\" right\u003d\"7.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 25
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Write what you wish to say to Deku here ...\" style\u003d\"-fx-background-color: #faf4e1; -fx-background-radius: 7; -fx-background-radius: 7; -fx-border-color: #b59d79;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #31c485; -fx-border-color: #2a7354; -fx-background-radius: 7; -fx-border-radius: 7;\" text\u003d\"Blast\" textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: fadb93;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: fadb93; -fx-background-radius: 3;\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 26
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    // tests if Parser returns correct command type"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void byeCommandTypeTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Command actual \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        assertTrue(actual instanceof ExitCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    // tests if Ui converts to LocalDate accurately"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void convertLocalDateTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        LocalDate expected \u003d LocalDate.parse(\"2019-02-01\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        LocalDate actual \u003d ui.convertToLocalDate(\"2019-02-01\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    // tests if TaskList deletes task successfully"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    public void deleteTest() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        tasks.addToList(new Todo(\"be happy\", \"T\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        tasks.deleteTask(0);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "        assertEquals(new ArrayList\u003c\u003e(), tasks.getls());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Syasyazman": 40
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Syasyazman"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 32,
      "Syasyazman": 2
    }
  }
]
