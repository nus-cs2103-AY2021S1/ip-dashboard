{
  "authorDailyContributionsMap": {
    "CodyChew": [
      {
        "date": "2020-08-17",
        "commitResults": [
          {
            "hash": "311d58976b802f2832a4eed7ee946d527f22df77",
            "messageTitle": "Completed level 1: -skeletal version of Dukenizer chatbot -Included echoing of commands and exits when user types \"bye\"",
            "messageBody": "",
            "tags": [
              "Level-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 31,
                "deletions": 5
              }
            }
          },
          {
            "hash": "1725d0a0c6337af1692ccf19d36d407760959be0",
            "messageTitle": "Completed Level 2: -Add items into a list -display list when called",
            "messageBody": "",
            "tags": [
              "Level-2"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 21,
                "deletions": 3
              }
            }
          },
          {
            "hash": "29a4739626b3b574eb233e19c7f30642aeeb6d69",
            "messageTitle": "Completed Level 3: -added task class -show active/done tasks",
            "messageBody": "",
            "tags": [
              "Level-3"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 47,
                "deletions": 6
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-18",
        "commitResults": [
          {
            "hash": "27c539bf347fa2d7900b2eb6c95b80dd4b429af2",
            "messageTitle": "Completed Level 4: -Included Todo, Event and Deadline Class -Each task are labeled with the starting alphabet",
            "messageBody": "",
            "tags": [
              "Level-4"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 90,
                "deletions": 8
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-19",
        "commitResults": [
          {
            "hash": "106aee37f4a62e1b58c01b361f9313c3ecbfcf8e",
            "messageTitle": "Automated Text UI Testing: Included runtest.bat",
            "messageBody": "",
            "tags": [
              "A-TextUiTesting"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 5,
                "deletions": 0
              },
              "bat": {
                "insertions": 7,
                "deletions": 3
              }
            }
          },
          {
            "hash": "90ae6ce3103dca990c5c8032ccd8442b3ca10df9",
            "messageTitle": "Update README.md",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 5,
                "deletions": 5
              }
            }
          },
          {
            "hash": "f39bc27cd87afe254655bbb351989bf1a8ec03fb",
            "messageTitle": "Major code refactoring",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 0
              },
              "java": {
                "insertions": 71,
                "deletions": 44
              }
            }
          },
          {
            "hash": "4a182f1fd825b725f8df6d6ad26dcaad2edd3f92",
            "messageTitle": "Fix runtest.bat -now checks for tick/cross correctly",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "bat": {
                "insertions": 3,
                "deletions": 0
              }
            }
          },
          {
            "hash": "6a477f3e2d4983e7c4753504ba4970d727c8d7bc",
            "messageTitle": "Level 5 complete: Handle Errors -Additional method to throw DukeException while checking instruction line -todo, deadline, event cannot be empty -done must have more than 1 argument separated with space, is number specified cannot be more than Task list -Many more exceptions have yet to be implemented",
            "messageBody": "",
            "tags": [
              "Level-5"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 77,
                "deletions": 24
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-20",
        "commitResults": [
          {
            "hash": "2713bb3de3f17b3cf89b1bfb331c78e03a1f7e17",
            "messageTitle": "Handle more exceptions: -All exceptions are handled when parsing the instruction -leading and trailing white spaces are stripped for every line",
            "messageBody": "following commands:\nlist:\n-checks for no other inputs, (only \"list\")\n\ndone:\n-checks for more than 1 input separated by space\n-checks for second input being a valid number and in the following format \u0027done \u003citem number\u003e\u0027\n\ntodo:\n-checks for no other inputs, (only \"todo\")\n\ndeadline:\n-checks for \u0027deadline \u003cdescription\u003e /by \u003ctime\u003e\u0027 format\n\nevent:\n-checks for \u0027event \u003cdescription\u003e /at \u003ctime\u003e\u0027 format\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 61,
                "deletions": 22
              }
            }
          },
          {
            "hash": "085233f01f7cf2066478f3fc33ab5b1672f933e7",
            "messageTitle": "Level 6 Completed: -added delete task from list -delete exceptions uses same checks as done exceptions",
            "messageBody": "",
            "tags": [
              "Level-6"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 0
              },
              "java": {
                "insertions": 7,
                "deletions": 1
              }
            }
          },
          {
            "hash": "04402e06db3e64bcedeb15dfe26a19aee1423af8",
            "messageTitle": "Code refactoring: -shifted execution of instruction out of main method into read instruction method -separated delete and done logic for more customisations in the future",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 42,
                "deletions": 46
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-22",
        "commitResults": [
          {
            "hash": "409014beca41d225e101389e9298dcc5d98fd70e",
            "messageTitle": "Add saving tasks to hard disk",
            "messageBody": "Let\u0027s write to a relative file path to a text file Dukenizer.txt. Every\ntime the list updates, the file is written again.\n\nThis is to easily get the full list string everytime the list is updated\nwithout having to process line by line when writing to the file.\n",
            "tags": [
              "Level-7"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 265,
                "deletions": 214
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-25",
        "commitResults": [
          {
            "hash": "8f795b966695de7bee984c03e95e4d83fe7b8670",
            "messageTitle": "Update deadline and event command to read Date and Time",
            "messageBody": "Represent DataTime as an object rather than a string for manipulation.\n\nLet\u0027s store a LocalDateTime obejct for the Deadline and Event task.\n\nAble to format its output easily.\n\nReference to validation for correct dates and time format\nhttps://stackoverflow.com/questions/2149680/regex-date-format-validation-on-java\nhttps://www.geeksforgeeks.org/how-to-validate-time-in-24-hour-format-using-regular-expression/\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 6,
                "deletions": 2
              },
              "java": {
                "insertions": 20,
                "deletions": 12
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-26",
        "commitResults": [
          {
            "hash": "fd278c40e7a076a2ab50471086e5aa495f14f36d",
            "messageTitle": "Refactor code to extract out Ui, Storage, Parser, TaskList, Command classes",
            "messageBody": "Classes have closely related code can be extracted into a single class.\nIt reduces the complexity of viewing things.\n\nUi class: deals with interactions with the user.\n\nStorage class: deals with loading tasks from the file and saving tasks\nin the file.\n\nParser class: deals with making sense of the user command.\n\nTaskList class: contains the task list. It has operations to manipulate\ntasks in the list and get data from it.\n\nCommand class: abstract Command class to allow us to use polymorphism\nwhen dealing with different commands\n",
            "tags": [
              "A-MoreOOP"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 0
              },
              "java": {
                "insertions": 602,
                "deletions": 249
              }
            }
          },
          {
            "hash": "ba6a7354477e966949502ffb3c1264a0877719b5",
            "messageTitle": "Repackage classes",
            "messageBody": "Organize class types into packages for easier management\n\npackages:\n-Duke\n-Duke.command\n-Duke.exception\n-Duke.parser\n-Duke.storage\n-Duke.task\n-Duke.ui\n",
            "tags": [
              "A-Packages"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 95,
                "deletions": 4
              },
              "bat": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-27",
        "commitResults": [
          {
            "hash": "89d8baa8e62514b9f672dec71ec54d662f7706bc",
            "messageTitle": "Add JUnit tests for TaskList class",
            "messageBody": "",
            "tags": [
              "v0.1",
              "A-Jar",
              "A-JUnit"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 139,
                "deletions": 13
              }
            }
          },
          {
            "hash": "4d97b63c340a03bee8bf240e1715d6c15e86e72a",
            "messageTitle": "Add JavaDoc to Duke, Command, Parser, Storage, Ui, Task, TaskList, DukeException classes",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 421,
                "deletions": 5
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-28",
        "commitResults": [
          {
            "hash": "783918b350a3dbb76da9eb9e2e0d5c205f21f1a7",
            "messageTitle": "Refactor code to comply with coding standard",
            "messageBody": "Refer to Java coding standard\nhttps://se-education.org/guides/conventions/java/index.html\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 103,
                "deletions": 92
              },
              "md": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "8ea2c98987e3b068ce3a453541323294ef748f32",
            "messageTitle": "Add Find command",
            "messageBody": "Give users a way to find a task from its description with a search term.\n\nLet\u0027s add a FindCommand class and updated Parser to accomodate find\ncommand keyword.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 3,
                "deletions": 0
              },
              "java": {
                "insertions": 73,
                "deletions": 0
              },
              "bat": {
                "insertions": 2,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-30",
        "commitResults": [
          {
            "hash": "778c6e7ccba8891698e18d45c0b9b5e7caec1f7d",
            "messageTitle": "Update main class name in build.gradle",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "be22d91b15497fb8d7593215829a6755ae1f82e8",
            "messageTitle": "Add UTF-8 text in Gradle",
            "messageBody": "Task done attribute makes use of UTF-8 encoding for task description.\n\nLet\u0027s configure Gradle compiler encoding to \u0027UTF-8\u0027.\n\nRefer to article on setting UTF-8 properly in gradle:\nhttps://www.thetopsites.net/article/58616121.shtml\nRefer to this discussion on setting up UTF-8 to gradle:\nhttps://github.com/nus-cs2103-AY2021S1/forum/issues/95\n",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 4,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-31",
        "commitResults": [
          {
            "hash": "9d27b5b8b5593aeb54e3654af08180436d773467",
            "messageTitle": "Add checkstyle support",
            "messageBody": "Let\u0027s add configuration files for checkstyle and use checkstyle\nwith gradle. Changed all files to comply with Java coding standard.\n",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 1,
                "deletions": 1
              },
              "java": {
                "insertions": 966,
                "deletions": 969
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-04",
        "commitResults": [
          {
            "hash": "b6dbdfa03f9b6f134a12409db6ccf00628f16e2a",
            "messageTitle": "Add GUI to project",
            "messageBody": "Use javaFX to implement GUI for task manager. Refactor UI to return\nString value rather than standard output to implement GUI.\n",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 16,
                "deletions": 1
              },
              "fxml": {
                "insertions": 35,
                "deletions": 0
              },
              "java": {
                "insertions": 312,
                "deletions": 77
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-08",
        "commitResults": [
          {
            "hash": "4e021ddf7a1b8a064d2943445d672ba27be27bfc",
            "messageTitle": "Update application name in gradle",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "2e7c8df37fc9a737ce78ee0dbe04a5401f48b69c",
            "messageTitle": "Add Java Assertions",
            "messageBody": "Document important assumptions that should hold at various points\nin the code.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 22,
                "deletions": 0
              }
            }
          },
          {
            "hash": "ba08fde545d8de66da2f6522ef2c844f01a608cd",
            "messageTitle": "Update Greeting message in GUI",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 4,
                "deletions": 4
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-09",
        "commitResults": [
          {
            "hash": "3e968e533049d5319acda5543fb9762a71c7dac1",
            "messageTitle": "Add JUnit test for Duke class",
            "messageBody": "Main test for correct string output based on user input.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 93,
                "deletions": 0
              }
            }
          },
          {
            "hash": "d4f2e294e3a3e73c038d6330d028f7aa6c584700",
            "messageTitle": "Refactor code to improve code quality",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 174,
                "deletions": 139
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-10",
        "commitResults": [
          {
            "hash": "2ec243855971c808820dd227399f1f30ec37c426",
            "messageTitle": "Update comments",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 39,
                "deletions": 39
              }
            }
          },
          {
            "hash": "32966b8ccbe6b0d516ec1bdf94d073cb67038c2b",
            "messageTitle": "Refactor to use Java Streams",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 10,
                "deletions": 24
              }
            }
          },
          {
            "hash": "fdd297cd03c7b1ce28ef7c05ed9a2ac451570940",
            "messageTitle": "Add D-Notes extension",
            "messageBody": "Able to add notes and delete notes in a separate note list.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 486,
                "deletions": 39
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-15",
        "commitResults": [
          {
            "hash": "3a4032edd9143ba75d4865fe623d46f76924119d",
            "messageTitle": "Minor bug fix to NoteList",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 5,
                "deletions": 0
              }
            }
          },
          {
            "hash": "f12d90064b84ebaca241015cbb3815b0cd4b714a",
            "messageTitle": "Add help command",
            "messageBody": "help command enables users to view all available commands for\nimproved user experience.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 69,
                "deletions": 11
              }
            }
          },
          {
            "hash": "42c6abc0a6c9dc4e301377b4a8de8b43d60b91f7",
            "messageTitle": "Change DialogBox styling",
            "messageBody": "Let\u0027s differentiate user\u0027s and Dukenizer\u0027s dialog box. User\u0027s box is\nnow blue while Dukenizer\u0027s box is yellow.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 8,
                "deletions": 4
              }
            }
          },
          {
            "hash": "1dceba196d07b5f907316597592db55725b8e586",
            "messageTitle": "Add background colour to GUI.",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "fxml": {
                "insertions": 1,
                "deletions": 1
              },
              "java": {
                "insertions": 4,
                "deletions": 0
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "CodyChew": {
      "java": 2311,
      "md": 6,
      "fxml": 35,
      "sh": 0,
      "bat": 9,
      "gradle": 21,
      "txt": 18
    }
  },
  "authorContributionVariance": {
    "CodyChew": 148645.7
  },
  "authorDisplayNameMap": {
    "CodyChew": "CS2103-F09-2 CHEW.. YAP"
  }
}
