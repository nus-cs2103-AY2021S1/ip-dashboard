[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 23,
      "-": 45
    }
  },
  {
    "path": "data/dataFile.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "T | 1 | red #fun"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "D | 0 | here #real | 2020-09-08"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "# Duke(Chatty-Bot) User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Duke(Chatty-Bot) is a bot that keeps track of your to do list. It is optimised to be used via a command-line interface (CLI) although a GUI is also provided for clarity. Duke is suitable for those who wish to keep track of their tasks using CLI."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "![Ui image](Ui.png)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "## Features supported by Duke(Chatty-Bot)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Duke(Chatty-Bot) supports a list of features as shown below. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "* Display help message with how to use the bot for first time "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "* Add tasks to current task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "  * Type of tasks that can be added are To-Do, Event and Deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "* Mark a task as done after you have completed them"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "* Tag a task with any keyword you wish to associate it with"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "* Find a task by specifying a keyword"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "* Delete a task from task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "* List all the tasks in current task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "* Close the bot when \u0027bye\u0027 is entered"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "* Auto updates storage file after each command (if applicable)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Each feature will be described in detail in their respective section."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "# Features"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "## Viewing help message : `help`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Displays a help message containing the list of commands accepted by the bot and a sample command input for each command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### **Usage**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### `help` - Displays help message"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Displays help message with sample command input for each command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "**Example of usage:**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "![help image](images/help.png)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "## Adding tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Add To-Do, Deadline or Event task to task list. All tasks added are marked uncompleted by default. A UI message will be displayed by the bot if the task has been added successfully."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### **Usage**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### `todo TASKNAME` - Adds a To-Do task to the task list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Adds a To-Do task to the task list with the specified task name."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "#### **Example of usage:**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "`todo read` - Adds a read To-Do task to the task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "![todo image](images/todo.png)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### **Usage**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### `deadline TASKNAME /by YYYY-MM-DD` - Adds a Deadline task to the task list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Adds a Deadline task to the task list with the specified task name and date to be completed by."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "#### **Example of usage:**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "`deadline project submission /by 2020-10-10` - Adds a project submission deadline to the task list, with event date on 10th October 2020"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "![deadline image](images/deadline.png)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### **Usage**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### `event TASKNAME /by YYYY-MM-DD` - Adds a Event task to the task list"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Adds a Event task to the task list with the specified task name and date the task would be on."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "#### **Example of usage:**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "`event coding workshop /at 2020-12-20` - Adds a coding workshop event task to the task list, with event date on 20th December 2020."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "![event image](images/event.png)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "## Mark a task as done"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Task that has been completed can be marked as done."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### **Usage**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### `done INDEX` - Marks task in task list with specified index as done"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Marks task in task list with specified index as done. A UI message will be displayed by the bot if the task has been marked as done successfully. "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "#### **Example of usage:**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "`done 2` - Marks task with index 2 on the task list as done."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "![done image](images/done.png)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "## Tag a task with a keyword"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Tag a task with a keyword specified by user. Each task can only be associated with at most one tag word."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### **Usage**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### `tag INDEX TAGWORD` - Tags the task at specified INDEX with the specified TAGWORD"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Tags the task at specified INDEX with the specified TAGWORD. A UI message will be displayed by the bot if the task has been tagged successfully."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "#### **Example of usage:**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "`tag 2 fun` - Tags second task on the task list as a fun task."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "![tag image](images/tag.png)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "## Find a task with a keyword"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Find a task with a keyword specified by user."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### **Usage**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### `find KEYWORD` - Find the task with the specified KEYWORD"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Finds the task with the specified TAGWORD. A UI message will be displayed by the bot with tasks containing the keyword (if any has been found)."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "#### **Example of usage:**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "`find workshop` - Find tasks on the task list containing the word \u0027workshop\u0027."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "![find image](images/find.png)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "## Delete a task on the task list"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Delete a task at a particular index on the task list specified by the user."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### **Usage**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### `delete INDEX` - Delete the task at the specified index"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Deletes the task at the specified index in the task list. A UI message will be displayed by the bot if the task at the specified index has been deleted successfully."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "#### **Example of usage:**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "`delete 3` - Deletes task numbered as number 3 on the task list."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "![delete image](images/delete.png)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "## List tasks on task list"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "List out all the tasks on current task list."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### **Usage**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### `list` - list all the tasks"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "List all the tasks in the task list. A UI message containing all the tasks will be displayed by the bot."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "#### **Example of usage:**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "`list` - List all the tasks in the task list."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "![list image](images/list.png)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "## Close the bot"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Close the bot after user is done with all the necessary actions."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### **Usage**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "### `bye` - Closes the bot immediately"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "Bot will close immediately."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "#### **Example of usage:**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "`bye` - Bot closes immediately."
      }
    ],
    "authorContributionMap": {
      "tohyuting": 174,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates a new DialogBox instance."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param dialogBoxMessage Message within the dialog box."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param img Profile image of user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return DialogBox instance."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static DialogBox createNewDialogBox(String dialogBoxMessage, Image img) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return new DialogBox(dialogBoxMessage, img);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Generates the message layout to be displayed when user entered a command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param text Text in message."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param img User\u0027s profile image."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return DialogBox instance to represent the input message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Generates the message layout for response to a user\u0027s message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param text Text in message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param img User\u0027s profile image."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return DialogBox instance to represent the response message."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 86
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.FileError;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.InvalidCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents bot that responds with appropriate functions calls to process user\u0027s input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private Storage listStorage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates and initialises a bot with the a storage space to store the list, and UI object needed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param fileName Storage filename."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private Duke(String fileName) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.listStorage \u003d new Storage(fileName);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.ui \u003d new Ui(this.listStorage, this.taskList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates a Duke object with dataFile.txt as the storage file name."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this(\"dataFile.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns appropriate response to user\u0027s input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param input User\u0027s input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Message response to user\u0027s input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String uiMessage \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            assert c !\u003d null : \"Something went wrong!\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (c !\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                checkExit(c);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                uiMessage \u003d c.execute(this.ui, this.listStorage, this.taskList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (InvalidCommand ex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            uiMessage \u003d Ui.commandError(ex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (FileError ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            uiMessage \u003d Ui.commandError(ex);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return uiMessage;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns welcome message when bot has started."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Welcome message."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String saysWelcome() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.ui.printWelcome();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns storage loading messages when bot has started."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Storage loading messages."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String loadStorage() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String uiMessage \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            uiMessage \u003d this.ui.loadStorage(this.listStorage.loadData(this.taskList));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (FileError ex) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Ui.commandError(ex);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return uiMessage;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns storage successfully loaded message."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Storage successfully loaded message."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String loadedStorage() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.ui.loadFile();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private void checkExit(Command commandExecuted) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (commandExecuted instanceof ByeCommand) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 97,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author Jeffry Lum"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "//Guides for SE Student Project: Java FX Tutorial"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Launch the application by calling start function in Main class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        Application.launch(duke.Main.class, args);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 4,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author Jeffry Lum"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "//Guides for SE Student Project: Java FX Tutorial"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Starts up the application layout and waits for user\u0027s commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param stage Main layout of the applcation."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setTitle(\"Chatty-Bot\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 10,
      "-": 29
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author Jeffry Lum"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "//Guides for SE Student Project: Java FX Tutorial"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes the MainWindow."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints relevant welcome messages and initialises bot\u0027s data storage and UI engine."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.createNewDialogBox(duke.saysWelcome(), dukeImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.createNewDialogBox(duke.loadStorage(), dukeImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.createNewDialogBox(duke.loadedStorage(), dukeImage));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        String formattedInput \u003d Ui.formatUserInput(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getUserDialog(formattedInput, userImage),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 10,
      "-": 58
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.FileError;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.InvalidCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents storage object to handle the process of storing and loading data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static final String DATA_FILE_DIRECTORY \u003d System.getProperty(\"user.dir\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            + (System.getProperty(\"user.dir\").endsWith(\"text-ui-test\") ? \"/../data/\" : \"/data/\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private File storageFile;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates a Storage with given filename to handle storing and loading of data."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param fileName Filename to load and store data."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.storageFile \u003d new File(DATA_FILE_DIRECTORY + fileName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Loads data from the database when bot starts and update previously saved data if any."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param currTaskList Task list of bot."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Message after loading data."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError Unable to read or create data file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String loadData(TaskList currTaskList) throws FileError {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String loadingDataFileMessage \u003d this.checkHistory();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        checkIfFileAvailable();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        readPastDataFile(currTaskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (loadingDataFileMessage.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            loadingDataFileMessage \u003d Ui.allFilesFound();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return loadingDataFileMessage;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Checks if user has the current directory and data file to store or load data."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates the relevant directory and data file if user do not have them."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Message indicating directory and/or datafile found (if applicable)."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError Unable to create directory or data file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String checkHistory() throws FileError {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String overallHistoryMessage \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        overallHistoryMessage +\u003d checkDirectoryCreated();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        overallHistoryMessage +\u003d checkFileCreated();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return overallHistoryMessage;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Adds the new task into storage file."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param newTask New Task that has been added."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError Unable write to file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void addTask(Task newTask) throws InvalidCommand, FileError {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String retrieveTaskType \u003d checkTaskType(newTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String retrieveStorageName \u003d getStorageName(retrieveTaskType, newTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String wordsToBeWritten \u003d retrieveStorageName + \"\\n\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        writeToFile(wordsToBeWritten);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Edits any tasks in the current storage file if they have been marked as done."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param editedTask Task to be edited."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskIndex Index of task in the task list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param currentList Current task list used by bot."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError Unable to remove old data file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void editTask(Task editedTask, int taskIndex, TaskList currentList) throws FileError {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String taskType \u003d checkTaskType(editedTask);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String lineToEdit \u003d getStorageName(taskType, editedTask);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        currentList.get(taskIndex).markDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String lineToChangeTo \u003d getStorageName(taskType, editedTask);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        editTaskFromFile(lineToEdit, lineToChangeTo);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Updates the tagged task in the storage file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param editedTask Task that has been tagged."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskIndex Index of task that has been edited in task list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param currentList Current TaskList in use by bot."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param tagWord Tag word used for tagging."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError Unable to read or write to storage file."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void editTaggedTask(Task editedTask, int taskIndex, TaskList currentList, String tagWord)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throws FileError {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String typeOfTask \u003d checkTaskType(editedTask);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String lineToChangeInStorage \u003d getStorageName(typeOfTask, editedTask);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        currentList.get(taskIndex).tagTask(tagWord);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String lineToChangeTo \u003d getStorageName(typeOfTask, editedTask);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        editTaskFromFile(lineToChangeInStorage, lineToChangeTo);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Deletes task from storage file when it is removed from task list."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param removedTask Task to be removed."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError Unable to remove old data file."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void deleteTask(Task removedTask) throws FileError {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String taskType \u003d checkTaskType(removedTask);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String lineToRemove \u003d getStorageName(taskType, removedTask);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        deleteTaskFromFile(lineToRemove);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Checks task type"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskToBeChecked"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return String corresponding to task type of input Task."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError If task is missing."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String checkTaskType(Task taskToBeChecked) throws FileError {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String taskType \u003d \"\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (taskToBeChecked instanceof Deadline) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            taskType \u003d \"Deadline\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (taskToBeChecked instanceof Event) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            taskType \u003d \"Event\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (taskToBeChecked instanceof ToDo) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            taskType \u003d \"ToDo\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new FileError(\"Your Task in data file is invalid, please clear all memory.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Obtains the storage name from data file."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param typeOfInputTask"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskToRetrieveName"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return String representation of a task in storage file."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError If unable to identify task type from storage file."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String getStorageName(String typeOfInputTask, Task taskToRetrieveName) throws FileError {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String taskStorageName \u003d \"\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        switch (typeOfInputTask) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        case \"Deadline\":"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            taskStorageName \u003d ((Deadline) taskToRetrieveName).getDataStorageName();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        case \"Event\":"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            taskStorageName \u003d ((Event) taskToRetrieveName).getDataStorageName();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        case \"ToDo\":"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            taskStorageName \u003d ((ToDo) taskToRetrieveName).getDataStorageName();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new FileError(\"Your Storage File is corrupted. Please delete it.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return taskStorageName;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private void deleteTaskFromFile(String taskNameToBeRemoved) throws FileError {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            File removed \u003d new File(DATA_FILE_DIRECTORY + \"dataList1.txt\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            assert this.storageFile.exists() : \"Storage file is lost while application is running!\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(this.storageFile));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(removed));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String currentLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            while (currentLine !\u003d null) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                if (currentLine.equals(taskNameToBeRemoved)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    currentLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                writer.write(currentLine + \"\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                currentLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            filesDeletion(removed, this.storageFile);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new FileError(\"Unable to read or write to file!\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private void filesDeletion (File newFile, File overWrittenFile) throws FileError {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (overWrittenFile.delete()) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            // Rename output file to input file"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (!newFile.renameTo(overWrittenFile)) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new FileError(\"Could not rename to update data file\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new FileError(\"Could not delete old data file\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private void editTaskFromFile (String removeTaskString, String editedTaskString) throws FileError {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            File toBeDeleted \u003d new File(DATA_FILE_DIRECTORY + \"dataList1.txt\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            assert this.storageFile.exists() : \"Storage file is lost while application is running!\";"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            BufferedReader readerBuffer \u003d new BufferedReader(new FileReader(this.storageFile));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            BufferedWriter writerBuffer \u003d new BufferedWriter(new FileWriter(toBeDeleted));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String readingLine \u003d readerBuffer.readLine();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            while (readingLine !\u003d null) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                if (readingLine.equals(removeTaskString)) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    writerBuffer.write(editedTaskString + \"\\n\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    readingLine \u003d readerBuffer.readLine();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                writerBuffer.write(readingLine + \"\\n\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                readingLine \u003d readerBuffer.readLine();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            writerBuffer.close();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            readerBuffer.close();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            filesDeletion(toBeDeleted, this.storageFile);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new FileError(\"Cannot read or write to file!\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private void writeToFile(String stringToBeWritten) throws FileError {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.storageFile, true);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            fw.write(stringToBeWritten);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new FileError(\"Cannot write to file!\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String checkDirectoryCreated() {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String messageObtained \u003d \"\";"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            FileReader readFile \u003d new FileReader(DATA_FILE_DIRECTORY);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            File newData \u003d new File(DATA_FILE_DIRECTORY);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (!newData.exists()) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                newData.mkdirs();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                messageObtained +\u003d Ui.addDirectory();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                messageObtained +\u003d \"\\n\";"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return messageObtained;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String checkFileCreated() throws FileError {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String fileCreationMessage \u003d \"\";"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (this.storageFile.createNewFile()) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                fileCreationMessage +\u003d Ui.addDataFile();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                fileCreationMessage +\u003d \"\\n\";"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new FileError(\"Unable to create file\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return fileCreationMessage;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private void checkIfFileAvailable() throws FileError {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            BufferedReader rb \u003d new BufferedReader(new FileReader(this.storageFile));"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new FileError(\"File cannot be found\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private void readPastDataFile(TaskList toBeUpdatedTaskList) throws FileError {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String newLine \u003d \"\";"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            assert this.storageFile.exists() : \"Storage file went missing, please restart your bot!\";"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            BufferedReader rb \u003d new BufferedReader(new FileReader(this.storageFile));"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            newLine \u003d rb.readLine();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            while (newLine !\u003d null) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                String[] taskInput \u003d newLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                if (taskInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                processTasks(taskInput, toBeUpdatedTaskList);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                newLine \u003d rb.readLine();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            rb.close();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new FileError(\"Your storage file cannot be read\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String trimTaskName(String[] storageFileString) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String taskName \u003d storageFileString[2].trim();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (taskName.contains(\"#\")) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            int indexOfTaggedWord \u003d taskName.indexOf(\u0027#\u0027);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return taskName.substring(0, indexOfTaggedWord - 1);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private boolean checkTaskStatus(String[] storageFileString) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        int statusValue \u003d Integer.parseInt(storageFileString[1].trim());"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assert statusValue \u003d\u003d 1 || statusValue \u003d\u003d 0 : \"Your storage file is corrupted.\";"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (statusValue \u003d\u003d 1) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private boolean checkTaskTaggedStatus(String[] storageFileString) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String taskName \u003d storageFileString[2].trim();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (taskName.contains(\"#\")) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private LocalDate getDate(String[] storageFileString) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assert storageFileString[3].trim().length() !\u003d 0 : \"Task date is corrupted!\";"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return LocalDate.parse(storageFileString[3].trim());"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private void processTasks(String[] taskStorageString, TaskList toBeUpdatedTaskList) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assert taskStorageString.length \u003e\u003d 3 : \"Task in storage file is missing information!\";"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assert taskStorageString[2].trim().length() !\u003d 0 : \"Task name is corrupted!\";"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assert Integer.parseInt(taskStorageString[1].trim()) \u003d\u003d 1"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                || Integer.parseInt(taskStorageString[1].trim()) \u003d\u003d 0 : \"Task status is corrupted!\";"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String trimmedTaskName \u003d trimTaskName(taskStorageString);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        boolean isTaskDone \u003d checkTaskStatus(taskStorageString);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        boolean isTaskTagged \u003d checkTaskTaggedStatus(taskStorageString);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String tagWord \u003d getTagWord(taskStorageString);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String taskType \u003d checkTaskTypeFromDataFile(taskStorageString);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (taskType.equals(\"ToDo\")) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            ToDo pastToDo \u003d new ToDo(trimmedTaskName);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            processTaskStatus(pastToDo, isTaskDone, isTaskTagged, tagWord);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            addTaskToList(pastToDo, toBeUpdatedTaskList);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (taskType.equals(\"Event\")) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            assert taskStorageString.length \u003d\u003d 4 : \"Task in storage file is missing information!\";"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            LocalDate eventDate \u003d getDate(taskStorageString);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Event pastEvent \u003d new Event(trimmedTaskName, eventDate);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            processTaskStatus(pastEvent, isTaskDone, isTaskTagged, tagWord);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            addTaskToList(pastEvent, toBeUpdatedTaskList);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (taskType.equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            assert taskStorageString.length \u003d\u003d 4 : \"Task in storage file is missing information!\";"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            LocalDate deadlineDate \u003d getDate(taskStorageString);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Deadline pastDeadline \u003d new Deadline(trimmedTaskName,"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    deadlineDate);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            processTaskStatus(pastDeadline, isTaskDone, isTaskTagged, tagWord);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            addTaskToList(pastDeadline, toBeUpdatedTaskList);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String checkTaskTypeFromDataFile(String[] taskStorageString) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String taskTypeInStorage \u003d \"\";"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (taskStorageString[0].charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            taskTypeInStorage \u003d \"ToDo\";"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (taskStorageString[0].charAt(0) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            taskTypeInStorage \u003d \"Deadline\";"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (taskStorageString[0].charAt(0) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            taskTypeInStorage \u003d \"Event\";"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return taskTypeInStorage;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String getTagWord(String[] taskStorageString) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String taskName \u003d taskStorageString[2].trim();"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (taskName.contains(\"#\")) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            int taggedIndex \u003d taskName.indexOf(\u0027#\u0027);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String taggedWord \u003d taskName.substring(taggedIndex + 1);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return taggedWord;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private void addTaskToList(Task pastTaskToAdd, TaskList currentTaskList) {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        currentTaskList.add(pastTaskToAdd);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private void processTaskStatus(Task pastTask, boolean taskStatus, boolean taskTaggedStatus, String tagWord) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (taskStatus) {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            pastTask.markDone();"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (taskTaggedStatus) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            pastTask.tagTask(tagWord);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 404
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents a task list to store user\u0027s tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates a task list object with ArrayList as the underlying data structure."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Adds a new task into the task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param newTask New Task to be added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Gets a task from the task list at a given index."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param index Index to retrieve Task from the task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Task represented at given index."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Gets total number of tasks currently stored in the task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Size of the task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public int getNumTask() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Lists tasks currently in the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return String representation of items in task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String listItems() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String listOfItemsInString \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String currentLine \u003d \"      \" + (i + 1) + \". \" + this.taskList.get(i);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            listOfItemsInString +\u003d currentLine + \"\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return listOfItemsInString;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Checks whether a task input is contained inside the current task list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param findTask Task to be searched."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Is task contained in task list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public boolean contains(Task findTask) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.taskList.contains(findTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Removes the task at a given index."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param index Given index to remove the task in the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Task removed."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.taskList.remove(index);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 82
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents UI engine for the bot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static final String LINES \u003d \"___________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String logo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String defaultGreeting;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates a UI object with storage object and current task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage Storage for bot data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList Task list with current tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Ui(Storage listStorage, TaskList taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.logo \u003d \" .d8888b.  888               888    888                  888888b.            888    \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"d88P  Y88b 888               888    888                  888  \\\"88b           888    \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"888    888 888               888    888                  888  .88P           888    \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"888        88888b.   8888b.  888888 888888 888  888      8888888K.   .d88b.  888888 \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"888        888 \\\"88b     \\\"88b 888    888    888  888      888  \\\"Y88b d88\\\"\\\"88b 888    \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"\\n\" + \"888    888 888  888 .d888888 888    888    888  888      888    888 888  888 888  \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"  \\n\" + \"Y88b  d88P 888  888 888  888 Y88b.  Y88b.  Y88b 888      \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"888   d88P Y88..88P Y88b. \" + \" \\n\" + \" \\\"Y8888P\\\"  888  888 \\\"Y888888  \\\"Y888  \\\"Y888  \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"\\\"Y88888      8888888P\\\"   \" + \"\\\"Y88P\\\"   \" + \"\\\"Y888 \\n\" + \"                   \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"                             888\" + \"                            \" + \"     \" + \"\\n\" + \"  \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"                                       \" + \"  Y8b d88P                                 \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"                                       \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"     \\\"Y88P\\\"      lines                            \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.defaultGreeting \u003d Ui.LINES + \"\\n\" + \"     Hello! I\u0027m Chatty Bot ^~^ \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"     What can I do for you?\\n\" + \"Type \u0027help\u0027 if you wish to know more about\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" what I can do!\" + \"\\n\" + Ui.LINES + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message to signal that all data file has been loaded correctly."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Files found UI message."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static String allFilesFound() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return Ui.LINES + \"\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"     Found directories and file\" + \"\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + Ui.LINES + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns welcome message to user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Welcome message."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String printWelcome() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.defaultGreeting;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message when loading storage files."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Load files message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String loadFile() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String loadFileMessage \u003d Ui.LINES + \"\\n\" + \"     Previously saved list (if any) loaded.\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" You may enter your commands now:\" + \"\\n\" + Ui.LINES;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return loadFileMessage;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message when adding a new directory to store bot data."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Directory added message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static String addDirectory() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String addDirectorymessage \u003d Ui.LINES"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"\\n\" + \"     I see that you do not have a directory to store data. \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"Created one for you before we proceed.\" + \"\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + Ui.LINES;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return addDirectorymessage;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message when adding a new data file to store bot data."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Adds data file message."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static String addDataFile() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String addDataFileMessage \u003d Ui.LINES + \"\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"     I see that this is your first time using Chatty Bot, \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"I have created a file to log your history from now on!\" + \"\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + Ui.LINES;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return addDataFileMessage;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message when a task is marked as done."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskIndex Index of task marked as done"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param currList Task list with updated list of tasks."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message for done task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String markAsDone(int taskIndex, TaskList currList) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assert currList.contains(currList.get(taskIndex)) : \"Something went wrong while marking as done!\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String markedDoneMessage \u003d Ui.LINES + \"\\n\" + \"     Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"\\n\" + \"       \" + currList.get(taskIndex) + \"\\n\" + Ui.LINES;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return markedDoneMessage;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message when a task has been added to the task list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param newTask Task added."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param currList Task list with updated list of tasks."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message for task added."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String addTask(Task newTask, TaskList currList) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assert currList.getNumTask() \u003e\u003d 0 : \"Something went wrong in your task list!\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String taskAddedUi \u003d Ui.LINES + \"\\n\" + \"     Got it. I\u0027ve added this task:\" + \"\\n\" + \"       \""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + newTask + \"\\n\" + \"     Now you have \" + String.valueOf(currList.getNumTask())"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" task(s) in the list.\" + \"\\n\" + Ui.LINES;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return taskAddedUi;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message to list out tasks in the current task list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param currList Task list with updated list of tasks."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message of task list."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String listItems(TaskList currList) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String listInString \u003d Ui.LINES + \"\\n\" + \"     Here are the tasks in your list:\" + \"\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + currList.listItems() + Ui.LINES + \"\\n\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return listInString;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message when a task is removed."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param removeTask Removed task."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param currList Task list with updated list of tasks."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message of removed task."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String deleteTask(Task removeTask, TaskList currList) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String deleteMessage \u003d Ui.LINES + \"\\n\" + \"     Alright, the following task has been removed\" + \"\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"       \" + removeTask + \"\\n\" + \"     Now you have \" + String.valueOf(currList.getNumTask())"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" task(s) in the list.\" + \"\\n\" + Ui.LINES;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return deleteMessage;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message when users input an invalid command."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ex Relevant invalid command message."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return String representation of invalid action attempted."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static String commandError(Exception ex) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String invalidCommandMessage \u003d Ui.LINES + \"\\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"     \" + ex + \"\\n\" + Ui.LINES;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return invalidCommandMessage;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message when users close the bot."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message for goodbye."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String goodBye() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String endGreeting \u003d Ui.LINES + \"\\n\" + \"     Bye. Hope to see you again soon!\\n\" + Ui.LINES;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return endGreeting;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message after tasks are found using a keyword."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param foundTasks Task list with tasks found."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param keyword Keyword used to find tasks."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message for found tasks."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String printFoundItems(TaskList foundTasks, String keyword) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String foundItemsMessage \u003d Ui.LINES + \"\\n\" + \"     Here are the matching tasks for keyword \\\"\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + keyword + \"\\\" in your list:\" + \"\\n\" + foundTasks.listItems() + Ui.LINES;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return foundItemsMessage;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns help message to user."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI help message."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String helpMessage() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String helpMessage \u003d \"     Seems like you need some help! There are a few things I can do for you\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String addTasksInstructions \u003d \"     There are three types of tasks you can insert, namely To-Do,\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" Deadline and Event. The instructions for each task is as follows:\" + \"\\n\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String addToDoInstructions \u003d \"     To add a To-Do task, write your command as todo \u003ctask name\u003e e.g.\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" \u0027todo read books\u0027 to reflect \u0027read books\u0027 task.\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String addDeadlineInstructions \u003d \"     To add a Deadline task, write your command as deadline\""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" \u003ctask name\u003e /by \u003cdate in YYYY-MM-DD\u003e e.g. \u0027deadline homework /by 2020-10-05\u0027\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" to reflect homework is due on 5th October 2020.\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String addEventInstructions \u003d \"     To add an Event task, write your command as event \u003ctask name\u003e /at\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" \u003cdate in YYYY-MM-DD\u003e e.g. \u0027event party /at 2020-01-01\u0027 to reflect a party event on\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" 1st January 2020.\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String deleteTaskInstructions \u003d \"     If you have completed a task or add a task by mistake into the\""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" tasklist, you may remove your task by using delete \u003ctask number\u003e e.g. \u0027delete 3\u0027 to remove\""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" task 3 on the current tasklist.\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String listTasksInstructions \u003d \"     You can view the tasks in your task list with the\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" \u0027list\u0027 command\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String findTasksInstructions \u003d \"     You can do a quick search of tasks in your task list using the\""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" \u0027find\u0027 command in the form of done \u003ctask number\u003e. e.g. \u0027find book\u0027 to find tasks\""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" related to the command \u0027book\u0027\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String markTaskAsDoneInstructions \u003d \"     You can mark a task as done using the done command\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" in the form of done \u003ctask number\u003e. e.g. \u0027done 3\u0027 marks the 3rd task in the task list\""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" as done.\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String tagTaskInstructions \u003d \"     You can tag a task using the tag command\""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" in the form of tag \u003ctask number\u003e \u003ctag word\u003e. e.g. \u0027tag 1 fun\u0027 tags the 1st task\""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \" in the task list as #fun.\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String exitBotInstructions \u003d \"     If you are done editing your task list, feel free to close down\""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"  this bot with the bye command by typing \u0027bye\u0027.\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String helpMessageToBePrinted \u003d Ui.LINES + \"\\n\" + helpMessage + \"\\n\" + addTasksInstructions"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + addToDoInstructions + \"\\n\" + addDeadlineInstructions + \"\\n\" + addEventInstructions"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"\\n\" + deleteTaskInstructions + \"\\n\" + listTasksInstructions + \"\\n\" + findTasksInstructions"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"\\n\" + markTaskAsDoneInstructions + \"\\n\" + tagTaskInstructions + \"\\n\" + exitBotInstructions"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"\\n\" + Ui.LINES + \"\\n\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return helpMessageToBePrinted;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message when bot loads data from storage."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param loadData"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message for loading data."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String loadStorage(String loadData) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return loadData;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns UI message when a task is tagged."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param tagTask Task that has been tagged."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param tagWord Tag word used to tag the task."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Task tagged UI message."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String taggedTask(Task tagTask, String tagWord) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String uiMessageForTaggedTask \u003d Ui.LINES + \"\\n\" + \"     Got it. I\u0027ve tagged this task:\" + \"\\n\" + \"       \""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + tagTask + \"\\n\" + Ui.LINES;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return uiMessageForTaggedTask;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Formats and returns user input."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param userInput Command entered by users."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message of formatted user input."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static String formatUserInput(String userInput) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String formattedUserInput \u003d Ui.LINES + \"\\n\" + userInput + \"\\n\" + Ui.LINES;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return formattedUserInput;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 262
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.FileError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.InvalidCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents a command to add task into task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private Task newTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates command with task given."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param newTask New Task to be added."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public AddCommand(Task newTask) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.newTask \u003d newTask;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes main logic to add task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Updates both current list and storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays item successfully added message to user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui Ui used to generate messages to users."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage Backend storage to store items in the task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList List of tasks added by users so far."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message after executing add command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws InvalidCommand User input unknown command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError Unable to process data file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String execute (Ui ui, Storage listStorage, TaskList taskList) throws InvalidCommand, FileError {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        taskList.add(this.newTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        listStorage.addTask(this.newTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return ui.addTask(this.newTask, taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 44
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents the command to exit the bot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Represents a command to exit the bot."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public ByeCommand () {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes main logic to exit the bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui Ui used to generate messages to users."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage Backend storage to store items in the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList List of tasks added by users so far."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message after executing bye command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String execute(Ui ui, Storage listStorage, TaskList taskList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return ui.goodBye();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.FileError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.InvalidCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents the Command object to handle logic of user inputs."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Abstract class to be implemented by AddCommand, ByeCommand, DeleteCommand,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * DoneCommand and ListCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Creates appropriate command to handle the logic of the bot."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private int itemIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates a Command object to handle logic of user\u0027s input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.itemIndex \u003d -1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns boolean value signalling if the command should terminate the bot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return isExit property of the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public boolean canExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes main logic of command object. To be implemented by subclasses."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message representing the relevant execution."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws InvalidCommand User input unknown command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError Unable to process data file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public abstract String execute(Ui ui, Storage listStorage, TaskList taskList)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throws InvalidCommand, FileError;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 48
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.FileError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.InvalidCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents a command to delete task from the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private int itemIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates DeleteCommand with given index."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param itemIndex Index of item to be deleted in the current task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public DeleteCommand (int itemIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.itemIndex \u003d itemIndex;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes main logic to delete task from the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays task deleted message to user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui Ui used to generate messages to users."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage Backend storage to store items in the task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList List of tasks added by users so far."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message after executing delete command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws InvalidCommand Invalid task number given."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError Unable to process data file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String execute(Ui ui, Storage listStorage, TaskList taskList) throws InvalidCommand, FileError {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Task removedTask \u003d taskList.removeTask(itemIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            listStorage.deleteTask(removedTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return ui.deleteTask(removedTask, taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 48
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.FileError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.InvalidCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents a command to mark a task done in the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates DoneCommand with given index."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskIndex Index of item to be mark as done in the current task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes main logic to mark a task done from the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays task marked successfully message to user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui Ui used to generate messages to users."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage Backend storage to store items in the task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList List of tasks added by users so far."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message after executing done command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws InvalidCommand Invalid task number given."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError Unable to process data file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String execute(Ui ui, Storage listStorage, TaskList taskList) throws InvalidCommand, FileError {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Task editedTask \u003d taskList.get(this.taskIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            listStorage.editTask(editedTask, this.taskIndex, taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return ui.markAsDone(this.taskIndex, taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 48
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents a command to find tasks related to a keyword in the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates FindCommand with given keyword to be used in searching."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param keyword Keyword to find relevant tasks in the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes the main logic to find tasks relevant to the keyword in the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message after executing find command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String execute(Ui ui, Storage listStorage, TaskList taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        TaskList keywordTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assert taskList.getNumTask() \u003e\u003d 0 : \"Something went wrong in your task list!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getNumTask(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Task nextTask \u003d taskList.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (nextTask.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                keywordTasks.add(nextTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return ui.printFoundItems(keywordTasks, this.keyword);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 44
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents a command to print commands available in the bot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates a help command object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes the main logic of displaying help message to user. Returns relevant UI messages."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message after executing help command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String execute(Ui ui, Storage listStorage, TaskList taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return ui.helpMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents a command to list all tasks in the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes main logic to list tasks in the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays current tasks and their respective status to users."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui Ui used to generate messages to users."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage Backend storage to store items in the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList List of tasks added by users so far."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message after executing list command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String execute(Ui ui, Storage listStorage, TaskList taskList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return ui.listItems(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/TagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.FileError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents a command to tag a task in the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class TagCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private int tagTaskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String tagWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates TagCommand with task index and tag word to be used."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskIndex index to find relevant tasks in the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param tagWord tag word for the task in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public TagCommand(int taskIndex, String tagWord) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.tagTaskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.tagWord \u003d tagWord;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes main logic to tag a task from the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays task tagged successfully message to user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui Ui used to generate messages to users."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage Backend storage to store items in the task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList List of tasks added by users so far."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return UI message after executing tag command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @throws FileError Unable to process data file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String execute(Ui ui, Storage listStorage, TaskList taskList) throws FileError {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        Task taskToBeTagged \u003d taskList.get(this.tagTaskIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        listStorage.editTaggedTask(taskToBeTagged, this.tagTaskIndex, taskList, this.tagWord);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return ui.taggedTask(taskToBeTagged, this.tagWord);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 44
    }
  },
  {
    "path": "src/main/java/duke/exception/FileError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class FileError extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates a FileError object with appripriate error message to be displayed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param errorMessage Error message to be displayed to users."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public FileError(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays FileError as the customised error message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Error Message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.errorMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents exception to be thrown when users enters any invalid command ot the bot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class InvalidCommand extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates an InvalidCommand object with appripriate error message to be displayed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param errorMessage Error message to be displayed to users."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public InvalidCommand(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays InvalidCommand as the customised error message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Error Message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 27
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.TagCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.InvalidCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents parser to parse and create appropriate Command object to handle"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * the commands given by user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static final int ITEM_NOT_FOUND_INDEX \u003d -1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Generates the correct Command object to be executed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param command User\u0027s input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Appropriate command to execute logic of input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static Command parse(String command) throws InvalidCommand {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            DoneCommand newCommand \u003d processDone(command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return newCommand;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            AddCommand newCommand \u003d processToDo(command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return newCommand;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            AddCommand newCommand \u003d processDeadline(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return newCommand;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (command.contains(\"event\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            AddCommand newCommand \u003d processEvent(command);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return newCommand;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (command.contains(\"list\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            ListCommand newCommand \u003d processList(command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return newCommand;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            DeleteCommand newCommand \u003d processDelete(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return newCommand;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (command.contains(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (command.contains(\"find\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            FindCommand newCommand \u003d processFind(command);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return newCommand;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (command.contains(\"help\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            HelpCommand newCommand \u003d new HelpCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return newCommand;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (command.contains(\"tag\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            TagCommand newCommand \u003d processTag(command);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return newCommand;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        //Throws an error if user command does not match any keywords."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        throw new InvalidCommand(\"Please enter the correct command\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static TagCommand processTag(String command) throws InvalidCommand {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (command.contains(\"|\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new InvalidCommand((\"Please do not use \u0027|\u0027 in your commands!\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            int taskIndex;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                taskIndex \u003d Integer.parseInt(command.substring(4, 5));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new InvalidCommand(\"Please enter task number instead of task name!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            int taskIndexInList \u003d taskIndex - 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String tagWord \u003d command.substring(6);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            TagCommand tc \u003d new TagCommand(taskIndexInList, tagWord);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return tc;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static FindCommand processFind(String command) throws InvalidCommand {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String requestKeywords \u003d command.substring(5);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (requestKeywords.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            FindCommand fc \u003d new FindCommand(requestKeywords);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return fc;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static DeleteCommand processDelete(String command) throws InvalidCommand {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String[] deleteInput \u003d command.split(\" \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (deleteInput.length \u003e 2) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"Please only input 1 task number!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            int deleteIndex \u003d Integer.parseInt(deleteInput[1]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            int indexInTaskList \u003d deleteIndex - 1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            DeleteCommand dc \u003d new DeleteCommand(indexInTaskList);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return dc;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"Please enter a valid task number\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static ListCommand processList(String command) throws InvalidCommand {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (command.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"You have to view your entire to-do list!\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static AddCommand processEvent(String command) throws InvalidCommand {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (command.contains(\"|\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new InvalidCommand((\"Please do not use \u0027|\u0027 in your commands!\"));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String eventInput \u003d command.substring(6);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            int indexSeparator \u003d eventInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (indexSeparator \u003d\u003d ITEM_NOT_FOUND_INDEX) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new InvalidCommand(\"Please include your event date using /at !\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String eventTaskName \u003d eventInput.substring(0, indexSeparator - 1);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String eventTime \u003d eventInput.substring(indexSeparator + 4);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            LocalDate eventDate \u003d LocalDate.parse(eventTime);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Event newEvent \u003d new Event(eventTaskName, eventDate);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            AddCommand ac \u003d new AddCommand(newEvent);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return ac;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand (\"OOPS!!! Invalid date.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static AddCommand processDeadline(String command) throws InvalidCommand {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (command.contains(\"|\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new InvalidCommand((\"Please do not use \u0027|\u0027 in your commands!\"));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String deadlineInput \u003d command.substring(9);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            int indexSeparator \u003d deadlineInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (indexSeparator \u003d\u003d ITEM_NOT_FOUND_INDEX) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new InvalidCommand(\"Please include your deadline using /by !\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String deadlineTaskName \u003d deadlineInput.substring(0, indexSeparator - 1);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String deadlineTime \u003d deadlineInput.substring(indexSeparator + 4);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            LocalDate deadlineDate \u003d LocalDate.parse(deadlineTime);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(deadlineTaskName, deadlineDate);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            AddCommand ac \u003d new AddCommand(newDeadline);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return ac;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand (\"OOPS!!! Invalid date.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static AddCommand processToDo(String command) throws InvalidCommand {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (command.contains(\"|\")) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new InvalidCommand((\"Please do not use \u0027|\u0027 in your commands!\"));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String taskToDo \u003d command.substring(5);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (taskToDo.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            ToDo newToDo \u003d new ToDo(taskToDo);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            AddCommand ac \u003d new AddCommand(newToDo);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return ac;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static DoneCommand processDone(String command) throws InvalidCommand {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String[] doneInputs \u003d command.split(\" \");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (doneInputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"OOPS!!! Please enter at least 1 task number\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } else if (doneInputs.length \u003e 2) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"OOPS!!! Please enter 1 task number only\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        int taskToDo;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            taskToDo \u003d Integer.parseInt(doneInputs[1]);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            throw new InvalidCommand(\"Please enter task number instead of task name!\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        int indexInTaskList \u003d taskToDo - 1;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        DoneCommand dc \u003d new DoneCommand(indexInTaskList);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return dc;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 208
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents deadline tasks created by users."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates Deadline object with relevant task name and deadline time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskName Task name."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param time Time that the task is due (YYYY-MM-DD format)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Deadline(String taskName, LocalDate time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of deadline task in backend data storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of deadline task in backend data storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String getDataStorageName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"D | \" + (super.getStatus() \u003d\u003d \"Completed\" ? \"1\" : \"0\") + \" | \" + super.getTaskName() + \" | \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + this.time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of task to be displayed in task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of task in task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 44
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents event tasks created by users."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates Event object with relevant task name and event time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskName Task name."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param time Time that the task is due (YYYY-MM-DD format)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Event(String taskName, LocalDate time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of event task in backend data storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of event task in backend data storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String getDataStorageName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"E | \" + (super.getStatus() \u003d\u003d \"Completed\" ? \"1\" : \"0\") + \" | \" + super.getTaskName() + \" | \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + this.time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of event task to be displayed in task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of event task in task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 44
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents tasks created by users."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * To be inherited by Deadline, Event and ToDo classes."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private boolean hasCompleted;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String tagName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private boolean isTagged;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates Task with relevant task name."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param name Task Name."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.taskName \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.hasCompleted \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.tagName \u003d \"#noTag\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.isTagged \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns symbol corresponding to status of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Current status of task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    protected String getStatus() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return (this.hasCompleted ? \"Completed\" : \"Do Soon\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Edits status of the task to completed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.hasCompleted \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns task name of the selected task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Task name."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    protected String getTaskName() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (isTagged) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            return this.taskName + \" \" + getTagName();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String getTagName() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String retrievedTagName \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        if (this.isTagged) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            retrievedTagName \u003d this.tagName;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return retrievedTagName;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Tags a task with the given tag word by user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param tagWord Tag word to be used to tag task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void tagTask(String tagWord) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.isTagged \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.tagName \u003d \"#\" + tagWord;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of task to be displayed in task list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of task in task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"[\" + getStatus() + \"] \" + getTaskName();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 82
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents to-do tasks created by users."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates ToDo object with relevant task name."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskName Task name."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of to-do task in backend data storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of to-do task in backend data storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String getDataStorageName() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"T | \" + (super.getStatus() \u003d\u003d \"Completed\" ? \"1\" : \"0\") + \" | \" + super.getTaskName();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of to-do task to be displayed in task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of to-do task in task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 36
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 23
    }
  },
  {
    "path": "src/test/java/duke/tasks/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void markDone_taskMarkAsDone_taskStatusShowsTick() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        Task testTask \u003d new Task(\"Testing\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        testTask.markDone();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assertEquals(\"[\" + \"Completed\" + \"] Testing\", testTask.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 14
    }
  },
  {
    "path": "src/test/java/duke/tasks/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void dataStorage_displaysCorrectStorageName_displayZeroForUndone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        ToDo testToDoUndone \u003d new ToDo(\"Testing\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assertEquals(\"T | 0 | Testing\", testToDoUndone.getDataStorageName());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void dataStorage_displaysCorrectStorageNameForDone_displayOneForDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        ToDo testToDoUndone \u003d new ToDo(\"Testing\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        testToDoUndone.markDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assertEquals(\"T | 1 | Testing\", testToDoUndone.getDataStorageName());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "todo borrow books"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "deadline return book /by 2020-10-05"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "event project meeting /at 2020-08-09"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "deadline do homework /by 2020-09-10"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "SET JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 7,
      "-": 19
    }
  }
]
