[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public Deadline(String name, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private static void listItems(ArrayList\u003cTask\u003e xs){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        for (Task t: xs) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            System.out.println(\"    \" + counter + \": \" + t.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            counter +\u003d 1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public static void main(String[] args) throws DukeException{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String breakline \u003d \"    ______________________________________________________\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"    Welcome to \\n\" + logo + \"\\n    Your personal assistant :)\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(breakline);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(breakline);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            String userCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            String[] userWord \u003d userCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            if (userCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                System.out.println(breakline);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                System.out.println(breakline);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            switch (userWord[0]) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(breakline);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    listItems(listOfTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(breakline);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    if (userWord.length \u003d\u003d 1 || userWord[1].equals(\"\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        throw new DukeException(\"   ☹ OOPS!!! The description of the command todo cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    ToDo newT \u003d new ToDo(userWord[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    listOfTask.add(newT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(breakline);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(\"    Got it. I\u0027ve added this task: \\n     \" + newT.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(\"    Now you have \" + listOfTask.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(breakline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    if (userWord.length \u003d\u003d 1 || userWord[1].equals(\"\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        throw new DukeException(\"   ☹ OOPS!!! The description of the command deadline cannot be empty.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    String[] content \u003d userWord[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    if (content.length \u003d\u003d 1 || content[1].equals(\"\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        throw new DukeException(\"   ☹ OOPS!!! We can\u0027t seem to find your deadline. Please type /by before your preferred timing\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    Deadline newD \u003d new Deadline(content[0], content[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    listOfTask.add(newD);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(breakline);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(\"    Got it. I\u0027ve added this task: \\n     \" + newD.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(\"    Now you have \" + listOfTask.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(breakline);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    if (userWord.length \u003d\u003d 1 || userWord[1].equals(\"\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        throw new DukeException(\"   ☹ OOPS!!! The description of the command event cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    String[] content2 \u003d userWord[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    if (content2.length \u003d\u003d 1 || content2[1].equals(\"\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        throw new DukeException(\"   ☹ OOPS!!! We can\u0027t seem to find your event time. Please type /at before your preferred timing\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    Event newE \u003d new Event(content2[0], content2[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    listOfTask.add(newE);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(breakline);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(\"    Got it. I\u0027ve added this task: \\n     \" + newE.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(\"    Now you have \" + listOfTask.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(breakline);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    if (userWord.length \u003d\u003d 1 || userWord[1].equals(\"\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        throw new DukeException(\"   ☹ OOPS!!! The description of the command done cannot be empty.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    int index \u003d Integer.parseInt(userWord[1]) - 1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    if (index \u003e\u003d 0 \u0026\u0026 index \u003c listOfTask.size()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        Task temp \u003d listOfTask.get(index);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        temp.completed();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        System.out.println(breakline);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        System.out.println(\"    \" + temp.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        throw new DukeException(\"    Invalid index entry for done command.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(breakline);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    if (userWord.length \u003d\u003d 1 || userWord[1].equals(\"\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        throw new DukeException(\"   ☹ OOPS!!! The description of the command done cannot be empty.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    int index2 \u003d Integer.parseInt(userWord[1]) - 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    if (index2 \u003e\u003d 0 \u0026\u0026 index2 \u003c listOfTask.size()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        Task temp \u003d listOfTask.get(index2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        listOfTask.remove(index2);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        System.out.println(breakline);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        System.out.println(\"    Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        System.out.println(\"    \" + temp.toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        System.out.println(\"    Now you have \" + listOfTask.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        throw new DukeException(\"    Invalid index entry for delete command.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    System.out.println(breakline);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    throw new DukeException(\"    Sorry! I\u0027m not really sure what to do with this command yet ☹\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 122,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public DukeException(String error){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String breakline \u003d \"\\n    ___________________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return breakline + \"\\n\" + super.getMessage() + breakline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public Event(String name, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public Task(String name){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void completed(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return (isDone ? \"[\\u2705]\" : \"[\\u2718]\") + \" \" + name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 19
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "event project meeting /at Aug 6th"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "carrots"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "event cca meeting /at June 13th 3-4am"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "deadline go to bed /by 10pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "if not exist \"%CD%\\..\\bin\" mkdir \"%CD%\\..\\bin\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "javac  -cp \"%CD%\\..\\src\\main\\java\" -Xlint:none -d \"%CD%\\..\\bin\" \"%CD%\\..\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "java -classpath \"%CD%\\..\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 5,
      "-": 18
    }
  }
]
