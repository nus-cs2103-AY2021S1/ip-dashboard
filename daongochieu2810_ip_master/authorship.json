[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * This file was generated by the Gradle \u0027init\u0027 task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * This generated file contains a sample Java project to get you started."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    // Apply the java plugin to add support for Java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    // Apply the application plugin to add support for building a CLI application."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    // Use jcenter for resolving dependencies."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    // You can declare any Maven/Ivy/file repository here."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    jcenter()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    // This dependency is used by the application."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation \u0027com.google.guava:guava:29.0-jre\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    // JavaFX"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    // Use JUnit Jupiter API for testing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.2\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    // Use JUnit Jupiter Engine for testing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.6.2\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "application {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    // Define the main class for the application."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    mainClassName \u003d \u0027duke.Launcher\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "test {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    // Use junit platform for unit tests"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "run {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 67
    }
  },
  {
    "path": "data/save_file.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "todo asd 0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "todo asd 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline aksdb kjbsad /by 2020-12-12     0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "event asd /at 2020-12-12    0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "todo abc 0"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 5
    }
  },
  {
    "path": "data/stat.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "3"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "1"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "MuskBot was designed to make your work easier and more organized "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " list \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " deadline,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " event,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " todo \\"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " delete\\"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " help\\"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " find\\"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " stat\\"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " bye\\"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "# list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "List all current tasks, can pass date to filter tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`list [date]` \\"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Example"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`list 2020-12-12` \\"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "returns all tasks that have deadline on that day"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "# deadline"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Add a deadline task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`deadline \u003cdescription\u003e /by \u003cdate\u003e [time]` \\"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Example"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`deadline do something /by 2020-12-12 1500` \\"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "adds the deadline at 12th, Dec 2020 at 3pm"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "# event"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Add an event task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`event \u003cdescription\u003e /at \u003cdate\u003e [time]` \\"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Example"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`event do something /at 2020-12-12 1500` \\"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "adds the event at 12th, Dec 2020 at 3pm"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "# todo"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Add a todo task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`todo \u003cdescription\u003e` \\"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Example"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`event do something` \\"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "adds the todo task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "# delete"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Delete a task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`delete \u003cindex number\u003e` \\"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Example"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`delete 1` \\"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deletes the task with index number 1"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "# find"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Find a task with keyword"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`find \u003ckeyword\u003e`\\"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Example"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`find book`\\"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "returns tasks that have description containing `book`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "# stat"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Show statistics i.e usage frequency"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`stat` \\"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Example"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`stat` \\"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "shows the bar chart indicating usage frequency since the 1st time using the app"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "# done"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Mark a task as done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`done \u003cindex number\u003e` \\"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Example"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`done 1` \\"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "marks the task with index number 1 as done"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "# bye"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Close the app"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`bye` \\"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Example"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`bye` \\"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "closed the app"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "# help"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Shows available commands"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`help` \\"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "Example"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "`help` \\"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "shows available commands and descriptions e.g list, delete, find,..."
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 83,
      "-": 12
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "if exist \"%JAVA_EXE%\" goto execute"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ":end"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 89
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * This file was generated by the Gradle \u0027init\u0027 task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * The settings file is used to specify which projects to include in your build."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * Detailed information about configuring a multi-project build in Gradle can be found"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * in the user manual at https://docs.gradle.org/6.6.1/userguide/multi_project_builds.html"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "rootProject.name \u003d \u0027ip\u0027"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 10
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.commands.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.uiparts.Statistics;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String WRONG_FORMAT_MSG \u003d \"Wrong format\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            + \" Your date and time(optional) should be in this format:\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            + \"yyyy-mm-dd HHmm\\ne.g: 2019-10-15 1800 or 2019-10-15\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public final static String ERROR_MSG \u003d \"OOPS!!! CAN YOU PLEASE TYPE SOMETHING MEANINGFUL?\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String GREETINGS \u003d \"Hello! I\u0027m Elon Musk. Type \u0027help\u0027 if you know nothing\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            + \"Your tasks will be saved at /data\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String ERROR_LOAD_MSG \u003d \"Something wrong happened while loading saved tasks\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String FIRST_TIME \u003d \"This is the first time you use Duke!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public final static String ERROR_CODE \u003d \"000\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public final static String EXIT_MSG \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String HELP_MSG \u003d \"Type \u0027help\u0027 if you know nothing\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private int[] statData;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Statistics statistics;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.statistics \u003d new Statistics();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.storage \u003d new Storage(\"data/save_file.txt\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.statData \u003d new int[]{0,0,0};"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private int getNumTasks() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.tasks.getTaskList().size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Lists all tasks with date/time filter"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param tokens"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return string representation of tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String listTasks(boolean isLoaded, String[] tokens) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] extractedData \u003d parser.extractData(isLoaded, tokens);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String content \u003d extractedData[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        DateTimeHelper dtHelper \u003d DateTimeHelper.processDateTime(content);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (dtHelper !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            LocalDate deadline \u003d dtHelper.getDate();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return tasks.filterTaskList(deadline);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeException(WRONG_FORMAT_MSG);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Distributes each command based on its type, then return a string that will be shown to the user."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param commandType"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param tokens"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return message to user"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    protected String distributeCommand(Commands commandType, String[] tokens, boolean isLoaded) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Task parsedTask \u003d new Task(\"\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        //pass this to parser to hide storage from it"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Function\u003cVoid, Void\u003e saveTaskListStorage \u003d param -\u003e {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            storage.saveTasks(tasks.getTaskList());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        };"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (commandType \u003d\u003d Commands.DEADLINE || commandType \u003d\u003d Commands.EVENT || commandType \u003d\u003d Commands.TODO) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if(commandType \u003d\u003d Commands.DEADLINE) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                statData[1]++;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } else if(commandType \u003d\u003d Commands.EVENT) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                statData[2]++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                statData[0]++;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            statistics.saveData(statData);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            parsedTask \u003d parser.parseTaskCommand(commandType, tokens, isLoaded, getNumTasks());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else if (commandType \u003d\u003d Commands.DELETE) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            int markNumber \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return parser.parseOperationCommand(Commands.DELETE, markNumber, getNumTasks(), tasks, saveTaskListStorage);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else if (commandType \u003d\u003d Commands.DONE) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            int markNumber \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return parser.parseOperationCommand(Commands.DONE, markNumber, getNumTasks(), tasks, saveTaskListStorage);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }  else if (commandType \u003d\u003d Commands.LIST) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return listTasks(isLoaded, tokens);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else if (commandType \u003d\u003d Commands.FIND) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return tasks.findTasks(tokens);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else if (commandType \u003d\u003d Commands.BYE || commandType \u003d\u003d Commands.HELP) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeException(\"Wrong format of command \" + \"\u0027\" + commandType.getAction() + \"\u0027\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (!parsedTask.getContent().equals(\"\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.tasks.addTask(parsedTask);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        storage.saveTasks(this.tasks.getTaskList());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return parsedTask.getUiOutput();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Strips trailing whitespaces and tokenizes each command before further processing"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return message to user"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    protected String parsedCommand(String command, boolean isLoaded) throws DukeException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        command \u003d command.strip();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (command.equals(\"\")) return \"\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] tokens \u003d command.split(\" \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return distributeCommand(Commands.valueOf(tokens[0].toUpperCase()), tokens, isLoaded);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeException(ERROR_MSG);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Reads input and return output to the user"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    protected String init() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        result +\u003d Ui.printDialog(GREETINGS);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        ArrayList\u003cString\u003e savedTasks \u003d storage.loadSavedTasks();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert savedTasks !\u003d null : \"Storage is null\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (savedTasks.size() \u003e 0 \u0026\u0026 savedTasks.get(0).equals(\"000\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            result +\u003d Ui.printDialog(\"This is the first time you use Duke!\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                for (String task : savedTasks) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    parsedCommand(task, true);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                result +\u003d Ui.printDialog(ERROR_LOAD_MSG);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getResponse(String content) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert content !\u003d null : \"Response is null\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        content \u003d content.strip();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (content.equals(Commands.BYE.getAction())) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return Ui.printDialog(EXIT_MSG);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (content.equals(Commands.HELP.getAction())) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String res \u003d \"\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            for(Commands command: Commands.values()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                res +\u003d command.getAction() + \": \" + command.getDescription();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                res +\u003d \"\\n    \";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return Ui.printDialog(res);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else if (content.equals(Commands.LIST.getAction())) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return Ui.printStoredTasks(this.tasks.getTaskList());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else if (content.equals(Commands.STAT.getAction())) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"GET_CHART\";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                String result \u003d parsedCommand(content, false);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                if (!result.equals(\"\")) return Ui.printDialog(result);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                return Ui.printDialog(e.getMessage());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return HELP_MSG;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 194,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 11
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            AnchorPane ap \u003d new AnchorPane();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            fxmlLoader.setRoot(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            scene.getStylesheets().add(this.getClass().getClassLoader().getResource(\"style/main_window.css\").toExternalForm());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.duke \u003d new Duke();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().initialize(duke);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            stage.setTitle(\"Elon Musk\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            stage.getIcons().add(new Image(this.getClass().getClassLoader().getResource(\"images/icon.jpg\").toString()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 38
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.uiparts.DialogBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.uiparts.Statistics;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String USER_AVATAR \u003d \"/images/dnh.jpg\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String DUKE_AVATAR \u003d \"/images/duke.jpg\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(USER_AVATAR));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(DUKE_AVATAR));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void initialize(Duke duke) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.init(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                dukeImage));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if(response \u003d\u003d \"GET_CHART\") {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    DialogBox.getUserDialog(input,userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    DialogBox.getStatDialog(new Statistics(), dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        else if (response.equals(Ui.printDialog(Duke.EXIT_MSG))) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    DialogBox.getUserDialog(input,userImage),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 68
    }
  },
  {
    "path": "src/main/java/duke/commands/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    LIST(\"list\", \"List all tasks, pass date if you want to list specific deadlines/events e.g list \"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    BYE(\"bye\", \"Exit the program\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    DONE(\"done\", \"Mark a duke.task as done e.g done 1 \u003d duke.task 1 is done\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    DEADLINE(\"deadline\", \"Add a deadline with date and time(optional) e.g deadline buy smth /by 2020-12-20 1800\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    EVENT(\"event\", \"Add an event with date and time(optional) e.g event buy smth /at 2020-12-20 1800\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    TODO(\"todo\", \"Add a todo\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    DELETE(\"delete\", \"Delete a duke.task\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    HELP(\"help\", \"For dummies, like YOU\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    FIND(\"find\", \"Find tasks with keywords e.g find book\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    STAT(\"stat\", \"Show statistics\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String action;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getAction() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.action;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Commands(String action, String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.action \u003d action;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 27
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.commands.Commands;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String PARSE_ERROR \u003d \"Wrong format\\n    Your date and time(optional) \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            + \"should be in this format:\\n      yyyy-mm-dd HHmm\\n    e.g: 2019-10-15 1800 or 2019-10-15\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String EMPTY_DESC_ERROR \u003d \"Description cannot be empty PLEASE!!!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String MISSING_INFO_ERROR \u003d \"NOT ENOUGH INFORMATION!!!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String NO_TIME \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private DateTimeHelper dtHelper;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Converts string to Todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param content"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static Todo stringToTodo(String content, boolean isLoaded, boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert (content !\u003d null \u0026\u0026 !content.equals(\"\")) : \"Empty or null content\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Todo todoTask \u003d new Todo(content);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (isLoaded \u0026\u0026 isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            todoTask.markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return todoTask;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Converts string to Deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param content"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param deadline"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param exactTime"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param deadlineStr"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static Deadline stringToDeadline(String content, LocalDate deadline,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                                            String exactTime, String deadlineStr,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                                            boolean isLoaded, boolean isDone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert (content !\u003d null \u0026\u0026 !content.equals(\"\")) : \"Empty or null content\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert (deadline !\u003d null) : \"Null deadline\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert (deadlineStr !\u003d null \u0026\u0026 !deadlineStr.equals(\"\")) : \"Empty or null deadline string\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Deadline deadlineTask \u003d new Deadline(content, deadline, exactTime, deadlineStr);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (isLoaded \u0026\u0026 isDone) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return deadlineTask;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Converts string to Event"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param content"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param deadline"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param exactTime"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param deadlineStr"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static Event stringToEvent(String content, LocalDate deadline,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                                      String exactTime, String deadlineStr,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                                      Boolean isLoaded, Boolean isDone) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert (content !\u003d null \u0026\u0026 !content.equals(\"\")) : \"Empty or null content for event\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert (deadline !\u003d null) : \"Null deadline for event\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert (deadlineStr !\u003d null \u0026\u0026 !deadlineStr.equals(\"\")) : \"Empty or null deadline string for event\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Event eventTask \u003d new Event(content, deadline, exactTime, deadlineStr);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (isLoaded \u0026\u0026 isDone) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            eventTask.markAsDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return eventTask;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Extracts content and deadline from tokens"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param tokens"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return content and deadline as strings"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String[] extractData(boolean isLoaded, String[] tokens) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert (tokens !\u003d null) : \"Null tokens\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String deadlineStr \u003d \"\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        //saved items has a final token which decides its completion status"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        int tokensLimit \u003d isLoaded ? tokens.length - 1 : tokens.length;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for (int i \u003d 1; i \u003c tokensLimit; i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if (tokens[i].length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if (tokens[i].charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                for (int j \u003d i + 1; j \u003c tokensLimit; j++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    deadlineStr +\u003d tokens[j] + \" \";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            content +\u003d tokens[i] + \" \";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return new String[]{content, deadlineStr};"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String extractTime() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String resTime \u003d dtHelper.processTimeStr();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (resTime.equals(\"success\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return dtHelper.getTime();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return NO_TIME;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private LocalDate extractDate() throws DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (dtHelper !\u003d null) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return dtHelper.getDate();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeException(PARSE_ERROR);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Classifies the task based on command type"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param commandType"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param content"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param numTasks"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param deadline"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param exactTime"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param deadlineStr to be stored"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return classified task"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Task classifyTasks(Commands commandType, String content, int numTasks,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                               LocalDate deadline, String exactTime, String deadlineStr,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                               boolean isLoaded, boolean isDone ) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String resultPrefix \u003d \"Got it. I\u0027ve added this task:\\n      \";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String resultSubfix \u003d \"Now you have \" + (numTasks + 1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            case DEADLINE: {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                Deadline task \u003d stringToDeadline(content, deadline, exactTime, deadlineStr, isLoaded, isDone);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                task.setUiOutput(resultPrefix + task.returnStringForm() + \"\\n    \" + resultSubfix);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            case EVENT: {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                Event task \u003d stringToEvent(content, deadline, exactTime, deadlineStr, isLoaded, isDone);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                task.setUiOutput(resultPrefix + task.returnStringForm() + \"\\n    \" + resultSubfix);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                Todo task \u003d stringToTodo(content, isLoaded, isDone);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                task.setUiOutput(resultPrefix + task.returnStringForm() + \"\\n    \" + resultSubfix);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Parses operational commands"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param commandType"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param markNumber"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param numTasks"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param saveTaskListStorage"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return string representation of operational commands"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String parseOperationCommand(Commands commandType, int markNumber, int numTasks,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                                        TaskList tasks, Function\u003cVoid, Void\u003e saveTaskListStorage) throws DukeException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            case DONE: {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                result \u003d tasks.doneTask(markNumber);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            case DELETE: {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                result \u003d tasks.deleteTask(markNumber, numTasks - 1);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                result \u003d \"\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        saveTaskListStorage.apply(null);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Parses task strings"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param commandType"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param tokens"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param isLoaded"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param numTasks"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return parsed tasks"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeInvalidArgumentException"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Task parseTaskCommand(Commands commandType, String[] tokens, boolean isLoaded,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                             int numTasks) throws DukeException, DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] extractedData \u003d extractData(isLoaded, tokens);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String content \u003d extractedData[0];"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String deadlineStr \u003d extractedData[1];"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        boolean isDone \u003d tokens[tokens.length - 1].equals(\"1\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        //init"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        LocalDate deadline \u003d LocalDate.now();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String exactTime \u003d \"\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (deadlineStr.equals(\"\") \u0026\u0026 (commandType \u003d\u003d Commands.DEADLINE || commandType \u003d\u003d Commands.EVENT)) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeInvalidArgumentException(MISSING_INFO_ERROR);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (commandType \u003d\u003d Commands.DEADLINE || commandType \u003d\u003d Commands.EVENT) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            dtHelper \u003d DateTimeHelper.processDateTime(deadlineStr);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            deadline \u003d extractDate();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            exactTime \u003d extractTime();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        content \u003d content.strip();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (content.equals(\"\")) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeException(EMPTY_DESC_ERROR);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return classifyTasks(commandType, content, numTasks, deadline, exactTime, deadlineStr, isLoaded, isDone);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 236
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.storage.LoadData;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.storage.SaveData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert (path !\u003d null \u0026\u0026 !path.equals(\"\")) : \"Invalid path\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public ArrayList\u003cString\u003e loadSavedTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return LoadData.getSavedTasks(path);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert data !\u003d null : \"Invalid data\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        SaveData.saveData(path,data);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 23
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String SEARCH_ERROR \u003d \"Nothing matches. Watch out for typos\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert (this.taskList !\u003d null) : \"Tasklist is null\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert task !\u003d null : \"Null task\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Marks task as done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param markNumber"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return status string"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeInvalidArgumentException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String doneTask(int markNumber) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Task marked \u003d taskList.get(markNumber - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            marked.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"Nice! I\u0027ve marked this task as done:\\n      \" + marked.returnStringForm();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeInvalidArgumentException(\"Invalid number\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Deletes task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param markNumber"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param numTasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return status string"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @throws DukeInvalidArgumentException"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String deleteTask(int markNumber, int numTasks) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Task marked \u003d taskList.get(markNumber - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.taskList.remove(markNumber - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"Noted. I\u0027ve removed this task:\\n      \" + marked.returnStringForm()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    + \"\\n    Now you have \" + numTasks + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            throw new DukeInvalidArgumentException(\"Invalid number\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Filters tasks based on deadline"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param deadline"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return message to user"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String filterTaskList(LocalDate deadline) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String result \u003d \"Here are the matching tasks in your list:\\n    \";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for (int i \u003d 0;i \u003c taskList.size();i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                if (((Deadline)task).getDeadline().compareTo(deadline) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    result +\u003d ((i + 1) + \".\" + task.returnStringForm());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    if (i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                        result +\u003d \"\\n    \";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                if (((Event)task).getTime().compareTo(deadline) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    result +\u003d ((i + 1) + \".\" + task.returnStringForm());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    if (i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                        result +\u003d \"\\n    \";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Filters tasks based on keywords"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param tokens"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return matched tasks"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String findTasks(String[] tokens) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert tokens !\u003d null : \"Null tokens\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String keyword \u003d \"\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        int numMatch \u003d 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String result \u003d \"Here are the matching tasks in your list:\\n    \";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for (int i \u003d 1;i \u003c tokens.length;i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            keyword +\u003d tokens[i];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        keyword \u003d keyword.toLowerCase();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 0;i \u003c taskList.size();i++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if(task.getContent().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                numMatch++;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                result +\u003d ((i + 1) + \".\" + task.returnStringForm());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                if (i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    result +\u003d \"\\n    \";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (numMatch \u003d\u003d 0) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return SEARCH_ERROR;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 120
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static String printDialog(String content) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String preLine \u003d \"----------------------------------------\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String main \u003d content + \"\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String subLine \u003d \"----------------------------------------\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return preLine + main + subLine;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Prints all tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param taskStorage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static String printStoredTasks(ArrayList\u003cTask\u003e taskStorage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String result \u003d \"Here are the tasks in your list:\\n    \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 0; i \u003c taskStorage.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            result +\u003d ((i + 1) + \".\" + taskStorage.get(i).returnStringForm());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if(i \u003c taskStorage.size() - 1) result +\u003d \"\\n    \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return printDialog(result);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 27
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/uiparts/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.dukehelper.uiparts;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.MainWindow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.dukehelper.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private VBox stat;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private void baseSetUp(Image img) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.setSpacing(10);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.getStylesheets().add(this.getClass().getClassLoader().getResource(\"style/dialog.css\").toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.getStyleClass().add(\"layout\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Circle clip \u003d new Circle(displayPicture.getX() + 35, displayPicture.getY() + 35, 35);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert (text !\u003d null \u0026\u0026 img !\u003d null) : \"Input is null\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        baseSetUp(img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        dialog.getStyleClass().add(\"message-right\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (text.equals(Ui.printDialog(Duke.ERROR_MSG))) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            dialog.getStyleClass().add(\"error-msg\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        stat.setVisible(false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private DialogBox(String text, Image img, Statistics chart) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assert (text !\u003d null \u0026\u0026 img !\u003d null) : \"Input is null\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        baseSetUp(img);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        dialog.setVisible(false);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        chart.getStyleClass().add(\"message-left\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        stat.getChildren().add(chart);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        //dialog.setStyle(\"-fx-font: 16px \\\"Serif\\\"; -fx-text-alignment: left\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        dialog.getStyleClass().add(\"message-left\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static DialogBox getStatDialog(Statistics chart, Image img) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        DialogBox dialogBox \u003d new DialogBox(\"\", img, chart);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        dialogBox.flip();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 98
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/uiparts/Statistics.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.dukehelper.uiparts;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.chart.BarChart;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.chart.CategoryAxis;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.chart.NumberAxis;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.chart.XYChart;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Statistics extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String path \u003d \"data/stat.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private final static String[] categories \u003d new String[]{\"Todo\", \"Deadline\", \"Event\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private BarChart\u003cString, Number\u003e chart;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Saves current counter data"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param data current counter data"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void saveData(int[] data) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            File file \u003d new File(path);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String res \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            for(int i : data) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                res +\u003d i + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            writer.write(res);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Loads current counter data"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return current counter data"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public int[] getData() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        int[] data \u003d new int[]{0,0,0};"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            File savedFile \u003d new File(path);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Scanner scanner \u003d new Scanner(savedFile);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                String chartData \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                data[index++] \u003d Integer.parseInt(chartData);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Statistics() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        int[] data \u003d getData();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        int max \u003d 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for (int num : data) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if (num \u003e max) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                max \u003d num;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        CategoryAxis xAxis \u003d new CategoryAxis();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        xAxis.setCategories(FXCollections.\u003cString\u003eobservableArrayList(categories));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        xAxis.setLabel(\"Types of notes\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        NumberAxis yAxis \u003d new NumberAxis(0.0, max, 1.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        yAxis.setLabel(\"Times used\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        XYChart.Series\u003cString, Number\u003e series \u003d new XYChart.Series\u003c\u003e();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        series.setName(\"Since the start\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for (int i \u003d 0; i \u003c data.length; i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            series.getData().add(new XYChart.Data\u003cString, Number\u003e(categories[i], data[i]));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        chart \u003d new BarChart\u003c\u003e(xAxis, yAxis);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        chart.getData().add(series);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.getChildren().add(chart);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 88
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class DukeInvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public DukeInvalidArgumentException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 7
    }
  },
  {
    "path": "src/main/java/duke/helper/DateTimeHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class DateTimeHelper {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private LocalDate fullDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String fullTime \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String dateStr \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String timeStr \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public DateTimeHelper(String deadline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.dateTime \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Format time as ab:cd pm/am"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return time"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String processTimeStr() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            int time \u003d Integer.parseInt(timeStr);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            int hours \u003d (time / 100) % 12;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            int minutes \u003d time % 100;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String identifier \u003d time / 100 \u003e 12 ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if (time / 100 \u003d\u003d 12) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                hours \u003d 12;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                identifier \u003d \"pm\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            else if (time / 100 \u003d\u003d 24)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                identifier \u003d \"am\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String paddingForHour \u003d hours \u003c 10 ? \"0\" : \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String paddingForMinute \u003d minutes \u003c 10 ? \"0\" : \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.fullTime \u003d paddingForHour + hours + \":\" + paddingForMinute + minutes + identifier;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"success\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Parse date string"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return date"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String processDateStr() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.fullDate \u003d LocalDate.parse(dateStr);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"success\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Obtains date and time strings from tokens"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return status message"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String processInput() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String[] tokens \u003d this.dateTime.split(\" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            for (String token : tokens) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                if (!token.equals(\"\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    if (dateStr.equals(\"\")) dateStr \u003d token;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                        timeStr \u003d token;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"success\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Format date"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return string representation of date"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static String getStringRep(LocalDate date) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.fullDate;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Processes input"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return DateTimeHelper object"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static DateTimeHelper processDateTime(String input) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        DateTimeHelper dtHelper \u003d new DateTimeHelper(input.strip());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String result \u003d dtHelper.processInput();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String resDate \u003d dtHelper.processDateStr();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        if (!result.equals(\"error\") \u0026\u0026 !resDate.equals(\"error\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return dtHelper;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.fullTime;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 111
    }
  },
  {
    "path": "src/main/java/duke/storage/LoadData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class LoadData {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Loads saved tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param path"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return commands"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static ArrayList\u003cString\u003e getSavedTasks(String path) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        ArrayList\u003cString\u003e savedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            File savedFile \u003d new File(path);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Scanner scanner \u003d new Scanner(savedFile);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                String taskData \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                //System.out.println(taskData);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                savedTasks.add(taskData);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            savedTasks.add(Duke.ERROR_CODE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            //e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return savedTasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 32
    }
  },
  {
    "path": "src/main/java/duke/storage/SaveData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class SaveData {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Converts saved tasks to string commands"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private static String taskToCommand(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String commands \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String command \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            //1 for done, 0 for not done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String status \u003d task.getStatus() ? \" 1\" : \" 0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                command \u003d \"deadline \" + task.getContent() + \" /by \" + ((Deadline) task).getDeadlineStr();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                command \u003d \"event \" + task.getContent() + \" /at \" + ((Event) task).getDealineStr();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            } else if (task instanceof Todo) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                command \u003d \"todo \" + task.getContent();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            commands +\u003d command + status + \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return commands;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * Saves current tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param path"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     * @param data"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public static void saveData(String path, ArrayList\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            File file \u003d new File(path);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            String commands \u003d taskToCommand(data);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            writer.write(commands);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private LocalDate deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String exactTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String deadlineStr;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Deadline(String content, LocalDate deadline, String exactTime, String deadlineStr) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.exactTime \u003d exactTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.deadlineStr \u003d deadlineStr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public LocalDate getDeadline() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getDeadlineStr() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.deadlineStr;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String returnStringForm() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return \"[D]\" + super.returnStringForm() + \"( by: \" + DateTimeHelper.getStringRep(this.deadline) + \" \" + this.exactTime + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String exactTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String deadlineStr;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Event(String content, LocalDate time, String exactTime, String deadlineStr) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.exactTime \u003d exactTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.deadlineStr \u003d deadlineStr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getDealineStr() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.deadlineStr;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String returnStringForm() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return \"[E]\" + super.returnStringForm() + \"( at: \" + DateTimeHelper.getStringRep(time) + \" \" + this.exactTime + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private Boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    private String uiOutput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Task(String content) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void setUiOutput(String uiOutput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.uiOutput \u003d uiOutput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getUiOutput() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return this.uiOutput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public boolean getStatus() { return this.isDone; }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getContent() { return this.content; }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String returnStringForm() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return \"[\" + getStatusIcon() +\"] \" + this.content;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public Todo(String content) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public String returnStringForm() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        return \"[T]\" + super.returnStringForm();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 12
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003cfx:root"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        alignment\u003d\"TOP_RIGHT\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        \u003cLabel"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                fx:id\u003d\"dialog\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                text\u003d\"Label\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                wrapText\u003d\"true\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        \u003cVBox fx:id\u003d\"stat\" minHeight\u003d\"-Infinity\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        \u003cImageView"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                fx:id\u003d\"displayPicture\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                fitHeight\u003d\"70.0\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                fitWidth\u003d\"70.0\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                preserveRatio\u003d\"true\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 35
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003cfx:root"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        type\u003d\"javafx.scene.layout.AnchorPane\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        maxWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        \u003cScrollPane"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                fx:id\u003d\"scrollPane\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                hbarPolicy\u003d\"NEVER\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                hvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                prefHeight\u003d\"557.0\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                vvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                vbarPolicy\u003d\"ALWAYS\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        \u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"560.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 38
    }
  },
  {
    "path": "src/test/java/duke/dukehelper/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.commands.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    class Params {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Commands commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] tokens;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        boolean isLoaded;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        int numTasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Params(Commands commandType, String[] tokens, boolean isLoaded, int numTasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.tokens \u003d tokens;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.isLoaded \u003d isLoaded;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            this.numTasks \u003d numTasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void parseCommand_listOfDeadlines_correctParsing() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Params[] listOfDeadlines \u003d new Params[]{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                new Params(Commands.DEADLINE, new String[]{\"deadline\",\"someContent\",\"/by\",\"2020-12-12\", \"1900\"},false, 5),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                new Params(Commands.DEADLINE, new String[]{\"deadline\",\"someContent\",\"/by\",\"2000-10-09\", \"2400\"},false, 5),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                new Params(Commands.DEADLINE, new String[]{\"deadline\",\"someContent\",\"/by\",\"1926-09-02\", \"0000\"},false, 5),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                new Params(Commands.DEADLINE, new String[]{\"deadline\",\"someContent\",\"/by\",\"2008-04-11\", \"1600\"},false, 5),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                new Params(Commands.DEADLINE, new String[]{\"deadline\",\"someContent\",\"/by\",\"1020-07-07\", \"0800\"},false, 5)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Parser parse \u003d new Parser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 0;i \u003c listOfDeadlines.length;i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Params params \u003d listOfDeadlines[i];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            LocalDate expectedDate \u003d LocalDate.parse(params.tokens[3]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            Task result \u003d parse.parseTaskCommand(params.commandType, params.tokens, params.isLoaded, params.numTasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            assertEquals(expectedDate.toString(), ((Deadline)result).getDeadline().toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            assertEquals(params.tokens[1], result.getContent());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 45
    }
  },
  {
    "path": "src/test/java/duke/helper/DateTimeHelperTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class DateTimeHelperTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void processTimeStr_listOfTimeStr_correctConversion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] listOfTests \u003d new String[]{\"2020-12-20 1900\", \"2021-11-30 2400\",\"2000-01-01 2400\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                ,\"1999-11-20 1300\",\"1000-05-20 1000\",\"2000-12-20 1100\"};"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] expectedResults \u003d new String[]{\"07:00pm\", \"00:00am\", \"00:00am\" ,\"01:00pm\", \"10:00am\", \"11:00am\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 0;i \u003c listOfTests.length;i++) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            DateTimeHelper dateTimeHelper \u003d new DateTimeHelper(listOfTests[i]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            dateTimeHelper.processInput();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            dateTimeHelper.processTimeStr();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            assertEquals(dateTimeHelper.getTime(), expectedResults[i]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void processDateStr_invalidInput_errorMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        String[] listOfTests \u003d new String[]{\"2020-14-20 1900\", \"2021-20-30 2400\",\"2000-45-01 2400\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                ,\"1999-20-20 1300\",\"1000-20-20 1000\",\"3000-34-20 1100\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        for(int i \u003d 0;i \u003c listOfTests.length;i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            DateTimeHelper dateTimeHelper \u003d new DateTimeHelper(listOfTests[i]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            dateTimeHelper.processInput();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "            assertEquals(dateTimeHelper.processDateStr(), \"error\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 29
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void returnStringForm_validForm_correctValue() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        LocalDate _now \u003d LocalDate.now();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Deadline dl \u003d new Deadline(\"hello\", _now, \"2020-12-12\", \"dealineString\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assertEquals(dl.returnStringForm(), \"[D]\" + \"[\" + \"\\u2718\" +\"] \" + \"hello\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                + \"( by: \" + DateTimeHelper.getStringRep(_now) + \" 2020-12-12)\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 18
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    public void returnStringForm_validForm_correctValue() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        LocalDate _now \u003d LocalDate.now();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        Event ev \u003d new Event(\"hello\", _now, \"2020-12-12\", \"dealineString\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "        assertEquals(ev.returnStringForm(), \"[E]\" + \"[\" + \"\\u2718\" +\"] \" + \"hello\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "                + \"( at: \" + DateTimeHelper.getStringRep(_now) + \" 2020-12-12)\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 18
    }
  },
  {
    "path": "text-ui-test/data/save_file.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline go eat /by 2020-10-20   2400  1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "event huhuh /at        1999-12-01   1200  1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "todo huhuhuhuhu 0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline study /by   1000-01-20  0500  0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05  0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05  0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05  0"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05  0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05  0"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline             go eat              /by 2020-10-20   2400"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "event huhuh     /at        1999-12-01   1200"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "todo        huhuhuhuhu"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "return something duh"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "masaka  hahahha kqjdnska"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline study /by   1000-01-20  0500"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "list 1000-01-20"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "deadline askdjn /by 2020-12-05"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "list 2020-12-05"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 18
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "dir /s /B ..\\src\\main\\java\\duke\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 4,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    find ../src/main/java/duke -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 5,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\Launcher.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\Main.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\MainWindow.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\commands\\Commands.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\dukehelper\\Parser.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\dukehelper\\Storage.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\dukehelper\\TaskList.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\dukehelper\\Ui.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\dukehelper\\uiparts\\DialogBox.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\dukehelper\\uiparts\\Statistics.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\exception\\DukeException.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\exception\\DukeInvalidArgumentException.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\helper\\DateTimeHelper.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\storage\\LoadData.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\storage\\SaveData.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\task\\Deadline.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\task\\Event.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\task\\Task.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daongochieu2810"
        },
        "content": "C:\\Users\\daong\\Dev\\ip\\src\\main\\java\\duke\\task\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "daongochieu2810": 20
    }
  }
]
