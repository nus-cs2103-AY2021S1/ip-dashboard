[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "pennhanlee": 2
    }
  },
  {
    "path": "config/travis/check-eof-newline.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "# Checks that all text files end with a newline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "ret\u003d0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "# Preserve filename with spaces by only splitting on newlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "IFS\u003d\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        echo \"ERROR:$filename:$line: no newline at EOF.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 18
    }
  },
  {
    "path": "config/travis/check-line-endings.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "# Checks for prohibited line endings."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "# Prohibited line endings: \\r\\n"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        ret \u003d 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 19
    }
  },
  {
    "path": "config/travis/check-trailing-whitespace.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "# Checks for trailing whitespace"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        # Only warn for markdown files (*.md) to accomodate text editors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        # which do not properly handle trailing whitespace."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        # (e.g. GitHub web editor)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        if ($1 ~ /\\.md$/) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            severity \u003d \"WARN\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            severity \u003d \"ERROR\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            ret \u003d 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        print severity, $1, $2, \" trailing whitespace.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 26
    }
  },
  {
    "path": "config/travis/run-checks.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "ret\u003d0 \u0026\u0026"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "for checkscript in \"$dir\"/check-*; do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    if ! \"$checkscript\"; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 11
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.command.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * \u003ch1\u003e DUKE CLASS \u003c/h1\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * The Duke Class contains the method to"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * initialize the DukeChat bot. Different commands will"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * result in different course of action."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * Currently Duke only supports Todo, Deadline, Event, Done, Delete, List, Find"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * commands as a Task Tracker."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @author Lee Penn Han"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @since 2020-08-25"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Instantiate a Duke Object with the filepath as that name"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * of the file which the lists will be saved to."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        this.taskList \u003d TaskList.createTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        this.storage \u003d Storage.createDukeFile(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Initiates the process of DukeBot that"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * accepts user commands and processes"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * the commands to create the Chatbot Task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @author Lee Penn Han."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Ui.welcomeMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            String cmd \u003d sc.nextLine().trim().toLowerCase();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            if (!cmd.equals(\"bye\") \u0026\u0026 cmd.length() !\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                    Parser.process(cmd, this.taskList, this.storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                    Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                    Ui.showSaving();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                    this.storage.saveToFile();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                    Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                Ui.goodbyeMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * This is the main method that makes use of the run method."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        new Duke(\"Saved\").run();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "pennhanlee": 74
    }
  },
  {
    "path": "src/main/java/duke/command/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public DukeException(String errormessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        super(errormessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 8
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * \u003ch1\u003e Duke Parser class \u003c/h1\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * This class is the class that processes the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * commands to create readable Tasks that will be stored in"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * the arraylist of tasks and arraylist of records"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @author Lee Penn Han"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @since 2020-25-08"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Processes the command and filters"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * it the correct private methods to"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * instantiate the Task objects to be recorded"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param command This is the user input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param taskList This is the taskList class that stores the current lists of tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param storage This is the Storage object that records the tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @throws DukeException Exception for unidentified commands"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static void process(String command, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        String[] stringarr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        if (stringarr[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            processorList(taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        } else if (stringarr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            int index \u003d Integer.parseInt(stringarr[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            String response \u003d taskList.updateTask(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            storage.updateRecord(response, index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            Ui.showResponse(response, command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        } else if (stringarr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            int index \u003d Integer.parseInt(stringarr[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            String response \u003d taskList.deleteTask(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            storage.deleteRecord(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            Ui.showResponse(response, command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        } else if (stringarr[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            String key \u003d stringarr[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            processorFind(taskList, key);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            String response \u003d processorAdd(command, taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            storage.saveRecord(response);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            Ui.showResponse(response, command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    private static void processorFind(TaskList taskList, String key) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Ui.showCommandMessage(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            if (taskList.getTask(i).getTask().contains(key)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                System.out.println(counter + \".\" + taskList.getTask(i).toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    private static void processorList(TaskList taskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Ui.showCommandMessage(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            System.out.println(index + \".\" + taskList.getTask(i).toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    private static String processorAdd(String cmd, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        String[] stringarr \u003d cmd.split(\" \", 2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        if (stringarr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            if (stringarr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                String message \u003d \"The description of a Todo cannot be empty\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                throw new DukeException(message);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                Todo todo \u003d Todo.createTodo(stringarr[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                taskList.addTask(todo);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                return todo.toString();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        } else if (stringarr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            if (stringarr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                String message \u003d \"The description of a Deadline cannot be empty\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                throw new DukeException(message);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                    String[] secondarr \u003d stringarr[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(secondarr[1].trim());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                    Deadline deadline \u003d Deadline.createDeadline(secondarr[0], date);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                    taskList.addTask(deadline);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                    return deadline.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                    String message \u003d \"That does not look like a proper Date. Please input YYYY-MM-DD\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        } else if (stringarr[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            if (stringarr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                String message \u003d \"The description of an Event cannot be empty\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                throw new DukeException(message);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                String[] secondarr \u003d stringarr[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                Event event \u003d Event.createEvent(secondarr[0], secondarr[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                taskList.addTask(event);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                return event.toString();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            String message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            throw new DukeException(message);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 122
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * \u003ch1\u003e Storage Class (Saving Tasks)\u003c/h1\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * Dukefile class is the class that contains the methods"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * that manages the task within the single initialisation of the bot"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * and extracts the current tasks and stores it in a text file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @author Lee Penn Han."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @version 1.0."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @since 2020-25-08."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    private ArrayList\u003cString\u003e recordArrayLst;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    private Storage(String fileName) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        this.recordArrayLst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Saves the current list of task to a textfile."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * By iterating through the records Arraylist,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * the method will save each element as a single task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * in the text file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @author Lee Penn Han."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @throws IOException on input error."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void saveToFile() throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(fileName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        for (String s : recordArrayLst) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            fileWriter.write(s + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        System.out.println(\"Total number of Tasks saved: \" + recordArrayLst.size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Stores the current task (Record) into the arraylist"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * as a String."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @author Lee Penn Han."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param record This is the Task to be saved."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void saveRecord(String record) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        recordArrayLst.add(record);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Updates the element in the Record ArrayList by using the"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * index from User Input to identify the position."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @author Lee Penn Han."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param record Latest Task Status."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param index The index of the task in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void updateRecord(String record, int index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        int i \u003d index - 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        recordArrayLst.set(i, record);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Deletes the element in the Record ArrayList by using the"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * index from User Input to identify the position."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @author Lee Penn Han."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param index The index of the targeted task in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void deleteRecord(int index) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        int i \u003d index - 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        recordArrayLst.remove(i);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Instantiates a Storage object."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @author Lee Penn Han."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param fileName This is the filename that the tasks will be saved under."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @return Storage object."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static Storage createDukeFile(String fileName) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return new Storage(fileName);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Gets the arraylist of Records to be saved."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @author Lee Penn Han."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @return Arraylist of Records to be saved."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public ArrayList\u003cString\u003e getRecords() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return this.recordArrayLst;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 102
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * \u003ch1\u003e Deadline Task class \u003c/h1\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * The deadline class is a child class of Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * It contains an extra property: deadline that indicates"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * the date that a task is due."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @author Lee Penn Han"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @since 2020-08-25"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    protected LocalDate deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    protected Deadline(String task, LocalDate deadline) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public LocalDate getDeadline() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static Deadline createDeadline(String task, LocalDate deadline) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return new Deadline(task, deadline);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        String done \u003d this.done ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        String date \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return \"[D][\" + done + \"] \" + this.task + \"(by: \" + date + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * \u003ch1\u003e Event Task class \u003c/h1\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * The event class is a child class of Task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * It contains an extra property: event that indicates"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * the date that a task is happening."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @author Lee Penn Han"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @since 2020-08-25"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    protected String event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    protected Event(String task, String event) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    private String getEvent() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return this.event;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static Event createEvent(String task, String event) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return new Event(task, event);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        String done \u003d this.done ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return \"[E][\" + done + \"] \" + this.task + \"(at:\" + this.event + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * \u003ch1\u003e Task Class \u003c/h1\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * This is the parent task class that contains"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * the properties and methods that the various"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * types of child tasks requires."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @author Lee Penn Han."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @version 1.0."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @since 2020-08-25."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    protected Task(String task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Returns the current task as a String."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @return the task as a String."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Returns the status of whether the task is done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @return the status of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Instantiates a Task object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param task the task to be done from User Input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @return Task Object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static Task setTask(String task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return new Task(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Changes the status of done from false to true to"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * indicate that a Task has been completed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 59
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    private ArrayList\u003cTask\u003e tasklist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    private TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        this.tasklist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Adds a task to the tasklist"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param task The task as instantiated from Parser to a Task object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @return String representation of the Task object that is added"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public String addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        tasklist.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Deletes a task from the tasklist"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param taskNumber The index of the task in the tasklist"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @return String representation of the Task object that is deleted"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public String deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        int i \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Task removedTask \u003d this.tasklist.get(i);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        this.tasklist.remove(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return removedTask.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Updates a task in the tasklist to mark it as done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param taskNumber The index of the task in the tasklist"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @return String representation of the Task object that is updated"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public String updateTask(int taskNumber) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        int i \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Task updatedTask \u003d this.tasklist.get(i);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        updatedTask.setDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return updatedTask.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Returns the current size of the task list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @return Integer value of the size of task list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return this.tasklist.size();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Returns the task that is indicated by its index in the Tasklist"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param index The index of the task in the taskList"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @return Task object"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return this.tasklist.get(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Creates a tasklist object"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @return TaskList Object"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static TaskList createTaskList() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return new TaskList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 72
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * \u003ch1\u003e Todo Task class \u003c/h1\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * The Todo class is a child class of Task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * It does not have any additional properties"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * from a Task Object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @author Lee Penn Han"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @since 2020-08-25"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    protected Todo(String task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static Todo createTodo(String task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return new Todo(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        String done \u003d this.done ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        return \"[T][\" + done + \"] \" + this.task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 30
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * \u003ch1\u003eUi Class\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * The Ui class manages the interactions with"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * the User."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * It consist of mainly void"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * methods that display a formatted text that is readable"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * by the User."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @author Lee Penn Han"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " * @since 2020-08-25"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Prints out a line to mark an individual message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        System.out.println(\"\\n_________________________________________\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static void showCommandMessage(String message) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        System.out.println(\"_________________________________________\\n\" + message);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Prints out the Welcome Message when Duke is intialised"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * as an opening message"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static void welcomeMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        String version \u003d \"Version 1.0\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        String indent \u003d \"        \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        String commands \u003d indent + \"list: Shows the current List \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + indent + \"delete (index): Delete the task from the List \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + indent + \"todo (activity): Creates a Todo Task \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + indent + \"deadline /by (date) YYYY-MM-DD: Creates a Deadline Task \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + indent + \"event /at (string): Creates an Event Task \\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + indent + \"find (keyword): Finds all occurrences of the keyword in the List\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        System.out.println(\"INITIALIZING \\n\" + logo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        System.out.println(\"Current version: \" + version);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        System.out.println(\"Welcome to DUKE, the ToDo list creator \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + \"We current support these commands: \\n\" + commands);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        System.out.println(\"Please input a command:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Prints out the Goodbye Message when Duke is exited"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static void goodbyeMessage() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        System.out.println(\"_________________________________________\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + \"Bye. Hope to see you again soon!\" + \"\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + \"_________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Print out the error message when an exception is catch"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * by wrapping it in separating lines to format the message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param error The error message"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static void showError(String error) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        System.out.println(\"Sorry an error occurred!! :( \\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + \"_________________________________________\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + error + \"\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + \"_________________________________________\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Prints a formatted response of a successful Task execution"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param response The String representation of the response from the command input"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * @param command The String command from the command from User Input"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static void showResponse(String response, String command) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        System.out.println(\"Task: \" + command + \"\\nExecution Success: \\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + \"_________________________________________\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + response"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "                + \"\\n_________________________________________\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     * Prints a formatted response to inform the user that saving is in progress."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public static void showSaving() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        System.out.println(\"Currently saving tasks. Do not Exit!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 93
    }
  },
  {
    "path": "src/test/java/command/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.command.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void processorAddTodoTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Storage storage \u003d Storage.createDukeFile(\"test\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        TaskList tasklist \u003d TaskList.createTaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            Parser.process(\"todo read book\", tasklist, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            assertEquals(\"[T][✘] read book\", tasklist.getTask(0).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            fail(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void processorDoneTest() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Storage storage \u003d Storage.createDukeFile(\"test\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        TaskList tasklist \u003d TaskList.createTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            Parser.process(\"todo read book\", tasklist, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            Parser.process(\"done 1\", tasklist, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            assertEquals(\"[T][✓] read book\", tasklist.getTask(0).toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            fail(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void processorDeleteTest() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Storage storage \u003d Storage.createDukeFile(\"test\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        TaskList tasklist \u003d TaskList.createTaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            Parser.process(\"todo read book\", tasklist, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            Parser.process(\"todo read 2nd book\", tasklist, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            Parser.process(\"delete 1\", tasklist, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            assertEquals(1, tasklist.getListSize());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            assertEquals(\"[T][✘] read 2nd book\", tasklist.getTask(0).toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "            fail(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 59
    }
  },
  {
    "path": "src/test/java/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void saveRecordTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Storage storage \u003d Storage.createDukeFile(\"test\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        storage.saveRecord(\"Testing String\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        assertEquals(1, storage.getRecords().size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    public void updateRecordTest() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        Storage storage \u003d Storage.createDukeFile(\"test\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        storage.saveRecord(\"Testing String\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        storage.updateRecord(\"Tested String\", 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        assertEquals(1, storage.getRecords().size());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "        assertEquals(\"Tested String\", storage.getRecords().get(0));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 33
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "event read book /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "deadline return book /by 2020-02-10"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "wrongword"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "deadline return book /by wrongdate"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "    PAUSE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "pennhanlee": 5
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "C:\\Users\\luciu\\Desktop\\NUS Lecture Notes\\Y2S1\\CS2103T\\ip\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "C:\\Users\\luciu\\Desktop\\NUS Lecture Notes\\Y2S1\\CS2103T\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "C:\\Users\\luciu\\Desktop\\NUS Lecture Notes\\Y2S1\\CS2103T\\ip\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "C:\\Users\\luciu\\Desktop\\NUS Lecture Notes\\Y2S1\\CS2103T\\ip\\src\\main\\java\\Parser.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "C:\\Users\\luciu\\Desktop\\NUS Lecture Notes\\Y2S1\\CS2103T\\ip\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pennhanlee"
        },
        "content": "C:\\Users\\luciu\\Desktop\\NUS Lecture Notes\\Y2S1\\CS2103T\\ip\\src\\main\\java\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "pennhanlee": 6
    }
  }
]
