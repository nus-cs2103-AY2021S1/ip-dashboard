[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 23,
      "-": 44
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "[T][✘] play"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "[T][✘] being  cute \u003e\u003c...."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "[T][✘] eat u!!!"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 3
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    ByeCommand(String str) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Says bye to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Writes current tasks into hard disk."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Exits the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param list List of tasks to be saved."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param ui Ui that prints out the output."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param storage Storage that reads from and writes to hard disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.sayBye();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            storage.writeToFile(list);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            // to get out of loop and terminate the program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            isExit \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (IOException E) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.errorWithFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 31
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * Represents a command to be executed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    protected String str;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Creates a command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param str user input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public Command(String str) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        this.str \u003d str;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    // different command class will have different execute implementation"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public abstract String execute(TaskList list, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 25
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * Represents a deadline task in the list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Creates a deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public Deadline(String description, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 25
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * Represents a deadline command from a user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * which adds a deadline task to task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    DeadlineCommand(String str) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public static String getLocalDate(String time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        LocalDate d \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Adds a deadline task to task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param list A list of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param ui Ui that prints out the output."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param storage Storage that reads from and writes to hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            String string \u003d str.substring(9);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            String description \u003d string.split(\" /by \")[0]; // split the stirng by \"/by \", take first half"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            String time \u003d string.split(\" /by \")[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            String date \u003d getLocalDate(time);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            Task newTask \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            list.getList().add(newTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printAddTask(newTask, list.getList().size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printNoDate();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printInvalidDate();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 45
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * Represents a delete command from a user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * which will lead to the deletion of a task in the task list."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    DeleteCommand(String str) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Deletes a specific task from the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param list A list of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param ui Ui that prints out the output."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param storage Storage that reads from and writes to hard disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            int num \u003d Integer.parseInt(str.split(\" \")[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printDelete(list, num);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            list.getList().remove(num - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printInvalidNumber();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 30
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        assert text !\u003d null : \"text should not be null\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        assert img !\u003d null : \"image should not be null\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        assert text !\u003d null : \"text should not be null\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        assert img !\u003d null : \"image should not be null\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 63
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * Represents a done command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    DoneCommand(String str) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Mark a specific task in the task list as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param list A list of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param ui Ui that prints out the output."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param storage Storage that reads from and writes to hard disk."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            int num \u003d Integer.parseInt(str.split(\" \")[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            list.getList().get(num - 1).markDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printDone(list, num);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printInvalidNumber();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    // Application.launch will automatically call constructor with no para"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            tasks \u003d new TaskList(storage.load().getList());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            ui.errorWithLoading();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        // take in a user input string"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        // return a string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 39,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * Represents a event task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public Event(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 20
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * Represents a event command from a user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    EventCommand(String str) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public static String getLocalDate(String time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        LocalDate d \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Adds a event task to task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param list A list of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param ui Ui that prints out the output."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param storage Storage that reads from and writes to hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            String string \u003d str.substring(6);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            String description \u003d string.split(\" /at \")[0]; // split the stirng by \"/by \", take first half"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            String time \u003d string.split(\" /at \")[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            String date \u003d getLocalDate(time);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            Task newTask \u003d new Event(description, date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            list.getList().add(newTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printAddTask(newTask, list.getList().size());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printNoDateEvent();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printInvalidDate();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 44
    }
  },
  {
    "path": "src/main/java/FindKeywordCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class FindKeywordCommand extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    FindKeywordCommand(String str) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Deletes a specific task from the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param list A list of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param ui Ui that prints out the output."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param storage Storage that reads from and writes to hard disk."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        TaskList ls \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            String keyword \u003d str.split(\" \")[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            for (Task task : list.getList()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                if (task.getDes().contains(keyword)){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                    ls.addTask(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printFindTask(ls);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (IndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printInvalidKeyword();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 32
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * Represents a list command from a user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    ListCommand(String str) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Displays all tasks in the list to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param list A list of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param ui Ui that prints out the output."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * @param storage Storage that reads from and writes to hard disk."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return ui.showList(list);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 21
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().greet();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                .getDukeDialog(duke.getUi().sayHi(),dukeImage));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 54
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public static Command parse(String str) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        assert str !\u003d null : \"command should not be null\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String s \u003d str.split(\" \")[0];"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        if (s.equals(\"bye\")) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            return new ByeCommand(str);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } else if (s.equals(\"list\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            return new ListCommand(str);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } else if (s.equals(\"done\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            return new DoneCommand(str);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } else if (s.equals(\"delete\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            return new DeleteCommand(str);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } else if (s.equals(\"todo\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            return new TodoCommand(str);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } else if (s.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            return new DeadlineCommand(str);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } else if (s.equals(\"event\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            return new EventCommand(str);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } else if (s.equals(\"find\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            return new FindKeywordCommand(str);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }else if (s.equals(\"prioritize\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            return new PrioritizeCommand(str);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 29
    }
  },
  {
    "path": "src/main/java/PrioritizeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class PrioritizeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    PrioritizeCommand(String str) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            int num \u003d Integer.parseInt(str.split(\" \")[1]);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printPrioritizeTask(list, num);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            Task impoTask \u003d list.getList().get(num - 1);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            list.getList().remove(num - 1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            list.getList().add(0, impoTask);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printInvalidNumber();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 19
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "// deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    // read tasks from hard disk and return a TaskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public TaskList load() throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            readTask(list);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public void readTask(TaskList list) throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            String description \u003d task.substring(7);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            // check the 5th char is tick or cross"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            boolean isDone \u003d task.charAt(4) \u003d\u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            // check the second character is T/D/E"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            if (task.charAt(1) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                newTask \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            } else if (task.charAt(1) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                newTask \u003d new Deadline(description, isDone);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                newTask \u003d new Event(description, isDone);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            list.addTask(newTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public void writeToFile(TaskList list) throws IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        List\u003cTask\u003e ls \u003d list.getList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        for (Task task : ls) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            fw.write(task + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 56
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    // 3 types of tasks: todos, deadline, event"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    // use polymorphism to store all tasks in a DS containing Task obj"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String getDes() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return isDone ? \"[\\u2713] \" : \"[\\u2718] \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 32
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    // after a task is done, the output message will be capture in duke class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public void addTask(Task task) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 25
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 13
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    TodoCommand(String str) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            Task newTask \u003d new Todo(str.substring(5));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            list.getList().add(newTask);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printAddTask(newTask, list.getList().size());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            s \u003d ui.printNoDescription();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    private String line \u003d \"_________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return sc.nextLine().toLowerCase();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String showError(String e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (e);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String sayHi() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String str \u003d (\"\\t\" + line + \"\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\tHi I am RollRoll :D\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\tYour Todo-list helper teehee\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\tTell me the following words and i will \\n\\thelp you track your tasks:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t\\t 1. todo \u003ctask\u003e\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t\\t 2. deadline \u003ctask\u003e /by \u003cYYYY-MM-DD\u003e\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t\\t 3. event \u003ctask\u003e /at \u003cYYYY-MM-DD\u003e\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t\\t 4. done \u003cnumber of the task\u003e\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t\\t 5. prioritize \u003cnumber of the task\u003e\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t\\t 6. delete \u003cnumber of the task\u003e\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t\\t 7. find \u003ckeyword\u003e\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t\\t 8. list\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t\\t 9. bye\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t\" + line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (str);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String sayBye() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"\\t\" + line + \"\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\tBye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t\" + line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String printAddTask(Task task, int numOfTask) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String tasks \u003d numOfTask \u003d\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"\\t\" + line + \"\\n\\tGot it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t  \" + task + \"\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\tNow you have \" + numOfTask + \" \" + tasks + \" in the list.\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\t\" + line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String showList(TaskList task) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        if (task.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            str \u003d (\"\\t\" + line + \"\\n\\tHere are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            List\u003cTask\u003e ls \u003d task.getList();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            for (Task t : ls) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                str +\u003d (\"\\t\" + index + \". \" + t + \"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            str +\u003d (\"\\t\" + line + \"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            str \u003d (\"\\t\" + line + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            str +\u003d (\"\\tThere is no task in the list.\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            str +\u003d (\"\\t\" + line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String printDone(TaskList list, int num) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"\\t\" + line + \"\\n\\tNice! I\u0027ve marked this task as done:\\n\\t  \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + list.getList().get(num - 1)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\n\\t\" + line);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String printInvalidNumber() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"☹ OOPS!!! The task number is invalid.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String errorWithFile() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"☹ OOPS!!! Cannot store tasks.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String printDelete(TaskList list, int num) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"\\t\" + line + \"\\n\\tNoted. I\u0027ve removed this task:\\n\\t  \""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + list.getList().get(num - 1)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\n\\tNow you have \" + (list.getList().size() - 1) + \" tasks in the list.\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\n\\t\" + line);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String printNoDescription() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String printNoDate() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"☹ OOPS!!! The description or date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String printNoDateEvent() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"☹ OOPS!!! The description or date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String printInvalidDate() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"☹ OOPS!!! The date must be valid and in the format of YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String errorWithLoading() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"☹ OOPS!!! Your file cannot be loaded :-(\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String printFindTask(TaskList task) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        if (task.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            str \u003d (\"\\t\" + line + \"\\n\\tHere are the matching task(s) in your list:\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            List\u003cTask\u003e ls \u003d task.getList();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            for (Task t : ls) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                str +\u003d (\"\\t\" + index + \". \" + t + \"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            str +\u003d (\"\\t\" + line + \"\\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            str \u003d (\"\\t\" + line + \"\\n\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            str +\u003d (\"\\tThere is no matching task in the list.\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            str +\u003d (\"\\t\" + line);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String printInvalidKeyword() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"☹ OOPS!!! Please tell me a keyword!\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "||||||| 1cb78ba"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public String printPrioritizeTask(TaskList list, int num) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        return (\"\\t\" + line + \"\\n\\tNoted. I\u0027ve prioritized this task:\\n\\t  \""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + list.getList().get(num - 1)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                + \"\\n\\t\" + line);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e 9add1ed834983e187ad56fdfc20287695369ee95"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 148
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" cache\u003d\"true\" fitHeight\u003d\"99.0\" fitWidth\u003d\"97.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" style\u003d\"-fx-background-radius: 10; -fx-background-color: fffacd;\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" style\u003d\"-fx-background-radius: 10; -fx-background-color: add8e6;\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: ffe4e1;\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 19
    }
  },
  {
    "path": "src/test/java/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public void testDeleteCommand() throws Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        DeleteCommand d \u003d new DeleteCommand(\"delete 2\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        list.addTask(new Todo(\"sleep\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        list.addTask(new Todo(\"eat\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        Storage s \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        d.execute(list, ui, s);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String expectedOutput \u003d \"[[T][✘] sleep]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        assertEquals(expectedOutput, list.getList().toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 18
    }
  },
  {
    "path": "src/test/java/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public void testDoneCommand() throws Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        DoneCommand d \u003d new DoneCommand(\"done 1\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        list.addTask(new Todo(\"sleep\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        Storage s \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        d.execute(list, ui, s);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String expectedOutput \u003d \"[[T][✓] sleep]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        assertEquals(expectedOutput, list.getList().toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 17
    }
  },
  {
    "path": "src/test/java/TodoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "public class TodoCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    public void testTodoCommand() throws Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        TodoCommand d \u003d new TodoCommand(\"Todo sleep\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        Storage s \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        d.execute(list, ui, s);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        String expectedOutput \u003d \"[[T][✘] sleep]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "        assertEquals(expectedOutput, list.getList().toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "todo work"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "deadline homework /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "event meeting /at 6th 2pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ya0-yuan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ya0-yuan": 2,
      "-": 37
    }
  }
]
