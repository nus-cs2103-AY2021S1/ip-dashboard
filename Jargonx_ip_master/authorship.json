[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "1. [D] [X]  a (by: 2020-05-12 14:30)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "2. [E] [X]  b (at: 2019-03-12 13:30)"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 2
    }
  },
  {
    "path": "src/main/java/Bye.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class Bye extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    Bye(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.name \u003d \"bye\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.usage \u003d \"bye\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.description \u003d \"Duke Chatbot will power down\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String response(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public void endBot(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        ChatBot.ended \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 16
    }
  },
  {
    "path": "src/main/java/ChatBot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class ChatBot {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    static boolean ended \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static void start(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            DataStorageInterface.initStorage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            System.out.println(\"Hello I\u0027m Duke!\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            while (!ChatBot.ended) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                    String query \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                    String resp \u003d ChatBot.response(query);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                    System.out.println(resp);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        } catch(DukeException e){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            System.out.println(\"ChatBot initialisation failed.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    private static String response(String query) throws Exception{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        String[] splitQuery \u003d Parser.getSplit(query);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        String command \u003d Parser.getCommand(splitQuery);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        String[] cRemoved \u003d Parser.removeCommandString(splitQuery);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        switch (command){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Bye bye \u003d new Bye();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                bye.endBot();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return bye.response();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            case \"clear\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Clear clear \u003d new Clear();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return clear.response();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                String title \u003d Parser.getTitle(cRemoved);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                String preposition \u003d Parser.getPreposition(cRemoved);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                LocalDate dateDeadline \u003d Parser.getDate(cRemoved);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                LocalTime timeDeadline \u003d Parser.getTime(cRemoved);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Task deadline \u003d DataStorageInterface.addDeadline(title,preposition,dateDeadline,timeDeadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return DataStorageInterface.taskAdded(deadline);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Delete delete \u003d new Delete(cRemoved);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return delete.deleteTask(splitQuery[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Done done \u003d new Done(cRemoved);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return done.markedAsDone(splitQuery[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                String ttle \u003d Parser.getTitle(cRemoved);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                String ppstn \u003d Parser.getPreposition(cRemoved);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                LocalDate dateEvent \u003d Parser.getDate(cRemoved);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                LocalTime timeEvent \u003d Parser.getTime(cRemoved);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Task event \u003d DataStorageInterface.addEvent(ttle,ppstn,dateEvent,timeEvent);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return DataStorageInterface.taskAdded(event);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Help help \u003d new Help(splitQuery);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return help.response();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            case \"load\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Load load \u003d new Load(splitQuery);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return load.load();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Ls ls \u003d new Ls();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return ls.response();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            case \"save\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Save save \u003d new Save();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                save.writeToFile();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return save.response();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                String editedQ \u003d Parser.concatenateStrArr(cRemoved);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Task toDo \u003d DataStorageInterface.addToDo(editedQ);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return DataStorageInterface.taskAdded(toDo);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                throw new UnknownCommandException(command);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 81
    }
  },
  {
    "path": "src/main/java/Clear.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class Clear extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    Clear(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.name \u003d \"clear\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.usage \u003d \"clear\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.description \u003d \"Clears the screen with newline characters\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    //Currently has 20 newline characters"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String response(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 13
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    protected String usage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    Command(){}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String getUsage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return usage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 19
    }
  },
  {
    "path": "src/main/java/CommandCenter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class CommandCenter {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static ArrayList\u003cCommand\u003e commandList\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    CommandCenter(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static void addCommand(Command command){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        commandList.add(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 14
    }
  },
  {
    "path": "src/main/java/CustomException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class CustomException extends DukeException{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    CustomException(String errorMessage){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 7
    }
  },
  {
    "path": "src/main/java/DataStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class DataStorage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static ArrayList\u003cCommand\u003e commandInit \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static void init() throws DukeException{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        commandInit.add(new Bye());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        commandInit.add(new Clear());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        commandInit.add(new Deadline(\"init\",\"by\",LocalDate.MAX,LocalTime.MIDNIGHT));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        commandInit.add(new Delete(new String[]{\"\",\"\"}));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        commandInit.add(new Done(new String[]{\"\",\"\"}));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        commandInit.add(new Event(\"init\",\"on\",LocalDate.MAX,LocalTime.MIDNIGHT));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        commandInit.add(new Help(new String[]{\"help\"}));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        commandInit.add(new Ls());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        commandInit.add(new Load(new String[]{\"\",\"\"}));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        commandInit.add(new ToDo(\"init\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        commandInit.add(new Save());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 23
    }
  },
  {
    "path": "src/main/java/DataStorageInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class DataStorageInterface {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static void initStorage() throws DukeException{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        DataStorage.init();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    //TODO: Adjust the list usage accordingly to Command Center if you want to add custom commands"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static String listCommands(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        String allCommands \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        for(Command c:DataStorage.commandInit){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            allCommands \u003d allCommands + c.getName() + \": \"  + c.getUsage() + \"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return allCommands;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static Task markDone(int index) throws CustomException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        Task curr \u003d DataStorage.taskList.get(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(curr.isDone()){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new CustomException(\"Error: This task has already been marked as done\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        curr.markDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return curr;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static Task remove(int index){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return DataStorage.taskList.remove(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static int getSize(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return DataStorage.taskList.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static int getTasksNotDone(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        for(Task t:DataStorage.taskList){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            if(!t.isDone()){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return counter;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static String taskAdded(Task task){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\\t\" + task.toString() +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                String.format(\"\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                        DataStorageInterface.getTasksNotDone());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static Task addToDo(String query) throws WrongUsageException{"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        Task newTask \u003d new ToDo(query);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        DataStorage.taskList.add(newTask);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static Task addDeadline(String title,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                                   String preposition,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                                   LocalDate date, LocalTime time) throws WrongUsageException{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        Task newTask \u003d new Deadline(title,preposition,date, time);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        DataStorage.taskList.add(newTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static Task addEvent(String title, String preposition, LocalDate date, LocalTime time)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throws WrongUsageException{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        Task newTask \u003d new Event(title,preposition,date, time);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        DataStorage.taskList.add(newTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static void removeAllTasks(){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        DataStorage.taskList.clear();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static void loadNewTasks(ArrayList\u003cTask\u003e taskArrayList){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        for(Task t: taskArrayList){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            DataStorage.taskList.add(t);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static String listOfTasks(){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        StringBuilder acc \u003d new StringBuilder();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        for (Task t: DataStorage.taskList){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            acc.append(String.format(\"%d. %s\\n\", i, t));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return acc.toString().isEmpty()?\"There are no Tasks in the list\":acc.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static String getSaveRepresentation(){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        StringBuilder acc \u003d new StringBuilder();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        for (Task t: DataStorage.taskList){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            acc.append(String.format(\"%d. %s\\n\", i, t.saveStringRepresentation()));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return acc.toString().isEmpty()?\"\":acc.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    //TODO: Possibly requires a newline char"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static String getUsage(String query) throws UnknownCommandException{"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        for(Command c: DataStorage.commandInit){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            if(c.getName().equalsIgnoreCase(query)){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return c.getName() + \"\\nUsage: \"  + c.getUsage() +"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                        \"\\nDescription: \" + c.getDescription();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        throw new UnknownCommandException(query);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 116
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    LocalTime time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    String preposition;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    Deadline(String title, String preposition, LocalDate date, LocalTime time) throws WrongUsageException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.name \u003d \"deadline\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.usage \u003d \"deadline [TaskToBeDone] /by [DD/MM/YYYY] [HH:MM]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.description \u003d \"Stores a task in the list marked as a deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(title.isEmpty() || preposition.isEmpty()){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new WrongUsageException(this.name, this.usage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.preposition \u003d preposition;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.saveRep \u003d \"[D] \" + super.toString() + \" (\" + preposition + \": \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                date + \" \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                time + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return \"[D] \" + super.toString() + \" (\" + preposition + \": \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                time.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 31
    }
  },
  {
    "path": "src/main/java/Delete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class Delete extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    Delete(String[] splitQuery) throws WrongUsageException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.name \u003d \"delete\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.usage \u003d \"delete [TaskListNumber]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.description \u003d \"Deletes a task in the task list\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(splitQuery.length !\u003d 2){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new WrongUsageException(this.name, this.usage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String deleteTask(String listIndex) throws CustomException{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        int idx;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            idx \u003d Integer.parseInt(listIndex) - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        } catch(Exception e){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new CustomException(\"Error: Please enter a valid integer!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if (idx\u003c0||idx\u003eDataStorageInterface.getSize()-1){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new CustomException(\"Error: Please enter a number that is in range of the task numbers\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            Task curr \u003d DataStorageInterface.remove(idx);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            return String.format(\"Nice I have removed this task:\\n\\t%s\\nNow you have %d tasks left\",curr, DataStorageInterface.getTasksNotDone());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 26
    }
  },
  {
    "path": "src/main/java/Done.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class Done extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    Done(String[] splitQuery) throws DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.name \u003d \"done\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.usage \u003d \"done [TaskListNumber]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.description \u003d \"Marks a task as done in the task list\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(splitQuery.length !\u003d 2){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new WrongUsageException(this.name, this.usage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String markedAsDone(String listIndex) throws CustomException{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        int idx;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            idx \u003d Integer.parseInt(listIndex) - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        } catch(Exception e){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new CustomException(\"Error: Please enter a valid integer!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if (idx\u003c0||idx\u003eDataStorageInterface.getSize()-1){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new CustomException(\"Error: Please enter a number that is in range of the task numbers\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            Task curr \u003d DataStorageInterface.markDone(idx);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            return String.format(\"Nice I have marked this task as done:\\n\\t%s\\nNow you have %d tasks left\",curr,DataStorageInterface.getTasksNotDone());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        ChatBot.start();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 1,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    String preposition;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    LocalTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    Event(String title, String preposition, LocalDate date, LocalTime time) throws WrongUsageException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.name \u003d \"event\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.usage \u003d \"event [EventName] [\u0027/on\u0027 OR \u0027/at\u0027] [DD/MM/YYYY] [HH:MM]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.description \u003d \"Stores a task in the list marked as an event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(title.isEmpty() || preposition.isEmpty()){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new WrongUsageException(this.name, this.usage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.preposition \u003d preposition;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.saveRep \u003d \"[E] \" + super.toString() + \" (\" + preposition + \": \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                date + \" \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                time + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return \"[E] \" + super.toString() + \" (\" + preposition + \": \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                time.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 33
    }
  },
  {
    "path": "src/main/java/Help.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class Help extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    String[] query;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    //Receives full query to avoid index out of bounds error from chatbot"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    Help(String[] query) throws WrongUsageException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.name \u003d \"help\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.usage \u003d \"help [CommandName](optional)\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.description \u003d \"Provides the list of all commands, \" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                \"or a detailed description of a single command\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(query.length \u003e 2){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new WrongUsageException(this.name, this.usage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String response() throws UnknownCommandException{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(query.length\u003d\u003d1){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            return listCommands();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            return singleCommandHelp(query[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    private String listCommands(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return \"COMMAND: USAGE\\n\" + DataStorageInterface.listCommands();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    private String singleCommandHelp(String query) throws UnknownCommandException{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return DataStorageInterface.getUsage(query);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 30
    }
  },
  {
    "path": "src/main/java/Load.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class Load extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    Load(String[] query) throws WrongUsageException{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.name \u003d \"load\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.usage \u003d \"load [FILE_PATH]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.description \u003d \"Used to load files stored in the task format\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(query.length !\u003d 2){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new WrongUsageException(this.name, this.usage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.filePath \u003d query[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String load() throws FileNotFoundException,DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        boolean success \u003d readFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(success) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            return \"Successfully loaded tasks:\\n\" + DataStorageInterface.listOfTasks();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            return \"There was some error. Could not load tasks successfully.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    private boolean readFile() throws FileNotFoundException,DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        ArrayList\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        System.out.println(\"Loaded file and created the array successfully\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(!file.exists()){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            System.out.println(\"File does not exist\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            Scanner reader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            while (reader.hasNextLine()){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                String data \u003d reader.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Task task \u003d parseData(data);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                newTasks.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            DataStorageInterface.removeAllTasks();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            DataStorageInterface.loadNewTasks(newTasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    private Task parseData(String data) throws DukeException{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        ///Following the following format"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        ///1. [T] [X]  something"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        //2. [D] [X]  eat cereal (by:  12/05/2020 14:30)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        //3. [E] [X]  lunch (at:  13/05/2020 13:30)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        String[] splitData \u003d data.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        String taskType \u003d splitData[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        boolean isDone \u003d splitData[2].equals(\"[DONE]\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(taskType.equals(\"[T]\")){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            String taskName \u003d concatenateStrArr(splitData, 3, splitData.length);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            Task task \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            if(isDone){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                task.markDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            int index \u003d 3;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            while(!splitData[index].startsWith(\"(\")){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            String taskName \u003d concatenateStrArr(splitData,3,index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            String preposition \u003d getPreposition(splitData[index]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            String dateRep \u003d splitData[index];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dateRep);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            String timeRep \u003d splitData[index].replace(\")\",\"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            LocalTime time \u003d LocalTime.parse(timeRep);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            if(taskType.equals(\"[D]\")){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Task task \u003d new Deadline(taskName,preposition,date, time);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                if(isDone){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                    task.markDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            } else if(taskType.equals(\"[E]\")){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                Task task \u003d new Event(taskName, preposition,date, time);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                if(isDone){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                    task.markDone();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                throw new WrongFileFormatException(filePath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    private String concatenateStrArr(String[] strArr, int startIndex, int endIndex){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(startIndex \u003d\u003d endIndex){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            return strArr[startIndex];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            StringBuilder acc \u003d new StringBuilder();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            for (int i \u003d startIndex; i \u003c endIndex; i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                acc.append(\" \").append(strArr[i]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            return acc.toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    private String getPreposition(String dirtyPrep){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        String cleanPrep \u003d dirtyPrep.replace(\"(\",\"\").replace(\":\",\"\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return cleanPrep;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 113
    }
  },
  {
    "path": "src/main/java/Ls.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class Ls extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    //TODO: Add on if you want for optional parameters to show only a certain type of task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    Ls(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.name \u003d \"list\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.usage \u003d \"list\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.description \u003d \"Lists all the tasks\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String response(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return DataStorageInterface.listOfTasks();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static String[] getSplit(String query){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return query.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static String getCommand(String[] splitQuery){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return splitQuery[0].toLowerCase();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static String[] removeCommandString(String[] splitQuery){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        splitQuery[0] \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return splitQuery;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static String concatenateStrArr(String[] strArr){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        StringBuilder acc \u003d new StringBuilder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        for (String s: strArr) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            if(!s.equals(\"\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                acc.append(\" \").append(s);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return acc.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static String getTitle(String[] splitQuery){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        StringBuilder accTaskTitle \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        while(!splitQuery[i].startsWith(\"/\")){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            accTaskTitle.append(\" \").append(splitQuery[i]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return accTaskTitle.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static String getPreposition(String[] splitQuery){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        for (String s:splitQuery) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            if(s.startsWith(\"/\")){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                return s.substring(1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    //TODO: Place WrongUsageException here instead to accommodate for no dateTime being passed in"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static LocalDate getDate(String[] splitQuery) throws CustomException{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        while(!splitQuery[i].startsWith(\"/\")){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        i++;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        String[] splitDate \u003d splitQuery[i].split(Pattern.quote(\"/\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(splitDate.length!\u003d3){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new CustomException(\"Date is wrongly formatted!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        //Format required is DD/MM/YYYY"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(splitDate[2]+\"-\"+splitDate[1]+\"-\"+splitDate[0]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public static LocalTime getTime(String[] splitQuery){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        while(!splitQuery[i].startsWith(\"/\")){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        i+\u003d2;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        //Format required is HH:MM"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        LocalTime time \u003d LocalTime.parse(splitQuery[i]+\":00\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 75
    }
  },
  {
    "path": "src/main/java/Save.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class Save extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    String DIR_PATH \u003d \"./data/\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    String FILE_NAME \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    Save(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.name \u003d \"save\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.usage \u003d \"save\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.description \u003d \"Saves current list into file called \" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                \"\u0027ip/data/duke.txt\u0027. Creates file and folder if they do not exist\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    private void createDirectory(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        new File(DIR_PATH).mkdirs();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    private void createFile() throws IOException{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        createDirectory();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        File dir \u003d new File(DIR_PATH);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(dir.exists()){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            File saveDatafile \u003d new File(DIR_PATH+FILE_NAME);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            saveDatafile.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new FileNotFoundException(\"The directory \" + DIR_PATH +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                    \" does not exist\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public void writeToFile() throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        createFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        File file \u003d new File(DIR_PATH + FILE_NAME);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(file.exists()){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            new FileWriter(file,false).close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            String allTasks \u003d DataStorageInterface.getSaveRepresentation();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            System.out.println(\"The following tasks have been saved.\\n\" + allTasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            fileWriter.write(allTasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new FileNotFoundException(\"The file \" + DIR_PATH +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                    FILE_NAME + \" does not exist\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String response(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return \"File saved successfully at \" + DIR_PATH + FILE_NAME;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 54
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public abstract class Task extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    private final String title;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    protected String saveRep;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    Task(String title){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    private String doneToString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return isDone ? \"[DONE]\": \"[X]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public void markDone(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String saveStringRepresentation(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return saveRep;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return doneToString() + \" \" + title;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 30
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    ToDo(String title) throws WrongUsageException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.name \u003d \"todo\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.usage \u003d \"todo [TaskToBeDone]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.description \u003d \"Stores a task in the list marked as a todo\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        if(title.isEmpty()){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "            throw new WrongUsageException(this.name, this.usage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.saveRep \u003d \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        return \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 18
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class UnknownCommandException extends DukeException{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    UnknownCommandException(String unknown){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.errorMessage \u003d String.format(\"Error: I dont know what \u0027%s\u0027 means yet (;-;)\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                \" I\u0027m still learning new commands! \""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                + \"Try using the \u0027help\u0027 command\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                \" to see what commands are there and their usage!\", unknown);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 10
    }
  },
  {
    "path": "src/main/java/WrongFileFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class WrongFileFormatException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    WrongFileFormatException(String filePath){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.errorMessage \u003d \"The file \u0027\" + filePath + \"\u0027 has the wrong file format.\\n\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                \"Make sure it follows the following format for the following tasks types:\\n\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                \"1: [T], [D], [E]\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                \"2: [X], [DONE]\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                \"3: \u003cTaskName\u003e\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                \"4: (by: \u003cDateTime\u003e)(for deadline) OR (at/on: \u003cDateTime\u003e)(for event)\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 11
    }
  },
  {
    "path": "src/main/java/WrongUsageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "public class WrongUsageException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jargonx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    WrongUsageException(String cmdName, String cmdUse){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "        this.errorMessage \u003d String.format(\"Error: You used the command \u0027%s\u0027 wrongly!\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "                \"\\nUsage: %s\", cmdName, cmdUse);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jargonx"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Jargonx": 1,
      "-": 37
    }
  }
]
