[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 8,
      "-": 45
    }
  },
  {
    "path": "src/main/java/duke/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * This is the enum class to store the types of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * commands a user can input to Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_ALL,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_ALL_DONE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_ALL_NOT_DONE,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_TODOS,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_TODOS_DONE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_TODOS_NOT_DONE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_DEADLINES,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_DEADLINES_DONE,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_DEADLINES_NOT_DONE,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_EVENTS,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_EVENTS_DONE,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_EVENTS_NOT_DONE,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST_BY_KEYWORD,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_IS_EMPTY,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_COMMAND,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_EMPTY_DESCRIPTION,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_DEADLINE_NO_BY,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_EVENT_NO_START_END"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 34
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Inherits from the Task class. Represents a task with a deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Deadline object stores task description, done status and deadline of task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A Deadline object is marked as not done by default."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A Deadline object is able to be set as done by calling setDone() method from the parent class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalDate byDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalTime byTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Deadline object constructor overrides Task constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Takes in a deadline in addition to the task description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * and parses into LocalDate and LocalTime format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param by deadline of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.byDate \u003d LocalDate.parse(by.split(\" \")[0]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.byTime \u003d LocalTime.parse(by.split(\" \")[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns Deadline object as a string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the Deadline object as a string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * in the form \"[D][\u003cDone Status\u003e] \u003cDeadline Description\u003e (by: \u003cDate\u003e \u003cTime\u003e)\"."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the deadline object as a string."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + dateFormatter.format(byDate) + \" \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + timeFormatter.format(byTime) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns Deadline object as a string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the Deadline object as a string"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * as a string format suitable for being parsed into a Deadline object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * String is in the form \"[D][\u003cDone Status\u003e] \u003cDeadline Description\u003e (by: \u003cDate\u003e \u003cTime\u003e)\"."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the deadline object as a string."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[D]\" + super.toStringFileFormat() + \" (by: \" + byDate + \" \" + byTime + \")\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.parser.InputParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * This class handles the logic behind the Duke chatbot."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private InputParser inputParser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private TaskList userTasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Instantiates a new Duke chatbot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        inputParser \u003d new InputParser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        userTasks \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Gets user input and returns an appropriate string response."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param input This is the string input from user of Duke chatbot."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String response to user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @throws DukeException Any exception caught will throw a DukeException."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String getResponse(String input) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        CommandType command \u003d inputParser.parseInput(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response +\u003d new HelpCommand().getResponse();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            String description \u003d inputParser.parseToDoInput(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response +\u003d new AddCommand(new ToDo(description))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .execute(userTasks, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            String[] deadlineParams \u003d inputParser.parseDeadlineInput(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response +\u003d new AddCommand(new Deadline(deadlineParams[0], deadlineParams[1]))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .execute(userTasks, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            String[] eventParams \u003d inputParser.parseEventInput(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                response +\u003d new AddCommand(new Event(eventParams[0], eventParams[1], eventParams[2]))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        .execute(userTasks, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                response +\u003d ui.errorMessage(ex);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response +\u003d new ListCommand().execute(userTasks, input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            int index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response +\u003d new DoneCommand().execute(index, userTasks, storage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response +\u003d new DeleteCommand().execute(index, userTasks, storage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response +\u003d new ByeCommand().getResponse();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case INVALID_IS_EMPTY:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                throw new DukeException(\"\", ExceptionType.EMPTY_INPUT);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                response +\u003d ui.errorMessage(ex);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case INVALID_COMMAND:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                throw new DukeException(\"\", ExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                response +\u003d ui.errorMessage(ex);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case INVALID_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                throw new DukeException(\"\", ExceptionType.EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                response +\u003d ui.errorMessage(ex);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case INVALID_DEADLINE_NO_BY:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                throw new DukeException(\"\", ExceptionType.DEADLINE_NO_BY);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                response +\u003d ui.errorMessage(ex);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case INVALID_EVENT_NO_START_END:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                throw new DukeException(\"\", ExceptionType.EVENT_NO_START_END);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                response +\u003d ui.errorMessage(ex);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                throw new DukeException(\"\", ExceptionType.DEFAULT);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                response +\u003d ui.errorMessage(ex);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns the Ui object of Duke to caller."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Ui object."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 132,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * This class handles all exceptions that is thrown from the Duke chatbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_ALL_TASKS_EMPTY_INPUT \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"You have to give a command.\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_ALL_TASKS_INVALID_COMMAND \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"I do not recognise that command.\\n\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"    You may type \\\"help\\\" for a list\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \" of available commands.\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_ALL_TASKS_EMPTY_DESCRIPTION \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"Your description cannot be empty.\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_DEADLINE_NO_BY \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"A deadline must have a specific end date/time.\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_EVENT_NO_START_END \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"An event must have a start and end time.\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_EVENT_CLASHES_SCHEDULE \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"This event clashes with another event.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"That task cannot be found!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_DEFAULT \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"Please try another command.\\n\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"    You may type \\\"help\\\" for a list\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \" of available commands.\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected ExceptionType exceptionType;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public DukeException(String err, ExceptionType exceptionType) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns error message as a string."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String error message to be printed to console."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        switch (exceptionType) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case EMPTY_INPUT:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            errorMessage \u003d MESSAGE_ALL_TASKS_EMPTY_INPUT;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case INVALID_COMMAND:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            errorMessage \u003d MESSAGE_ALL_TASKS_INVALID_COMMAND;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            errorMessage \u003d MESSAGE_ALL_TASKS_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case DEADLINE_NO_BY:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            errorMessage \u003d MESSAGE_DEADLINE_NO_BY;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case EVENT_NO_START_END:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            errorMessage \u003d MESSAGE_EVENT_NO_START_END;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case EVENT_CLASHES_SCHEDULE:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            errorMessage \u003d MESSAGE_EVENT_CLASHES_SCHEDULE;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case INDEX_OUT_OF_BOUNDS:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            errorMessage \u003d MESSAGE_INDEX_OUT_OF_BOUNDS;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            errorMessage \u003d MESSAGE_DEFAULT;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 71
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Inherits from the Task class. Represents a event happening at a certain time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Event object stores task description, done status, date of event, start and end time of event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A Event object is marked as not done by default."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A Event object is able to be set as done by calling setDone() method from the parent class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalTime start;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalTime end;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Event object constructor overrides Task constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Takes in date of event, start and end time of event in addition to the task description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * and parses into LocalDate and LocalTime format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param at date of event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param timeRange start and end time of event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Event (String description, String at, String timeRange) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.start \u003d LocalTime.parse(timeRange.split(\"-\")[0]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.end \u003d LocalTime.parse(timeRange.split(\"-\")[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns Event object as a string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the Event object as a string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * in the form \"[E][\u003cDone Status\u003e] \u003cEvent Description\u003e (at: \u003cDate\u003e \u003cStart\u003e-\u003cEnd\u003e)\"."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the event object as a string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + dateFormatter.format(at) + \" \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + timeFormatter.format(start) + \"-\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + timeFormatter.format(end) + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns Event object as a string."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the Event object as a string"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * as a string format suitable for being parsed into a Deadline object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * String is in the form \"[E][\u003cDone Status\u003e] \u003cEvent Description\u003e (at: \u003cDate\u003e \u003cStart\u003e-\u003cEnd\u003e)\"."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the Event object as a string."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[E]\" + super.toStringFileFormat() + \" (at: \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + at + \" \" + start + \"-\" + end + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public LocalTime getStartTime() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return start;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public LocalTime getEndTime() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return end;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 78
    }
  },
  {
    "path": "src/main/java/duke/ExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * This is the enum class to store the types of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * exceptions Duke throws in the chatbot."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public enum ExceptionType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    EMPTY_INPUT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_COMMAND,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    EMPTY_DESCRIPTION,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    DEADLINE_NO_BY,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    EVENT_NO_START_END,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    EVENT_CLASHES_SCHEDULE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INDEX_OUT_OF_BOUNDS,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    DEFAULT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 16
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Launches Duke in the GUI application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param args Standard arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 17
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.gui.MainWindow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * This class is the main entry point into the Duke application."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Solution below adapted from https://github.com/sc-arecrow/viscount/tree/master"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * @author sc-arecrow"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Starts the GUI of Duke chatbot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param stage Stage shown on the UI."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        AnchorPane ap \u003d new MainWindow();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 34
    }
  },
  {
    "path": "src/main/java/duke/Scheduler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Scheduler class deals with event schedules to detect any anomalies"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * in scheduled events."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Scheduler {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns a boolean to indicate an event being added clashes with"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * existing schedules."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userTasks list of tasks from user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param toBeScheduled event attempting to be scheduled by user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return boolean whether event clashes with schedule."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public boolean isEventClashingSchedule(TaskList userTasks, Event toBeScheduled) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        boolean isEventClashing \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        List\u003cTask\u003e events \u003d userTasks.getTaskList()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e task instanceof Event)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        for (Task task : events) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            isEventClashing \u003d isEventClashingAnotherEvent(((Event) task), toBeScheduled);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (isEventClashing) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return isEventClashing;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns a boolean to indicate whether two events are clashing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Solution adapted from https://stackoverflow.com/questions/2309558/time-comparison."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param scheduled event already scheduled previously."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param toBeScheduled event attempting to be scheduled by user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return boolean whether events are clashing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public boolean isEventClashingAnotherEvent(Event scheduled, Event toBeScheduled) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        LocalDate scheduledDate \u003d scheduled.getDate();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        LocalDate toBeScheduledDate \u003d toBeScheduled.getDate();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (!scheduledDate.equals(toBeScheduledDate)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assert (scheduledDate.equals(toBeScheduledDate));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        LocalTime scheduledStartTime \u003d scheduled.getStartTime();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        LocalTime scheduledEndTime \u003d scheduled.getEndTime();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        LocalTime toBeScheduledStartTime \u003d toBeScheduled.getStartTime();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        LocalTime toBeScheduledEndTime \u003d toBeScheduled.getEndTime();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (scheduledStartTime.equals(toBeScheduledStartTime)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } else if (scheduledEndTime.equals(toBeScheduledEndTime)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } else if (scheduledStartTime.isBefore(toBeScheduledStartTime)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 scheduledEndTime.isAfter(toBeScheduledStartTime)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } else if (scheduledStartTime.isAfter(toBeScheduledStartTime)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 scheduledStartTime.isBefore(toBeScheduledEndTime)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 77
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Storage class handles saving and leading tasks to and from"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * files saved in the hard disk. A storage object is able to read"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * file paths independent of OS."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * If directory or file is not found, a Storage object will handle"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * it by creating a new directory or file when required."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns tasks stored as a String."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList given list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String list of tasks in String format."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String listToString(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String taskListStr \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            taskListStr +\u003d t.toStringFileFormat() + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return taskListStr;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Saves list of tasks as a text file on the hard drive."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userTasks list of tasks to be saved."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void saveToFile(ArrayList\u003cTask\u003e userTasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Path folderPath \u003d Paths.get(\"..\", \"..\", \"..\", \"data\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (!Files.exists(folderPath)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            File folderDir \u003d new File(folderPath.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            folderDir.mkdir();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String filePath \u003d Paths.get(\"..\", \"..\", \"..\", \"data\", \"Tasklist.txt\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            FileWriter myFile \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            myFile.write(listToString(userTasks)); // Output is already all tasks in a string"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            myFile.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Reads tasks from text file in hard drive"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * and returns them as a list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of tasks read from file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e readFromFile() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Path folderPath \u003d Paths.get(\"..\", \"..\", \"..\", \"data\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (!Files.exists(folderPath)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            File folderDir \u003d new File(folderPath.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            folderDir.mkdir();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Path filePath \u003d Paths.get(\"..\", \"..\", \"..\", \"data\", \"Tasklist.txt\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return savedTasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            File myFile \u003d new File(filePath.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            Scanner taskReader \u003d new Scanner(myFile);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            while (taskReader.hasNextLine()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                String taskString \u003d taskReader.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                if (taskString.equals(\"\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                switch (taskString.charAt(1)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    boolean isDone \u003d taskString.split(\"  \")[0]"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            .substring(3)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            .equals(\"[Done]\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    String description \u003d \" \" + taskString.split(\"  \")[1];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    Task t \u003d new ToDo(description);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        t.setDone();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    savedTasks.add(t);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    isDone \u003d taskString.split(\"  \")[0]"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            .substring(3)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            .equals(\"[Done]\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    description \u003d \" \" + taskString.split(\"  \")[1]"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            .split(\"\\\\s[(]by:\\\\s\")[0];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    String by \u003d taskString.split(\"  \")[1]"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            .split(\"\\\\s[(]by:\\\\s\")[1];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    by \u003d by.substring(0, by.length() - 1); // remove parentheses at the end"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    Deadline d \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        d.setDone();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    savedTasks.add(d);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    isDone \u003d taskString.split(\"  \")[0]"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            .substring(3)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            .equals(\"[Done]\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    String[] stringSplit \u003d taskString.split(\"  \")[1]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            .split(\"\\\\s[(]at:\\\\s\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    description \u003d \" \" + stringSplit[0];"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    String at \u003d stringSplit[1].split(\" \")[0];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    String timeRange \u003d stringSplit[1].split(\" \")[1];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    timeRange \u003d timeRange.substring(0, timeRange.length() - 1); // remove parentheses at the end"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    Event e \u003d new Event(description, at, timeRange);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        e.setDone();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    savedTasks.add(e);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    throw new IOException();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return savedTasks;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 145
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Represents a task that is to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Task object stores task description and done status. A task object is marked as not done by default."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A task object is able to be set as done by calling setDone() method."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.description \u003d task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns Task object as a string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the Task object as a string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * in the form \"[\u003cDone Status\u003e] \u003cTask Description\u003e\"."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the Task object as a string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns Task object as a string."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the Task object as a string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * in the form \"[\u003cDone Status\u003e] \u003cTask Description\u003e\"."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the Task object as a string."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Sets done status of Task object as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns this task\u0027s description."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String task\u0027s description."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns icon associated with Task object\u0027s done status."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String status icon representing done status of Task object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return (isDone ? \"Done\" : \"Not Done\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 67
    }
  },
  {
    "path": "src/main/java/duke/TaskFinder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Task Finder class is used to filter tasks based on keywords given"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * and returns the tasks in task list according to the filters."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class TaskFinder {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Searches through task list and"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns an array list of all tasks in the task list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were marked as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList list of tasks to filter."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of done tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e findAllDone(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e tasksDone \u003d taskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e task.isDone)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return tasksDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Searches through task list and"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns an array list of all tasks in the task list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were not marked as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList list of tasks to filter."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of done tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e findAllNotDone(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e tasksNotDone \u003d taskList"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e !task.isDone)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return tasksNotDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Searches through task list and"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns an array list of all to do tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList list of tasks to filter."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of done tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e findToDos(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e toDos \u003d taskList"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        task.getClass().getSimpleName().equals(\"ToDo\"))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return toDos;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Searches through task list and"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns an array list of all to do tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were marked as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList list of tasks to filter."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of done tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e findToDosDone(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e toDosDone \u003d taskList"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        task.getClass().getSimpleName().equals(\"ToDo\")"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                \u0026\u0026 task.isDone)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return toDosDone;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Searches through task list and"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns an array list of all to do tasks"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were not marked as done."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList list of tasks to filter."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of done tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e findToDosNotDone(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e toDosNotDone \u003d taskList"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        task.getClass().getSimpleName().equals(\"ToDo\")"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                \u0026\u0026 !task.isDone)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return toDosNotDone;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Searches through task list and"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns an array list of all tasks with a deadline."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList list of tasks to filter."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of done tasks."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e findDeadlines(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e deadlines \u003d taskList"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        task.getClass().getSimpleName().equals(\"Deadline\"))"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return deadlines;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Searches through task list and"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns an array list of all tasks with a deadline"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were marked as done."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList list of tasks to filter."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of done tasks."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e findDeadlinesDone(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e deadlinesDone \u003d taskList"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        task.getClass().getSimpleName().equals(\"Deadline\")"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                \u0026\u0026 task.isDone)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return deadlinesDone;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Searches through task list and"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns an array list of all tasks with a deadline"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were not marked as done."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList list of tasks to filter."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of done tasks."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e findDeadlinesNotDone(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e deadlinesNotDone \u003d taskList"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        task.getClass().getSimpleName().equals(\"Deadline\")"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                \u0026\u0026 !task.isDone)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return deadlinesNotDone;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Searches through task list and"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns an array list of all events."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList list of tasks to filter."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of done tasks."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e findEvents(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e events \u003d taskList"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        task.getClass().getSimpleName().equals(\"Event\"))"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return events;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Searches through task list and"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns an array list of all events"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were marked as done."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList list of tasks to filter."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of done tasks."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e findEventsDone(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e eventsDone \u003d taskList"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        task.getClass().getSimpleName().equals(\"Event\")"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                \u0026\u0026 task.isDone)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return eventsDone;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Searches through task list and"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns an array list of all events"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were not marked as done."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList list of tasks to filter."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of done tasks."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e findEventsNotDone(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e eventsNotDone \u003d taskList"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        task.getClass().getSimpleName().equals(\"Event\")"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                \u0026\u0026 !task.isDone)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return eventsNotDone;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Searches through task list and"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns an array list of all tasks containing"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * given keyword."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList list of tasks to filter."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param keyword keyword to be used to filter tasks."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of tasks containing given keyword."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e findByKeyword(ArrayList\u003cTask\u003e taskList, String keyword) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assert(!keyword.isEmpty());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTasks \u003d taskList"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .filter(task -\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        task.getDescription().contains(keyword))"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return filteredTasks;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 241
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A TaskList object contains the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns task at the specified index."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param index This is the index of the task in the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Task task retrieved from the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assert (index \u003e\u003d 0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns size of task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return int size of task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param t task to be added"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Deletes specified task from the task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param index index of task to be deleted from the task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assert (index \u003e\u003d 0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Marks the specified task as done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param index index of task to be marked as done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assert (index \u003e\u003d 0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        taskList.get(index).setDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns a String containing all the tasks in the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * String is in a format suitable to be printed by Duke Ui object."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String task list converted to a string."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String listAsString \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        for (Task i : this.taskList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            listAsString \u003d listAsString.concat(\"    \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    + count + \". \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    + i.toString()) + \"\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return listAsString;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 91
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Inherits from the Task class. Represents a to do task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * ToDo object stores task description and done status. A ToDo object is marked as not done by default."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A ToDo object is able to be set as done by calling setDone() method from the parent class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * A ToDo object uses its parent class constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param description description of to do task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ToDo (String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns ToDo object as a string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the ToDo object as a string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * in the form \"[T][\u003cDone Status\u003e] \u003cToDo Description\u003e\"."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the ToDo object as a string."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns ToDo object as a string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the ToDo object as a string format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * suitable for being parsed into a ToDo object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * String is in the form \"[T][\u003cDone Status\u003e] \u003cToDo Description\u003e\"."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the ToDo object as a string."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[T]\" + super.toStringFileFormat();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 44
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Ui class handles all the interactions with user of the Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * chatbot. Ui object will print directly to the output."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private final String SERVANT_SPEAK \u003d \"Duke:\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private final String USER_PROMPT \u003d \"Your Command Sire:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns an indicator that the following messages"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * are from Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String getServantSpeak() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns a message to prompt the user for his/her input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String getUserPrompt() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return USER_PROMPT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints a welcome message every time the chat bot is activated."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String welcomeMessage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Introduction at the beginning of the chat"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Greetings my Liege.\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Why have you summoned me?\\n\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    You may type \\\"help\\\" for a list\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" of available commands.\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the available commands that the user can input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This includes the format of the command so as to be accepted as a command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String availableCommands() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "         return SERVANT_SPEAK"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    These are your available commands my Lord:\\n\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    help - Show list of available commands\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    todo \u003cDescription of task\u003e\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" - To add a normal to do task\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    deadline \u003cDescription of task\u003e\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" /by \u003cDate in YYYY-MM-DD\u003e \u003cTime in hh:mm\u003e\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" - To add a task with a deadline\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    event \u003cDescription of event\u003e\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" /at \u003cDate in YYYY-MM-DD\u003e \u003cTime in hh:mm\u003e\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" - To add an event\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    list all/todos/deadlines/events\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" - List all \u003ctask type\u003e tasks\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    list all/todos/deadlines/events done/not done\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" - List \u003ctask type\u003e tasks that are \u003cdone/not done\u003e\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    find \u003ckeyword\u003e - Find tasks based on keyword input\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    done \u003ctask number\u003e - Mark task as done\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    delete \u003ctask number\u003e - Delete task from list\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints a message to indicate that a task has been added to the task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints back to the console the task that was added to the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param task task that was added to the task list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param size size of task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String taskAddedMessage(Task task, int size) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assert (size \u003e\u003d 0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    As you wish Sire. I have added the task:\\n       \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Now you have \" + size"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints a message to indicate that the task has been marked as done."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints back to the console the task that was marked as done."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param task task that was marked as done."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String markAsDoneMessage(Task task) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    As you wish Sire. I have marked this task as done:\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"       \" + task.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints a message to indicate that the task has been deleted."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints back to the console the task that was removed from the task list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param task task that was removed from the task list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String taskDeletedMessage(Task task) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    As you wish Sire. I removed this task:\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"       \" + task.toString();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the task in the task list."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userTasks This is the task list to be printed."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String allTasksToString(ArrayList\u003cTask\u003e userTasks) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are your tasks your Majesty:\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(userTasks).toString();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the tasks in the task list"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were marked as done."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userTasksDone This is the list of tasks to be printed."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String allTasksDoneToString(ArrayList\u003cTask\u003e userTasksDone) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are all the tasks that you have\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" done your Majesty:\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(userTasksDone).toString();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the tasks in the task list"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were not marked as done."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userTasksNotDone This is the list of tasks to be printed."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String allTasksNotDoneToString(ArrayList\u003cTask\u003e userTasksNotDone) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are all the tasks that you have\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" not done your Majesty:\\n\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(userTasksNotDone).toString();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the to do tasks in the task list."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userToDos This is the list of to do to do tasks to be printed."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toDosToString(ArrayList\u003cTask\u003e userToDos) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are all your to do tasks your Majesty:\\n\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(userToDos).toString();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the to do tasks in the task list"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were marked as done."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userToDosDone This is the list of tasks to be printed."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toDosDoneToString(ArrayList\u003cTask\u003e userToDosDone) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are all the to do tasks that you have\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" done your Majesty:\\n\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(userToDosDone).toString();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the to do tasks in the task list"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were not marked as done."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userToDosNotDone This is the list of tasks to be printed."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toDosNotDoneToString(ArrayList\u003cTask\u003e userToDosNotDone) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are all the to do tasks that you have\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" not done your Majesty:\\n\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(userToDosNotDone).toString();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the deadlines in the task list."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userDeadlines This is the list of deadlines to be printed."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String deadlinesToString(ArrayList\u003cTask\u003e userDeadlines) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are all your tasks with a deadline your Majesty:\\n\""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(userDeadlines).toString();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the deadlines in the task list"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were marked as done."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userDeadlinesDone This is the list of deadlines to be printed."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String deadlinesDoneToString(ArrayList\u003cTask\u003e userDeadlinesDone) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are all your tasks with a deadline that you have\""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" done your Majesty:\\n\""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(userDeadlinesDone).toString();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the deadlines in the task list"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were not marked as done."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userDeadlinesNotDone This is the list of deadlines to be printed."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String deadlinesNotDoneToString(ArrayList\u003cTask\u003e userDeadlinesNotDone) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are all your tasks with a deadline that you have\""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" not done your Majesty:\\n\""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(userDeadlinesNotDone).toString();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the events in the task list."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userEvents This is the list of events to be printed."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String eventsToString(ArrayList\u003cTask\u003e userEvents) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are all your events your Majesty:\\n\""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(userEvents).toString();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the events in the task list"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were marked as done."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userEventsDone This is the list of events to be printed."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String eventsDoneToString(ArrayList\u003cTask\u003e userEventsDone) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are all your events that you have\""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" done your Majesty:\\n\""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(userEventsDone).toString();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the events in the task list"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that were not marked as done."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userEventsNotDone This is the list of events to be printed."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String eventsNotDoneToString(ArrayList\u003cTask\u003e userEventsNotDone) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are all your events that you have\""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" not done your Majesty:\\n\""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(userEventsNotDone).toString();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the tasks in the task list"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * that have been filtered according to given keyword."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param filteredTasks This is the list of tasks to be printed."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param keyword given keyword used by filter."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String filteredTasksByKeywordToString(ArrayList\u003cTask\u003e filteredTasks, String keyword) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are all the tasks containing \""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + keyword + \" your Majesty:\\n\""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + new TaskList(filteredTasks).toString();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints a message to the console when the user ends the chat with Duke."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String byeMessage() {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return SERVANT_SPEAK"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    It was a pleasure to serve you my Liege.\\n\""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Till next time.\";"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints out the error message generated by the DukeException object."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param ex This is the DukeException object created by the error."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String errorMessage(DukeException ex) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return ex.toString();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 312
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.ExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Scheduler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * This class adds a to do task, deadline task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * or an event to the task list whenever execute"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * is called."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Adds task to the user tasklist and stores the new task list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * in the storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userTasks list of tasks from user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param storage user\u0027s storage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return response after command is executed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @throws DukeException if clashing event is added."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String execute(TaskList userTasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (task instanceof Event) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            boolean isClashing \u003d new Scheduler().isEventClashingSchedule(userTasks, ((Event) task));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (isClashing) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                throw new DukeException(\"\", ExceptionType.EVENT_CLASHES_SCHEDULE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        userTasks.addTask(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        storage.saveToFile(userTasks.getTaskList());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        response \u003d new Ui().taskAddedMessage(task, userTasks.getTaskListSize());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return getResponse();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 48
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        response \u003d new Ui().byeMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 11
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Command is a class to be inherited by the various types of commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * that Duke is able to execute."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected String response;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Initialise response with an empty String."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        response \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns the response of the command executed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return response after command executed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.ExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * This class deletes a specific task in the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public DeleteCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Deletes task at index given."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param index index of task in task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userTasks list of user tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return response after execution of command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String execute(int index, TaskList userTasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (index \u003e\u003d userTasks.getTaskListSize()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                throw new DukeException(\"\", ExceptionType.INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                assert (index \u003e\u003d 0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                Task task \u003d userTasks.getTask(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                userTasks.deleteTask(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                response \u003d new Ui().taskDeletedMessage(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            storage.saveToFile(userTasks.getTaskList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d new Ui().errorMessage(ex);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return getResponse();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 42
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.ExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * This class marks a specific task chosen by user as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public DoneCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Marks task at index given as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param index index of task in task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userTasks list of user tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return response after execution of command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String execute(int index, TaskList userTasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (index \u003e\u003d userTasks.getTaskListSize()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                throw new DukeException(\"\", ExceptionType.INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                assert (index \u003e\u003d 0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                userTasks.markTaskAsDone(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                response \u003d new Ui().markAsDoneMessage(userTasks.getTask(index));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            storage.saveToFile(userTasks.getTaskList());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d new Ui().errorMessage(ex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return getResponse();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 40
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        response \u003d new Ui().availableCommands();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 9
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.CommandType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.parser.InputParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.TaskFinder;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.ExceptionType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * This class lists the appropriate list of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * as desired by the user of Duke chatbot."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Executes the parsing of user input and"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * returns the required list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userTasks list of user tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param input input from user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return response after execution of command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String execute(TaskList userTasks, String input) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        CommandType command \u003d new InputParser().parseList(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_ALL:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.allTasksToString(userTasks.getTaskList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_ALL_DONE:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ArrayList\u003cTask\u003e tasksDone \u003d new TaskFinder()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .findAllDone(userTasks.getTaskList());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.allTasksDoneToString(tasksDone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_ALL_NOT_DONE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ArrayList\u003cTask\u003e tasksNotDone \u003d new TaskFinder()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .findAllNotDone(userTasks.getTaskList());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.allTasksNotDoneToString(tasksNotDone);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_TODOS:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ArrayList\u003cTask\u003e toDos \u003d new TaskFinder()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .findToDos(userTasks.getTaskList());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.toDosToString(toDos);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_TODOS_DONE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ArrayList\u003cTask\u003e toDosDone \u003d new TaskFinder()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .findToDosDone(userTasks.getTaskList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.toDosDoneToString(toDosDone);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_TODOS_NOT_DONE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ArrayList\u003cTask\u003e toDosNotDone \u003d new TaskFinder()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .findToDosNotDone(userTasks.getTaskList());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.toDosNotDoneToString(toDosNotDone);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_DEADLINES:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ArrayList\u003cTask\u003e deadlines \u003d new TaskFinder()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .findDeadlines(userTasks.getTaskList());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.deadlinesToString(deadlines);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_DEADLINES_DONE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ArrayList\u003cTask\u003e deadlinesDone \u003d new TaskFinder()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .findDeadlinesDone(userTasks.getTaskList());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.deadlinesDoneToString(deadlinesDone);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_DEADLINES_NOT_DONE:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ArrayList\u003cTask\u003e deadlinesNotDone \u003d new TaskFinder()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .findDeadlinesNotDone(userTasks.getTaskList());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.deadlinesNotDoneToString(deadlinesNotDone);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_EVENTS:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ArrayList\u003cTask\u003e events \u003d new TaskFinder()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .findEvents(userTasks.getTaskList());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.eventsToString(events);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_EVENTS_DONE:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ArrayList\u003cTask\u003e eventsDone \u003d new TaskFinder()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .findEventsDone(userTasks.getTaskList());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.eventsDoneToString(eventsDone);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_EVENTS_NOT_DONE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ArrayList\u003cTask\u003e eventsNotDone \u003d new TaskFinder()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .findEventsNotDone(userTasks.getTaskList());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.eventsNotDoneToString(eventsNotDone);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        case LIST_BY_KEYWORD:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            String keyword \u003d input.split(\"find \")[1];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ArrayList\u003cTask\u003e filteredTasks \u003d new TaskFinder()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .findByKeyword(userTasks.getTaskList(), keyword);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.filteredTasksByKeywordToString(filteredTasks, keyword);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            response \u003d ui.errorMessage("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    new DukeException(\"\", ExceptionType.INVALID_COMMAND)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            );"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 109
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private DialogBox(String text, Image image) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        displayPicture.setImage(image);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image image) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return new DialogBox(text, image);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image image) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        var db \u003d new DialogBox(text, image);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 61
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Main;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.animation.KeyFrame;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.animation.Timeline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Solution below adapted from https://github.com/sc-arecrow/viscount/tree/master"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * @author sc-arecrow"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            .getResourceAsStream(\"/images/LukeDaKing.jpg\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            .getResourceAsStream(\"/images/LukeDaDuke.jpg\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Instantiate a new MainWindow component for JavaFx."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public MainWindow() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            duke \u003d new Duke();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String dukeWelcomeMessage \u003d duke.getUi().welcomeMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .getDukeDialog(dukeWelcomeMessage, dukeImage));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Solution below adapted from https://github.com/pennhanlee/ip"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @author pennhanlee"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            dialogContainer.getChildren().add(DialogBox"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .getDukeDialog(duke.getUi().byeMessage(), dukeImage));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            Timeline timeline \u003d new Timeline(new KeyFrame("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    Duration.millis(1500), x -\u003e Platform.exit()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            timeline.play();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            );"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            dialogContainer.getChildren().add(DialogBox"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    .getDukeDialog(ex.toString(), dukeImage));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 107
    }
  },
  {
    "path": "src/main/java/duke/parser/InputParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.CommandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * This class is the one handling all the parsing of user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * and return the appropriate enum command. Any invalid input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * will return an invalid command enum type."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class InputParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Scanner myObj;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public InputParser() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Initialise the Scanner object to get input from user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.myObj \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Takes the given input and parses it to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * return the appropriate command enum type."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param input input from the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return CommandType type of command to be executed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public CommandType parseInput(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.INVALID_IS_EMPTY;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.HELP;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (isEmptyDescription(input)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                return CommandType.INVALID_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.TODO;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (isEmptyDescription(input)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                return CommandType.INVALID_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (!hasDeadlineBy(input)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                return CommandType.INVALID_DEADLINE_NO_BY;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.DEADLINE;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (isEmptyDescription(input)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                return CommandType.INVALID_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (!hasEventStartEndTime(input)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                return CommandType.INVALID_EVENT_NO_START_END;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.EVENT;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.startsWith(\"list \")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_BY_KEYWORD;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.DONE;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.DELETE;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.BYE;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return CommandType.INVALID_COMMAND;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Takes the given input and parses it to"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * return the appropriate list command."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param input input from user."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return list command type."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public CommandType parseList(String input) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assert(!input.isEmpty());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list all\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_ALL;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list all done\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_ALL_DONE;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list all not done\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_ALL_NOT_DONE;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list todos\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_TODOS;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list todos done\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_TODOS_DONE;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list todos not done\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_TODOS_NOT_DONE;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list deadlines\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_DEADLINES;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list deadlines done\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_DEADLINES_DONE;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list deadlines not done\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_DEADLINES_NOT_DONE;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list events\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_EVENTS;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list events done\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_EVENTS_DONE;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list events not done\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST_EVENTS_NOT_DONE;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return CommandType.INVALID_COMMAND;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns true if the input requests a task to be"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * created without a description."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param input input from user."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return boolean true if description is missing."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public boolean isEmptyDescription(String input) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.split(\" \").length \u003d\u003d 1;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns true if the input requests a deadline to"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * be created without a date and time."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param input input from user."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return boolean true if date and time is missing."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public boolean hasDeadlineBy(String input) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.contains(\"/by\")"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /by \").length \u003d\u003d 2;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns true if the input requests an event to"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * be created without a start and end date and time"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param input input from user."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return boolean true if start and end date and time is missing."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public boolean hasEventStartEndTime(String input) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.contains(\"/at\")"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /at \").length \u003d\u003d 2"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /at \")[1].split(\" \").length \u003d\u003d 2"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /at \")[1].split(\" \")[1]"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .split(\"-\").length \u003d\u003d 2;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Parses input to get description of to do task."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param input input to be parsed."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return description of to do task."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String parseToDoInput(String input) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assert (!input.isEmpty());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String description \u003d input.substring(4);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Parses input to get parameters for deadline task creation."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param input input to be parsed."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return parameters to be passed into deadline constructor."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String[] parseDeadlineInput(String input) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assert (!input.isEmpty());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String[] parsedInput \u003d input.split(\" /by \");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String by \u003d parsedInput[1];"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String description \u003d parsedInput[0].substring(8);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String[] deadlineParams \u003d {by, description};"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return deadlineParams;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Parses input to get parameters for event task creation."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param input input to be parsed."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return parameters to be passed into event constructor."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String[] parseEventInput(String input) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assert (!input.isEmpty());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String[] parsedInput \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String at \u003d parsedInput[1].split(\" \")[0];"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String timeRange \u003d parsedInput[1].split(\" \")[1];"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String description \u003d parsedInput[0].substring(5);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String[] eventParams \u003d {description, at, timeRange};"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return eventParams;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 231
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003cfx:root"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        alignment\u003d\"TOP_RIGHT\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        maxHeight\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        \u003cLabel"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                fx:id\u003d\"dialog\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                text\u003d\"Label\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        \u003cImageView"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                fx:id\u003d\"displayPicture\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                fitHeight\u003d\"99.0\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                fitWidth\u003d\"99.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        \u003cInsets"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                bottom\u003d\"15.0\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                left\u003d\"5.0\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                right\u003d\"5.0\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 35
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003cfx:root"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        maxWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        type\u003d\"javafx.scene.layout.AnchorPane\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        \u003cTextField"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                fx:id\u003d\"userInput\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                layoutY\u003d\"558.0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        \u003cButton"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                fx:id\u003d\"sendButton\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                layoutX\u003d\"324.0\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                layoutY\u003d\"558.0\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                prefWidth\u003d\"76.0\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        \u003cScrollPane"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                fx:id\u003d\"scrollPane\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                hbarPolicy\u003d\"NEVER\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                hvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                prefHeight\u003d\"557.0\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u003cVBox"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        fx:id\u003d\"dialogContainer\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        prefHeight\u003d\"552.0\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 51
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    Task task \u003d new Task(\"Test Task\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"[Not Done] Test Task\", task.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testToStringFileFormat() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"[Not Done] Test Task\", task.toStringFileFormat());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"Not Done\", task.getStatusIcon());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"Done\", task.getStatusIcon());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 26
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    ToDo toDo \u003d new ToDo(\"Test ToDo\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"[T][Not Done] Test ToDo\", toDo.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testToStringFileFormat() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"[T][Not Done] Test ToDo\", toDo.toStringFileFormat());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"Not Done\", toDo.getStatusIcon());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        toDo.setDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"Done\", toDo.getStatusIcon());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 26
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testGetServantSpeak() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"Duke:\\n\", ui.getServantSpeak());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testGetUserPrompt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"Your Command Sire:\", ui.getUserPrompt());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testWelcomeMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Setup of print stream"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String expectedOutput \u003d \"Duke:\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Greetings my Liege.\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Why have you summoned me?\\n\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    You may type \\\"help\\\" for a list\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" of available commands.\\n\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(expectedOutput, outputStreamCaptor.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Teardown"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        System.setOut(standardOut);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 43
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "if exist del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 2,
      "-": 19
    }
  }
]
