[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "T | ✗ | read book"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    protected LocalDateTime deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates a Deadline object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param deadline The deadline of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Deadline(String description, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Returns the message to be saved into the hard disk."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of the task in the local file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String writeMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String done \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            done \u003d \"✓\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            done \u003d \"✗\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return String.format(\"D | %s | %s | %s\", done, this.description, this.deadline);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Returns the string representation of this task to the users when Duke receives list command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of this task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            String str \u003d \" (by: \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            str +\u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            return \"[D][\" + (this.isDone ? \"✓\" : \"✗\") + \"] \" + this.description + str + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 45
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Runs the Duke program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        ArrayList\u003cTask\u003e lists \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                String[] task \u003d line.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                if (task[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    Task todo \u003d new Todo(task[4]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    if (task[2].equals(\"✓\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        todo.markDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    lists.add(todo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                } else if (task[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    Task deadline \u003d new Deadline(task[4], LocalDateTime.parse(task[6]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    if (task[2].equals(\"✓\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        deadline.markDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    lists.add(deadline);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                } else if (task[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    Task event \u003d new Event(task[4], LocalDateTime.parse(task[6]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    if (task[2].equals(\"✓\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        event.markDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    lists.add(event);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            String logo \u003d \"      ___                __     \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    + \"     |  _ \\\\   ____      |  |    \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    + \"     | |_| | / __  \\\\  __|  |__  \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    + \"     |  _ / | |  |  ||__    __| \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    + \"     | |    | |_/   |   |  |    \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    + \"     |_|     \\\\___/|_|   |__|    \\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            String[] greetingTexts \u003d {\"Hello! I\u0027m Pat\", \"What can I do for you?\"};"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            Response greeting \u003d new Response(greetingTexts);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"     Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            System.out.println(greeting.getResponse());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                String received \u003d sc.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                if (received.equals(\"bye\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    String[] byeMessage \u003d {\"Bye. Hope to see you again soon!\"};"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    Response bye \u003d new Response(byeMessage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    System.out.println(bye.getResponse());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                } else if (received.equals(\"list\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    Response list \u003d new Response(lists.toArray(new Task[0]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    System.out.println(list.getResponse());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    String[] test \u003d received.split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    if (test[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            if (lists.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            if (test.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                throw new MissingNumberException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            int idx \u003d Integer.parseInt(test[1]) - 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            Task target \u003d lists.get(idx);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            target.markDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            Response msg \u003d new Response(new String[]{\"Nice! I\u0027ve marked this task as done:\", \"  \" + target});"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            Response msg \u003d new Response(new String[]{\"The number does not exist!\"});"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        } catch (MissingNumberException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            Response msg \u003d new Response(new String[]{\"Please select the task that you want to mark done!\"});"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    } else if (test[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            String[] str \u003d received.split(\"deadline \")[1].split(\" /\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            if (str.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                throw new MissingDeadlineException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    String description \u003d str[0];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    String by \u003d str[1].split(\"by \")[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    LocalDateTime byTime \u003d LocalDateTime.parse(by);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    Deadline deadline \u003d new Deadline(description, byTime);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    lists.add(deadline);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    Response msg \u003d new Response(new Task[]{deadline}, Response.Tag.ADD, lists.size());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    Response msg \u003d new Response(new String[]{\"Format of date and time is incorrect! Please fill in the date and time following the format below.\","
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                            \"YYYY-MM-DDTHH:MM:SS\"});"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    throw new MissingDeadlineException();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            MissingDescriptionException realError \u003d new MissingDescriptionException(\"a deadline\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            Response msg \u003d new Response(new String[]{String.valueOf(realError)});"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        } catch (MissingDeadlineException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            Response msg \u003d new Response(new String[]{String.valueOf(e)});"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    } else if (test[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            if (lists.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            if (test.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                throw new MissingNumberException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            int idx \u003d Integer.parseInt(test[1]) - 1;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            Response msg \u003d new Response(new Task[]{lists.get(idx)}, Response.Tag.REMOVE, lists.size() - 1);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            lists.remove(idx);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            Response msg \u003d new Response(new String[]{\"The number does not exist!\"});"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        } catch (MissingNumberException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            Response msg \u003d new Response(new String[]{\"Please select the task that you want to delete!\"});"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    } else if (test[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            if (test.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                throw new DukeException();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            ArrayList\u003cTask\u003e satisfiedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            for (int i \u003d 0; i \u003c lists.size(); i++) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                if (lists.get(i).task.contains(test[1])) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    satisfiedTasks.add(lists.get(i));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            Response msg \u003d new Response(satisfiedTasks.toArray(new Task[0]), Response.Tag.FIND);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        } catch (DukeException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            Response msg \u003d new Response(new String[]{\"Please include the keyword!\"});"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        if (test[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                String description \u003d received.split(\"todo \")[1];"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                lists.add(todo);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                Response msg \u003d new Response(new Task[]{todo}, Response.Tag.ADD, lists.size());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                MissingDescriptionException realError \u003d new MissingDescriptionException(\"a todo\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                Response msg \u003d new Response(new String[]{String.valueOf(realError)});"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        } else if (test[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                String[] str \u003d received.split(\"deadline \")[1].split(\" /\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                if (str.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    throw new MissingDeadlineException();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        String description \u003d str[0];"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        String by \u003d str[1].split(\"by \")[1];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        Deadline deadline \u003d new Deadline(description, LocalDateTime.parse(by));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        lists.add(deadline);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        Response msg \u003d new Response(new Task[]{deadline}, Response.Tag.ADD, lists.size());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        Response msg \u003d new Response(new String[]{\"Format of date and time is incorrect! Please fill in the date and time following the format below.\","
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                                \"YYYY-MM-DDTHH:MM:SS\"});"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                MissingDescriptionException realError \u003d new MissingDescriptionException(\"a deadline\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                Response msg \u003d new Response(new String[]{String.valueOf(realError)});"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            } catch (MissingDeadlineException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                Response msg \u003d new Response(new String[]{String.valueOf(e)});"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        } else if (test[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                String[] str \u003d received.split(\"event \")[1].split(\" /at \");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                if (str.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    throw new MissingTimeException();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    try {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        String description \u003d str[0];"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        String at \u003d str[1];"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        Event event \u003d new Event(description, LocalDateTime.parse(at));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        lists.add(event);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        Response msg \u003d new Response(new Task[]{event}, Response.Tag.ADD, lists.size());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        Response msg \u003d new Response(new String[]{\"Format of date and time is incorrect! Please fill in the date and time following the format below.\","
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                                \"YYYY-MM-DDTHH:MM:SS\"});"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                MissingDescriptionException realError \u003d new MissingDescriptionException(\"an event\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                Response msg \u003d new Response(new String[]{String.valueOf(realError)});"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            } catch (MissingTimeException e) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                Response msg \u003d new Response(new String[]{String.valueOf(e)});"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            UnknownInputException ue \u003d new UnknownInputException();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            Response msg \u003d new Response(new String[]{String.valueOf(ue)});"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    String tasks \u003d \"\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    for (int i \u003d 0; i \u003c lists.size(); i++) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        Task t \u003d lists.get(i);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        tasks +\u003d t.writeMessage() + \"\\n\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    FileWriter fw \u003d new FileWriter(\"data/duke.txt\", false);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    fw.write(tasks);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            System.out.println(\"Folder or file does not exist yet! Please make sure you have data/duke.txt in ip directory. \");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 239,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates an Event object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param time The time of the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Event(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Returns the message to be saved in the hard disk."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of the task in the local file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String writeMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String done \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            done \u003d \"✓\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            done \u003d \"✗\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return String.format(\"E | %s | %s\", done, this.description, this.time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Returns the string representation of the event to the users when Duke receives list command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of this task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String str \u003d \" (at: \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        str +\u003d time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return \"[E][\" + (this.isDone ? \"✓\" : \"✗\") + \"] \" + this.description + str + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 45
    }
  },
  {
    "path": "src/main/java/MissingDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class MissingDeadlineException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public MissingDeadlineException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(\"\\n     ☹ OOPS!!! The deadline cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 5
    }
  },
  {
    "path": "src/main/java/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class MissingDescriptionException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public MissingDescriptionException(String errMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(\"\\n     ☹ OOPS!!! The description of \" + errMessage + \" cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 5
    }
  },
  {
    "path": "src/main/java/MissingNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class MissingNumberException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public MissingNumberException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 5
    }
  },
  {
    "path": "src/main/java/MissingTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class MissingTimeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public MissingTimeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(\"\\n     ☹ OOPS!!! The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 5
    }
  },
  {
    "path": "src/main/java/Response.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Response {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    enum Tag {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        LIST,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        ADD,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        REMOVE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        NORMAL,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        FIND"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Task[] tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String[] texts;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Tag tag;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public int numOfTasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates the response of normal texts."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param texts An array of strings. Each string will be printed in one line."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Response(String[] texts) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.texts \u003d texts;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.tag \u003d Tag.NORMAL;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates the response after receiving task related commands from the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * like adding task to the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The task to be added or removed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tag Removal or addition of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param numOfTasks The number of Tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Response(Task[] tasks, Tag tag, int numOfTasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.numOfTasks \u003d numOfTasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates the response after receiving some other task related commands from the user"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * like listing the tasks in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The list of the tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Response(Task[] tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.tag \u003d Tag.LIST;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String line \u003d \"    __________________________________________________________ \\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String linesOfText \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (this.tag \u003d\u003d Tag.LIST) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            for (int i \u003d 0; i \u003c this.tasks.length; i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                linesOfText +\u003d \"     \" + String.format(\"%d. \", i + 1) + this.tasks[i] + \"\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else if (this.tag \u003d\u003d Tag.ADD) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            for (int i \u003d 0; i \u003c this.tasks.length; i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    linesOfText +\u003d \"     \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + \"       \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + this.tasks[i]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + \"\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + \"     \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + String.format(\"Now you have %d tasks in the list. \\n\", numOfTasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else if (this.tag \u003d\u003d Tag.REMOVE) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            for (int i \u003d 0; i \u003c this.tasks.length; i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                linesOfText +\u003d \"     \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + \"Got it. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + \"       \""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + this.tasks[i]"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + \"     \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + String.format(\"Now you have %d tasks in the list. \\n\", numOfTasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else if (this.tag \u003d\u003d Tag.FIND ) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            for (int i \u003d 0; i \u003c this.tasks.length; i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                linesOfText +\u003d \"     \""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + \"Here are the matching tasks in your list: \\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + \"       \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + this.tasks[i]"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            for (int i \u003d 0; i \u003c this.texts.length; i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                linesOfText +\u003d \"     \""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + this.texts[i] + \"\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String output \u003d line + linesOfText + line;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 93
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    protected String writeMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return \"[\" + (this.isDone ? \"✓\" : \"✗\") + \"] \" + this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates a Todo object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Returns the message to be saved in the hard disk."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of this task in the local file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String writeMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String done \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            done \u003d \"✓\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            done \u003d \"✗\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return String.format(\"T | %s | %s\", done, this.description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Returns the string representation of this task to the users when Duke receives list command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of this task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return \"[T][\" + (this.isDone ? \"✓\" : \"✗\") + \"] \" + this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 37
    }
  },
  {
    "path": "src/main/java/UnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class UnknownInputException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public UnknownInputException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(\"\\n     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "delete"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "todo Ask for help"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "deadline IP /by Thursday 2359"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "event Go to Singapore /at Friday 9pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "blah"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "haha"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 23
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 5,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/MissingTimeException.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/Response.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/MissingDescriptionException.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/MissingNumberException.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/MissingDeadlineException.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/UnknownInputException.java"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 11
    }
  }
]
