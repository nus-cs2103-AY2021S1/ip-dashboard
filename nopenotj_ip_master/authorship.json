[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 11
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    static String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    static String divider \u003d INDENT + \"-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    static void start() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                                \" .----------------.  .----------------.  .----------------.  .----------------.\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                                        \"| .--------------. || .--------------. || .--------------. || .--------------. |\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                                        \"| |  ________    | || |     ____     | || |     ____     | || |  ___  ____   | |\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                                        \"| | |_   ___ `.  | || |   .\u0027    `.   | || |   .\u0027    `.   | || | |_  ||_  _|  | |\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                                        \"| |   | |   `. \\\\ | || |  /  .--.  \\\\  | || |  /  .--.  \\\\  | || |   | |_/ /    | |\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                                        \"| |   | |    | | | || |  | |    | |  | || |  | |    | |  | || |   |  __\u0027.    | |\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                                        \"| |  _| |___.\u0027 / | || |  \\\\  `--\u0027  /  | || |  \\\\  `--\u0027  /  | || |  _| |  \\\\ \\\\_  | |\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                                        \"| | |________.\u0027  | || |   `.____.\u0027   | || |   `.____.\u0027   | || | |____||____| | |\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                                        \"| |              | || |              | || |              | || |              | |\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                                        \"| \u0027--------------\u0027 || \u0027--------------\u0027 || \u0027--------------\u0027 || \u0027--------------\u0027 |\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                                        \" \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String intro \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                \"\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                \"\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                logo +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                \"\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                divider +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                INDENT +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                \"Hola! I am dook\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                INDENT +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                \"how i can help u?\\n\" + divider;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        System.out.println(intro);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    static void print(String str){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String[] arr \u003d str.split(\"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        for(int i \u003d 0; i \u003c arr.length; i++ ){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            res +\u003d INDENT + arr[i] + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String intro \u003d divider +  res + divider;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        System.out.println(intro);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    static void addTask(Task task, List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        print(\"Got it. I\u0027ve added this task:\\n  \" + task.toString() + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    static void displayList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if(list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            print(\"No task added yet!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            String result \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            for(int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                result +\u003d \"\" + (i + 1)+ \". \" + list.get(i).toString() + ( i + 1 \u003d\u003d list.size() ? \"\" : \"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            print(result);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        // Initialise"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        while(!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    displayList(tasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                } else if (input.matches(\"done.*\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    if(input.matches(\"done\\\\s*\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                        throw new EmptyArgumentException(\"Task Index\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    if(!input.matches(\"done \\\\d+\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                        throw new InvalidArgumentException(\"Task Index\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    int index \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    if (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                        throw new InvalidArgumentException(\"index\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    print(\"Nice! I\u0027ve marked this task as done:\\n\" + tasks.get(index));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                } else if (input.matches(\"todo.*\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    if(input.matches(\"todo\\\\s*\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                        throw new EmptyArgumentException(\"todo\u0027s description\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    addTask(new Todo(input.substring(5)), tasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                } else if (input.matches(\"deadline.*\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    if(input.matches(\"deadline\\\\s*\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                        throw new EmptyArgumentException(\"deadline\u0027s description\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    if(!input.matches(\"deadline .+/by.+\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                        throw new InvalidArgumentException(\"deadline\u0027s description\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    String[] split \u003d input.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    addTask(new Deadline(split[0].stripTrailing(), split[1].stripLeading()), tasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                } else if (input.matches(\"event.*\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    if(input.matches(\"event\\\\s*\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                        throw new EmptyArgumentException(\"event\u0027s description\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    if(!input.matches(\"event .+/at.+\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                        throw new InvalidArgumentException(\"event description\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    String[] split \u003d input.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    addTask(new Event(split[0].stripTrailing(), split[1].stripLeading()), tasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                } else if (input.matches(\"delete.*\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    if(input.matches(\"delete\\\\s*\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                        throw new EmptyArgumentException(\"Task Index\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    if(!input.matches(\"delete \\\\d+\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                        throw new InvalidArgumentException(\"Task Index\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    int index \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    if (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                        throw new InvalidArgumentException(\"index\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    Task deleted \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    print(\"Noted. I\u0027ve removed this task:\\n  \" + deleted.toString() + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                print(e.toString());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        print(\"see u later alligator\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 128,
      "-": 4
    }
  },
  {
    "path": "src/main/java/EmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class EmptyArgumentException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private String arg;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public EmptyArgumentException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.arg \u003d \"Arguments\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public EmptyArgumentException(String arg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.arg \u003d arg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return String.format(\"%s cant be empty bro\", arg) ;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 15
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 11
    }
  },
  {
    "path": "src/main/java/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class InvalidArgumentException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private String arg;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public InvalidArgumentException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.arg \u003d \"argument\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public InvalidArgumentException(String arg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.arg \u003d arg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return String.format(\"Invalid %s bro\", arg) ;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 15
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"what are you saying bruh....\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 6
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return (isDone ? \"[✓] \" : \"[✗] \") + description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 18
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "delete 1"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 1,
      "-": 37
    }
  }
]
